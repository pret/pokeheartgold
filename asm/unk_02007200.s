	.include "asm/macros.inc"
	.include "global.inc"

	.text

	thumb_func_start sub_02007200
sub_02007200: ; 0x02007200
	push {r3, r4, r5, r6, r7, lr}
	add r5, r1, #0
	add r6, r0, #0
	add r7, r2, #0
	cmp r5, #0
	beq _02007224
	add r0, r3, #0
	bl sub_0201AA8C
	add r4, r0, #0
	bne _0200721A
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200721A:
	mov r1, #0
	add r2, r5, #0
	bl sub_020E5B44
	b _02007226
_02007224:
	mov r4, #0
_02007226:
	add r0, r6, #0
	add r1, r4, #0
	add r2, r7, #0
	bl sub_0200E320
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02007200

	thumb_func_start sub_02007234
sub_02007234: ; 0x02007234
	push {r4, lr}
	add r4, r0, #0
	bl sub_0201F988
	cmp r0, #0
	beq _02007244
	bl sub_0201AB0C
_02007244:
	add r0, r4, #0
	bl sub_0200E390
	pop {r4, pc}
	thumb_func_end sub_02007234

	thumb_func_start OverlayManager_new
OverlayManager_new: ; 0x0200724C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	add r0, r2, #0
	mov r1, #0x28
	bl sub_0201AA8C
	add r3, r0, #0
	add r2, r3, #0
	ldmia r5!, {r0, r1}
	stmia r2!, {r0, r1}
	ldmia r5!, {r0, r1}
	stmia r2!, {r0, r1}
	mov r0, #0
	str r0, [r3, #0x10]
	str r0, [r3, #0x14]
	str r4, [r3, #0x18]
	str r0, [r3, #0x1c]
	str r0, [r3, #0x20]
	str r0, [r3, #0x24]
	add r0, r3, #0
	pop {r3, r4, r5, pc}
	thumb_func_end OverlayManager_new

	thumb_func_start OverlayManager_delete
OverlayManager_delete: ; 0x02007278
	ldr r3, _0200727C ; =sub_0201AB0C
	bx r3
	.align 2, 0
_0200727C: .word sub_0201AB0C
	thumb_func_end OverlayManager_delete

	thumb_func_start sub_02007280
sub_02007280: ; 0x02007280
	push {r4, lr}
	add r4, r0, #0
	add r0, r2, #0
	bl sub_0201AA8C
	str r0, [r4, #0x1c]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02007280

	thumb_func_start sub_02007290
sub_02007290: ; 0x02007290
	ldr r0, [r0, #0x1c]
	bx lr
	thumb_func_end sub_02007290

	thumb_func_start sub_02007294
sub_02007294: ; 0x02007294
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x1c]
	bl sub_0201AB0C
	mov r0, #0
	str r0, [r4, #0x1c]
	pop {r4, pc}
	thumb_func_end sub_02007294

	thumb_func_start sub_020072A4
sub_020072A4: ; 0x020072A4
	ldr r0, [r0, #0x18]
	bx lr
	thumb_func_end sub_020072A4

	thumb_func_start OverlayManager_run
OverlayManager_run: ; 0x020072A8
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0x10]
	cmp r1, #3
	bhi _02007326
	add r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add pc, r1
_020072BE: ; jump table
	.short _020072C6 - _020072BE - 2 ; case 0
	.short _020072DA - _020072BE - 2 ; case 1
	.short _020072F2 - _020072BE - 2 ; case 2
	.short _02007308 - _020072BE - 2 ; case 3
_020072C6:
	mov r1, #0
	ldr r0, [r4, #0xc]
	mvn r1, r1
	cmp r0, r1
	beq _020072D6
	mov r1, #2
	bl HandleLoadOverlay
_020072D6:
	mov r0, #1
	str r0, [r4, #0x10]
_020072DA:
	add r1, r4, #0
	ldr r2, [r4]
	add r0, r4, #0
	add r1, #0x14
	blx r2
	cmp r0, #1
	bne _02007326
	mov r0, #2
	str r0, [r4, #0x10]
	mov r0, #0
	str r0, [r4, #0x14]
	b _02007326
_020072F2:
	add r1, r4, #0
	ldr r2, [r4, #4]
	add r1, #0x14
	blx r2
	cmp r0, #1
	bne _02007326
	mov r0, #3
	str r0, [r4, #0x10]
	mov r0, #0
	str r0, [r4, #0x14]
	b _02007326
_02007308:
	add r1, r4, #0
	ldr r2, [r4, #8]
	add r1, #0x14
	blx r2
	cmp r0, #1
	bne _02007326
	mov r1, #0
	ldr r0, [r4, #0xc]
	mvn r1, r1
	cmp r0, r1
	beq _02007322
	bl UnloadOverlayByID
_02007322:
	mov r0, #1
	pop {r4, pc}
_02007326:
	mov r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end OverlayManager_run

	thumb_func_start sub_0200732C
sub_0200732C: ; 0x0200732C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x60
	add r4, r1, #0
	mov r1, #0
	str r0, [sp]
	str r1, [sp, #0x14]
	str r1, [sp, #0x10]
	str r1, [sp, #0xc]
	add r0, sp, #8
	strh r1, [r0]
	add r0, sp, #0x18
	add r5, r2, #0
	str r3, [sp, #4]
	bl FS_InitFile
	add r0, sp, #0x18
	add r1, r4, #0
	bl sub_020D8278
	add r0, sp, #0x18
	mov r1, #0xc
	mov r2, #0
	bl sub_020D83DC
	add r0, sp, #0x18
	add r1, sp, #0x14
	mov r2, #2
	bl sub_020D83CC
	ldr r4, [sp, #0x14]
	add r0, sp, #0x18
	add r1, r4, #4
	mov r2, #0
	bl sub_020D83DC
	add r0, sp, #0x18
	add r1, sp, #0x14
	mov r2, #4
	bl sub_020D83CC
	add r0, sp, #0x18
	add r1, sp, #8
	mov r2, #2
	bl sub_020D83CC
	add r0, sp, #8
	ldrh r0, [r0]
	cmp r0, r5
	bgt _02007392
	bl GF_AssertFail
_02007392:
	ldr r0, [sp, #0x14]
	mov r2, #0
	add r6, r4, r0
	add r0, sp, #0x18
	add r1, r6, #4
	bl sub_020D83DC
	add r0, sp, #0x18
	add r1, sp, #0x14
	mov r2, #4
	bl sub_020D83CC
	add r4, #0xc
	lsl r1, r5, #3
	add r0, sp, #0x18
	add r1, r4, r1
	mov r2, #0
	ldr r7, [sp, #0x14]
	bl sub_020D83DC
	add r0, sp, #0x18
	add r1, sp, #0x10
	mov r2, #4
	bl sub_020D83CC
	add r0, sp, #0x18
	add r1, sp, #0xc
	mov r2, #4
	bl sub_020D83CC
	add r2, r6, r7
	ldr r1, [sp, #0x10]
	add r2, #8
	add r2, r2, r1
	ldr r1, [sp, #4]
	add r0, sp, #0x18
	add r1, r1, r2
	mov r2, #0
	bl sub_020D83DC
	ldr r0, [sp, #0x78]
	cmp r0, #0
	bne _020073EE
	ldr r1, [sp, #0xc]
	ldr r0, [sp, #0x10]
	sub r0, r1, r0
_020073EE:
	str r0, [sp, #0x14]
	cmp r0, #0
	bne _020073F8
	bl GF_AssertFail
_020073F8:
	ldr r1, [sp]
	ldr r2, [sp, #0x14]
	add r0, sp, #0x18
	bl sub_020D83CC
	add r0, sp, #0x18
	bl FS_CloseFile
	add sp, #0x60
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200732C

	thumb_func_start sub_0200740C
sub_0200740C: ; 0x0200740C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x60
	add r5, r1, #0
	mov r1, #0
	add r4, r0, #0
	str r1, [sp, #0x14]
	str r1, [sp, #0x10]
	str r1, [sp, #0xc]
	add r0, sp, #8
	strh r1, [r0]
	add r0, sp, #0x18
	str r2, [sp]
	str r3, [sp, #4]
	bl FS_InitFile
	add r0, sp, #0x18
	add r1, r4, #0
	bl sub_020D8278
	add r0, sp, #0x18
	mov r1, #0xc
	mov r2, #0
	bl sub_020D83DC
	add r0, sp, #0x18
	add r1, sp, #0x14
	mov r2, #2
	bl sub_020D83CC
	ldr r4, [sp, #0x14]
	add r0, sp, #0x18
	add r1, r4, #4
	mov r2, #0
	bl sub_020D83DC
	add r0, sp, #0x18
	add r1, sp, #0x14
	mov r2, #4
	bl sub_020D83CC
	add r0, sp, #0x18
	add r1, sp, #8
	mov r2, #2
	bl sub_020D83CC
	add r0, sp, #8
	ldrh r0, [r0]
	cmp r0, r5
	bgt _02007472
	bl GF_AssertFail
_02007472:
	ldr r0, [sp, #0x14]
	mov r2, #0
	add r6, r4, r0
	add r0, sp, #0x18
	add r1, r6, #4
	bl sub_020D83DC
	add r0, sp, #0x18
	add r1, sp, #0x14
	mov r2, #4
	bl sub_020D83CC
	add r4, #0xc
	lsl r1, r5, #3
	add r0, sp, #0x18
	add r1, r4, r1
	mov r2, #0
	ldr r7, [sp, #0x14]
	bl sub_020D83DC
	add r0, sp, #0x18
	add r1, sp, #0x10
	mov r2, #4
	bl sub_020D83CC
	add r0, sp, #0x18
	add r1, sp, #0xc
	mov r2, #4
	bl sub_020D83CC
	add r2, r6, r7
	ldr r1, [sp, #0x10]
	add r2, #8
	add r2, r2, r1
	ldr r1, [sp, #4]
	add r0, sp, #0x18
	add r1, r1, r2
	mov r2, #0
	bl sub_020D83DC
	ldr r0, [sp, #0x78]
	cmp r0, #0
	bne _020074CE
	ldr r1, [sp, #0xc]
	ldr r0, [sp, #0x10]
	sub r0, r1, r0
_020074CE:
	str r0, [sp, #0x14]
	cmp r0, #0
	bne _020074D8
	bl GF_AssertFail
_020074D8:
	ldr r0, [sp, #0x7c]
	cmp r0, #0
	bne _020074E8
	ldr r0, [sp]
	ldr r1, [sp, #0x14]
	bl sub_0201AA8C
	b _020074F0
_020074E8:
	ldr r0, [sp]
	ldr r1, [sp, #0x14]
	bl sub_0201AACC
_020074F0:
	add r4, r0, #0
	ldr r2, [sp, #0x14]
	add r0, sp, #0x18
	add r1, r4, #0
	bl sub_020D83CC
	add r0, sp, #0x18
	bl FS_CloseFile
	add r0, r4, #0
	add sp, #0x60
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200740C

	thumb_func_start sub_02007508
sub_02007508: ; 0x02007508
	push {r3, r4, lr}
	sub sp, #4
	mov r3, #0
	lsl r4, r1, #2
	ldr r1, _02007520 ; =0x0210F210
	str r3, [sp]
	ldr r1, [r1, r4]
	bl sub_0200732C
	add sp, #4
	pop {r3, r4, pc}
	nop
_02007520: .word 0x0210F210
	thumb_func_end sub_02007508

	thumb_func_start sub_02007524
sub_02007524: ; 0x02007524
	push {r4, lr}
	sub sp, #8
	mov r3, #0
	str r3, [sp]
	lsl r4, r0, #2
	ldr r0, _0200753C ; =0x0210F210
	str r3, [sp, #4]
	ldr r0, [r0, r4]
	bl sub_0200740C
	add sp, #8
	pop {r4, pc}
	.align 2, 0
_0200753C: .word 0x0210F210
	thumb_func_end sub_02007524

	thumb_func_start sub_02007540
sub_02007540: ; 0x02007540
	push {r4, lr}
	sub sp, #8
	mov r3, #0
	str r3, [sp]
	mov r4, #1
	str r4, [sp, #4]
	lsl r4, r0, #2
	ldr r0, _0200755C ; =0x0210F210
	ldr r0, [r0, r4]
	bl sub_0200740C
	add sp, #8
	pop {r4, pc}
	nop
_0200755C: .word 0x0210F210
	thumb_func_end sub_02007540

	thumb_func_start sub_02007560
sub_02007560: ; 0x02007560
	push {r3, r4, lr}
	sub sp, #4
	ldr r4, [sp, #0x10]
	str r4, [sp]
	lsl r4, r1, #2
	ldr r1, _02007578 ; =0x0210F210
	ldr r1, [r1, r4]
	bl sub_0200732C
	add sp, #4
	pop {r3, r4, pc}
	nop
_02007578: .word 0x0210F210
	thumb_func_end sub_02007560

	thumb_func_start sub_0200757C
sub_0200757C: ; 0x0200757C
	push {r4, lr}
	sub sp, #8
	ldr r4, [sp, #0x10]
	str r4, [sp]
	mov r4, #0
	str r4, [sp, #4]
	lsl r4, r0, #2
	ldr r0, _02007598 ; =0x0210F210
	ldr r0, [r0, r4]
	bl sub_0200740C
	add sp, #8
	pop {r4, pc}
	nop
_02007598: .word 0x0210F210
	thumb_func_end sub_0200757C

	thumb_func_start sub_0200759C
sub_0200759C: ; 0x0200759C
	push {r4, lr}
	sub sp, #8
	ldr r4, [sp, #0x10]
	str r4, [sp]
	mov r4, #1
	str r4, [sp, #4]
	lsl r4, r0, #2
	ldr r0, _020075B8 ; =0x0210F210
	ldr r0, [r0, r4]
	bl sub_0200740C
	add sp, #8
	pop {r4, pc}
	nop
_020075B8: .word 0x0210F210
	thumb_func_end sub_0200759C

	thumb_func_start sub_020075BC
sub_020075BC: ; 0x020075BC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x58
	add r5, r1, #0
	mov r1, #0
	add r4, r0, #0
	str r1, [sp, #0xc]
	str r1, [sp, #8]
	str r1, [sp, #4]
	add r0, sp, #0
	strh r1, [r0]
	add r0, sp, #0x10
	bl FS_InitFile
	ldr r1, _02007684 ; =0x0210F210
	lsl r2, r4, #2
	ldr r1, [r1, r2]
	add r0, sp, #0x10
	bl sub_020D8278
	add r0, sp, #0x10
	mov r1, #0xc
	mov r2, #0
	bl sub_020D83DC
	add r0, sp, #0x10
	add r1, sp, #0xc
	mov r2, #2
	bl sub_020D83CC
	ldr r4, [sp, #0xc]
	add r0, sp, #0x10
	add r1, r4, #4
	mov r2, #0
	bl sub_020D83DC
	add r0, sp, #0x10
	add r1, sp, #0xc
	mov r2, #4
	bl sub_020D83CC
	add r0, sp, #0x10
	add r1, sp, #0
	mov r2, #2
	bl sub_020D83CC
	add r0, sp, #0
	ldrh r0, [r0]
	cmp r0, r5
	bgt _02007622
	bl GF_AssertFail
_02007622:
	ldr r0, [sp, #0xc]
	mov r2, #0
	add r6, r4, r0
	add r0, sp, #0x10
	add r1, r6, #4
	bl sub_020D83DC
	add r0, sp, #0x10
	add r1, sp, #0xc
	mov r2, #4
	bl sub_020D83CC
	add r4, #0xc
	lsl r1, r5, #3
	add r0, sp, #0x10
	add r1, r4, r1
	mov r2, #0
	ldr r7, [sp, #0xc]
	bl sub_020D83DC
	add r0, sp, #0x10
	add r1, sp, #8
	mov r2, #4
	bl sub_020D83CC
	add r0, sp, #0x10
	add r1, sp, #4
	mov r2, #4
	bl sub_020D83CC
	add r2, r6, r7
	ldr r1, [sp, #8]
	add r2, #8
	add r1, r2, r1
	add r0, sp, #0x10
	mov r2, #0
	bl sub_020D83DC
	ldr r1, [sp, #4]
	ldr r0, [sp, #8]
	sub r0, r1, r0
	str r0, [sp, #0xc]
	bne _0200767C
	bl GF_AssertFail
_0200767C:
	ldr r0, [sp, #0xc]
	add sp, #0x58
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02007684: .word 0x0210F210
	thumb_func_end sub_020075BC

	thumb_func_start sub_02007688
sub_02007688: ; 0x02007688
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, r1, #0
	mov r1, #0x54
	bl sub_0201AA8C
	add r4, r0, #0
	beq _02007704
	mov r1, #0
	str r1, [r4, #0x48]
	bl FS_InitFile
	ldr r1, _02007708 ; =0x0210F210
	lsl r2, r5, #2
	ldr r1, [r1, r2]
	add r0, r4, #0
	bl sub_020D8278
	add r0, r4, #0
	mov r1, #0xc
	mov r2, #0
	bl sub_020D83DC
	add r1, r4, #0
	add r0, r4, #0
	add r1, #0x48
	mov r2, #2
	bl sub_020D83CC
	ldr r1, [r4, #0x48]
	add r0, r4, #0
	add r1, r1, #4
	mov r2, #0
	bl sub_020D83DC
	add r0, r4, #0
	add r1, sp, #0
	mov r2, #4
	bl sub_020D83CC
	add r1, r4, #0
	add r0, r4, #0
	add r1, #0x50
	mov r2, #2
	bl sub_020D83CC
	ldr r1, [r4, #0x48]
	ldr r0, [sp]
	mov r2, #0
	add r5, r1, r0
	add r0, r4, #0
	add r1, r5, #4
	bl sub_020D83DC
	add r0, r4, #0
	add r1, sp, #0
	mov r2, #4
	bl sub_020D83CC
	ldr r0, [sp]
	add r0, r5, r0
	str r0, [r4, #0x4c]
_02007704:
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_02007708: .word 0x0210F210
	thumb_func_end sub_02007688

	thumb_func_start sub_0200770C
sub_0200770C: ; 0x0200770C
	push {r4, lr}
	add r4, r0, #0
	bl FS_CloseFile
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	thumb_func_end sub_0200770C

	thumb_func_start sub_0200771C
sub_0200771C: ; 0x0200771C
	push {r4, r5, r6, lr}
	sub sp, #8
	add r5, r0, #0
	add r0, #0x50
	ldrh r0, [r0]
	add r4, r1, #0
	add r6, r2, #0
	cmp r0, r4
	bhi _02007732
	bl GF_AssertFail
_02007732:
	ldr r2, [r5, #0x48]
	lsl r1, r4, #3
	add r2, #0xc
	add r1, r2, r1
	add r0, r5, #0
	mov r2, #0
	bl sub_020D83DC
	add r0, r5, #0
	add r1, sp, #4
	mov r2, #4
	bl sub_020D83CC
	add r0, r5, #0
	add r1, sp, #0
	mov r2, #4
	bl sub_020D83CC
	ldr r2, [r5, #0x4c]
	ldr r1, [sp, #4]
	add r2, #8
	add r1, r2, r1
	add r0, r5, #0
	mov r2, #0
	bl sub_020D83DC
	ldr r2, [sp]
	ldr r1, [sp, #4]
	add r0, r6, #0
	sub r1, r2, r1
	bl sub_0201AA8C
	add r4, r0, #0
	beq _02007784
	ldr r3, [sp]
	ldr r2, [sp, #4]
	add r0, r5, #0
	add r1, r4, #0
	sub r2, r3, r2
	bl sub_020D83CC
_02007784:
	add r0, r4, #0
	add sp, #8
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0200771C

	thumb_func_start sub_0200778C
sub_0200778C: ; 0x0200778C
	push {r4, r5, r6, lr}
	sub sp, #8
	add r5, r0, #0
	add r0, #0x50
	ldrh r0, [r0]
	add r4, r1, #0
	add r6, r2, #0
	cmp r0, r4
	bhi _020077A2
	bl GF_AssertFail
_020077A2:
	ldr r2, [r5, #0x48]
	lsl r1, r4, #3
	add r2, #0xc
	add r1, r2, r1
	add r0, r5, #0
	mov r2, #0
	bl sub_020D83DC
	add r0, r5, #0
	add r1, sp, #4
	mov r2, #4
	bl sub_020D83CC
	add r0, r5, #0
	add r1, sp, #0
	mov r2, #4
	bl sub_020D83CC
	ldr r2, [r5, #0x4c]
	ldr r1, [sp, #4]
	add r2, #8
	add r1, r2, r1
	add r0, r5, #0
	mov r2, #0
	bl sub_020D83DC
	ldr r3, [sp]
	ldr r2, [sp, #4]
	add r0, r5, #0
	add r1, r6, #0
	sub r2, r3, r2
	bl sub_020D83CC
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0200778C

	thumb_func_start sub_020077E8
sub_020077E8: ; 0x020077E8
	push {r3, r4, r5, lr}
	sub sp, #8
	add r5, r0, #0
	add r0, #0x50
	ldrh r0, [r0]
	add r4, r1, #0
	cmp r0, r4
	bhi _020077FC
	bl GF_AssertFail
_020077FC:
	ldr r2, [r5, #0x48]
	lsl r1, r4, #3
	add r2, #0xc
	add r1, r2, r1
	add r0, r5, #0
	mov r2, #0
	bl sub_020D83DC
	add r0, r5, #0
	add r1, sp, #4
	mov r2, #4
	bl sub_020D83CC
	add r0, r5, #0
	add r1, sp, #0
	mov r2, #4
	bl sub_020D83CC
	ldr r1, [sp]
	ldr r0, [sp, #4]
	sub r0, r1, r0
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_020077E8

	thumb_func_start sub_0200782C
sub_0200782C: ; 0x0200782C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r0, #0x50
	ldrh r0, [r0]
	add r4, r1, #0
	add r6, r2, #0
	add r7, r3, #0
	cmp r0, r4
	bhi _02007842
	bl GF_AssertFail
_02007842:
	ldr r2, [r5, #0x48]
	lsl r1, r4, #3
	add r2, #0xc
	add r1, r2, r1
	add r0, r5, #0
	mov r2, #0
	bl sub_020D83DC
	add r0, r5, #0
	add r1, sp, #0
	mov r2, #4
	bl sub_020D83CC
	ldr r2, [r5, #0x4c]
	ldr r1, [sp]
	add r2, #8
	add r1, r2, r1
	add r0, r5, #0
	add r1, r6, r1
	mov r2, #0
	bl sub_020D83DC
	ldr r1, [sp, #0x18]
	add r0, r5, #0
	add r2, r7, #0
	bl sub_020D83CC
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200782C

	thumb_func_start sub_0200787C
sub_0200787C: ; 0x0200787C
	push {r4, r5, r6, lr}
	add r4, r2, #0
	add r5, r0, #0
	add r6, r3, #0
	mov r2, #0
	bl sub_020D83DC
	add r0, r5, #0
	add r1, r6, #0
	add r2, r4, #0
	bl sub_020D83CC
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0200787C

	thumb_func_start sub_02007898
sub_02007898: ; 0x02007898
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	add r5, r0, #0
	add r0, #0x50
	ldrh r0, [r0]
	add r4, r1, #0
	add r6, r2, #0
	cmp r0, r4
	bhi _020078AE
	bl GF_AssertFail
_020078AE:
	ldr r2, [r5, #0x48]
	lsl r1, r4, #3
	add r2, #0xc
	add r1, r2, r1
	add r0, r5, #0
	mov r2, #0
	bl sub_020D83DC
	add r0, r5, #0
	add r1, sp, #0
	mov r2, #4
	bl sub_020D83CC
	ldr r1, [r5, #0x4c]
	ldr r0, [sp]
	add r1, #8
	add r0, r1, r0
	str r0, [r6]
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_02007898

	thumb_func_start sub_020078D8
sub_020078D8: ; 0x020078D8
	add r3, r1, #0
	add r1, r2, #0
	add r2, r3, #0
	ldr r3, _020078E4 ; =sub_020D83CC
	bx r3
	nop
_020078E4: .word sub_020D83CC
	thumb_func_end sub_020078D8

	thumb_func_start sub_020078E8
sub_020078E8: ; 0x020078E8
	add r0, #0x50
	ldrh r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_020078E8

	thumb_func_start sub_020078F0
sub_020078F0: ; 0x020078F0
	push {r3, r4, r5, lr}
	add r5, r2, #0
	mov r2, #0
	add r4, r3, #0
	str r2, [sp]
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	bl sub_02007A44
	ldr r1, [sp, #0x14]
	ldr r3, [sp, #0x10]
	str r1, [sp]
	add r1, r5, #0
	add r2, r4, #0
	bl sub_02007D2C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_020078F0

	thumb_func_start sub_02007914
sub_02007914: ; 0x02007914
	push {r3, r4, r5, lr}
	add r5, r2, #0
	mov r2, #1
	add r4, r3, #0
	str r2, [sp]
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	bl sub_02007A44
	ldr r1, [sp, #0x14]
	ldr r3, [sp, #0x10]
	str r1, [sp]
	add r1, r5, #0
	add r2, r4, #0
	bl sub_02007D70
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02007914

	thumb_func_start sub_02007938
sub_02007938: ; 0x02007938
	push {lr}
	sub sp, #0xc
	str r3, [sp]
	ldr r3, [sp, #0x10]
	str r3, [sp, #4]
	ldr r3, [sp, #0x14]
	str r3, [sp, #8]
	mov r3, #0
	bl sub_02007950
	add sp, #0xc
	pop {pc}
	thumb_func_end sub_02007938

	thumb_func_start sub_02007950
sub_02007950: ; 0x02007950
	push {r3, r4, r5, lr}
	add r5, r2, #0
	add r4, r3, #0
	mov r2, #1
	str r2, [sp]
	ldr r3, [sp, #0x18]
	mov r2, #0
	bl sub_02007A44
	ldr r1, [sp, #0x14]
	ldr r3, [sp, #0x10]
	str r1, [sp]
	add r1, r5, #0
	add r2, r4, #0
	bl sub_02007DD0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02007950

	thumb_func_start sub_02007974
sub_02007974: ; 0x02007974
	push {r3, r4, r5, lr}
	add r5, r2, #0
	add r4, r3, #0
	mov r2, #1
	str r2, [sp]
	ldr r3, [sp, #0x10]
	mov r2, #0
	bl sub_02007A44
	ldr r3, [sp, #0x14]
	add r1, r5, #0
	add r2, r4, #0
	bl sub_02007EB0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02007974

	thumb_func_start sub_02007994
sub_02007994: ; 0x02007994
	push {r4, lr}
	sub sp, #8
	add r4, r3, #0
	mov r3, #1
	str r3, [sp]
	ldr r3, [sp, #0x1c]
	bl sub_02007A44
	ldr r1, [sp, #0x18]
	ldr r2, [sp, #0x10]
	str r1, [sp]
	ldr r1, [sp, #0x20]
	ldr r3, [sp, #0x14]
	str r1, [sp, #4]
	add r1, r4, #0
	bl sub_02007F00
	add sp, #8
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02007994

	thumb_func_start sub_020079BC
sub_020079BC: ; 0x020079BC
	push {r3, r4, lr}
	sub sp, #4
	add r4, r3, #0
	mov r3, #0
	str r3, [sp]
	ldr r3, [sp, #0x10]
	bl sub_02007A44
	add r1, r4, #0
	bl sub_02007F48
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_020079BC

	thumb_func_start sub_020079D8
sub_020079D8: ; 0x020079D8
	push {r3, r4, lr}
	sub sp, #4
	add r4, r3, #0
	mov r3, #0
	str r3, [sp]
	ldr r3, [sp, #0x10]
	bl sub_02007A44
	add r1, r4, #0
	bl sub_02007F64
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_020079D8

	thumb_func_start sub_020079F4
sub_020079F4: ; 0x020079F4
	push {r3, r4, lr}
	sub sp, #4
	add r4, r2, #0
	mov r2, #0
	str r2, [sp]
	bl sub_02007A44
	add r1, r4, #0
	bl sub_02007F80
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end sub_020079F4

	thumb_func_start sub_02007A0C
sub_02007A0C: ; 0x02007A0C
	push {r3, r4, lr}
	sub sp, #4
	add r4, r3, #0
	mov r3, #0
	str r3, [sp]
	ldr r3, [sp, #0x10]
	bl sub_02007A44
	add r1, r4, #0
	bl sub_02007F9C
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_02007A0C

	thumb_func_start sub_02007A28
sub_02007A28: ; 0x02007A28
	push {r3, r4, lr}
	sub sp, #4
	add r4, r3, #0
	mov r3, #0
	str r3, [sp]
	ldr r3, [sp, #0x10]
	bl sub_02007A44
	add r1, r4, #0
	bl sub_02007FB8
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_02007A28

	thumb_func_start sub_02007A44
sub_02007A44: ; 0x02007A44
	push {r3, r4, r5, r6, r7, lr}
	add r5, r2, #0
	add r7, r0, #0
	add r6, r3, #0
	str r1, [sp]
	cmp r5, #0
	bne _02007A58
	ldr r2, [sp, #0x18]
	cmp r2, #1
	bne _02007A6C
_02007A58:
	ldr r1, [sp]
	add r0, r7, #0
	bl sub_020075BC
	add r1, r0, #0
	add r0, r6, #0
	bl sub_0201AACC
	add r4, r0, #0
	b _02007A7A
_02007A6C:
	bl sub_020075BC
	add r1, r0, #0
	add r0, r6, #0
	bl sub_0201AA8C
	add r4, r0, #0
_02007A7A:
	cmp r4, #0
	beq _02007ABE
	ldr r2, [sp]
	add r0, r4, #0
	add r1, r7, #0
	bl sub_02007508
	cmp r5, #0
	beq _02007ABE
	ldr r0, [sp, #0x18]
	cmp r0, #0
	bne _02007A9E
	ldr r1, [r4]
	add r0, r6, #0
	lsr r1, r1, #8
	bl sub_0201AA8C
	b _02007AA8
_02007A9E:
	ldr r1, [r4]
	add r0, r6, #0
	lsr r1, r1, #8
	bl sub_0201AACC
_02007AA8:
	add r5, r0, #0
	cmp r5, #0
	beq _02007ABC
	add r0, r4, #0
	add r1, r5, #0
	bl sub_020D4BE8
	add r0, r4, #0
	bl sub_0201AB0C
_02007ABC:
	add r4, r5, #0
_02007ABE:
	add r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02007A44

	thumb_func_start sub_02007AC4
sub_02007AC4: ; 0x02007AC4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	ldr r5, [sp, #0x24]
	str r0, [sp]
	str r1, [sp, #4]
	add r6, r2, #0
	add r7, r3, #0
	bl sub_020075BC
	str r0, [r5]
	cmp r6, #0
	bne _02007AE2
	ldr r0, [sp, #0x20]
	cmp r0, #1
	bne _02007AEE
_02007AE2:
	ldr r1, [r5]
	add r0, r7, #0
	bl sub_0201AACC
	add r4, r0, #0
	b _02007AF8
_02007AEE:
	ldr r1, [r5]
	add r0, r7, #0
	bl sub_0201AA8C
	add r4, r0, #0
_02007AF8:
	cmp r4, #0
	beq _02007B3E
	ldr r1, [sp]
	ldr r2, [sp, #4]
	add r0, r4, #0
	bl sub_02007508
	cmp r6, #0
	beq _02007B3E
	ldr r0, [r4]
	lsr r0, r0, #8
	str r0, [r5]
	ldr r0, [sp, #0x20]
	cmp r0, #0
	bne _02007B20
	ldr r1, [r5]
	add r0, r7, #0
	bl sub_0201AA8C
	b _02007B28
_02007B20:
	ldr r1, [r5]
	add r0, r7, #0
	bl sub_0201AACC
_02007B28:
	add r5, r0, #0
	cmp r5, #0
	beq _02007B3C
	add r0, r4, #0
	add r1, r5, #0
	bl sub_020D4BE8
	add r0, r4, #0
	bl sub_0201AB0C
_02007B3C:
	add r4, r5, #0
_02007B3E:
	add r0, r4, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02007AC4

	thumb_func_start sub_02007B44
sub_02007B44: ; 0x02007B44
	push {r3, r4, r5, lr}
	add r5, r2, #0
	mov r2, #0
	add r4, r3, #0
	str r2, [sp]
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	bl sub_02007C98
	ldr r1, [sp, #0x14]
	ldr r3, [sp, #0x10]
	str r1, [sp]
	add r1, r5, #0
	add r2, r4, #0
	bl sub_02007D2C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02007B44

	thumb_func_start sub_02007B68
sub_02007B68: ; 0x02007B68
	push {r3, r4, r5, lr}
	add r5, r2, #0
	mov r2, #1
	add r4, r3, #0
	str r2, [sp]
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	bl sub_02007C98
	ldr r1, [sp, #0x14]
	ldr r3, [sp, #0x10]
	str r1, [sp]
	add r1, r5, #0
	add r2, r4, #0
	bl sub_02007D70
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02007B68

	thumb_func_start sub_02007B8C
sub_02007B8C: ; 0x02007B8C
	push {lr}
	sub sp, #0xc
	str r3, [sp]
	ldr r3, [sp, #0x10]
	str r3, [sp, #4]
	ldr r3, [sp, #0x14]
	str r3, [sp, #8]
	mov r3, #0
	bl sub_02007BA4
	add sp, #0xc
	pop {pc}
	thumb_func_end sub_02007B8C

	thumb_func_start sub_02007BA4
sub_02007BA4: ; 0x02007BA4
	push {r3, r4, r5, lr}
	add r5, r2, #0
	add r4, r3, #0
	mov r2, #1
	str r2, [sp]
	ldr r3, [sp, #0x18]
	mov r2, #0
	bl sub_02007C98
	ldr r1, [sp, #0x14]
	ldr r3, [sp, #0x10]
	str r1, [sp]
	add r1, r5, #0
	add r2, r4, #0
	bl sub_02007DD0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02007BA4

	thumb_func_start sub_02007BC8
sub_02007BC8: ; 0x02007BC8
	push {r3, r4, r5, lr}
	add r5, r2, #0
	add r4, r3, #0
	mov r2, #1
	str r2, [sp]
	ldr r3, [sp, #0x10]
	mov r2, #0
	bl sub_02007C98
	ldr r3, [sp, #0x14]
	add r1, r5, #0
	add r2, r4, #0
	bl sub_02007EB0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02007BC8

	thumb_func_start sub_02007BE8
sub_02007BE8: ; 0x02007BE8
	push {r4, lr}
	sub sp, #8
	add r4, r3, #0
	mov r3, #1
	str r3, [sp]
	ldr r3, [sp, #0x1c]
	bl sub_02007C98
	ldr r1, [sp, #0x18]
	ldr r2, [sp, #0x10]
	str r1, [sp]
	ldr r1, [sp, #0x20]
	ldr r3, [sp, #0x14]
	str r1, [sp, #4]
	add r1, r4, #0
	bl sub_02007F00
	add sp, #8
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02007BE8

	thumb_func_start sub_02007C10
sub_02007C10: ; 0x02007C10
	push {r3, r4, lr}
	sub sp, #4
	add r4, r3, #0
	mov r3, #0
	str r3, [sp]
	ldr r3, [sp, #0x10]
	bl sub_02007C98
	add r1, r4, #0
	bl sub_02007F48
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_02007C10

	thumb_func_start sub_02007C2C
sub_02007C2C: ; 0x02007C2C
	push {r3, r4, lr}
	sub sp, #4
	add r4, r3, #0
	mov r3, #0
	str r3, [sp]
	ldr r3, [sp, #0x10]
	bl sub_02007C98
	add r1, r4, #0
	bl sub_02007F64
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_02007C2C

	thumb_func_start sub_02007C48
sub_02007C48: ; 0x02007C48
	push {r3, r4, lr}
	sub sp, #4
	add r4, r2, #0
	mov r2, #0
	str r2, [sp]
	bl sub_02007C98
	add r1, r4, #0
	bl sub_02007F80
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end sub_02007C48

	thumb_func_start sub_02007C60
sub_02007C60: ; 0x02007C60
	push {r3, r4, lr}
	sub sp, #4
	add r4, r3, #0
	mov r3, #0
	str r3, [sp]
	ldr r3, [sp, #0x10]
	bl sub_02007C98
	add r1, r4, #0
	bl sub_02007F9C
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_02007C60

	thumb_func_start sub_02007C7C
sub_02007C7C: ; 0x02007C7C
	push {r3, r4, lr}
	sub sp, #4
	add r4, r3, #0
	mov r3, #0
	str r3, [sp]
	ldr r3, [sp, #0x10]
	bl sub_02007C98
	add r1, r4, #0
	bl sub_02007FB8
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_02007C7C

	thumb_func_start sub_02007C98
sub_02007C98: ; 0x02007C98
	push {r3, r4, lr}
	sub sp, #0xc
	ldr r4, [sp, #0x18]
	str r4, [sp]
	add r4, sp, #8
	str r4, [sp, #4]
	bl sub_02007CAC
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end sub_02007C98

	thumb_func_start sub_02007CAC
sub_02007CAC: ; 0x02007CAC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	ldr r5, [sp, #0x24]
	str r0, [sp]
	str r1, [sp, #4]
	add r6, r2, #0
	add r7, r3, #0
	bl sub_020077E8
	str r0, [r5]
	cmp r6, #0
	bne _02007CCA
	ldr r0, [sp, #0x20]
	cmp r0, #1
	bne _02007CD6
_02007CCA:
	ldr r1, [r5]
	add r0, r7, #0
	bl sub_0201AACC
	add r4, r0, #0
	b _02007CE0
_02007CD6:
	ldr r1, [r5]
	add r0, r7, #0
	bl sub_0201AA8C
	add r4, r0, #0
_02007CE0:
	cmp r4, #0
	beq _02007D26
	ldr r0, [sp]
	ldr r1, [sp, #4]
	add r2, r4, #0
	bl sub_0200778C
	cmp r6, #0
	beq _02007D26
	ldr r0, [r4]
	lsr r0, r0, #8
	str r0, [r5]
	ldr r0, [sp, #0x20]
	cmp r0, #0
	bne _02007D08
	ldr r1, [r5]
	add r0, r7, #0
	bl sub_0201AA8C
	b _02007D10
_02007D08:
	ldr r1, [r5]
	add r0, r7, #0
	bl sub_0201AACC
_02007D10:
	add r5, r0, #0
	cmp r5, #0
	beq _02007D24
	add r0, r4, #0
	add r1, r5, #0
	bl sub_020D4BE8
	add r0, r4, #0
	bl sub_0201AB0C
_02007D24:
	add r4, r5, #0
_02007D26:
	add r0, r4, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02007CAC

	thumb_func_start sub_02007D2C
sub_02007D2C: ; 0x02007D2C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r5, r0, #0
	str r1, [sp, #4]
	add r6, r2, #0
	add r7, r3, #0
	ldr r4, [sp, #0x20]
	cmp r5, #0
	beq _02007D68
	add r1, sp, #8
	bl sub_020B70F4
	cmp r0, #0
	beq _02007D62
	cmp r4, #0
	bne _02007D50
	ldr r0, [sp, #8]
	ldr r4, [r0, #0x10]
_02007D50:
	str r7, [sp]
	ldr r2, [sp, #8]
	lsl r1, r6, #0x18
	ldr r0, [sp, #4]
	ldr r2, [r2, #0x14]
	lsr r1, r1, #0x18
	add r3, r4, #0
	bl sub_0201C0C0
_02007D62:
	add r0, r5, #0
	bl sub_0201AB0C
_02007D68:
	add r0, r4, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02007D2C

	thumb_func_start sub_02007D70
sub_02007D70: ; 0x02007D70
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r6, r0, #0
	add r7, r1, #0
	add r5, r2, #0
	str r3, [sp, #4]
	ldr r4, [sp, #0x20]
	cmp r6, #0
	beq _02007DCC
	add r1, sp, #8
	bl sub_020B71D8
	cmp r0, #0
	beq _02007DC6
	cmp r4, #0
	bne _02007D94
	ldr r0, [sp, #8]
	ldr r4, [r0, #8]
_02007D94:
	lsl r1, r5, #0x18
	add r0, r7, #0
	lsr r1, r1, #0x18
	bl sub_0201CC08
	cmp r0, #0
	beq _02007DB2
	ldr r2, [sp, #8]
	lsl r1, r5, #0x18
	add r0, r7, #0
	lsr r1, r1, #0x18
	add r2, #0xc
	add r3, r4, #0
	bl sub_0201C0A8
_02007DB2:
	ldr r0, [sp, #4]
	lsl r1, r5, #0x18
	str r0, [sp]
	ldr r2, [sp, #8]
	add r0, r7, #0
	lsr r1, r1, #0x18
	add r2, #0xc
	add r3, r4, #0
	bl sub_0201BF94
_02007DC6:
	add r0, r6, #0
	bl sub_0201AB0C
_02007DCC:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_02007D70

	thumb_func_start sub_02007DD0
sub_02007DD0: ; 0x02007DD0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	add r4, r1, #0
	add r7, r2, #0
	add r6, r3, #0
	ldr r5, [sp, #0x20]
	add r1, r0, #0
	beq _02007EA6
	add r1, sp, #4
	bl sub_020B7140
	cmp r0, #0
	beq _02007EA0
	ldr r0, [sp, #4]
	ldr r1, [r0, #0xc]
	add r1, r1, r7
	str r1, [r0, #0xc]
	cmp r5, #0
	bne _02007DFE
	ldr r0, [sp, #4]
	ldr r0, [r0, #8]
	sub r5, r0, r7
_02007DFE:
	ldr r0, [sp, #4]
	add r1, r5, #0
	ldr r0, [r0, #0xc]
	bl DC_FlushRange
	cmp r4, #7
	bhi _02007E90
	add r0, r4, r4
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_02007E18: ; jump table
	.short _02007E90 - _02007E18 - 2 ; case 0
	.short _02007E90 - _02007E18 - 2 ; case 1
	.short _02007E28 - _02007E18 - 2 ; case 2
	.short _02007E5C - _02007E18 - 2 ; case 3
	.short _02007E90 - _02007E18 - 2 ; case 4
	.short _02007E90 - _02007E18 - 2 ; case 5
	.short _02007E42 - _02007E18 - 2 ; case 6
	.short _02007E76 - _02007E18 - 2 ; case 7
_02007E28:
	bl sub_020D0524
	ldr r0, [sp, #4]
	ldr r3, _02007EAC ; =0x020F5968
	lsl r4, r4, #2
	ldr r0, [r0, #0xc]
	ldr r3, [r3, r4]
	add r1, r6, #0
	add r2, r5, #0
	blx r3
	bl sub_020D0634
	b _02007EA0
_02007E42:
	bl sub_020D0774
	ldr r0, [sp, #4]
	ldr r3, _02007EAC ; =0x020F5968
	lsl r4, r4, #2
	ldr r0, [r0, #0xc]
	ldr r3, [r3, r4]
	add r1, r6, #0
	add r2, r5, #0
	blx r3
	bl sub_020D07F0
	b _02007EA0
_02007E5C:
	bl sub_020D067C
	ldr r0, [sp, #4]
	ldr r3, _02007EAC ; =0x020F5968
	lsl r4, r4, #2
	ldr r0, [r0, #0xc]
	ldr r3, [r3, r4]
	add r1, r6, #0
	add r2, r5, #0
	blx r3
	bl sub_020D0730
	b _02007EA0
_02007E76:
	bl sub_020D0830
	ldr r0, [sp, #4]
	ldr r3, _02007EAC ; =0x020F5968
	lsl r4, r4, #2
	ldr r0, [r0, #0xc]
	ldr r3, [r3, r4]
	add r1, r6, #0
	add r2, r5, #0
	blx r3
	bl sub_020D08AC
	b _02007EA0
_02007E90:
	ldr r0, [sp, #4]
	ldr r3, _02007EAC ; =0x020F5968
	lsl r4, r4, #2
	ldr r0, [r0, #0xc]
	ldr r3, [r3, r4]
	add r1, r6, #0
	add r2, r5, #0
	blx r3
_02007EA0:
	ldr r0, [sp]
	bl sub_0201AB0C
_02007EA6:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02007EAC: .word 0x020F5968
	thumb_func_end sub_02007DD0

	thumb_func_start sub_02007EB0
sub_02007EB0: ; 0x02007EB0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r5, r0, #0
	add r6, r1, #0
	add r7, r2, #0
	add r4, r3, #0
	cmp r5, #0
	beq _02007EFC
	add r1, sp, #8
	bl sub_020B717C
	str r0, [sp, #4]
	add r0, r5, #0
	add r1, sp, #0xc
	bl sub_020B7140
	cmp r0, #0
	beq _02007EF6
	ldr r0, [sp, #4]
	cmp r0, #0
	beq _02007EEA
	str r4, [sp]
	ldr r0, [sp, #0xc]
	ldr r1, [sp, #8]
	add r2, r7, #0
	add r3, r6, #0
	bl sub_020B87C4
	b _02007EF6
_02007EEA:
	ldr r0, [sp, #0xc]
	add r1, r7, #0
	add r2, r6, #0
	add r3, r4, #0
	bl sub_020B86CC
_02007EF6:
	add r0, r5, #0
	bl sub_0201AB0C
_02007EFC:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02007EB0

	thumb_func_start sub_02007F00
sub_02007F00: ; 0x02007F00
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r5, r0, #0
	add r7, r1, #0
	add r4, r2, #0
	mov r6, #0
	str r3, [sp]
	cmp r5, #0
	beq _02007F3E
	add r1, sp, #4
	bl sub_020B70A8
	cmp r0, #0
	beq _02007F38
	cmp r4, #0
	beq _02007F24
	ldr r0, [sp, #4]
	str r4, [r0, #0x10]
_02007F24:
	ldr r4, _02007F44 ; =0x020F5950
	lsl r6, r7, #2
	ldr r0, [sp, #4]
	ldr r1, [sp, #0x20]
	ldr r2, [sp]
	ldr r3, [sp, #0x24]
	ldr r4, [r4, r6]
	blx r4
	ldr r0, [sp, #4]
	ldr r6, [r0, #0x10]
_02007F38:
	add r0, r5, #0
	bl sub_0201AB0C
_02007F3E:
	add r0, r6, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02007F44: .word 0x020F5950
	thumb_func_end sub_02007F00

	thumb_func_start sub_02007F48
sub_02007F48: ; 0x02007F48
	push {r4, lr}
	add r4, r0, #0
	beq _02007F60
	bl sub_020B70F4
	cmp r0, #0
	bne _02007F60
	add r0, r4, #0
	bl sub_0201AB0C
	mov r0, #0
	pop {r4, pc}
_02007F60:
	add r0, r4, #0
	pop {r4, pc}
	thumb_func_end sub_02007F48

	thumb_func_start sub_02007F64
sub_02007F64: ; 0x02007F64
	push {r4, lr}
	add r4, r0, #0
	beq _02007F7C
	bl sub_020B71D8
	cmp r0, #0
	bne _02007F7C
	add r0, r4, #0
	bl sub_0201AB0C
	mov r0, #0
	pop {r4, pc}
_02007F7C:
	add r0, r4, #0
	pop {r4, pc}
	thumb_func_end sub_02007F64

	thumb_func_start sub_02007F80
sub_02007F80: ; 0x02007F80
	push {r4, lr}
	add r4, r0, #0
	beq _02007F98
	bl sub_020B7140
	cmp r0, #0
	bne _02007F98
	add r0, r4, #0
	bl sub_0201AB0C
	mov r0, #0
	pop {r4, pc}
_02007F98:
	add r0, r4, #0
	pop {r4, pc}
	thumb_func_end sub_02007F80

	thumb_func_start sub_02007F9C
sub_02007F9C: ; 0x02007F9C
	push {r4, lr}
	add r4, r0, #0
	beq _02007FB4
	bl sub_020B6EC8
	cmp r0, #0
	bne _02007FB4
	add r0, r4, #0
	bl sub_0201AB0C
	mov r0, #0
	pop {r4, pc}
_02007FB4:
	add r0, r4, #0
	pop {r4, pc}
	thumb_func_end sub_02007F9C

	thumb_func_start sub_02007FB8
sub_02007FB8: ; 0x02007FB8
	push {r4, lr}
	add r4, r0, #0
	beq _02007FD0
	bl sub_020B6D18
	cmp r0, #0
	bne _02007FD0
	add r0, r4, #0
	bl sub_0201AB0C
	mov r0, #0
	pop {r4, pc}
_02007FD0:
	add r0, r4, #0
	pop {r4, pc}
	thumb_func_end sub_02007FB8

	thumb_func_start sub_02007FD4
sub_02007FD4: ; 0x02007FD4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	mov r1, #0xce
	lsl r1, r1, #2
	add r5, r0, #0
	bl sub_0201AA8C
	add r4, r0, #0
	mov r2, #0xce
	mov r0, #0
	add r1, r4, #0
	lsl r2, r2, #2
	bl sub_020D4858
	mov r0, #0xba
	lsl r0, r0, #2
	add r1, r0, #0
	add r3, r0, #0
	str r5, [r4, r0]
	mov r2, #0
	add r1, #0x48
	strb r2, [r4, r1]
	add r1, r0, #4
	str r2, [r4, r1]
	mov r1, #2
	lsl r1, r1, #0xe
	add r3, #8
	str r1, [r4, r3]
	add r3, r0, #0
	add r3, #0xc
	str r2, [r4, r3]
	mov r2, #0x80
	add r0, #0x10
	str r2, [r4, r0]
	add r0, r5, #0
	bl sub_0201AA8C
	mov r1, #0xbf
	lsl r1, r1, #2
	str r0, [r4, r1]
	add r0, r5, #0
	mov r1, #0xc0
	bl sub_0201AA8C
	mov r1, #3
	lsl r1, r1, #8
	str r0, [r4, r1]
	ldr r1, [r4, r1]
	mov r0, #0
	mov r2, #4
	bl sub_020D4858
	add r0, r5, #0
	mov r1, #0xc0
	bl sub_0201AA8C
	mov r1, #0xc1
	lsl r1, r1, #2
	str r0, [r4, r1]
	ldr r1, [r4, r1]
	mov r0, #0
	mov r2, #4
	bl sub_020D4858
	mov r6, #0
	add r5, r4, #0
	add r7, r6, #0
_0200805A:
	add r0, r7, #0
	add r1, r5, #0
	mov r2, #0xac
	bl sub_020D4858
	add r6, r6, #1
	add r5, #0xac
	cmp r6, #4
	blt _0200805A
	bl sub_020B7350
	ldr r2, _02008114 ; =0x00000333
	mov r0, #0
	strb r0, [r4, r2]
	mov r0, #0x72
	sub r2, #0x4b
	add r1, r0, #0
	ldr r2, [r4, r2]
	add r1, #0x91
	bl sub_02007524
	add r1, sp, #0xc
	str r0, [sp, #4]
	bl sub_020B70A8
	ldr r0, [sp, #0xc]
	mov r1, #0xc3
	ldr r0, [r0, #4]
	lsl r1, r1, #2
	str r0, [r4, r1]
	ldr r0, [sp, #0xc]
	ldr r2, [r0, #8]
	add r0, r1, #4
	str r2, [r4, r0]
	ldr r0, [sp, #0xc]
	add r1, #8
	ldr r0, [r0, #0xc]
	str r0, [r4, r1]
	ldr r0, [sp, #0xc]
	ldr r0, [r0, #0x14]
	str r0, [sp, #8]
	bl sub_02009CD0
	ldr r1, [sp, #8]
	mov r0, #0xbf
	lsl r0, r0, #2
	mov r2, #2
	ldrb r1, [r1]
	ldr r0, [r4, r0]
	lsl r2, r2, #0xe
	bl sub_020D4994
	mov r0, #0
	mov r7, #0xbf
	ldr r6, _02008118 ; =0x00005050
	mov ip, r0
	str r0, [sp]
	add r3, r0, #0
	lsl r7, r7, #2
_020080D0:
	ldr r2, [sp, #8]
	ldr r0, [sp]
	mov r1, #0
	add r2, r2, r0
_020080D8:
	ldr r5, [r4, r7]
	ldrb r0, [r2]
	add r5, r3, r5
	add r5, r1, r5
	add r1, r1, #1
	add r2, r2, #1
	strb r0, [r5, r6]
	cmp r1, #0x28
	blt _020080D8
	ldr r0, [sp]
	add r3, #0x80
	add r0, #0x50
	str r0, [sp]
	mov r0, ip
	add r0, r0, #1
	mov ip, r0
	cmp r0, #0x50
	blt _020080D0
	ldr r0, [sp, #4]
	bl sub_0201AB0C
	ldr r0, _0200811C ; =0x00000331
	mov r1, #1
	strb r1, [r4, r0]
	add r0, r0, #1
	strb r1, [r4, r0]
	add r0, r4, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02008114: .word 0x00000333
_02008118: .word 0x00005050
_0200811C: .word 0x00000331
	thumb_func_end sub_02007FD4

	thumb_func_start sub_02008120
sub_02008120: ; 0x02008120
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	add r5, r0, #0
	bl sub_020094FC
	add r0, r5, #0
	bl sub_0200994C
	bl sub_020C23F4
	mov r6, #0xb3
	mov r0, #0
	ldr r4, _02008494 ; =0x04000444
	lsl r6, r6, #2
	str r0, [r4]
	str r0, [sp, #0x18]
	add r0, r6, #0
	sub r0, #0xc
	ldr r1, [r5, r0]
	add r3, r6, #0
	ldr r2, [r5, r6]
	add r0, r6, #0
	sub r3, #8
	add r6, #0x20
	ldr r3, [r5, r3]
	ldr r6, [r5, r6]
	sub r0, #0x10
	ldr r0, [r5, r0]
	lsr r6, r6, #3
	lsl r3, r3, #0x1a
	orr r6, r3
	mov r3, #1
	lsl r3, r3, #0x1e
	lsl r0, r0, #0x14
	orr r3, r6
	lsl r1, r1, #0x17
	orr r0, r3
	lsl r2, r2, #0x1d
	orr r0, r1
	orr r0, r2
	str r0, [r4, #0x64]
	ldr r0, [sp, #0x18]
	ldr r7, _02008498 ; =0x020F5B04
	add r4, r5, #0
	str r0, [sp, #0x14]
_0200817A:
	ldr r0, [r4]
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x1f
	beq _02008190
	ldr r0, [r4, #0x54]
	lsl r1, r0, #0x1f
	lsr r1, r1, #0x1f
	bne _02008190
	lsl r0, r0, #0x14
	lsr r0, r0, #0x1f
	beq _02008192
_02008190:
	b _020084FA
_02008192:
	ldr r2, [r4, #0x68]
	cmp r2, #0
	beq _020081A0
	add r1, r4, #0
	add r0, r4, #0
	add r1, #0x24
	blx r2
_020081A0:
	bl sub_020C23F4
	ldr r0, _0200849C ; =0x00000333
	ldrb r0, [r5, r0]
	cmp r0, #1
	beq _020081B2
	ldr r0, _020084A0 ; =0x04000454
	mov r1, #0
	str r1, [r0]
_020081B2:
	add r0, r4, #0
	bl sub_0200925C
	mov r0, #0xb1
	lsl r0, r0, #2
	ldr r0, [r5, r0]
	cmp r0, #2
	bne _020081C6
	mov r0, #1
	b _020081C8
_020081C6:
	mov r0, #0
_020081C8:
	mov r1, #0xbd
	lsl r1, r1, #2
	ldr r2, [r5, r1]
	ldr r1, [sp, #0x14]
	mov r3, #0x40
	add r2, r2, r1
	mov r1, #4
	sub r0, r1, r0
	add r1, r2, #0
	lsr r1, r0
	ldr r0, _020084A4 ; =0x040004AC
	str r1, [r0]
	ldr r0, [r4, #0x28]
	ldrsh r3, [r4, r3]
	lsl r2, r0, #0xc
	mov r0, #0x26
	ldrsh r1, [r4, r0]
	mov r0, #0x42
	ldrsh r0, [r4, r0]
	add r0, r1, r0
	lsl r1, r0, #0xc
	mov r0, #0x24
	ldrsh r0, [r4, r0]
	add r0, r0, r3
	lsl r3, r0, #0xc
	ldr r0, _020084A8 ; =0x04000470
	str r3, [r0]
	str r1, [r0]
	str r2, [r0]
	ldrh r0, [r4, #0x38]
	asr r0, r0, #4
	lsl r2, r0, #2
	ldr r0, _020084AC ; =0x021094DC
	add r1, r0, r2
	ldrsh r0, [r0, r2]
	mov r2, #2
	ldrsh r1, [r1, r2]
	bl sub_020CFBB8
	ldrh r0, [r4, #0x3a]
	asr r0, r0, #4
	lsl r2, r0, #2
	ldr r0, _020084AC ; =0x021094DC
	add r1, r0, r2
	ldrsh r0, [r0, r2]
	mov r2, #2
	ldrsh r1, [r1, r2]
	bl sub_020CFBF4
	ldrh r0, [r4, #0x3c]
	asr r0, r0, #4
	lsl r2, r0, #2
	ldr r0, _020084AC ; =0x021094DC
	add r1, r0, r2
	ldrsh r0, [r0, r2]
	mov r2, #2
	ldrsh r1, [r1, r2]
	bl sub_020CFC30
	ldr r0, [r4, #0x28]
	mov r3, #0x40
	lsl r0, r0, #0xc
	neg r2, r0
	mov r0, #0x26
	ldrsh r1, [r4, r0]
	mov r0, #0x42
	ldrsh r0, [r4, r0]
	ldrsh r3, [r4, r3]
	add r0, r1, r0
	lsl r0, r0, #0xc
	neg r1, r0
	mov r0, #0x24
	ldrsh r0, [r4, r0]
	add r0, r0, r3
	lsl r0, r0, #0xc
	neg r3, r0
	ldr r0, _020084A8 ; =0x04000470
	str r3, [r0]
	str r1, [r0]
	str r2, [r0]
	ldr r0, [r4, #0x50]
	lsl r1, r0, #0x11
	lsr r1, r1, #0x1b
	lsl r3, r0, #0x16
	lsl r2, r1, #0xa
	lsl r1, r0, #0x1b
	lsr r3, r3, #0x1b
	lsr r1, r1, #0x1b
	lsl r3, r3, #5
	orr r1, r3
	orr r1, r2
	lsl r1, r1, #0x10
	lsr r3, r1, #0x10
	lsl r1, r0, #2
	lsr r1, r1, #0x1b
	lsl r2, r1, #0xa
	lsl r1, r0, #0xc
	lsl r0, r0, #7
	lsr r0, r0, #0x1b
	lsr r1, r1, #0x1b
	lsl r0, r0, #5
	orr r0, r1
	orr r0, r2
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	lsl r0, r0, #0x10
	add r1, r3, #0
	orr r1, r0
	mov r0, #2
	lsl r0, r0, #0xe
	orr r1, r0
	ldr r0, _020084B0 ; =0x040004C0
	str r1, [r0]
	ldr r1, _020084B4 ; =0x00004210
	add r0, r0, #4
	str r1, [r0]
	ldr r1, [r4]
	ldr r0, [r4, #0x54]
	lsl r1, r1, #0x19
	lsl r0, r0, #0x19
	lsr r1, r1, #0x1a
	lsr r0, r0, #0x1b
	lsl r2, r1, #0x18
	mov r1, #0xc0
	lsl r0, r0, #0x10
	orr r1, r2
	orr r1, r0
	ldr r0, _020084B8 ; =0x040004A4
	str r1, [r0]
	ldr r0, [r4, #0x54]
	lsl r0, r0, #0x1e
	lsr r0, r0, #0x1f
	beq _0200834A
	add r0, r4, #0
	add r0, #0x5b
	ldrb r0, [r0]
	add r1, r4, #0
	add r1, #0x44
	lsl r3, r0, #4
	ldrb r2, [r1]
	ldr r1, [r7, r3]
	add r0, r7, r3
	add r6, r2, r1
	add r1, r4, #0
	add r1, #0x46
	ldrb r1, [r1]
	add r3, r4, #0
	add r3, #0x47
	str r1, [sp, #0x1c]
	add r1, r4, #0
	add r1, #0x45
	ldrb r3, [r3]
	ldrb r1, [r1]
	ldr r0, [r0, #4]
	mov ip, r3
	str r3, [sp]
	ldr r3, [sp, #0x1c]
	add r0, r1, r0
	str r6, [sp, #4]
	str r0, [sp, #8]
	add r3, r3, r6
	str r3, [sp, #0xc]
	mov r3, ip
	add r0, r3, r0
	str r0, [sp, #0x10]
	mov r3, #0x24
	ldrsh r3, [r4, r3]
	mov r0, #0x2c
	ldrsh r0, [r4, r0]
	sub r3, #0x28
	add r2, r3, r2
	add r0, r0, r2
	mov r3, #0x26
	ldrsh r3, [r4, r3]
	mov r2, #0x2e
	lsl r0, r0, #0x10
	sub r3, #0x28
	add r1, r3, r1
	ldrsh r2, [r4, r2]
	ldr r3, [r4, #0x28]
	asr r0, r0, #0x10
	add r2, r2, r1
	mov r1, #0x6e
	ldrsb r1, [r4, r1]
	sub r1, r2, r1
	ldr r2, [r4, #0x30]
	lsl r1, r1, #0x10
	add r2, r3, r2
	ldr r3, [sp, #0x1c]
	asr r1, r1, #0x10
	bl sub_020B7418
	b _020083B6
_0200834A:
	mov r0, #0x34
	ldrsh r1, [r4, r0]
	mov r0, #0x50
	mul r0, r1
	asr r3, r0, #8
	mov r0, #0x36
	ldrsh r1, [r4, r0]
	mov r0, #0x50
	mul r0, r1
	asr r6, r0, #8
	add r0, r4, #0
	add r0, #0x5b
	ldrb r0, [r0]
	lsl r1, r0, #4
	str r6, [sp]
	add r0, r7, r1
	ldr r1, [r7, r1]
	str r1, [sp, #4]
	ldr r1, [r0, #4]
	str r1, [sp, #8]
	ldr r1, [r0, #8]
	str r1, [sp, #0xc]
	ldr r0, [r0, #0xc]
	lsr r1, r3, #0x1f
	str r0, [sp, #0x10]
	mov r0, #0x24
	add r1, r3, r1
	ldrsh r0, [r4, r0]
	asr r1, r1, #1
	sub r0, r0, r1
	mov r1, #0x2c
	ldrsh r1, [r4, r1]
	add r0, r0, r1
	mov r1, #0x26
	ldrsh r2, [r4, r1]
	lsr r1, r6, #0x1f
	add r1, r6, r1
	asr r1, r1, #1
	sub r1, r2, r1
	mov r2, #0x2e
	ldrsh r2, [r4, r2]
	lsl r0, r0, #0x10
	ldr r6, [r4, #0x28]
	add r1, r1, r2
	mov r2, #0x6e
	ldrsb r2, [r4, r2]
	asr r0, r0, #0x10
	sub r1, r1, r2
	ldr r2, [r4, #0x30]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add r2, r6, r2
	bl sub_020B7418
_020083B6:
	add r0, r4, #0
	add r0, #0x6c
	ldrh r0, [r0]
	lsl r1, r0, #0x1e
	lsr r1, r1, #0x1e
	beq _020083DC
	lsl r0, r0, #0x19
	lsr r0, r0, #0x1e
	beq _020083DC
	ldr r0, [r4, #0x54]
	lsl r0, r0, #0x1e
	lsr r0, r0, #0x1f
	bne _020083DC
	mov r0, #0xcd
	lsl r0, r0, #2
	ldr r1, [r5, r0]
	mov r0, #1
	tst r0, r1
	beq _020083DE
_020083DC:
	b _020084FA
_020083DE:
	ldr r0, _0200849C ; =0x00000333
	ldrb r0, [r5, r0]
	cmp r0, #1
	beq _020083EC
	ldr r0, _020084A0 ; =0x04000454
	mov r1, #0
	str r1, [r0]
_020083EC:
	mov r0, #0xb1
	lsl r0, r0, #2
	ldr r0, [r5, r0]
	cmp r0, #2
	bne _020083FA
	mov r1, #1
	b _020083FC
_020083FA:
	mov r1, #0
_020083FC:
	add r2, r4, #0
	add r2, #0x6c
	ldrh r2, [r2]
	mov r0, #0xbd
	lsl r0, r0, #2
	lsl r2, r2, #0x1e
	lsr r2, r2, #0x1e
	add r2, r2, #3
	ldr r0, [r5, r0]
	lsl r2, r2, #5
	add r2, r0, r2
	mov r0, #4
	sub r0, r0, r1
	add r1, r2, #0
	lsr r1, r0
	ldr r0, _020084A4 ; =0x040004AC
	str r1, [r0]
	add r0, r4, #0
	add r0, #0x6c
	ldrh r0, [r0]
	lsl r0, r0, #0x1b
	lsr r0, r0, #0x1f
	beq _0200843C
	mov r0, #0x34
	ldrsh r0, [r4, r0]
	lsl r0, r0, #6
	asr r3, r0, #8
	mov r0, #0x36
	ldrsh r0, [r4, r0]
	lsl r0, r0, #4
	asr r1, r0, #8
	b _02008440
_0200843C:
	mov r3, #0x40
	mov r1, #0x10
_02008440:
	add r0, r4, #0
	add r0, #0x6c
	ldrh r0, [r0]
	lsl r0, r0, #0x1d
	lsr r0, r0, #0x1f
	beq _02008462
	mov r0, #0x74
	ldrsh r2, [r4, r0]
	mov r0, #0x24
	mov r6, #0x2c
	ldrsh r0, [r4, r0]
	ldrsh r6, [r4, r6]
	add r0, r0, r6
	add r2, r2, r0
	add r0, r4, #0
	add r0, #0x70
	strh r2, [r0]
_02008462:
	add r0, r4, #0
	add r0, #0x6c
	ldrh r0, [r0]
	lsl r0, r0, #0x1c
	lsr r0, r0, #0x1f
	beq _02008484
	mov r0, #0x76
	ldrsh r2, [r4, r0]
	mov r0, #0x26
	mov r6, #0x2e
	ldrsh r0, [r4, r0]
	ldrsh r6, [r4, r6]
	add r0, r0, r6
	add r2, r2, r0
	add r0, r4, #0
	add r0, #0x72
	strh r2, [r0]
_02008484:
	add r0, r4, #0
	add r0, #0x6c
	ldrh r0, [r0]
	lsl r0, r0, #0x19
	lsr r0, r0, #0x1e
	lsl r2, r0, #4
	ldr r0, _020084BC ; =0x020F5988
	b _020084C0
	.align 2, 0
_02008494: .word 0x04000444
_02008498: .word 0x020F5B04
_0200849C: .word 0x00000333
_020084A0: .word 0x04000454
_020084A4: .word 0x040004AC
_020084A8: .word 0x04000470
_020084AC: .word 0x021094DC
_020084B0: .word 0x040004C0
_020084B4: .word 0x00004210
_020084B8: .word 0x040004A4
_020084BC: .word 0x020F5988
_020084C0:
	str r1, [sp]
	add r6, r0, r2
	ldr r0, [r0, r2]
	lsr r2, r3, #0x1f
	str r0, [sp, #4]
	ldr r0, [r6, #4]
	add r2, r3, r2
	str r0, [sp, #8]
	ldr r0, [r6, #8]
	asr r2, r2, #1
	str r0, [sp, #0xc]
	ldr r0, [r6, #0xc]
	str r0, [sp, #0x10]
	mov r0, #0x70
	ldrsh r0, [r4, r0]
	sub r0, r0, r2
	mov r2, #0x72
	ldrsh r6, [r4, r2]
	lsr r2, r1, #0x1f
	add r2, r1, r2
	asr r1, r2, #1
	sub r1, r6, r1
	lsl r0, r0, #0x10
	lsl r1, r1, #0x10
	ldr r2, _0200851C ; =0xFFFFFC18
	asr r0, r0, #0x10
	asr r1, r1, #0x10
	bl sub_020B7418
_020084FA:
	ldr r0, [sp, #0x14]
	add r4, #0xac
	add r0, #0x20
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x18]
	add r7, #0x20
	add r0, r0, #1
	str r0, [sp, #0x18]
	cmp r0, #4
	bge _02008510
	b _0200817A
_02008510:
	ldr r0, _02008520 ; =0x04000448
	mov r1, #1
	str r1, [r0]
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200851C: .word 0xFFFFFC18
_02008520: .word 0x04000448
	thumb_func_end sub_02008120

	thumb_func_start sub_02008524
sub_02008524: ; 0x02008524
	push {r4, lr}
	add r4, r0, #0
	mov r0, #0xbf
	lsl r0, r0, #2
	ldr r0, [r4, r0]
	bl sub_0201AB0C
	mov r0, #3
	lsl r0, r0, #8
	ldr r0, [r4, r0]
	bl sub_0201AB0C
	mov r0, #0xc1
	lsl r0, r0, #2
	ldr r0, [r4, r0]
	bl sub_0201AB0C
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02008524

	thumb_func_start sub_02008550
sub_02008550: ; 0x02008550
	push {r3, r4}
	add r1, r0, #0
	mov r3, #0
	add r1, #0x59
	strb r3, [r1]
	add r1, r3, #0
_0200855C:
	add r2, r0, r3
	add r2, #0x5c
	add r3, r3, #1
	strb r1, [r2]
	cmp r3, #0xa
	blt _0200855C
	add r2, r0, #0
	add r2, #0x59
	ldrb r2, [r2]
	lsl r2, r2, #2
	add r3, r0, r2
	mov r2, #0x84
	ldrsb r4, [r3, r2]
	add r3, r2, #0
	sub r3, #0x85
	cmp r4, r3
	bne _02008586
	add r0, #0x5b
	strb r1, [r0]
	pop {r3, r4}
	bx lr
_02008586:
	add r1, r0, #0
	mov r3, #1
	add r1, #0x58
	strb r3, [r1]
	add r1, r0, #0
	add r1, #0x59
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r0, r1
	ldrsb r2, [r1, r2]
	add r1, r0, #0
	add r1, #0x5b
	strb r2, [r1]
	add r1, r0, #0
	add r1, #0x59
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r0, r1
	add r1, #0x85
	ldrb r2, [r1]
	add r1, r0, #0
	add r1, #0x5a
	strb r2, [r1]
	add r1, r0, #0
	add r1, #0x59
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r2, r0, r1
	mov r1, #0x86
	ldrsb r1, [r2, r1]
	strh r1, [r0, #0x2c]
	pop {r3, r4}
	bx lr
	thumb_func_end sub_02008550

	thumb_func_start sub_020085C8
sub_020085C8: ; 0x020085C8
	add r2, r0, #0
	ldr r3, _020085D8 ; =sub_020D4A50
	add r2, #0x84
	add r0, r1, #0
	add r1, r2, #0
	mov r2, #0x28
	bx r3
	nop
_020085D8: .word sub_020D4A50
	thumb_func_end sub_020085C8

	thumb_func_start sub_020085DC
sub_020085DC: ; 0x020085DC
	add r0, #0x58
	ldrb r0, [r0]
	cmp r0, #0
	beq _020085E8
	mov r0, #1
	bx lr
_020085E8:
	mov r0, #0
	bx lr
	thumb_func_end sub_020085DC

	thumb_func_start sub_020085EC
sub_020085EC: ; 0x020085EC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	add r5, r0, #0
	add r6, r1, #0
	add r7, r2, #0
	str r3, [sp, #0x14]
	mov r4, #0
_020085FA:
	ldr r1, [r0]
	lsl r1, r1, #0x1f
	lsr r1, r1, #0x1f
	beq _0200860A
	add r4, r4, #1
	add r0, #0xac
	cmp r4, #4
	blt _020085FA
_0200860A:
	cmp r4, #4
	bne _02008612
	bl GF_AssertFail
_02008612:
	ldr r0, [sp, #0x30]
	ldr r3, [sp, #0x14]
	str r0, [sp]
	ldr r0, [sp, #0x34]
	add r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x38]
	str r4, [sp, #8]
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x3c]
	add r2, r7, #0
	str r0, [sp, #0x10]
	add r0, r5, #0
	bl sub_02008634
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_020085EC

	thumb_func_start sub_02008634
sub_02008634: ; 0x02008634
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r1, [sp, #8]
	ldr r1, [sp, #0x28]
	add r4, r0, #0
	mov r0, #0xac
	add r6, r1, #0
	mul r6, r0
	ldr r0, [r4, r6]
	str r2, [sp]
	lsl r0, r0, #0x1f
	str r3, [sp, #4]
	lsr r0, r0, #0x1f
	beq _02008654
	bl GF_AssertFail
_02008654:
	add r5, r4, r6
	mov r0, #0
	add r1, r5, #0
	mov r2, #0xac
	bl sub_020D4858
	ldr r1, [r4, r6]
	mov r0, #1
	bic r1, r0
	mov r0, #1
	orr r0, r1
	str r0, [r4, r6]
	ldr r1, [r4, r6]
	mov r0, #0x80
	orr r0, r1
	str r0, [r4, r6]
	mov r0, #0x80
	ldr r1, [r4, r6]
	add r0, #0x80
	orr r0, r1
	str r0, [r4, r6]
	add r2, r5, #0
	ldr r0, [r4, r6]
	mov r1, #0x7e
	bic r0, r1
	ldr r1, [sp, #0x24]
	add r7, r2, #4
	lsl r1, r1, #0x1a
	lsr r1, r1, #0x19
	orr r0, r1
	str r0, [r4, r6]
	ldr r0, [sp, #8]
	mov ip, r0
	mov r3, ip
	ldmia r3!, {r0, r1}
	stmia r7!, {r0, r1}
	ldmia r3!, {r0, r1}
	stmia r7!, {r0, r1}
	add r7, r2, #0
	ldr r3, [sp, #8]
	add r7, #0x14
	ldmia r3!, {r0, r1}
	stmia r7!, {r0, r1}
	str r3, [sp, #8]
	ldmia r3!, {r0, r1}
	stmia r7!, {r0, r1}
	ldr r0, [sp]
	ldr r1, [sp, #4]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	lsl r1, r1, #0x10
	asr r7, r1, #0x10
	strh r0, [r2, #0x24]
	str r3, [sp, #8]
	ldr r1, [sp, #0x20]
	strh r7, [r2, #0x26]
	str r1, [r2, #0x28]
	mov r1, #0x80
	add r1, #0x80
	strh r1, [r2, #0x34]
	strh r1, [r2, #0x36]
	ldr r1, [r5, #0x54]
	mov r3, #0x7c
	bic r1, r3
	mov r3, #0x7c
	orr r1, r3
	str r1, [r5, #0x54]
	ldr r1, [r5, #0x50]
	mov r3, #0x1f
	bic r1, r3
	mov r3, #0x1f
	orr r3, r1
	ldr r1, _0200876C ; =0xFFFFFC1F
	and r1, r3
	mov r3, #0x1f
	lsl r3, r3, #5
	orr r3, r1
	ldr r1, _02008770 ; =0xFFFF83FF
	and r1, r3
	mov r3, #0x1f
	lsl r3, r3, #0xa
	orr r3, r1
	ldr r1, _02008774 ; =0xFFF07FFF
	and r1, r3
	mov r3, #0x80
	lsl r3, r3, #0xc
	orr r3, r1
	ldr r1, _02008778 ; =0xFE0FFFFF
	and r1, r3
	mov r3, #0x80
	lsl r3, r3, #0x11
	orr r3, r1
	ldr r1, _0200877C ; =0xC1FFFFFF
	and r1, r3
	mov r3, #0x80
	lsl r3, r3, #0x16
	orr r1, r3
	str r1, [r5, #0x50]
	ldr r1, [sp, #0x30]
	str r1, [r2, #0x68]
	add r1, r2, #0
	add r1, #0x70
	strh r0, [r1]
	add r2, #0x72
	add r0, r5, #0
	strh r7, [r2]
	add r0, #0x6c
	ldrh r1, [r0]
	mov r0, #4
	orr r1, r0
	add r0, r5, #0
	add r0, #0x6c
	strh r1, [r0]
	add r0, r5, #0
	add r0, #0x6c
	ldrh r1, [r0]
	mov r0, #8
	orr r1, r0
	add r0, r5, #0
	add r0, #0x6c
	strh r1, [r0]
	add r0, r5, #0
	add r0, #0x6c
	ldrh r1, [r0]
	mov r0, #0x10
	add r5, #0x6c
	orr r0, r1
	strh r0, [r5]
	ldr r0, [sp, #0x2c]
	cmp r0, #0
	beq _02008764
	add r1, r4, r6
	add r1, #0x84
	mov r2, #0x28
	bl sub_020D4A50
_02008764:
	add r0, r4, r6
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_0200876C: .word 0xFFFFFC1F
_02008770: .word 0xFFFF83FF
_02008774: .word 0xFFF07FFF
_02008778: .word 0xFE0FFFFF
_0200877C: .word 0xC1FFFFFF
	thumb_func_end sub_02008634

	thumb_func_start sub_02008780
sub_02008780: ; 0x02008780
	ldr r2, [r0]
	mov r1, #1
	bic r2, r1
	str r2, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_02008780

	thumb_func_start sub_0200878C
sub_0200878C: ; 0x0200878C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	mov r4, #0
_02008792:
	add r0, r5, #0
	bl sub_02008780
	add r4, r4, #1
	add r5, #0xac
	cmp r4, #4
	blt _02008792
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200878C

	thumb_func_start sub_020087A4
sub_020087A4: ; 0x020087A4
	cmp r1, #0x2e
	bls _020087AA
	b _02008A4C
_020087AA:
	add r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add pc, r1
_020087B6: ; jump table
	.short _02008814 - _020087B6 - 2 ; case 0
	.short _02008818 - _020087B6 - 2 ; case 1
	.short _0200881C - _020087B6 - 2 ; case 2
	.short _02008820 - _020087B6 - 2 ; case 3
	.short _02008824 - _020087B6 - 2 ; case 4
	.short _02008828 - _020087B6 - 2 ; case 5
	.short _0200882C - _020087B6 - 2 ; case 6
	.short _0200883C - _020087B6 - 2 ; case 7
	.short _02008840 - _020087B6 - 2 ; case 8
	.short _02008844 - _020087B6 - 2 ; case 9
	.short _02008848 - _020087B6 - 2 ; case 10
	.short _0200884E - _020087B6 - 2 ; case 11
	.short _02008854 - _020087B6 - 2 ; case 12
	.short _02008858 - _020087B6 - 2 ; case 13
	.short _0200885C - _020087B6 - 2 ; case 14
	.short _0200886C - _020087B6 - 2 ; case 15
	.short _02008872 - _020087B6 - 2 ; case 16
	.short _02008878 - _020087B6 - 2 ; case 17
	.short _0200887E - _020087B6 - 2 ; case 18
	.short _02008884 - _020087B6 - 2 ; case 19
	.short _0200888A - _020087B6 - 2 ; case 20
	.short _02008890 - _020087B6 - 2 ; case 21
	.short _02008896 - _020087B6 - 2 ; case 22
	.short _0200889C - _020087B6 - 2 ; case 23
	.short _020088AC - _020087B6 - 2 ; case 24
	.short _020088BC - _020087B6 - 2 ; case 25
	.short _020088CC - _020087B6 - 2 ; case 26
	.short _020088DC - _020087B6 - 2 ; case 27
	.short _020088EC - _020087B6 - 2 ; case 28
	.short _020088FC - _020087B6 - 2 ; case 29
	.short _0200890C - _020087B6 - 2 ; case 30
	.short _02008926 - _020087B6 - 2 ; case 31
	.short _02008934 - _020087B6 - 2 ; case 32
	.short _02008946 - _020087B6 - 2 ; case 33
	.short _02008958 - _020087B6 - 2 ; case 34
	.short _0200895E - _020087B6 - 2 ; case 35
	.short _02008976 - _020087B6 - 2 ; case 36
	.short _0200898E - _020087B6 - 2 ; case 37
	.short _0200899E - _020087B6 - 2 ; case 38
	.short _02008A4C - _020087B6 - 2 ; case 39
	.short _020089A4 - _020087B6 - 2 ; case 40
	.short _020089BC - _020087B6 - 2 ; case 41
	.short _020089C2 - _020087B6 - 2 ; case 42
	.short _020089E6 - _020087B6 - 2 ; case 43
	.short _02008A00 - _020087B6 - 2 ; case 44
	.short _02008A1A - _020087B6 - 2 ; case 45
	.short _02008A34 - _020087B6 - 2 ; case 46
_02008814:
	strh r2, [r0, #0x24]
	bx lr
_02008818:
	strh r2, [r0, #0x26]
	bx lr
_0200881C:
	str r2, [r0, #0x28]
	bx lr
_02008820:
	strh r2, [r0, #0x2c]
	bx lr
_02008824:
	strh r2, [r0, #0x2e]
	bx lr
_02008828:
	str r2, [r0, #0x30]
	bx lr
_0200882C:
	ldr r3, [r0, #0x54]
	mov r1, #1
	bic r3, r1
	mov r1, #1
	and r1, r2
	orr r1, r3
	str r1, [r0, #0x54]
	bx lr
_0200883C:
	strh r2, [r0, #0x38]
	bx lr
_02008840:
	strh r2, [r0, #0x3a]
	bx lr
_02008844:
	strh r2, [r0, #0x3c]
	bx lr
_02008848:
	add r0, #0x40
	strh r2, [r0]
	bx lr
_0200884E:
	add r0, #0x42
	strh r2, [r0]
	bx lr
_02008854:
	strh r2, [r0, #0x34]
	bx lr
_02008858:
	strh r2, [r0, #0x36]
	bx lr
_0200885C:
	ldr r3, [r0, #0x54]
	mov r1, #2
	bic r3, r1
	lsl r1, r2, #0x1f
	lsr r1, r1, #0x1e
	orr r1, r3
	str r1, [r0, #0x54]
	bx lr
_0200886C:
	add r0, #0x44
	strb r2, [r0]
	bx lr
_02008872:
	add r0, #0x45
	strb r2, [r0]
	bx lr
_02008878:
	add r0, #0x46
	strb r2, [r0]
	bx lr
_0200887E:
	add r0, #0x47
	strb r2, [r0]
	bx lr
_02008884:
	add r0, #0x70
	strh r2, [r0]
	bx lr
_0200888A:
	add r0, #0x72
	strh r2, [r0]
	bx lr
_02008890:
	add r0, #0x74
	strh r2, [r0]
	bx lr
_02008896:
	add r0, #0x76
	strh r2, [r0]
	bx lr
_0200889C:
	ldr r3, [r0, #0x54]
	mov r1, #0x7c
	bic r3, r1
	lsl r1, r2, #0x1b
	lsr r1, r1, #0x19
	orr r1, r3
	str r1, [r0, #0x54]
	bx lr
_020088AC:
	ldr r3, [r0, #0x50]
	mov r1, #0x1f
	bic r3, r1
	mov r1, #0x1f
	and r1, r2
	orr r1, r3
	str r1, [r0, #0x50]
	bx lr
_020088BC:
	ldr r3, [r0, #0x50]
	ldr r1, _02008A50 ; =0xFFFFFC1F
	and r3, r1
	lsl r1, r2, #0x1b
	lsr r1, r1, #0x16
	orr r1, r3
	str r1, [r0, #0x50]
	bx lr
_020088CC:
	ldr r3, [r0, #0x50]
	ldr r1, _02008A54 ; =0xFFFF83FF
	and r3, r1
	lsl r1, r2, #0x1b
	lsr r1, r1, #0x11
	orr r1, r3
	str r1, [r0, #0x50]
	bx lr
_020088DC:
	ldr r3, [r0, #0x50]
	ldr r1, _02008A58 ; =0xFFF07FFF
	and r3, r1
	lsl r1, r2, #0x1b
	lsr r1, r1, #0xc
	orr r1, r3
	str r1, [r0, #0x50]
	bx lr
_020088EC:
	ldr r3, [r0, #0x50]
	ldr r1, _02008A5C ; =0xFE0FFFFF
	and r3, r1
	lsl r1, r2, #0x1b
	lsr r1, r1, #7
	orr r1, r3
	str r1, [r0, #0x50]
	bx lr
_020088FC:
	ldr r3, [r0, #0x50]
	ldr r1, _02008A60 ; =0xC1FFFFFF
	and r3, r1
	lsl r1, r2, #0x1b
	lsr r1, r1, #2
	orr r1, r3
	str r1, [r0, #0x50]
	bx lr
_0200890C:
	ldr r3, [r0, #0x54]
	ldr r1, _02008A64 ; =0xFFFFEFFF
	and r3, r1
	lsl r1, r2, #0x1f
	lsr r1, r1, #0x13
	orr r1, r3
	str r1, [r0, #0x54]
	mov r1, #1
	ldr r2, [r0]
	lsl r1, r1, #8
	orr r1, r2
	str r1, [r0]
	bx lr
_02008926:
	str r2, [r0, #0x4c]
	mov r1, #1
	ldr r2, [r0]
	lsl r1, r1, #8
	orr r1, r2
	str r1, [r0]
	bx lr
_02008934:
	add r1, r0, #0
	add r1, #0x48
	strb r2, [r1]
	mov r1, #1
	ldr r2, [r0]
	lsl r1, r1, #8
	orr r1, r2
	str r1, [r0]
	bx lr
_02008946:
	add r1, r0, #0
	add r1, #0x49
	strb r2, [r1]
	mov r1, #1
	ldr r2, [r0]
	lsl r1, r1, #8
	orr r1, r2
	str r1, [r0]
	bx lr
_02008958:
	add r0, #0x4a
	strb r2, [r0]
	bx lr
_0200895E:
	ldr r3, [r0, #0x54]
	ldr r1, _02008A68 ; =0xFFFFFDFF
	and r3, r1
	lsl r1, r2, #0x1f
	lsr r1, r1, #0x16
	orr r1, r3
	str r1, [r0, #0x54]
	ldr r2, [r0]
	mov r1, #0x80
	orr r1, r2
	str r1, [r0]
	bx lr
_02008976:
	ldr r3, [r0, #0x54]
	ldr r1, _02008A6C ; =0xFFFFFBFF
	and r3, r1
	lsl r1, r2, #0x1f
	lsr r1, r1, #0x15
	orr r1, r3
	str r1, [r0, #0x54]
	ldr r2, [r0]
	mov r1, #0x80
	orr r1, r2
	str r1, [r0]
	bx lr
_0200898E:
	ldr r3, [r0, #0x54]
	ldr r1, _02008A70 ; =0xFFFFF7FF
	and r3, r1
	lsl r1, r2, #0x1f
	lsr r1, r1, #0x14
	orr r1, r3
	str r1, [r0, #0x54]
	bx lr
_0200899E:
	add r0, #0x5b
	strb r2, [r0]
	bx lr
_020089A4:
	ldr r3, [r0, #0x54]
	ldr r1, _02008A74 ; =0xFFFE1FFF
	and r3, r1
	lsl r1, r2, #0x1c
	lsr r1, r1, #0xf
	orr r1, r3
	str r1, [r0, #0x54]
	ldr r2, [r0]
	mov r1, #0x80
	orr r1, r2
	str r1, [r0]
	bx lr
_020089BC:
	add r0, #0x6e
	strb r2, [r0]
	bx lr
_020089C2:
	add r1, r0, #0
	add r1, #0x6c
	ldrh r3, [r1]
	mov r1, #3
	bic r3, r1
	lsl r1, r2, #0x10
	lsr r1, r1, #0x10
	mov r2, #3
	and r1, r2
	orr r3, r1
	add r1, r0, #0
	add r1, #0x6c
	strh r3, [r1]
	ldr r1, [r0]
	add r2, #0xfd
	orr r1, r2
	str r1, [r0]
	bx lr
_020089E6:
	add r1, r0, #0
	add r1, #0x6c
	ldrh r3, [r1]
	mov r1, #4
	add r0, #0x6c
	bic r3, r1
	lsl r1, r2, #0x10
	lsr r1, r1, #0x10
	lsl r1, r1, #0x1f
	lsr r1, r1, #0x1d
	orr r1, r3
	strh r1, [r0]
	bx lr
_02008A00:
	add r1, r0, #0
	add r1, #0x6c
	ldrh r3, [r1]
	mov r1, #8
	add r0, #0x6c
	bic r3, r1
	lsl r1, r2, #0x10
	lsr r1, r1, #0x10
	lsl r1, r1, #0x1f
	lsr r1, r1, #0x1c
	orr r1, r3
	strh r1, [r0]
	bx lr
_02008A1A:
	add r1, r0, #0
	add r1, #0x6c
	ldrh r3, [r1]
	mov r1, #0x10
	add r0, #0x6c
	bic r3, r1
	lsl r1, r2, #0x10
	lsr r1, r1, #0x10
	lsl r1, r1, #0x1f
	lsr r1, r1, #0x1b
	orr r1, r3
	strh r1, [r0]
	bx lr
_02008A34:
	add r1, r0, #0
	add r1, #0x6c
	ldrh r3, [r1]
	mov r1, #0x60
	add r0, #0x6c
	bic r3, r1
	lsl r1, r2, #0x10
	lsr r1, r1, #0x10
	lsl r1, r1, #0x1e
	lsr r1, r1, #0x19
	orr r1, r3
	strh r1, [r0]
_02008A4C:
	bx lr
	nop
_02008A50: .word 0xFFFFFC1F
_02008A54: .word 0xFFFF83FF
_02008A58: .word 0xFFF07FFF
_02008A5C: .word 0xFE0FFFFF
_02008A60: .word 0xC1FFFFFF
_02008A64: .word 0xFFFFEFFF
_02008A68: .word 0xFFFFFDFF
_02008A6C: .word 0xFFFFFBFF
_02008A70: .word 0xFFFFF7FF
_02008A74: .word 0xFFFE1FFF
	thumb_func_end sub_020087A4

	thumb_func_start sub_02008A78
sub_02008A78: ; 0x02008A78
	push {r3, lr}
	cmp r1, #0x2e
	bls _02008A80
	b _02008C22
_02008A80:
	add r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add pc, r1
_02008A8C: ; jump table
	.short _02008AEA - _02008A8C - 2 ; case 0
	.short _02008AF0 - _02008A8C - 2 ; case 1
	.short _02008AF6 - _02008A8C - 2 ; case 2
	.short _02008AFA - _02008A8C - 2 ; case 3
	.short _02008B00 - _02008A8C - 2 ; case 4
	.short _02008B06 - _02008A8C - 2 ; case 5
	.short _02008B0A - _02008A8C - 2 ; case 6
	.short _02008B12 - _02008A8C - 2 ; case 7
	.short _02008B16 - _02008A8C - 2 ; case 8
	.short _02008B1A - _02008A8C - 2 ; case 9
	.short _02008B1E - _02008A8C - 2 ; case 10
	.short _02008B24 - _02008A8C - 2 ; case 11
	.short _02008B2A - _02008A8C - 2 ; case 12
	.short _02008B30 - _02008A8C - 2 ; case 13
	.short _02008B36 - _02008A8C - 2 ; case 14
	.short _02008B3E - _02008A8C - 2 ; case 15
	.short _02008B44 - _02008A8C - 2 ; case 16
	.short _02008B4A - _02008A8C - 2 ; case 17
	.short _02008B50 - _02008A8C - 2 ; case 18
	.short _02008B56 - _02008A8C - 2 ; case 19
	.short _02008B5C - _02008A8C - 2 ; case 20
	.short _02008B62 - _02008A8C - 2 ; case 21
	.short _02008B68 - _02008A8C - 2 ; case 22
	.short _02008B6E - _02008A8C - 2 ; case 23
	.short _02008B76 - _02008A8C - 2 ; case 24
	.short _02008B7E - _02008A8C - 2 ; case 25
	.short _02008B86 - _02008A8C - 2 ; case 26
	.short _02008B8E - _02008A8C - 2 ; case 27
	.short _02008B96 - _02008A8C - 2 ; case 28
	.short _02008B9E - _02008A8C - 2 ; case 29
	.short _02008BA6 - _02008A8C - 2 ; case 30
	.short _02008BAE - _02008A8C - 2 ; case 31
	.short _02008BB2 - _02008A8C - 2 ; case 32
	.short _02008BB8 - _02008A8C - 2 ; case 33
	.short _02008BBE - _02008A8C - 2 ; case 34
	.short _02008BC4 - _02008A8C - 2 ; case 35
	.short _02008BCC - _02008A8C - 2 ; case 36
	.short _02008BD4 - _02008A8C - 2 ; case 37
	.short _02008BDC - _02008A8C - 2 ; case 38
	.short _02008C22 - _02008A8C - 2 ; case 39
	.short _02008BE2 - _02008A8C - 2 ; case 40
	.short _02008BEA - _02008A8C - 2 ; case 41
	.short _02008BF0 - _02008A8C - 2 ; case 42
	.short _02008BFA - _02008A8C - 2 ; case 43
	.short _02008C04 - _02008A8C - 2 ; case 44
	.short _02008C0E - _02008A8C - 2 ; case 45
	.short _02008C18 - _02008A8C - 2 ; case 46
_02008AEA:
	mov r1, #0x24
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008AF0:
	mov r1, #0x26
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008AF6:
	ldr r0, [r0, #0x28]
	pop {r3, pc}
_02008AFA:
	mov r1, #0x2c
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B00:
	mov r1, #0x2e
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B06:
	ldr r0, [r0, #0x30]
	pop {r3, pc}
_02008B0A:
	ldr r0, [r0, #0x54]
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x1f
	pop {r3, pc}
_02008B12:
	ldrh r0, [r0, #0x38]
	pop {r3, pc}
_02008B16:
	ldrh r0, [r0, #0x3a]
	pop {r3, pc}
_02008B1A:
	ldrh r0, [r0, #0x3c]
	pop {r3, pc}
_02008B1E:
	mov r1, #0x40
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B24:
	mov r1, #0x42
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B2A:
	mov r1, #0x34
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B30:
	mov r1, #0x36
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B36:
	ldr r0, [r0, #0x54]
	lsl r0, r0, #0x1e
	lsr r0, r0, #0x1f
	pop {r3, pc}
_02008B3E:
	add r0, #0x44
	ldrb r0, [r0]
	pop {r3, pc}
_02008B44:
	add r0, #0x45
	ldrb r0, [r0]
	pop {r3, pc}
_02008B4A:
	add r0, #0x46
	ldrb r0, [r0]
	pop {r3, pc}
_02008B50:
	add r0, #0x47
	ldrb r0, [r0]
	pop {r3, pc}
_02008B56:
	mov r1, #0x70
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B5C:
	mov r1, #0x72
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B62:
	mov r1, #0x74
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B68:
	mov r1, #0x76
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B6E:
	ldr r0, [r0, #0x54]
	lsl r0, r0, #0x19
	lsr r0, r0, #0x1b
	pop {r3, pc}
_02008B76:
	ldr r0, [r0, #0x50]
	lsl r0, r0, #0x1b
	lsr r0, r0, #0x1b
	pop {r3, pc}
_02008B7E:
	ldr r0, [r0, #0x50]
	lsl r0, r0, #0x16
	lsr r0, r0, #0x1b
	pop {r3, pc}
_02008B86:
	ldr r0, [r0, #0x50]
	lsl r0, r0, #0x11
	lsr r0, r0, #0x1b
	pop {r3, pc}
_02008B8E:
	ldr r0, [r0, #0x50]
	lsl r0, r0, #0xc
	lsr r0, r0, #0x1b
	pop {r3, pc}
_02008B96:
	ldr r0, [r0, #0x50]
	lsl r0, r0, #7
	lsr r0, r0, #0x1b
	pop {r3, pc}
_02008B9E:
	ldr r0, [r0, #0x50]
	lsl r0, r0, #2
	lsr r0, r0, #0x1b
	pop {r3, pc}
_02008BA6:
	ldr r0, [r0, #0x54]
	lsl r0, r0, #0x13
	lsr r0, r0, #0x1f
	pop {r3, pc}
_02008BAE:
	ldr r0, [r0, #0x4c]
	pop {r3, pc}
_02008BB2:
	add r0, #0x48
	ldrb r0, [r0]
	pop {r3, pc}
_02008BB8:
	add r0, #0x49
	ldrb r0, [r0]
	pop {r3, pc}
_02008BBE:
	add r0, #0x4a
	ldrb r0, [r0]
	pop {r3, pc}
_02008BC4:
	ldr r0, [r0, #0x54]
	lsl r0, r0, #0x16
	lsr r0, r0, #0x1f
	pop {r3, pc}
_02008BCC:
	ldr r0, [r0, #0x54]
	lsl r0, r0, #0x15
	lsr r0, r0, #0x1f
	pop {r3, pc}
_02008BD4:
	ldr r0, [r0, #0x54]
	lsl r0, r0, #0x14
	lsr r0, r0, #0x1f
	pop {r3, pc}
_02008BDC:
	add r0, #0x5b
	ldrb r0, [r0]
	pop {r3, pc}
_02008BE2:
	ldr r0, [r0, #0x54]
	lsl r0, r0, #0xf
	lsr r0, r0, #0x1c
	pop {r3, pc}
_02008BEA:
	mov r1, #0x6e
	ldrsb r0, [r0, r1]
	pop {r3, pc}
_02008BF0:
	add r0, #0x6c
	ldrh r0, [r0]
	lsl r0, r0, #0x1e
	lsr r0, r0, #0x1e
	pop {r3, pc}
_02008BFA:
	add r0, #0x6c
	ldrh r0, [r0]
	lsl r0, r0, #0x1d
	lsr r0, r0, #0x1f
	pop {r3, pc}
_02008C04:
	add r0, #0x6c
	ldrh r0, [r0]
	lsl r0, r0, #0x1c
	lsr r0, r0, #0x1f
	pop {r3, pc}
_02008C0E:
	add r0, #0x6c
	ldrh r0, [r0]
	lsl r0, r0, #0x1b
	lsr r0, r0, #0x1f
	pop {r3, pc}
_02008C18:
	add r0, #0x6c
	ldrh r0, [r0]
	lsl r0, r0, #0x19
	lsr r0, r0, #0x1e
	pop {r3, pc}
_02008C22:
	bl GF_AssertFail
	mov r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_02008A78

	thumb_func_start sub_02008C2C
sub_02008C2C: ; 0x02008C2C
	push {r3, r4}
	add r3, r0, #0
	add r0, r2, #0
	cmp r1, #0x2e
	bls _02008C38
	b _0200905E
_02008C38:
	add r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add pc, r1
_02008C44: ; jump table
	.short _02008CA2 - _02008C44 - 2 ; case 0
	.short _02008CAE - _02008C44 - 2 ; case 1
	.short _02008CBA - _02008C44 - 2 ; case 2
	.short _02008CC4 - _02008C44 - 2 ; case 3
	.short _02008CD0 - _02008C44 - 2 ; case 4
	.short _02008CDC - _02008C44 - 2 ; case 5
	.short _02008CE6 - _02008C44 - 2 ; case 6
	.short _02008D00 - _02008C44 - 2 ; case 7
	.short _02008D0A - _02008C44 - 2 ; case 8
	.short _02008D14 - _02008C44 - 2 ; case 9
	.short _02008D1E - _02008C44 - 2 ; case 10
	.short _02008D2C - _02008C44 - 2 ; case 11
	.short _02008D3A - _02008C44 - 2 ; case 12
	.short _02008D46 - _02008C44 - 2 ; case 13
	.short _02008D52 - _02008C44 - 2 ; case 14
	.short _02008D6C - _02008C44 - 2 ; case 15
	.short _02008D7C - _02008C44 - 2 ; case 16
	.short _02008D8C - _02008C44 - 2 ; case 17
	.short _02008D9C - _02008C44 - 2 ; case 18
	.short _02008DAC - _02008C44 - 2 ; case 19
	.short _02008DBA - _02008C44 - 2 ; case 20
	.short _02008DC8 - _02008C44 - 2 ; case 21
	.short _02008DD6 - _02008C44 - 2 ; case 22
	.short _02008DE4 - _02008C44 - 2 ; case 23
	.short _02008DFE - _02008C44 - 2 ; case 24
	.short _02008E18 - _02008C44 - 2 ; case 25
	.short _02008E30 - _02008C44 - 2 ; case 26
	.short _02008E48 - _02008C44 - 2 ; case 27
	.short _02008E60 - _02008C44 - 2 ; case 28
	.short _02008E78 - _02008C44 - 2 ; case 29
	.short _02008E90 - _02008C44 - 2 ; case 30
	.short _02008EB2 - _02008C44 - 2 ; case 31
	.short _02008EC6 - _02008C44 - 2 ; case 32
	.short _02008EE2 - _02008C44 - 2 ; case 33
	.short _02008EFE - _02008C44 - 2 ; case 34
	.short _02008F0E - _02008C44 - 2 ; case 35
	.short _02008F2E - _02008C44 - 2 ; case 36
	.short _02008F4E - _02008C44 - 2 ; case 37
	.short _02008F66 - _02008C44 - 2 ; case 38
	.short _0200905E - _02008C44 - 2 ; case 39
	.short _02008F76 - _02008C44 - 2 ; case 40
	.short _02008F96 - _02008C44 - 2 ; case 41
	.short _02008FA4 - _02008C44 - 2 ; case 42
	.short _02008FD2 - _02008C44 - 2 ; case 43
	.short _02008FF6 - _02008C44 - 2 ; case 44
	.short _0200901A - _02008C44 - 2 ; case 45
	.short _0200903E - _02008C44 - 2 ; case 46
_02008CA2:
	mov r1, #0x24
	ldrsh r1, [r3, r1]
	add r0, r1, r0
	strh r0, [r3, #0x24]
	pop {r3, r4}
	bx lr
_02008CAE:
	mov r1, #0x26
	ldrsh r1, [r3, r1]
	add r0, r1, r0
	strh r0, [r3, #0x26]
	pop {r3, r4}
	bx lr
_02008CBA:
	ldr r1, [r3, #0x28]
	add r0, r1, r0
	str r0, [r3, #0x28]
	pop {r3, r4}
	bx lr
_02008CC4:
	mov r1, #0x2c
	ldrsh r1, [r3, r1]
	add r0, r1, r0
	strh r0, [r3, #0x2c]
	pop {r3, r4}
	bx lr
_02008CD0:
	mov r1, #0x2e
	ldrsh r1, [r3, r1]
	add r0, r1, r0
	strh r0, [r3, #0x2e]
	pop {r3, r4}
	bx lr
_02008CDC:
	ldr r1, [r3, #0x30]
	add r0, r1, r0
	str r0, [r3, #0x30]
	pop {r3, r4}
	bx lr
_02008CE6:
	ldr r4, [r3, #0x54]
	mov r2, #1
	add r1, r4, #0
	bic r1, r2
	lsl r2, r4, #0x1f
	lsr r2, r2, #0x1f
	add r2, r2, r0
	mov r0, #1
	and r0, r2
	orr r0, r1
	str r0, [r3, #0x54]
	pop {r3, r4}
	bx lr
_02008D00:
	ldrh r1, [r3, #0x38]
	add r0, r1, r0
	strh r0, [r3, #0x38]
	pop {r3, r4}
	bx lr
_02008D0A:
	ldrh r1, [r3, #0x3a]
	add r0, r1, r0
	strh r0, [r3, #0x3a]
	pop {r3, r4}
	bx lr
_02008D14:
	ldrh r1, [r3, #0x3c]
	add r0, r1, r0
	strh r0, [r3, #0x3c]
	pop {r3, r4}
	bx lr
_02008D1E:
	mov r1, #0x40
	ldrsh r1, [r3, r1]
	add r3, #0x40
	add r0, r1, r0
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_02008D2C:
	mov r1, #0x42
	ldrsh r1, [r3, r1]
	add r3, #0x42
	add r0, r1, r0
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_02008D3A:
	mov r1, #0x34
	ldrsh r1, [r3, r1]
	add r0, r1, r0
	strh r0, [r3, #0x34]
	pop {r3, r4}
	bx lr
_02008D46:
	mov r1, #0x36
	ldrsh r1, [r3, r1]
	add r0, r1, r0
	strh r0, [r3, #0x36]
	pop {r3, r4}
	bx lr
_02008D52:
	ldr r4, [r3, #0x54]
	mov r2, #2
	add r1, r4, #0
	bic r1, r2
	lsl r2, r4, #0x1e
	lsr r2, r2, #0x1f
	add r0, r2, r0
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x1e
	orr r0, r1
	str r0, [r3, #0x54]
	pop {r3, r4}
	bx lr
_02008D6C:
	add r1, r3, #0
	add r1, #0x44
	ldrb r1, [r1]
	add r3, #0x44
	add r0, r1, r0
	strb r0, [r3]
	pop {r3, r4}
	bx lr
_02008D7C:
	add r1, r3, #0
	add r1, #0x45
	ldrb r1, [r1]
	add r3, #0x45
	add r0, r1, r0
	strb r0, [r3]
	pop {r3, r4}
	bx lr
_02008D8C:
	add r1, r3, #0
	add r1, #0x46
	ldrb r1, [r1]
	add r3, #0x46
	add r0, r1, r0
	strb r0, [r3]
	pop {r3, r4}
	bx lr
_02008D9C:
	add r1, r3, #0
	add r1, #0x47
	ldrb r1, [r1]
	add r3, #0x47
	add r0, r1, r0
	strb r0, [r3]
	pop {r3, r4}
	bx lr
_02008DAC:
	mov r1, #0x70
	ldrsh r1, [r3, r1]
	add r3, #0x70
	add r0, r1, r0
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_02008DBA:
	mov r1, #0x72
	ldrsh r1, [r3, r1]
	add r3, #0x72
	add r0, r1, r0
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_02008DC8:
	mov r1, #0x74
	ldrsh r1, [r3, r1]
	add r3, #0x74
	add r0, r1, r0
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_02008DD6:
	mov r1, #0x76
	ldrsh r1, [r3, r1]
	add r3, #0x76
	add r0, r1, r0
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_02008DE4:
	ldr r4, [r3, #0x54]
	mov r2, #0x7c
	add r1, r4, #0
	bic r1, r2
	lsl r2, r4, #0x19
	lsr r2, r2, #0x1b
	add r0, r2, r0
	lsl r0, r0, #0x1b
	lsr r0, r0, #0x19
	orr r0, r1
	str r0, [r3, #0x54]
	pop {r3, r4}
	bx lr
_02008DFE:
	ldr r4, [r3, #0x50]
	mov r2, #0x1f
	add r1, r4, #0
	bic r1, r2
	lsl r2, r4, #0x1b
	lsr r2, r2, #0x1b
	add r2, r2, r0
	mov r0, #0x1f
	and r0, r2
	orr r0, r1
	str r0, [r3, #0x50]
	pop {r3, r4}
	bx lr
_02008E18:
	ldr r2, [r3, #0x50]
	ldr r1, _02009064 ; =0xFFFFFC1F
	and r1, r2
	lsl r2, r2, #0x16
	lsr r2, r2, #0x1b
	add r0, r2, r0
	lsl r0, r0, #0x1b
	lsr r0, r0, #0x16
	orr r0, r1
	str r0, [r3, #0x50]
	pop {r3, r4}
	bx lr
_02008E30:
	ldr r2, [r3, #0x50]
	ldr r1, _02009068 ; =0xFFFF83FF
	and r1, r2
	lsl r2, r2, #0x11
	lsr r2, r2, #0x1b
	add r0, r2, r0
	lsl r0, r0, #0x1b
	lsr r0, r0, #0x11
	orr r0, r1
	str r0, [r3, #0x50]
	pop {r3, r4}
	bx lr
_02008E48:
	ldr r2, [r3, #0x50]
	ldr r1, _0200906C ; =0xFFF07FFF
	and r1, r2
	lsl r2, r2, #0xc
	lsr r2, r2, #0x1b
	add r0, r2, r0
	lsl r0, r0, #0x1b
	lsr r0, r0, #0xc
	orr r0, r1
	str r0, [r3, #0x50]
	pop {r3, r4}
	bx lr
_02008E60:
	ldr r2, [r3, #0x50]
	ldr r1, _02009070 ; =0xFE0FFFFF
	and r1, r2
	lsl r2, r2, #7
	lsr r2, r2, #0x1b
	add r0, r2, r0
	lsl r0, r0, #0x1b
	lsr r0, r0, #7
	orr r0, r1
	str r0, [r3, #0x50]
	pop {r3, r4}
	bx lr
_02008E78:
	ldr r2, [r3, #0x50]
	ldr r1, _02009074 ; =0xC1FFFFFF
	and r1, r2
	lsl r2, r2, #2
	lsr r2, r2, #0x1b
	add r0, r2, r0
	lsl r0, r0, #0x1b
	lsr r0, r0, #2
	orr r0, r1
	str r0, [r3, #0x50]
	pop {r3, r4}
	bx lr
_02008E90:
	ldr r2, [r3, #0x54]
	ldr r1, _02009078 ; =0xFFFFEFFF
	and r1, r2
	lsl r2, r2, #0x13
	lsr r2, r2, #0x1f
	add r0, r2, r0
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x13
	orr r0, r1
	str r0, [r3, #0x54]
	mov r0, #1
	ldr r1, [r3]
	lsl r0, r0, #8
	orr r0, r1
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02008EB2:
	ldr r1, [r3, #0x4c]
	add r0, r1, r0
	str r0, [r3, #0x4c]
	mov r0, #1
	ldr r1, [r3]
	lsl r0, r0, #8
	orr r0, r1
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02008EC6:
	add r1, r3, #0
	add r1, #0x48
	ldrb r1, [r1]
	add r1, r1, r0
	add r0, r3, #0
	add r0, #0x48
	strb r1, [r0]
	mov r0, #1
	ldr r1, [r3]
	lsl r0, r0, #8
	orr r0, r1
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02008EE2:
	add r1, r3, #0
	add r1, #0x49
	ldrb r1, [r1]
	add r1, r1, r0
	add r0, r3, #0
	add r0, #0x49
	strb r1, [r0]
	mov r0, #1
	ldr r1, [r3]
	lsl r0, r0, #8
	orr r0, r1
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02008EFE:
	add r1, r3, #0
	add r1, #0x4a
	ldrb r1, [r1]
	add r3, #0x4a
	add r0, r1, r0
	strb r0, [r3]
	pop {r3, r4}
	bx lr
_02008F0E:
	ldr r2, [r3, #0x54]
	ldr r1, _0200907C ; =0xFFFFFDFF
	and r1, r2
	lsl r2, r2, #0x16
	lsr r2, r2, #0x1f
	add r0, r2, r0
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x16
	orr r0, r1
	str r0, [r3, #0x54]
	ldr r1, [r3]
	mov r0, #0x80
	orr r0, r1
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02008F2E:
	ldr r2, [r3, #0x54]
	ldr r1, _02009080 ; =0xFFFFFBFF
	and r1, r2
	lsl r2, r2, #0x15
	lsr r2, r2, #0x1f
	add r0, r2, r0
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x15
	orr r0, r1
	str r0, [r3, #0x54]
	ldr r1, [r3]
	mov r0, #0x80
	orr r0, r1
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02008F4E:
	ldr r2, [r3, #0x54]
	ldr r1, _02009084 ; =0xFFFFF7FF
	and r1, r2
	lsl r2, r2, #0x14
	lsr r2, r2, #0x1f
	add r0, r2, r0
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x14
	orr r0, r1
	str r0, [r3, #0x54]
	pop {r3, r4}
	bx lr
_02008F66:
	add r1, r3, #0
	add r1, #0x5b
	ldrb r1, [r1]
	add r3, #0x5b
	add r0, r1, r0
	strb r0, [r3]
	pop {r3, r4}
	bx lr
_02008F76:
	ldr r2, [r3, #0x54]
	ldr r1, _02009088 ; =0xFFFE1FFF
	and r1, r2
	lsl r2, r2, #0xf
	lsr r2, r2, #0x1c
	add r0, r2, r0
	lsl r0, r0, #0x1c
	lsr r0, r0, #0xf
	orr r0, r1
	str r0, [r3, #0x54]
	ldr r1, [r3]
	mov r0, #0x80
	orr r0, r1
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02008F96:
	mov r1, #0x6e
	ldrsb r1, [r3, r1]
	add r3, #0x6e
	add r0, r1, r0
	strb r0, [r3]
	pop {r3, r4}
	bx lr
_02008FA4:
	add r1, r3, #0
	add r1, #0x6c
	ldrh r4, [r1]
	mov r2, #3
	add r1, r4, #0
	bic r1, r2
	lsl r2, r4, #0x1e
	lsr r2, r2, #0x1e
	add r0, r2, r0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	mov r2, #3
	and r0, r2
	orr r1, r0
	add r0, r3, #0
	add r0, #0x6c
	strh r1, [r0]
	ldr r0, [r3]
	add r2, #0xfd
	orr r0, r2
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02008FD2:
	add r1, r3, #0
	add r1, #0x6c
	ldrh r4, [r1]
	mov r2, #4
	add r3, #0x6c
	add r1, r4, #0
	bic r1, r2
	lsl r2, r4, #0x1d
	lsr r2, r2, #0x1f
	add r0, r2, r0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x1d
	orr r0, r1
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_02008FF6:
	add r1, r3, #0
	add r1, #0x6c
	ldrh r4, [r1]
	mov r2, #8
	add r3, #0x6c
	add r1, r4, #0
	bic r1, r2
	lsl r2, r4, #0x1c
	lsr r2, r2, #0x1f
	add r0, r2, r0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x1c
	orr r0, r1
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_0200901A:
	add r1, r3, #0
	add r1, #0x6c
	ldrh r4, [r1]
	mov r2, #0x10
	add r3, #0x6c
	add r1, r4, #0
	bic r1, r2
	lsl r2, r4, #0x1b
	lsr r2, r2, #0x1f
	add r0, r2, r0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x1b
	orr r0, r1
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_0200903E:
	add r1, r3, #0
	add r1, #0x6c
	ldrh r4, [r1]
	mov r2, #0x60
	add r3, #0x6c
	add r1, r4, #0
	bic r1, r2
	lsl r2, r4, #0x19
	lsr r2, r2, #0x1e
	add r0, r2, r0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	lsl r0, r0, #0x1e
	lsr r0, r0, #0x19
	orr r0, r1
	strh r0, [r3]
_0200905E:
	pop {r3, r4}
	bx lr
	nop
_02009064: .word 0xFFFFFC1F
_02009068: .word 0xFFFF83FF
_0200906C: .word 0xFFF07FFF
_02009070: .word 0xFE0FFFFF
_02009074: .word 0xC1FFFFFF
_02009078: .word 0xFFFFEFFF
_0200907C: .word 0xFFFFFDFF
_02009080: .word 0xFFFFFBFF
_02009084: .word 0xFFFFF7FF
_02009088: .word 0xFFFE1FFF
	thumb_func_end sub_02008C2C

	thumb_func_start sub_0200908C
sub_0200908C: ; 0x0200908C
	push {r4, r5}
	ldr r5, [r0, #0x54]
	mov r4, #2
	orr r4, r5
	str r4, [r0, #0x54]
	add r4, r0, #0
	add r4, #0x44
	strb r1, [r4]
	add r1, r0, #0
	add r1, #0x45
	strb r2, [r1]
	add r1, r0, #0
	add r1, #0x46
	strb r3, [r1]
	ldr r1, [sp, #8]
	add r0, #0x47
	strb r1, [r0]
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end sub_0200908C

	thumb_func_start sub_020090B4
sub_020090B4: ; 0x020090B4
	push {r4, r5}
	mov r4, #1
	ldr r5, [r0, #0x54]
	lsl r4, r4, #0xc
	orr r4, r5
	str r4, [r0, #0x54]
	add r4, r0, #0
	add r4, #0x48
	strb r1, [r4]
	add r1, r0, #0
	add r1, #0x49
	strb r2, [r1]
	add r1, r0, #0
	mov r2, #0
	add r1, #0x4a
	strb r2, [r1]
	add r1, r0, #0
	add r1, #0x4b
	strb r3, [r1]
	ldr r1, [sp, #8]
	str r1, [r0, #0x4c]
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end sub_020090B4

	thumb_func_start sub_020090E4
sub_020090E4: ; 0x020090E4
	push {r4, r5, r6, r7}
	add r4, r0, #0
	add r0, r1, #0
	add r5, r2, #0
	lsl r0, r0, #0x18
	lsr r6, r0, #0x18
	lsl r0, r5, #0x18
	lsr r5, r0, #0x18
	lsl r0, r3, #0x18
	ldr r2, [sp, #0x10]
	mov r1, #0
	lsr r0, r0, #0x18
_020090FC:
	ldr r3, [r4]
	lsl r3, r3, #0x1f
	lsr r3, r3, #0x1f
	beq _0200912A
	mov r3, #1
	ldr r7, [r4, #0x54]
	lsl r3, r3, #0xc
	orr r3, r7
	str r3, [r4, #0x54]
	add r3, r4, #0
	add r3, #0x48
	strb r6, [r3]
	add r3, r4, #0
	add r3, #0x49
	add r7, r4, #0
	strb r5, [r3]
	add r7, #0x4a
	mov r3, #0
	strb r3, [r7]
	add r3, r4, #0
	add r3, #0x4b
	strb r0, [r3]
	str r2, [r4, #0x4c]
_0200912A:
	add r1, r1, #1
	add r4, #0xac
	cmp r1, #4
	blt _020090FC
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end sub_020090E4

	thumb_func_start sub_02009138
sub_02009138: ; 0x02009138
	ldr r0, [r0, #0x54]
	lsl r0, r0, #0x13
	lsr r0, r0, #0x1f
	cmp r0, #1
	bne _02009146
	mov r0, #1
	bx lr
_02009146:
	mov r0, #0
	bx lr
	.align 2, 0
	thumb_func_end sub_02009138

	thumb_func_start sub_0200914C
sub_0200914C: ; 0x0200914C
	mov r2, #0x28
	sub r2, r2, r1
	mov r1, #0x36
	ldrsh r1, [r0, r1]
	mul r1, r2
	asr r1, r1, #8
	sub r1, r2, r1
	strh r1, [r0, #0x2e]
	bx lr
	.align 2, 0
	thumb_func_end sub_0200914C

	thumb_func_start sub_02009160
sub_02009160: ; 0x02009160
	push {r4, r5, r6, r7}
	add r1, r0, #0
	add r1, #0x58
	ldrb r1, [r1]
	cmp r1, #0
	beq _02009256
	add r1, r0, #0
	add r1, #0x5a
	ldrb r1, [r1]
	cmp r1, #0
	bne _0200924A
	add r1, r0, #0
	add r1, #0x59
	ldrb r1, [r1]
	add r6, r0, #0
	add r6, #0x59
	add r2, r1, #1
	add r1, r0, #0
	add r1, #0x59
	strb r2, [r1]
	add r1, r0, #0
	add r1, #0x59
	ldrb r3, [r1]
	lsl r1, r3, #2
	add r2, r0, r1
	mov r1, #0x84
	ldrsb r4, [r2, r1]
	sub r1, #0x85
	cmp r4, r1
	bge _020091FC
	mov r2, #0
	sub r1, r2, #2
_020091A0:
	add r4, r0, r3
	add r4, #0x5c
	ldrb r4, [r4]
	add r3, r0, r3
	add r3, #0x5c
	add r4, r4, #1
	strb r4, [r3]
	add r3, r0, #0
	add r3, #0x59
	ldrb r5, [r3]
	lsl r3, r5, #2
	add r4, r0, r3
	add r3, r4, #0
	add r7, r0, r5
	add r3, #0x85
	add r7, #0x5c
	ldrb r3, [r3]
	ldrb r7, [r7]
	cmp r3, r7
	beq _020091CC
	cmp r3, #0
	bne _020091DA
_020091CC:
	add r3, r0, r5
	add r3, #0x5c
	strb r2, [r3]
	ldrb r3, [r6]
	add r3, r3, #1
	strb r3, [r6]
	b _020091E6
_020091DA:
	mov r3, #0x84
	ldrsb r3, [r4, r3]
	sub r4, r1, r3
	add r3, r0, #0
	add r3, #0x59
	strb r4, [r3]
_020091E6:
	add r3, r0, #0
	add r3, #0x59
	ldrb r3, [r3]
	lsl r4, r3, #2
	add r5, r0, r4
	mov r4, #0x84
	ldrsb r4, [r5, r4]
	mov r5, #0
	mvn r5, r5
	cmp r4, r5
	blt _020091A0
_020091FC:
	cmp r3, #0xa
	bhs _02009208
	mov r1, #0
	mvn r1, r1
	cmp r4, r1
	bne _0200921C
_02009208:
	add r1, r0, #0
	mov r2, #0
	add r1, #0x5b
	strb r2, [r1]
	add r1, r0, #0
	add r1, #0x58
	strb r2, [r1]
	strh r2, [r0, #0x2c]
	pop {r4, r5, r6, r7}
	bx lr
_0200921C:
	add r1, r0, #0
	add r1, #0x5b
	strb r4, [r1]
	add r1, r0, #0
	add r1, #0x59
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r0, r1
	add r1, #0x85
	ldrb r2, [r1]
	add r1, r0, #0
	add r1, #0x5a
	strb r2, [r1]
	add r1, r0, #0
	add r1, #0x59
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r2, r0, r1
	mov r1, #0x86
	ldrsb r1, [r2, r1]
	strh r1, [r0, #0x2c]
	pop {r4, r5, r6, r7}
	bx lr
_0200924A:
	add r1, r0, #0
	add r1, #0x5a
	ldrb r1, [r1]
	add r0, #0x5a
	sub r1, r1, #1
	strb r1, [r0]
_02009256:
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end sub_02009160

	thumb_func_start sub_0200925C
sub_0200925C: ; 0x0200925C
	ldr r3, _02009260 ; =sub_02009160
	bx r3
	.align 2, 0
_02009260: .word sub_02009160
	thumb_func_end sub_0200925C

	thumb_func_start sub_02009264
sub_02009264: ; 0x02009264
	mov r2, #1
	strb r2, [r0]
	mov r3, #0
	strb r3, [r0, #2]
	ldrsb r2, [r1, r3]
	strb r2, [r0, #1]
	ldrb r2, [r1, #1]
	strb r2, [r0, #3]
	str r1, [r0, #0x10]
	add r2, r3, #0
_02009278:
	add r1, r0, r3
	add r3, r3, #1
	strb r2, [r1, #4]
	cmp r3, #0xa
	blt _02009278
	bx lr
	thumb_func_end sub_02009264

	thumb_func_start sub_02009284
sub_02009284: ; 0x02009284
	push {r4, r5, r6, r7}
	ldrb r1, [r0]
	cmp r1, #0
	beq _0200931A
	add r3, r0, #2
	ldr r4, [r0, #0x10]
	cmp r1, #0
	beq _02009314
	ldrb r1, [r0, #3]
	cmp r1, #0
	bne _02009310
	ldrb r1, [r3]
	add r1, r1, #1
	strb r1, [r3]
	ldrb r2, [r3]
	mov r1, #0
	mvn r1, r1
	lsl r5, r2, #2
	ldrsb r6, [r4, r5]
	cmp r6, r1
	bge _020092EC
	mov r1, #0
_020092B0:
	add r5, r0, r2
	ldrb r2, [r5, #4]
	add r2, r2, #1
	strb r2, [r5, #4]
	ldrb r2, [r3]
	add r5, r0, r2
	lsl r2, r2, #2
	add r2, r4, r2
	ldrb r7, [r2, #1]
	ldrb r6, [r5, #4]
	cmp r7, r6
	beq _020092CC
	cmp r7, #0
	bne _020092D2
_020092CC:
	strb r1, [r5, #4]
	add r3, r3, #1
	b _020092DE
_020092D2:
	mov r5, #0
	ldrsb r5, [r2, r5]
	mov r2, #1
	mvn r2, r2
	sub r2, r2, r5
	strb r2, [r3]
_020092DE:
	ldrb r2, [r3]
	mov r6, #0
	mvn r6, r6
	lsl r5, r2, #2
	ldrsb r7, [r4, r5]
	cmp r7, r6
	blt _020092B0
_020092EC:
	ldrsb r5, [r4, r5]
	mov r1, #0
	mvn r1, r1
	cmp r5, r1
	beq _020092FA
	cmp r2, #0xa
	blo _02009302
_020092FA:
	mov r1, #0
	strb r1, [r0, #1]
	strb r1, [r0]
	b _02009314
_02009302:
	strb r5, [r0, #1]
	ldrb r1, [r3]
	lsl r1, r1, #2
	add r1, r4, r1
	ldrb r1, [r1, #1]
	strb r1, [r0, #3]
	b _02009314
_02009310:
	sub r1, r1, #1
	strb r1, [r0, #3]
_02009314:
	ldrb r0, [r0, #1]
	pop {r4, r5, r6, r7}
	bx lr
_0200931A:
	mov r0, #0
	mvn r0, r0
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end sub_02009284

	thumb_func_start sub_02009324
sub_02009324: ; 0x02009324
	ldr r2, [r0]
	mov r1, #0x80
	orr r2, r1
	add r1, #0x80
	orr r1, r2
	str r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_02009324

	thumb_func_start sub_02009334
sub_02009334: ; 0x02009334
	push {r3, r4}
	add r2, r0, #0
	add r3, r2, #0
	add r4, r2, #4
	add r3, #0x14
	ldmia r4!, {r0, r1}
	stmia r3!, {r0, r1}
	ldmia r4!, {r0, r1}
	stmia r3!, {r0, r1}
	add r0, r2, #0
	add r0, #0x6c
	ldrh r1, [r0]
	add r0, r2, #0
	add r0, #0x78
	strh r1, [r0]
	add r0, r2, #0
	add r0, #0x6e
	ldrh r1, [r0]
	add r0, r2, #0
	add r0, #0x7a
	strh r1, [r0]
	add r0, r2, #0
	add r0, #0x70
	ldrh r1, [r0]
	add r0, r2, #0
	add r0, #0x7c
	strh r1, [r0]
	add r0, r2, #0
	add r0, #0x72
	ldrh r1, [r0]
	add r0, r2, #0
	add r0, #0x7e
	strh r1, [r0]
	add r0, r2, #0
	add r0, #0x74
	ldrh r1, [r0]
	add r0, r2, #0
	add r0, #0x80
	strh r1, [r0]
	add r0, r2, #0
	add r0, #0x76
	ldrh r0, [r0]
	add r2, #0x82
	strh r0, [r2]
	pop {r3, r4}
	bx lr
	thumb_func_end sub_02009334

	thumb_func_start sub_02009390
sub_02009390: ; 0x02009390
	push {r3, r4}
	add r2, r0, #0
	add r4, r2, #0
	add r4, #0x14
	add r3, r2, #4
	ldmia r4!, {r0, r1}
	stmia r3!, {r0, r1}
	ldmia r4!, {r0, r1}
	stmia r3!, {r0, r1}
	add r0, r2, #0
	add r0, #0x78
	ldrh r1, [r0]
	add r0, r2, #0
	add r0, #0x6c
	strh r1, [r0]
	add r0, r2, #0
	add r0, #0x7a
	ldrh r1, [r0]
	add r0, r2, #0
	add r0, #0x6e
	strh r1, [r0]
	add r0, r2, #0
	add r0, #0x7c
	ldrh r1, [r0]
	add r0, r2, #0
	add r0, #0x70
	strh r1, [r0]
	add r0, r2, #0
	add r0, #0x7e
	ldrh r1, [r0]
	add r0, r2, #0
	add r0, #0x72
	strh r1, [r0]
	add r0, r2, #0
	add r0, #0x80
	ldrh r1, [r0]
	add r0, r2, #0
	add r0, #0x74
	strh r1, [r0]
	add r0, r2, #0
	add r0, #0x82
	ldrh r1, [r0]
	add r0, r2, #0
	add r0, #0x76
	strh r1, [r0]
	ldr r1, [r2]
	mov r0, #0x80
	orr r1, r0
	add r0, #0x80
	orr r0, r1
	str r0, [r2]
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end sub_02009390

	thumb_func_start sub_020093FC
sub_020093FC: ; 0x020093FC
	mov r3, #0xbb
	lsl r3, r3, #2
	str r1, [r0, r3]
	add r1, r3, #4
	str r2, [r0, r1]
	bx lr
	thumb_func_end sub_020093FC

	thumb_func_start sub_02009408
sub_02009408: ; 0x02009408
	mov r3, #0xbd
	lsl r3, r3, #2
	str r1, [r0, r3]
	add r1, r3, #4
	str r2, [r0, r1]
	bx lr
	thumb_func_end sub_02009408

	thumb_func_start sub_02009414
sub_02009414: ; 0x02009414
	add r0, r0, #4
	bx lr
	thumb_func_end sub_02009414

	thumb_func_start sub_02009418
sub_02009418: ; 0x02009418
	push {r4, lr}
	add r4, r0, #0
	ldr r0, _020094A8 ; =0x00000331
	ldrb r1, [r4, r0]
	cmp r1, #0
	beq _02009466
	mov r1, #0
	strb r1, [r4, r0]
	sub r0, #0x81
	add r0, r4, r0
	bl sub_020B8008
	mov r3, #0xc2
	lsl r3, r3, #2
	mov r1, #0x20
	strh r1, [r4, r3]
	add r0, r3, #2
	strh r1, [r4, r0]
	add r0, r3, #0
	sub r0, #0x18
	ldr r1, [r4, r0]
	add r0, r3, #0
	add r0, #0x10
	str r1, [r4, r0]
	add r0, r3, #0
	sub r0, #0xc
	ldr r1, [r4, r0]
	add r0, r3, #0
	add r0, #0x14
	str r1, [r4, r0]
	add r1, r3, #0
	sub r1, #0x1c
	add r0, r4, r3
	sub r3, #0x58
	ldr r1, [r4, r1]
	mov r2, #0
	add r3, r4, r3
	bl sub_020B82CC
_02009466:
	ldr r0, _020094AC ; =0x00000332
	ldrb r1, [r4, r0]
	cmp r1, #0
	beq _020094A6
	mov r1, #0
	strb r1, [r4, r0]
	sub r0, #0x5e
	add r0, r4, r0
	bl sub_020B804C
	mov r3, #0xbe
	lsl r3, r3, #2
	add r0, r3, #0
	ldr r1, [r4, r3]
	add r0, #0x30
	str r1, [r4, r0]
	add r0, r3, #0
	add r0, #8
	ldr r1, [r4, r0]
	add r0, r3, #0
	add r0, #0x34
	str r1, [r4, r0]
	add r0, r3, #0
	sub r1, r3, #4
	add r0, #0x28
	sub r3, #0x24
	ldr r1, [r4, r1]
	add r0, r4, r0
	mov r2, #0
	add r3, r4, r3
	bl sub_020B86CC
_020094A6:
	pop {r4, pc}
	.align 2, 0
_020094A8: .word 0x00000331
_020094AC: .word 0x00000332
	thumb_func_end sub_02009418

	thumb_func_start sub_020094B0
sub_020094B0: ; 0x020094B0
	ldr r2, _020094B8 ; =0x00000333
	strb r1, [r0, r2]
	bx lr
	nop
_020094B8: .word 0x00000333
	thumb_func_end sub_020094B0

	thumb_func_start sub_020094BC
sub_020094BC: ; 0x020094BC
	push {r4, lr}
	add r4, r0, #0
	bne _020094C6
	bl GF_AssertFail
_020094C6:
	ldr r0, [r4]
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x1f
	beq _020094D2
	mov r0, #1
	pop {r4, pc}
_020094D2:
	mov r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020094BC

	thumb_func_start sub_020094D8
sub_020094D8: ; 0x020094D8
	mov r2, #0xcd
	lsl r2, r2, #2
	ldr r3, [r0, r2]
	orr r1, r3
	str r1, [r0, r2]
	bx lr
	thumb_func_end sub_020094D8

	thumb_func_start sub_020094E4
sub_020094E4: ; 0x020094E4
	push {r3, r4}
	mov r3, #0xcd
	lsl r3, r3, #2
	mov r2, #0
	mvn r2, r2
	ldr r4, [r0, r3]
	eor r1, r2
	and r1, r4
	str r1, [r0, r3]
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end sub_020094E4

	thumb_func_start sub_020094FC
sub_020094FC: ; 0x020094FC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x5c
	add r6, r0, #0
	mov r0, #0
	str r0, [sp, #0x48]
	str r0, [sp, #0x54]
	ldr r0, [sp, #0x48]
	str r6, [sp, #0x44]
	str r0, [sp, #0x38]
_0200950E:
	ldr r0, [sp, #0x44]
	ldr r1, [r0]
	lsl r0, r1, #0x1f
	lsr r0, r0, #0x1f
	beq _0200951E
	lsl r0, r1, #0x18
	lsr r0, r0, #0x1f
	bne _02009520
_0200951E:
	b _0200991A
_02009520:
	mov r0, #0x80
	bic r1, r0
	ldr r0, [sp, #0x44]
	mov r2, #0xba
	str r1, [r0]
	mov r0, #1
	str r0, [sp, #0x48]
	ldr r0, [sp, #0x44]
	ldr r1, [sp, #0x44]
	lsl r2, r2, #2
	ldrh r0, [r0, #4]
	ldrh r1, [r1, #6]
	ldr r2, [r6, r2]
	bl sub_02007524
	add r1, sp, #0x58
	str r0, [sp, #0x4c]
	bl sub_020B70A8
	ldr r0, [sp, #0x58]
	mov r1, #0xc3
	ldr r0, [r0, #4]
	lsl r1, r1, #2
	str r0, [r6, r1]
	ldr r0, [sp, #0x58]
	ldr r2, [r0, #8]
	add r0, r1, #4
	str r2, [r6, r0]
	ldr r0, [sp, #0x58]
	add r1, #8
	ldr r0, [r0, #0xc]
	str r0, [r6, r1]
	ldr r0, [sp, #0x58]
	ldr r1, [sp, #0x44]
	ldr r0, [r0, #0x14]
	ldrh r1, [r1, #4]
	str r0, [sp, #0x50]
	bl sub_02009D28
	ldr r0, [sp, #0x44]
	ldr r1, [sp, #0x50]
	bl sub_02009B48
	ldr r0, [sp, #0x54]
	cmp r0, #3
	beq _0200957E
	b _020097AC
_0200957E:
	mov r5, #0
	add r0, r5, #0
	str r5, [sp, #0x14]
	str r0, [sp, #0x24]
_02009586:
	ldr r0, [sp, #0x14]
	mov r1, #0x4f
	sub r2, r1, r0
	mov r0, #0x50
	add r1, r2, #0
	mul r1, r0
	ldr r0, [sp, #0x50]
	mov r4, #0
	add r0, r0, r1
	str r0, [sp, #0x20]
	ldr r1, [sp, #0x50]
	ldr r0, [sp, #0x24]
	add r7, r1, r0
	ldr r0, [sp, #0x20]
	str r7, [sp, #0x18]
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0x14]
	sub r0, r0, #1
	lsl r0, r0, #7
	str r0, [sp, #0x10]
_020095AE:
	cmp r4, #0x28
	bge _0200969A
	ldr r0, [sp, #0x44]
	ldr r1, [r0, #0x54]
	lsl r0, r1, #0x16
	lsr r0, r0, #0x1f
	beq _020095DE
	lsl r1, r1, #0x15
	lsr r1, r1, #0x1f
	beq _020095DE
	mov r0, #0x27
	sub r1, r0, r4
	ldr r0, [sp, #0x1c]
	ldrb r0, [r0, r1]
	bl sub_02009B34
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r1, [r6, r1]
	add r1, r5, r1
	add r1, r4, r1
	add r1, #0x50
	strb r0, [r1]
	b _02009786
_020095DE:
	cmp r0, #0
	beq _020095FE
	mov r0, #0x27
	sub r1, r0, r4
	ldr r0, [sp, #0x18]
	ldrb r0, [r0, r1]
	bl sub_02009B34
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r1, [r6, r1]
	add r1, r5, r1
	add r1, r4, r1
	add r1, #0x50
	strb r0, [r1]
	b _02009786
_020095FE:
	ldr r0, [sp, #0x44]
	ldr r0, [r0, #0x54]
	lsl r1, r0, #0x15
	lsr r1, r1, #0x1f
	beq _0200961C
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r0, [sp, #0x20]
	ldr r1, [r6, r1]
	ldrb r0, [r0]
	add r1, r5, r1
	add r1, r4, r1
	add r1, #0x50
	strb r0, [r1]
	b _02009786
_0200961C:
	lsl r0, r0, #0xf
	lsr r0, r0, #0x1c
	str r0, [sp, #0xc]
	beq _02009688
	ldr r1, [sp, #0xc]
	ldr r0, [sp, #0x14]
	lsl r1, r1, #1
	bl sub_020F2BA4
	cmp r1, #0
	beq _0200964C
	mov r0, #0xbf
	lsl r0, r0, #2
	ldr r1, [r6, r0]
	ldr r0, [sp, #0x10]
	add r0, r0, r1
	add r0, r4, r0
	add r0, #0x50
	add r1, r5, r1
	add r1, r4, r1
	ldrb r0, [r0]
	add r1, #0x50
	strb r0, [r1]
	b _02009786
_0200964C:
	ldr r1, [sp, #0xc]
	add r0, r4, #0
	bl sub_020F2BA4
	cmp r1, #0
	beq _0200966E
	mov r0, #0xbf
	lsl r0, r0, #2
	ldr r0, [r6, r0]
	add r2, r5, r0
	add r0, r2, r4
	add r0, #0x4f
	ldrb r1, [r0]
	add r0, r2, r4
	add r0, #0x50
	strb r1, [r0]
	b _02009786
_0200966E:
	ldrb r1, [r7]
	mov r0, #0xf
	and r1, r0
	lsl r0, r1, #4
	orr r0, r1
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r1, [r6, r1]
	add r1, r5, r1
	add r1, r4, r1
	add r1, #0x50
	strb r0, [r1]
	b _02009786
_02009688:
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r1, [r6, r1]
	ldrb r0, [r7]
	add r1, r5, r1
	add r1, r4, r1
	add r1, #0x50
	strb r0, [r1]
	b _02009786
_0200969A:
	ldr r0, [sp, #0x44]
	ldr r1, [r0, #0x54]
	lsl r0, r1, #0x16
	lsr r0, r0, #0x1f
	beq _020096CA
	lsl r1, r1, #0x15
	lsr r1, r1, #0x1f
	beq _020096CA
	add r1, r4, #0
	sub r1, #0x28
	mov r0, #0x4f
	sub r1, r0, r1
	ldr r0, [sp, #0x1c]
	ldrb r0, [r0, r1]
	bl sub_02009B34
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r1, [r6, r1]
	add r1, r5, r1
	add r2, r4, r1
	ldr r1, _02009940 ; =0x00002828
	strb r0, [r2, r1]
	b _02009786
_020096CA:
	cmp r0, #0
	beq _020096EE
	add r1, r4, #0
	sub r1, #0x28
	mov r0, #0x4f
	sub r1, r0, r1
	ldr r0, [sp, #0x18]
	ldrb r0, [r0, r1]
	bl sub_02009B34
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r1, [r6, r1]
	add r1, r5, r1
	add r2, r4, r1
	ldr r1, _02009940 ; =0x00002828
	strb r0, [r2, r1]
	b _02009786
_020096EE:
	ldr r0, [sp, #0x44]
	ldr r0, [r0, #0x54]
	lsl r1, r0, #0x15
	lsr r1, r1, #0x1f
	beq _0200970C
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r0, [sp, #0x20]
	ldr r1, [r6, r1]
	ldrb r0, [r0]
	add r1, r5, r1
	add r2, r4, r1
	ldr r1, _02009940 ; =0x00002828
	strb r0, [r2, r1]
	b _02009786
_0200970C:
	lsl r0, r0, #0xf
	lsr r0, r0, #0x1c
	str r0, [sp, #8]
	beq _02009776
	ldr r1, [sp, #8]
	ldr r0, [sp, #0x14]
	lsl r1, r1, #1
	bl sub_020F2BA4
	cmp r1, #0
	beq _0200973C
	mov r0, #0xbf
	lsl r0, r0, #2
	ldr r1, [r6, r0]
	ldr r0, [sp, #0x10]
	add r0, r0, r1
	add r2, r4, r0
	ldr r0, _02009940 ; =0x00002828
	add r1, r5, r1
	ldrb r0, [r2, r0]
	add r2, r4, r1
	ldr r1, _02009940 ; =0x00002828
	strb r0, [r2, r1]
	b _02009786
_0200973C:
	ldr r1, [sp, #8]
	add r0, r4, #0
	bl sub_020F2BA4
	cmp r1, #0
	beq _0200975C
	mov r0, #0xbf
	lsl r0, r0, #2
	ldr r0, [r6, r0]
	ldr r1, _02009944 ; =0x00002827
	add r0, r5, r0
	add r0, r0, r4
	ldrb r2, [r0, r1]
	add r1, r1, #1
	strb r2, [r0, r1]
	b _02009786
_0200975C:
	ldrb r1, [r7]
	mov r0, #0xf
	and r1, r0
	lsl r0, r1, #4
	orr r0, r1
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r1, [r6, r1]
	add r1, r5, r1
	add r2, r4, r1
	ldr r1, _02009940 ; =0x00002828
	strb r0, [r2, r1]
	b _02009786
_02009776:
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r1, [r6, r1]
	ldrb r0, [r7]
	add r1, r5, r1
	add r2, r4, r1
	ldr r1, _02009940 ; =0x00002828
	strb r0, [r2, r1]
_02009786:
	ldr r0, [sp, #0x20]
	add r4, r4, #1
	add r0, r0, #1
	add r7, r7, #1
	str r0, [sp, #0x20]
	cmp r4, #0x50
	bge _02009796
	b _020095AE
_02009796:
	ldr r0, [sp, #0x24]
	add r5, #0x80
	add r0, #0x50
	str r0, [sp, #0x24]
	ldr r0, [sp, #0x14]
	add r0, r0, #1
	str r0, [sp, #0x14]
	cmp r0, #0x50
	bge _020097AA
	b _02009586
_020097AA:
	b _02009914
_020097AC:
	mov r0, #0
	str r0, [sp]
	str r0, [sp, #0x40]
	str r0, [sp, #0x3c]
_020097B4:
	ldr r0, [sp]
	mov r1, #0x4f
	sub r2, r1, r0
	mov r0, #0x50
	add r1, r2, #0
	mul r1, r0
	ldr r0, [sp, #0x50]
	mov r4, #0
	add r0, r0, r1
	str r0, [sp, #0x34]
	ldr r1, [sp, #0x50]
	ldr r0, [sp, #0x3c]
	add r7, r1, r0
	ldr r0, [sp, #0x34]
	ldr r1, [sp, #0x38]
	str r0, [sp, #0x30]
	ldr r0, [sp, #0x40]
	str r7, [sp, #0x2c]
	add r5, r1, r0
	ldr r0, [sp]
	sub r0, r0, #1
	lsl r1, r0, #7
	ldr r0, [sp, #0x38]
	add r0, r0, r1
	str r0, [sp, #0x28]
_020097E6:
	ldr r0, [sp, #0x44]
	ldr r1, [r0, #0x54]
	lsl r0, r1, #0x16
	lsr r0, r0, #0x1f
	beq _0200982E
	lsl r1, r1, #0x15
	lsr r1, r1, #0x1f
	beq _0200982E
	cmp r4, #0x28
	bge _02009812
	mov r0, #0x27
	sub r1, r0, r4
	ldr r0, [sp, #0x30]
	ldrb r0, [r0, r1]
	bl sub_02009B34
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r1, [r6, r1]
	add r1, r5, r1
	strb r0, [r4, r1]
	b _020098EC
_02009812:
	add r1, r4, #0
	sub r1, #0x28
	mov r0, #0x4f
	sub r1, r0, r1
	ldr r0, [sp, #0x30]
	ldrb r0, [r0, r1]
	bl sub_02009B34
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r1, [r6, r1]
	add r1, r5, r1
	strb r0, [r4, r1]
	b _020098EC
_0200982E:
	cmp r0, #0
	beq _0200986A
	cmp r4, #0x28
	bge _0200984E
	mov r0, #0x27
	sub r1, r0, r4
	ldr r0, [sp, #0x2c]
	ldrb r0, [r0, r1]
	bl sub_02009B34
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r1, [r6, r1]
	add r1, r5, r1
	strb r0, [r4, r1]
	b _020098EC
_0200984E:
	add r1, r4, #0
	sub r1, #0x28
	mov r0, #0x4f
	sub r1, r0, r1
	ldr r0, [sp, #0x2c]
	ldrb r0, [r0, r1]
	bl sub_02009B34
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r1, [r6, r1]
	add r1, r5, r1
	strb r0, [r4, r1]
	b _020098EC
_0200986A:
	ldr r0, [sp, #0x44]
	ldr r0, [r0, #0x54]
	lsl r1, r0, #0x15
	lsr r1, r1, #0x1f
	beq _02009884
	ldr r0, [sp, #0x34]
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r1, [r6, r1]
	ldrb r0, [r0]
	add r1, r5, r1
	strb r0, [r4, r1]
	b _020098EC
_02009884:
	lsl r0, r0, #0xf
	lsr r0, r0, #0x1c
	str r0, [sp, #4]
	beq _020098E0
	ldr r1, [sp, #4]
	ldr r0, [sp]
	lsl r1, r1, #1
	bl sub_020F2BA4
	cmp r1, #0
	beq _020098AC
	mov r0, #0xbf
	lsl r0, r0, #2
	ldr r0, [r6, r0]
	ldr r1, [sp, #0x28]
	add r1, r1, r0
	ldrb r1, [r4, r1]
	add r0, r5, r0
	strb r1, [r4, r0]
	b _020098EC
_020098AC:
	ldr r1, [sp, #4]
	add r0, r4, #0
	bl sub_020F2BA4
	cmp r1, #0
	beq _020098CA
	mov r0, #0xbf
	lsl r0, r0, #2
	ldr r0, [r6, r0]
	add r1, r5, r0
	add r0, r1, r4
	sub r0, r0, #1
	ldrb r0, [r0]
	strb r0, [r1, r4]
	b _020098EC
_020098CA:
	ldrb r1, [r7]
	mov r0, #0xf
	and r1, r0
	lsl r0, r1, #4
	orr r0, r1
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r1, [r6, r1]
	add r1, r5, r1
	strb r0, [r4, r1]
	b _020098EC
_020098E0:
	mov r1, #0xbf
	lsl r1, r1, #2
	ldr r1, [r6, r1]
	ldrb r0, [r7]
	add r1, r5, r1
	strb r0, [r4, r1]
_020098EC:
	ldr r0, [sp, #0x34]
	add r4, r4, #1
	add r0, r0, #1
	add r7, r7, #1
	str r0, [sp, #0x34]
	cmp r4, #0x50
	bge _020098FC
	b _020097E6
_020098FC:
	ldr r0, [sp, #0x40]
	add r0, #0x80
	str r0, [sp, #0x40]
	ldr r0, [sp, #0x3c]
	add r0, #0x50
	str r0, [sp, #0x3c]
	ldr r0, [sp]
	add r0, r0, #1
	str r0, [sp]
	cmp r0, #0x50
	bge _02009914
	b _020097B4
_02009914:
	ldr r0, [sp, #0x4c]
	bl sub_0201AB0C
_0200991A:
	ldr r0, [sp, #0x44]
	mov r1, #0xa
	add r0, #0xac
	str r0, [sp, #0x44]
	ldr r0, [sp, #0x38]
	lsl r1, r1, #0xa
	add r0, r0, r1
	str r0, [sp, #0x38]
	ldr r0, [sp, #0x54]
	add r0, r0, #1
	str r0, [sp, #0x54]
	cmp r0, #4
	bge _02009936
	b _0200950E
_02009936:
	ldr r1, _02009948 ; =0x00000331
	ldr r0, [sp, #0x48]
	strb r0, [r6, r1]
	add sp, #0x5c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02009940: .word 0x00002828
_02009944: .word 0x00002827
_02009948: .word 0x00000331
	thumb_func_end sub_020094FC

	thumb_func_start sub_0200994C
sub_0200994C: ; 0x0200994C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	add r5, r0, #0
	mov r0, #0
	str r0, [sp, #0xc]
	str r0, [sp, #0x14]
	ldr r0, [sp, #0xc]
	add r4, r5, #0
	str r0, [sp, #8]
_0200995E:
	ldr r1, [r4]
	lsl r0, r1, #0x1f
	lsr r0, r0, #0x1f
	beq _02009A3A
	lsl r0, r1, #0x17
	lsr r0, r0, #0x1f
	beq _02009A3A
	ldr r0, _02009B28 ; =0xFFFFFEFF
	mov r2, #0xba
	and r0, r1
	str r0, [r4]
	mov r0, #1
	str r0, [sp, #0xc]
	lsl r2, r2, #2
	ldrh r0, [r4, #4]
	ldrh r1, [r4, #8]
	ldr r2, [r5, r2]
	bl sub_02007524
	add r1, sp, #0x18
	str r0, [sp, #0x10]
	bl sub_020B7140
	ldr r0, [sp, #0x18]
	mov r7, #0
	ldr r1, [r0]
	mov r0, #0x32
	lsl r0, r0, #4
	str r1, [r5, r0]
	ldr r0, [sp, #0x18]
	add r2, r7, #0
	ldr r1, [r0, #0xc]
	ldr r0, [sp, #8]
	lsl r3, r0, #1
_020099A2:
	mov r6, #3
	lsl r6, r6, #8
	ldr r6, [r5, r6]
	ldrh r0, [r1]
	add r6, r3, r6
	add r7, r7, #1
	strh r0, [r2, r6]
	mov r6, #0xc1
	lsl r6, r6, #2
	ldrh r0, [r1]
	ldr r6, [r5, r6]
	add r1, r1, #2
	add r6, r3, r6
	strh r0, [r2, r6]
	add r2, r2, #2
	cmp r7, #0x10
	blt _020099A2
	ldr r0, [sp, #0x10]
	bl sub_0201AB0C
	add r0, r4, #0
	add r0, #0x6c
	ldrh r0, [r0]
	lsl r0, r0, #0x1e
	lsr r0, r0, #0x1e
	beq _02009A3A
	mov r2, #0xba
	mov r0, #0x72
	lsl r2, r2, #2
	add r1, r0, #0
	ldr r2, [r5, r2]
	add r1, #0x92
	bl sub_02007524
	add r1, sp, #0x18
	str r0, [sp, #4]
	bl sub_020B7140
	ldr r0, [sp, #0x18]
	mov r7, #0xc1
	ldr r0, [r0, #0xc]
	mov r1, #0
	lsl r7, r7, #2
_020099F8:
	add r6, r4, #0
	add r6, #0x6c
	ldrh r6, [r6]
	mov r2, #3
	lsl r2, r2, #8
	lsl r6, r6, #0x1e
	lsr r6, r6, #0x1e
	add r6, r6, #3
	lsl r6, r6, #4
	add r6, r1, r6
	ldrh r3, [r0]
	ldr r2, [r5, r2]
	lsl r6, r6, #1
	strh r3, [r2, r6]
	add r6, r4, #0
	add r6, #0x6c
	ldrh r6, [r6]
	ldrh r3, [r0]
	ldr r2, [r5, r7]
	lsl r6, r6, #0x1e
	lsr r6, r6, #0x1e
	add r6, r6, #3
	lsl r6, r6, #4
	add r6, r1, r6
	lsl r6, r6, #1
	add r1, r1, #1
	add r0, r0, #2
	strh r3, [r2, r6]
	cmp r1, #0x10
	blt _020099F8
	ldr r0, [sp, #4]
	bl sub_0201AB0C
_02009A3A:
	ldr r0, [r4]
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x1f
	beq _02009B08
	ldr r0, [r4, #0x54]
	lsl r0, r0, #0x13
	lsr r0, r0, #0x1f
	beq _02009B08
	add r0, r4, #0
	add r0, #0x4a
	ldrb r0, [r0]
	cmp r0, #0
	bne _02009AFA
	mov r0, #1
	str r0, [sp, #0xc]
	add r0, r4, #0
	add r0, #0x4b
	ldrb r1, [r0]
	add r0, r4, #0
	add r0, #0x4a
	strb r1, [r0]
	ldr r0, [sp, #8]
	mov r2, #0xc1
	lsl r1, r0, #1
	ldr r0, [r4, #0x4c]
	add r3, r4, #0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	lsl r2, r2, #2
	str r0, [sp]
	ldr r0, [r5, r2]
	sub r2, r2, #4
	add r3, #0x48
	ldr r2, [r5, r2]
	add r0, r0, r1
	add r1, r2, r1
	ldrb r3, [r3]
	mov r2, #0x10
	bl sub_02003DE8
	add r0, r4, #0
	add r0, #0x6c
	ldrh r0, [r0]
	lsl r0, r0, #0x1e
	lsr r0, r0, #0x1e
	beq _02009ABC
	add r0, r0, #3
	lsl r1, r0, #5
	ldr r0, [r4, #0x4c]
	mov r2, #0xc1
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	add r3, r4, #0
	lsl r2, r2, #2
	str r0, [sp]
	ldr r0, [r5, r2]
	sub r2, r2, #4
	add r3, #0x48
	ldr r2, [r5, r2]
	add r0, r0, r1
	add r1, r2, r1
	ldrb r3, [r3]
	mov r2, #0x10
	bl sub_02003DE8
_02009ABC:
	add r0, r4, #0
	add r0, #0x49
	ldrb r1, [r0]
	add r0, r4, #0
	add r0, #0x48
	ldrb r0, [r0]
	cmp r0, r1
	bne _02009AD6
	ldr r1, [r4, #0x54]
	ldr r0, _02009B2C ; =0xFFFFEFFF
	and r0, r1
	str r0, [r4, #0x54]
	b _02009B08
_02009AD6:
	cmp r0, r1
	bls _02009AEA
	add r0, r4, #0
	add r0, #0x48
	ldrb r0, [r0]
	sub r1, r0, #1
	add r0, r4, #0
	add r0, #0x48
	strb r1, [r0]
	b _02009B08
_02009AEA:
	add r0, r4, #0
	add r0, #0x48
	ldrb r0, [r0]
	add r1, r0, #1
	add r0, r4, #0
	add r0, #0x48
	strb r1, [r0]
	b _02009B08
_02009AFA:
	add r0, r4, #0
	add r0, #0x4a
	ldrb r0, [r0]
	sub r1, r0, #1
	add r0, r4, #0
	add r0, #0x4a
	strb r1, [r0]
_02009B08:
	ldr r0, [sp, #8]
	add r4, #0xac
	add r0, #0x10
	str r0, [sp, #8]
	ldr r0, [sp, #0x14]
	add r0, r0, #1
	str r0, [sp, #0x14]
	cmp r0, #4
	bge _02009B1C
	b _0200995E
_02009B1C:
	ldr r1, _02009B30 ; =0x00000332
	ldr r0, [sp, #0xc]
	strb r0, [r5, r1]
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_02009B28: .word 0xFFFFFEFF
_02009B2C: .word 0xFFFFEFFF
_02009B30: .word 0x00000332
	thumb_func_end sub_0200994C

	thumb_func_start sub_02009B34
sub_02009B34: ; 0x02009B34
	mov r1, #0xf0
	and r1, r0
	lsl r1, r1, #0x14
	lsl r0, r0, #0x1c
	lsr r1, r1, #0x18
	lsr r0, r0, #0x18
	orr r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
	thumb_func_end sub_02009B34

	thumb_func_start sub_02009B48
sub_02009B48: ; 0x02009B48
	push {r3, lr}
	add r2, r0, #0
	ldrh r0, [r2, #0xa]
	cmp r0, #0
	beq _02009B5C
	add r0, r1, #0
	ldr r1, [r2, #0x10]
	mov r2, #1
	bl sub_02009B60
_02009B5C:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_02009B48

	thumb_func_start sub_02009B60
sub_02009B60: ; 0x02009B60
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	add r3, r0, #0
	add r0, r1, #0
	mov lr, r0
	mov r0, #0
	mov ip, r0
	ldr r0, _02009CAC ; =0x0210F63C
	str r1, [sp]
	str r2, [sp, #4]
	str r0, [sp, #0x10]
_02009B76:
	ldr r0, [sp, #0x10]
	mov r1, #0
	ldr r6, [r0]
	ldrb r0, [r6]
	cmp r0, #0xff
	beq _02009BEE
	ldr r0, [sp]
	mov r2, #0xf
	and r0, r2
	str r0, [sp, #0xc]
	sub r0, #8
	str r0, [sp, #0xc]
	ldr r0, [sp]
	mov r2, #0xf0
	and r0, r2
	lsr r7, r0, #4
	sub r7, #8
_02009B98:
	lsl r0, r1, #1
	add r2, r6, r0
	ldrb r4, [r6, r0]
	ldrb r2, [r2, #1]
	ldr r0, [sp, #0xc]
	add r0, r0, r4
	add r2, r7, r2
	lsl r0, r0, #0x18
	lsl r2, r2, #0x18
	lsr r0, r0, #0x18
	lsr r4, r2, #0x18
	mov r2, #0x50
	mul r2, r4
	lsr r5, r0, #1
	add r2, r5, r2
	mov r4, #1
	tst r0, r4
	ldrb r4, [r3, r2]
	beq _02009BD0
	mov r0, #0xf0
	and r0, r4
	cmp r0, #0x10
	blt _02009BE0
	cmp r0, #0x30
	bgt _02009BE0
	add r4, #0x50
	strb r4, [r3, r2]
	b _02009BE0
_02009BD0:
	mov r0, #0xf
	and r0, r4
	cmp r0, #1
	blt _02009BE0
	cmp r0, #3
	bgt _02009BE0
	add r0, r4, #5
	strb r0, [r3, r2]
_02009BE0:
	add r0, r1, #1
	lsl r0, r0, #0x18
	lsr r1, r0, #0x18
	lsl r0, r1, #1
	ldrb r0, [r6, r0]
	cmp r0, #0xff
	bne _02009B98
_02009BEE:
	ldr r0, [sp]
	lsr r0, r0, #8
	str r0, [sp]
	ldr r0, [sp, #0x10]
	add r0, r0, #4
	str r0, [sp, #0x10]
	mov r0, ip
	add r0, r0, #1
	mov ip, r0
	cmp r0, #4
	blt _02009B76
	mov r0, lr
	str r0, [sp]
	ldr r0, [sp, #4]
	cmp r0, #0
	beq _02009CA6
	mov r0, #0
	str r0, [sp, #8]
	ldr r0, _02009CAC ; =0x0210F63C
	str r0, [sp, #0x18]
_02009C16:
	ldr r0, [sp, #0x18]
	mov r4, #0
	ldr r2, [r0]
	ldrb r0, [r2]
	cmp r0, #0xff
	beq _02009C90
	ldr r0, [sp]
	mov r1, #0xf
	and r0, r1
	str r0, [sp, #0x14]
	add r0, #0x48
	str r0, [sp, #0x14]
	ldr r0, [sp]
	mov r1, #0xf0
	and r0, r1
	lsr r7, r0, #4
	sub r7, #8
_02009C38:
	lsl r0, r4, #1
	add r5, r2, r0
	ldrb r1, [r2, r0]
	ldrb r5, [r5, #1]
	ldr r0, [sp, #0x14]
	sub r1, #0xe
	add r0, r0, r1
	add r5, r7, r5
	lsl r0, r0, #0x18
	lsl r5, r5, #0x18
	lsr r1, r0, #0x18
	lsr r6, r5, #0x18
	mov r5, #0x50
	lsr r0, r1, #1
	mul r5, r6
	add r0, r0, r5
	mov r5, #1
	tst r1, r5
	ldrb r5, [r3, r0]
	beq _02009C72
	mov r1, #0xf0
	and r1, r5
	cmp r1, #0x10
	blt _02009C82
	cmp r1, #0x30
	bgt _02009C82
	add r5, #0x50
	strb r5, [r3, r0]
	b _02009C82
_02009C72:
	mov r1, #0xf
	and r1, r5
	cmp r1, #1
	blt _02009C82
	cmp r1, #3
	bgt _02009C82
	add r1, r5, #5
	strb r1, [r3, r0]
_02009C82:
	add r0, r4, #1
	lsl r0, r0, #0x18
	lsr r4, r0, #0x18
	lsl r0, r4, #1
	ldrb r0, [r2, r0]
	cmp r0, #0xff
	bne _02009C38
_02009C90:
	ldr r0, [sp]
	lsr r0, r0, #8
	str r0, [sp]
	ldr r0, [sp, #0x18]
	add r0, r0, #4
	str r0, [sp, #0x18]
	ldr r0, [sp, #8]
	add r0, r0, #1
	str r0, [sp, #8]
	cmp r0, #4
	blt _02009C16
_02009CA6:
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_02009CAC: .word 0x0210F63C
	thumb_func_end sub_02009B60

	thumb_func_start sub_02009CB0
sub_02009CB0: ; 0x02009CB0
	ldr r2, [r0]
	ldr r1, _02009CC8 ; =0x41C64E6D
	add r3, r2, #0
	mul r3, r1
	ldr r1, _02009CCC ; =0x00006073
	add r1, r3, r1
	str r1, [r0]
	lsr r0, r1, #0x10
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	bx lr
	nop
_02009CC8: .word 0x41C64E6D
_02009CCC: .word 0x00006073
	thumb_func_end sub_02009CB0

	thumb_func_start sub_02009CD0
sub_02009CD0: ; 0x02009CD0
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldrh r0, [r5]
	mov r6, #0x32
	mov r4, #0
	str r0, [sp]
	add r7, sp, #0
	lsl r6, r6, #6
_02009CE0:
	ldrh r1, [r5]
	ldr r0, [sp]
	eor r0, r1
	strh r0, [r5]
	add r0, r7, #0
	bl sub_02009CB0
	add r4, r4, #1
	add r5, r5, #2
	cmp r4, r6
	blt _02009CE0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02009CD0

	thumb_func_start sub_02009CF8
sub_02009CF8: ; 0x02009CF8
	push {r3, r4, r5, r6, r7, lr}
	ldr r1, _02009D24 ; =0x000018FE
	mov r6, #0
	ldrh r2, [r0, r1]
	lsr r4, r1, #1
	add r5, r0, r1
	str r2, [sp]
	add r7, sp, #0
	mvn r6, r6
_02009D0A:
	ldrh r1, [r5]
	ldr r0, [sp]
	eor r0, r1
	strh r0, [r5]
	add r0, r7, #0
	bl sub_02009CB0
	sub r4, r4, #1
	sub r5, r5, #2
	cmp r4, r6
	bgt _02009D0A
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02009D24: .word 0x000018FE
	thumb_func_end sub_02009CF8

	thumb_func_start sub_02009D28
sub_02009D28: ; 0x02009D28
	push {r3, lr}
	cmp r1, #0xc2
	beq _02009D3A
	cmp r1, #0xc3
	beq _02009D3A
	cmp r1, #0x3a
	beq _02009D3A
	cmp r1, #6
	bne _02009D40
_02009D3A:
	bl sub_02009CF8
	pop {r3, pc}
_02009D40:
	bl sub_02009CD0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_02009D28

	thumb_func_start sub_02009D48
sub_02009D48: ; 0x02009D48
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	mov r4, #0
	add r5, r0, #0
	add r0, r4, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x44]
	add r6, r1, #0
	str r2, [sp]
	str r3, [sp, #4]
	str r4, [sp, #0xc]
	cmp r0, #0
	bne _02009D66
	bl GF_AssertFail
_02009D66:
	ldr r0, [sp, #0x48]
	cmp r0, #0
	bne _02009D70
	bl GF_AssertFail
_02009D70:
	ldr r0, [sp, #0x50]
	cmp r0, #0
	bne _02009D7A
	bl GF_AssertFail
_02009D7A:
	ldr r0, [sp, #0x4c]
	cmp r0, #0
	bne _02009D84
	bl GF_AssertFail
_02009D84:
	cmp r5, #0
	bne _02009D8C
	bl GF_AssertFail
_02009D8C:
	ldr r0, [sp, #0x44]
	add r1, r6, #0
	bl sub_0200A7BC
	add r7, r0, #0
	bne _02009D9C
	bl GF_AssertFail
_02009D9C:
	ldr r0, [sp, #0x48]
	ldr r1, [sp]
	bl sub_0200A7BC
	str r0, [sp, #0x14]
	cmp r0, #0
	bne _02009DAE
	bl GF_AssertFail
_02009DAE:
	ldr r0, [sp, #0x4c]
	ldr r1, [sp, #4]
	bl sub_0200A7BC
	str r0, [sp, #0x10]
	cmp r0, #0
	bne _02009DC0
	bl GF_AssertFail
_02009DC0:
	ldr r0, [sp, #0x50]
	cmp r0, #0
	beq _02009DDE
	mov r2, #0
	ldr r1, [sp, #0x30]
	mvn r2, r2
	cmp r1, r2
	beq _02009DDE
	bl sub_0200A7BC
	str r0, [sp, #0xc]
	cmp r0, #0
	bne _02009DDE
	bl GF_AssertFail
_02009DDE:
	ldr r0, [sp, #0x54]
	cmp r0, #0
	beq _02009E06
	mov r2, #0
	ldr r1, [sp, #0x34]
	mvn r2, r2
	cmp r1, r2
	beq _02009DF4
	bl sub_0200A7BC
	add r4, r0, #0
_02009DF4:
	mov r0, #0
	ldr r1, [sp, #0x38]
	mvn r0, r0
	cmp r1, r0
	beq _02009E06
	ldr r0, [sp, #0x58]
	bl sub_0200A7BC
	str r0, [sp, #8]
_02009E06:
	ldr r0, [sp, #0x3c]
	cmp r0, #0
	beq _02009E26
	ldr r1, [sp, #0x10]
	add r0, r7, #0
	bl sub_0200AF24
	add r6, r0, #0
	bne _02009E1C
	bl GF_AssertFail
_02009E1C:
	add r0, r7, #0
	bl sub_0200A810
	str r0, [r5, #4]
	b _02009E38
_02009E26:
	add r0, r7, #0
	bl sub_0200AF00
	add r6, r0, #0
	bne _02009E34
	bl GF_AssertFail
_02009E34:
	mov r0, #0
	str r0, [r5, #4]
_02009E38:
	ldr r0, [sp, #0x14]
	add r1, r6, #0
	bl sub_0200B0F8
	str r0, [r5, #8]
	ldr r0, [sp, #0x10]
	str r6, [r5]
	bl sub_0200A840
	str r0, [r5, #0xc]
	ldr r0, [sp, #0xc]
	cmp r0, #0
	beq _02009E58
	bl sub_0200A858
	b _02009E5A
_02009E58:
	mov r0, #0
_02009E5A:
	str r0, [r5, #0x10]
	cmp r4, #0
	beq _02009E70
	add r0, r4, #0
	bl sub_0200A870
	str r0, [r5, #0x14]
	ldr r0, [sp, #8]
	bl sub_0200A888
	b _02009E74
_02009E70:
	mov r0, #0
	str r0, [r5, #0x14]
_02009E74:
	str r0, [r5, #0x18]
	ldr r0, [sp, #0x3c]
	str r0, [r5, #0x1c]
	ldr r0, [sp, #0x40]
	add r5, #0x20
	strb r0, [r5]
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02009D48

	thumb_func_start sub_02009E84
sub_02009E84: ; 0x02009E84
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	add r5, r0, #0
	ldr r0, [sp, #0x48]
	add r7, r1, #0
	str r0, [sp, #0x48]
	ldr r0, [sp, #0x4c]
	mov r4, #0
	str r0, [sp, #0x4c]
	ldr r0, [sp, #0x50]
	ldr r1, [r5]
	str r0, [sp, #0x50]
	ldr r0, [sp, #0x54]
	str r2, [sp, #0x2c]
	str r0, [sp, #0x54]
	sub r0, r4, #2
	str r3, [sp, #0x30]
	cmp r1, r0
	beq _02009EB8
	add r2, r5, #0
	sub r0, r4, #2
_02009EAE:
	add r2, #0x20
	ldr r1, [r2]
	add r4, r4, #1
	cmp r1, r0
	bne _02009EAE
_02009EB8:
	add r0, r7, #0
	mov r1, #8
	bl sub_0201AA8C
	mov r1, #0x24
	add r6, r0, #0
	add r0, r7, #0
	mul r1, r4
	bl sub_0201AA8C
	str r0, [r6]
	mov r7, #0
	str r4, [r6, #4]
	cmp r4, #0
	ble _02009F1E
	add r4, r7, #0
_02009ED8:
	ldr r0, [r5, #0xc]
	str r0, [sp]
	ldr r0, [r5, #0x10]
	str r0, [sp, #4]
	ldr r0, [r5, #0x14]
	str r0, [sp, #8]
	ldr r0, [r5, #0x18]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x2c]
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x30]
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0x4c]
	str r0, [sp, #0x20]
	ldr r0, [sp, #0x50]
	str r0, [sp, #0x24]
	ldr r0, [sp, #0x54]
	str r0, [sp, #0x28]
	ldr r0, [r6]
	ldr r1, [r5]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	add r0, r0, r4
	bl sub_02009D48
	ldr r0, [r6, #4]
	add r7, r7, #1
	add r5, #0x20
	add r4, #0x24
	cmp r7, r0
	blt _02009ED8
_02009F1E:
	add r0, r6, #0
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_02009E84

	thumb_func_start sub_02009F24
sub_02009F24: ; 0x02009F24
	push {r4, lr}
	add r4, r0, #0
	bne _02009F2E
	bl GF_AssertFail
_02009F2E:
	ldr r0, [r4]
	cmp r0, #0
	beq _02009F38
	bl sub_0201AB0C
_02009F38:
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	thumb_func_end sub_02009F24

	thumb_func_start sub_02009F40
sub_02009F40: ; 0x02009F40
	push {r3, r4, r5, r6, lr}
	sub sp, #0x1c
	add r4, r1, #0
	add r5, r0, #0
	ldr r1, _02009FA4 ; =0xFFFFF000
	add r0, r4, #0
	add r6, r2, #0
	bl sub_02025C44
	mov r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	mov r0, #0xff
	lsl r0, r0, #0xc
	str r0, [sp, #8]
	mov r0, #3
	lsl r0, r0, #0x12
	str r0, [sp, #0xc]
	add r0, r4, #0
	add r0, #0x98
	add r1, sp, #0
	mov r2, #1
	add r3, r4, #0
	bl sub_0200B27C
	mov r0, #0
	str r0, [sp]
	mov r0, #0xff
	mov r1, #3
	lsl r1, r1, #0x12
	lsl r0, r0, #0xc
	str r0, [sp, #8]
	add r0, r4, #0
	str r1, [sp, #4]
	str r1, [sp, #0xc]
	add r0, #0xe0
	add r1, sp, #0
	mov r2, #2
	add r3, r4, #0
	bl sub_0200B27C
	add r0, sp, #0x10
	str r5, [sp, #0x10]
	str r4, [sp, #0x14]
	str r6, [sp, #0x18]
	bl sub_0202445C
	add sp, #0x1c
	pop {r3, r4, r5, r6, pc}
	nop
_02009FA4: .word 0xFFFFF000
	thumb_func_end sub_02009F40

	thumb_func_start sub_02009FA8
sub_02009FA8: ; 0x02009FA8
	push {r3, lr}
	sub sp, #0x10
	str r1, [sp]
	mov r1, #0xff
	lsl r1, r1, #0xc
	str r1, [sp, #8]
	mov r1, #3
	lsl r1, r1, #0x12
	str r1, [sp, #0xc]
	add r0, #0x98
	add r1, sp, #0
	str r2, [sp, #4]
	bl sub_02025C88
	add sp, #0x10
	pop {r3, pc}
	thumb_func_end sub_02009FA8

	thumb_func_start sub_02009FC8
sub_02009FC8: ; 0x02009FC8
	push {r3, lr}
	sub sp, #0x10
	str r1, [sp]
	mov r1, #0xff
	lsl r1, r1, #0xc
	str r1, [sp, #8]
	mov r1, #3
	lsl r1, r1, #0x12
	str r1, [sp, #0xc]
	add r0, #0xe0
	add r1, sp, #0
	str r2, [sp, #4]
	bl sub_02025C88
	add sp, #0x10
	pop {r3, pc}
	thumb_func_end sub_02009FC8

	thumb_func_start sub_02009FE8
sub_02009FE8: ; 0x02009FE8
	push {r4, lr}
	add r4, r0, #0
	cmp r1, #0x10
	beq _02009FFE
	ldr r2, _0200A070 ; =0x00100010
	cmp r1, r2
	beq _0200A02E
	ldr r0, _0200A074 ; =0x00200010
	cmp r1, r0
	beq _0200A03C
	b _0200A068
_02009FFE:
	bl sub_020CEBEC
	cmp r0, #0x40
	beq _0200A00E
	bl sub_020CEBEC
	cmp r0, #0x20
	bne _0200A01E
_0200A00E:
	mov r0, #0x3e
	mov r1, #2
	lsl r0, r0, #8
	lsl r1, r1, #8
	add r2, r4, #0
	bl sub_020216F4
	pop {r4, pc}
_0200A01E:
	mov r0, #0x7e
	mov r1, #2
	lsl r0, r0, #8
	lsl r1, r1, #8
	add r2, r4, #0
	bl sub_020216F4
	pop {r4, pc}
_0200A02E:
	mov r0, #0xfe
	lsr r1, r2, #0xb
	lsl r0, r0, #8
	add r2, r4, #0
	bl sub_020216F4
	pop {r4, pc}
_0200A03C:
	bl sub_020CEBEC
	cmp r0, #0x30
	beq _0200A04C
	bl sub_020CEBEC
	cmp r0, #0x50
	bne _0200A05A
_0200A04C:
	mov r1, #2
	ldr r0, _0200A078 ; =0x00013E00
	lsl r1, r1, #8
	add r2, r4, #0
	bl sub_020216F4
	pop {r4, pc}
_0200A05A:
	mov r1, #2
	ldr r0, _0200A07C ; =0x0001FE00
	lsl r1, r1, #8
	add r2, r4, #0
	bl sub_020216F4
	pop {r4, pc}
_0200A068:
	bl GF_AssertFail
	pop {r4, pc}
	nop
_0200A070: .word 0x00100010
_0200A074: .word 0x00200010
_0200A078: .word 0x00013E00
_0200A07C: .word 0x0001FE00
	thumb_func_end sub_02009FE8

	thumb_func_start sub_0200A080
sub_0200A080: ; 0x0200A080
	ldr r3, _0200A08C ; =sub_020225E4
	add r1, r0, #0
	mov r0, #3
	lsl r0, r0, #0xe
	bx r3
	nop
_0200A08C: .word sub_020225E4
	thumb_func_end sub_0200A080

	thumb_func_start sub_0200A090
sub_0200A090: ; 0x0200A090
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r1, #0
	str r2, [sp]
	add r0, r2, #0
	mov r1, #0x14
	bl sub_0201AA8C
	add r4, r0, #0
	ldr r1, [sp]
	add r0, r5, #0
	bl sub_02025534
	str r0, [r4]
	mov r0, #0xc
	add r7, r5, #0
	mul r7, r0
	ldr r0, [sp]
	add r1, r7, #0
	bl sub_0201AA8C
	mov r1, #0
	add r2, r7, #0
	str r0, [r4, #4]
	bl sub_020E5B44
	str r5, [r4, #8]
	mov r0, #0
	str r0, [r4, #0xc]
	str r6, [r4, #0x10]
	add r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200A090

	thumb_func_start sub_0200A0D0
sub_0200A0D0: ; 0x0200A0D0
	push {r4, lr}
	add r4, r0, #0
	bne _0200A0DA
	bl GF_AssertFail
_0200A0DA:
	ldr r0, [r4]
	cmp r0, #0
	bne _0200A0E4
	bl GF_AssertFail
_0200A0E4:
	ldr r0, [r4, #4]
	cmp r0, #0
	bne _0200A0EE
	bl GF_AssertFail
_0200A0EE:
	add r0, r4, #0
	bl sub_0200A790
	ldr r0, [r4]
	bl sub_02025580
	mov r0, #0
	str r0, [r4]
	ldr r0, [r4, #4]
	bl sub_0201AB0C
	mov r0, #0
	str r0, [r4, #4]
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	thumb_func_end sub_0200A0D0

	thumb_func_start sub_0200A110
sub_0200A110: ; 0x0200A110
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	add r5, r0, #0
	add r4, r1, #0
	add r6, r2, #0
	add r7, r3, #0
	cmp r5, #0
	bne _0200A124
	bl GF_AssertFail
_0200A124:
	cmp r4, #0
	bne _0200A12C
	bl GF_AssertFail
_0200A12C:
	ldr r0, [r4, #4]
	cmp r0, r6
	bgt _0200A136
	bl GF_AssertFail
_0200A136:
	ldr r1, [r5, #0x10]
	ldr r0, [r4, #8]
	cmp r1, r0
	beq _0200A142
	bl GF_AssertFail
_0200A142:
	add r0, r5, #0
	bl sub_0200AA70
	str r0, [sp, #0x1c]
	cmp r0, #0
	bne _0200A152
	bl GF_AssertFail
_0200A152:
	ldrb r0, [r4, #0xc]
	cmp r0, #0
	bne _0200A18E
	ldr r2, [r4]
	mov r0, #0x4c
	add r1, r6, #0
	mul r1, r0
	add r6, r2, r1
	ldr r1, [r2, r1]
	add r0, r5, #0
	bl sub_0200A728
	cmp r0, #1
	beq _0200A172
	bl GF_AssertFail
_0200A172:
	ldr r0, [r6, #0x44]
	ldr r1, [sp, #0x1c]
	str r0, [sp]
	ldr r0, [r6, #0x48]
	add r2, r6, #4
	str r0, [sp, #4]
	ldr r0, [r4, #8]
	str r0, [sp, #8]
	str r7, [sp, #0xc]
	ldr r3, [r6]
	add r0, r5, #0
	bl sub_0200ABEC
	b _0200A1CC
_0200A18E:
	mov r0, #0x18
	ldr r1, [r4]
	mul r0, r6
	add r6, r1, r0
	ldr r1, [r6, #0xc]
	add r0, r5, #0
	bl sub_0200A728
	cmp r0, #1
	beq _0200A1A6
	bl GF_AssertFail
_0200A1A6:
	ldr r0, [r6, #8]
	ldr r1, [sp, #0x1c]
	str r0, [sp]
	ldr r0, [r6, #0xc]
	str r0, [sp, #4]
	ldr r0, [r6, #0x10]
	str r0, [sp, #8]
	ldr r0, [r6, #0x14]
	str r0, [sp, #0xc]
	ldr r0, [r4, #8]
	str r0, [sp, #0x10]
	str r7, [sp, #0x14]
	mov r0, #0
	str r0, [sp, #0x18]
	ldr r2, [r6]
	ldr r3, [r6, #4]
	add r0, r5, #0
	bl sub_0200AC18
_0200A1CC:
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	ldr r0, [sp, #0x1c]
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200A110

	thumb_func_start sub_0200A1D8
sub_0200A1D8: ; 0x0200A1D8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	add r5, r0, #0
	add r7, r1, #0
	add r4, r3, #0
	str r2, [sp, #0x1c]
	cmp r5, #0
	bne _0200A1EC
	bl GF_AssertFail
_0200A1EC:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _0200A1F6
	bl GF_AssertFail
_0200A1F6:
	add r0, r5, #0
	bl sub_0200AA70
	add r6, r0, #0
	bne _0200A204
	bl GF_AssertFail
_0200A204:
	ldr r0, [sp, #0x38]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x3c]
	mov r1, #0
	str r0, [sp, #8]
	str r1, [sp, #0xc]
	ldr r0, [sp, #0x40]
	str r1, [sp, #0x10]
	str r0, [sp, #0x14]
	str r1, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	add r0, r5, #0
	add r1, r6, #0
	add r2, r7, #0
	bl sub_0200AC18
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200A1D8

	thumb_func_start sub_0200A234
sub_0200A234: ; 0x0200A234
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	add r5, r0, #0
	add r7, r1, #0
	add r4, r3, #0
	str r2, [sp, #0x1c]
	cmp r5, #0
	bne _0200A248
	bl GF_AssertFail
_0200A248:
	ldr r0, [r5, #0x10]
	cmp r0, #1
	beq _0200A252
	bl GF_AssertFail
_0200A252:
	add r0, r5, #0
	bl sub_0200AA70
	add r6, r0, #0
	bne _0200A260
	bl GF_AssertFail
_0200A260:
	ldr r0, [sp, #0x38]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x3c]
	ldr r3, [sp, #0x1c]
	str r0, [sp, #8]
	ldr r0, [sp, #0x40]
	add r1, r6, #0
	str r0, [sp, #0xc]
	mov r0, #1
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x44]
	add r2, r7, #0
	str r0, [sp, #0x14]
	mov r0, #0
	str r0, [sp, #0x18]
	add r0, r5, #0
	bl sub_0200AC18
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200A234

	thumb_func_start sub_0200A294
sub_0200A294: ; 0x0200A294
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	add r5, r0, #0
	add r7, r1, #0
	add r4, r3, #0
	str r2, [sp, #0x1c]
	cmp r5, #0
	bne _0200A2A8
	bl GF_AssertFail
_0200A2A8:
	add r0, r5, #0
	bl sub_0200AA70
	add r6, r0, #0
	bne _0200A2B6
	bl GF_AssertFail
_0200A2B6:
	ldr r0, [sp, #0x38]
	str r4, [sp]
	str r0, [sp, #4]
	mov r1, #0
	str r1, [sp, #8]
	ldr r0, [sp, #0x3c]
	str r1, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x40]
	ldr r3, [sp, #0x1c]
	str r0, [sp, #0x14]
	str r1, [sp, #0x18]
	add r0, r5, #0
	add r1, r6, #0
	add r2, r7, #0
	bl sub_0200AC18
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200A294

	thumb_func_start sub_0200A2E4
sub_0200A2E4: ; 0x0200A2E4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	add r5, r0, #0
	add r4, r1, #0
	str r2, [sp, #0x1c]
	str r3, [sp, #0x20]
	cmp r5, #0
	bne _0200A2F8
	bl GF_AssertFail
_0200A2F8:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _0200A302
	bl GF_AssertFail
_0200A302:
	cmp r4, #0
	bne _0200A30A
	bl GF_AssertFail
_0200A30A:
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _0200A314
	bl GF_AssertFail
_0200A314:
	add r0, r4, #0
	bl sub_0200A7FC
	add r6, r0, #0
	add r0, r4, #0
	bl sub_0200A8B0
	add r7, r0, #0
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0200A75C
	ldr r0, [sp, #0x38]
	mov r1, #0
	str r0, [sp]
	str r6, [sp, #4]
	str r7, [sp, #8]
	str r1, [sp, #0xc]
	ldr r0, [sp, #0x3c]
	str r1, [sp, #0x10]
	str r0, [sp, #0x14]
	str r1, [sp, #0x18]
	ldr r2, [sp, #0x1c]
	ldr r3, [sp, #0x20]
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0200AC18
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0200A2E4

	thumb_func_start sub_0200A350
sub_0200A350: ; 0x0200A350
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	add r5, r0, #0
	add r4, r1, #0
	str r2, [sp, #0x1c]
	str r3, [sp, #0x20]
	cmp r5, #0
	bne _0200A364
	bl GF_AssertFail
_0200A364:
	ldr r0, [r5, #0x10]
	cmp r0, #1
	beq _0200A36E
	bl GF_AssertFail
_0200A36E:
	cmp r4, #0
	bne _0200A376
	bl GF_AssertFail
_0200A376:
	ldr r0, [r4, #4]
	cmp r0, #1
	beq _0200A380
	bl GF_AssertFail
_0200A380:
	add r0, r4, #0
	bl sub_0200A7FC
	add r6, r0, #0
	add r0, r4, #0
	bl sub_0200A8B0
	add r7, r0, #0
	add r0, r4, #0
	bl sub_0200A8DC
	str r0, [sp, #0x24]
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0200A75C
	ldr r0, [sp, #0x40]
	ldr r2, [sp, #0x1c]
	str r0, [sp]
	str r6, [sp, #4]
	ldr r0, [sp, #0x24]
	str r7, [sp, #8]
	str r0, [sp, #0xc]
	mov r0, #1
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x44]
	ldr r3, [sp, #0x20]
	str r0, [sp, #0x14]
	mov r0, #0
	str r0, [sp, #0x18]
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0200AC18
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200A350

	thumb_func_start sub_0200A3C8
sub_0200A3C8: ; 0x0200A3C8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	add r5, r0, #0
	add r7, r1, #0
	add r4, r3, #0
	str r2, [sp, #0x1c]
	cmp r5, #0
	bne _0200A3DC
	bl GF_AssertFail
_0200A3DC:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _0200A3E6
	bl GF_AssertFail
_0200A3E6:
	add r0, r5, #0
	bl sub_0200AA70
	add r6, r0, #0
	bne _0200A3F4
	bl GF_AssertFail
_0200A3F4:
	ldr r0, [sp, #0x38]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x3c]
	mov r1, #0
	str r0, [sp, #8]
	str r1, [sp, #0xc]
	ldr r0, [sp, #0x40]
	str r1, [sp, #0x10]
	str r0, [sp, #0x14]
	str r1, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	add r0, r5, #0
	add r1, r6, #0
	add r2, r7, #0
	bl sub_0200AC50
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200A3C8

	thumb_func_start sub_0200A424
sub_0200A424: ; 0x0200A424
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	add r5, r0, #0
	add r7, r1, #0
	add r4, r3, #0
	str r2, [sp, #0x1c]
	cmp r5, #0
	bne _0200A438
	bl GF_AssertFail
_0200A438:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _0200A442
	bl GF_AssertFail
_0200A442:
	add r0, r5, #0
	bl sub_0200AA70
	add r6, r0, #0
	bne _0200A450
	bl GF_AssertFail
_0200A450:
	ldr r0, [sp, #0x38]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x3c]
	ldr r3, [sp, #0x1c]
	str r0, [sp, #8]
	mov r0, #0
	str r0, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x40]
	add r1, r6, #0
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x44]
	add r2, r7, #0
	str r0, [sp, #0x18]
	add r0, r5, #0
	bl sub_0200AC50
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200A424

	thumb_func_start sub_0200A480
sub_0200A480: ; 0x0200A480
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	add r5, r0, #0
	add r7, r1, #0
	add r4, r3, #0
	str r2, [sp, #0x1c]
	cmp r5, #0
	bne _0200A494
	bl GF_AssertFail
_0200A494:
	ldr r0, [r5, #0x10]
	cmp r0, #1
	beq _0200A49E
	bl GF_AssertFail
_0200A49E:
	add r0, r5, #0
	bl sub_0200AA70
	add r6, r0, #0
	bne _0200A4AC
	bl GF_AssertFail
_0200A4AC:
	ldr r0, [sp, #0x38]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x3c]
	ldr r3, [sp, #0x1c]
	str r0, [sp, #8]
	ldr r0, [sp, #0x40]
	add r1, r6, #0
	str r0, [sp, #0xc]
	mov r0, #1
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x44]
	add r2, r7, #0
	str r0, [sp, #0x14]
	mov r0, #0
	str r0, [sp, #0x18]
	add r0, r5, #0
	bl sub_0200AC50
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200A480

	thumb_func_start sub_0200A4E0
sub_0200A4E0: ; 0x0200A4E0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	add r5, r0, #0
	add r7, r1, #0
	add r4, r3, #0
	str r2, [sp, #0x1c]
	cmp r5, #0
	bne _0200A4F4
	bl GF_AssertFail
_0200A4F4:
	ldr r0, [r5, #0x10]
	cmp r0, #1
	beq _0200A4FE
	bl GF_AssertFail
_0200A4FE:
	add r0, r5, #0
	bl sub_0200AA70
	add r6, r0, #0
	bne _0200A50C
	bl GF_AssertFail
_0200A50C:
	ldr r0, [sp, #0x38]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x3c]
	ldr r3, [sp, #0x1c]
	str r0, [sp, #8]
	ldr r0, [sp, #0x40]
	add r1, r6, #0
	str r0, [sp, #0xc]
	mov r0, #1
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x44]
	add r2, r7, #0
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x18]
	add r0, r5, #0
	bl sub_0200AC50
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200A4E0

	thumb_func_start sub_0200A540
sub_0200A540: ; 0x0200A540
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	add r5, r0, #0
	add r7, r1, #0
	add r4, r3, #0
	str r2, [sp, #0x1c]
	cmp r5, #0
	bne _0200A554
	bl GF_AssertFail
_0200A554:
	add r0, r5, #0
	bl sub_0200AA70
	add r6, r0, #0
	bne _0200A562
	bl GF_AssertFail
_0200A562:
	ldr r0, [sp, #0x38]
	str r4, [sp]
	str r0, [sp, #4]
	mov r1, #0
	str r1, [sp, #8]
	ldr r0, [sp, #0x3c]
	str r1, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x40]
	ldr r3, [sp, #0x1c]
	str r0, [sp, #0x14]
	str r1, [sp, #0x18]
	add r0, r5, #0
	add r1, r6, #0
	add r2, r7, #0
	bl sub_0200AC50
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200A540

	thumb_func_start sub_0200A590
sub_0200A590: ; 0x0200A590
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	add r5, r0, #0
	add r4, r1, #0
	str r2, [sp, #0x1c]
	str r3, [sp, #0x20]
	cmp r5, #0
	bne _0200A5A4
	bl GF_AssertFail
_0200A5A4:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _0200A5AE
	bl GF_AssertFail
_0200A5AE:
	cmp r4, #0
	bne _0200A5B6
	bl GF_AssertFail
_0200A5B6:
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _0200A5C0
	bl GF_AssertFail
_0200A5C0:
	add r0, r4, #0
	bl sub_0200A7FC
	add r6, r0, #0
	add r0, r4, #0
	bl sub_0200A8B0
	add r7, r0, #0
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0200A75C
	ldr r0, [sp, #0x38]
	mov r1, #0
	str r0, [sp]
	str r6, [sp, #4]
	str r7, [sp, #8]
	str r1, [sp, #0xc]
	ldr r0, [sp, #0x3c]
	str r1, [sp, #0x10]
	str r0, [sp, #0x14]
	str r1, [sp, #0x18]
	ldr r2, [sp, #0x1c]
	ldr r3, [sp, #0x20]
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0200AC50
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0200A590

	thumb_func_start sub_0200A5FC
sub_0200A5FC: ; 0x0200A5FC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	add r5, r0, #0
	add r4, r1, #0
	str r2, [sp, #0x1c]
	str r3, [sp, #0x20]
	cmp r5, #0
	bne _0200A610
	bl GF_AssertFail
_0200A610:
	ldr r0, [r5, #0x10]
	cmp r0, #1
	beq _0200A61A
	bl GF_AssertFail
_0200A61A:
	cmp r4, #0
	bne _0200A622
	bl GF_AssertFail
_0200A622:
	ldr r0, [r4, #4]
	cmp r0, #1
	beq _0200A62C
	bl GF_AssertFail
_0200A62C:
	add r0, r4, #0
	bl sub_0200A7FC
	add r6, r0, #0
	add r0, r4, #0
	bl sub_0200A8B0
	add r7, r0, #0
	add r0, r4, #0
	bl sub_0200A8DC
	str r0, [sp, #0x24]
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0200A75C
	ldr r0, [sp, #0x40]
	ldr r2, [sp, #0x1c]
	str r0, [sp]
	str r6, [sp, #4]
	ldr r0, [sp, #0x24]
	str r7, [sp, #8]
	str r0, [sp, #0xc]
	mov r0, #1
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x44]
	ldr r3, [sp, #0x20]
	str r0, [sp, #0x14]
	mov r0, #0
	str r0, [sp, #0x18]
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0200AC50
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200A5FC

	thumb_func_start sub_0200A674
sub_0200A674: ; 0x0200A674
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r5, r0, #0
	add r4, r1, #0
	add r6, r2, #0
	add r7, r3, #0
	cmp r5, #0
	bne _0200A688
	bl GF_AssertFail
_0200A688:
	cmp r4, #0
	bne _0200A690
	bl GF_AssertFail
_0200A690:
	str r6, [sp]
	str r7, [sp, #4]
	ldr r3, [r4, #4]
	add r0, r5, #0
	add r1, r4, #0
	mov r2, #0
	bl sub_0200A6A8
	ldr r0, [r4, #4]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200A674

	thumb_func_start sub_0200A6A8
sub_0200A6A8: ; 0x0200A6A8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	add r5, r2, #0
	ldr r0, [sp, #0x24]
	add r7, r5, r3
	str r1, [sp, #4]
	ldr r4, [sp, #0x20]
	str r0, [sp, #0x24]
	cmp r5, r7
	bge _0200A6EC
	add r6, r4, #0
	add r6, #8
_0200A6C2:
	ldr r0, [sp]
	ldr r1, [sp, #4]
	ldr r3, [sp, #0x24]
	add r2, r5, #0
	bl sub_0200A110
	cmp r4, #0
	beq _0200A6E6
	ldr r2, [r4, #8]
	ldr r1, [r4, #4]
	cmp r1, r2
	ble _0200A6E6
	ldr r1, [r4]
	lsl r2, r2, #2
	str r0, [r1, r2]
	ldr r0, [r6]
	add r0, r0, #1
	str r0, [r6]
_0200A6E6:
	add r5, r5, #1
	cmp r5, r7
	blt _0200A6C2
_0200A6EC:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200A6A8

	thumb_func_start sub_0200A6F0
sub_0200A6F0: ; 0x0200A6F0
	push {r4, r5, r6, lr}
	add r6, r1, #0
	add r5, r0, #0
	add r0, r6, #0
	mov r1, #0xc
	bl sub_0201AA8C
	add r4, r0, #0
	add r0, r6, #0
	lsl r1, r5, #2
	bl sub_0201AA8C
	str r0, [r4]
	str r5, [r4, #4]
	mov r0, #0
	str r0, [r4, #8]
	add r0, r4, #0
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0200A6F0

	thumb_func_start sub_0200A714
sub_0200A714: ; 0x0200A714
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4]
	bl sub_0201AB0C
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200A714

	thumb_func_start sub_0200A728
sub_0200A728: ; 0x0200A728
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _0200A736
	bl GF_AssertFail
_0200A736:
	ldr r0, [r5]
	add r1, r4, #0
	bl sub_020255A0
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0200A728

	thumb_func_start sub_0200A740
sub_0200A740: ; 0x0200A740
	push {r4, lr}
	add r4, r0, #0
	bne _0200A74A
	bl GF_AssertFail
_0200A74A:
	add r0, r4, #0
	bl sub_0200ABC0
	ldr r0, [r4]
	mov r1, #0
	bl sub_0202570C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200A740

	thumb_func_start sub_0200A75C
sub_0200A75C: ; 0x0200A75C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _0200A76A
	bl GF_AssertFail
_0200A76A:
	ldr r0, [r5, #4]
	cmp r0, #0
	bne _0200A774
	bl GF_AssertFail
_0200A774:
	add r0, r4, #0
	bl sub_0200ABC0
	ldr r0, [r5]
	ldr r1, [r4]
	bl sub_02025658
	mov r0, #0
	str r0, [r4]
	ldr r0, [r5, #0xc]
	sub r0, r0, #1
	str r0, [r5, #0xc]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200A75C

	thumb_func_start sub_0200A790
sub_0200A790: ; 0x0200A790
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #8]
	mov r6, #0
	cmp r0, #0
	ble _0200A7B8
	add r4, r6, #0
_0200A79E:
	ldr r1, [r5, #4]
	ldr r0, [r1, r4]
	cmp r0, #0
	beq _0200A7AE
	add r0, r5, #0
	add r1, r1, r4
	bl sub_0200A75C
_0200A7AE:
	ldr r0, [r5, #8]
	add r6, r6, #1
	add r4, #0xc
	cmp r6, r0
	blt _0200A79E
_0200A7B8:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0200A790

	thumb_func_start sub_0200A7BC
sub_0200A7BC: ; 0x0200A7BC
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r7, r1, #0
	cmp r5, #0
	bne _0200A7CA
	bl GF_AssertFail
_0200A7CA:
	ldr r0, [r5, #8]
	mov r6, #0
	cmp r0, #0
	ble _0200A7F8
	add r4, r6, #0
_0200A7D4:
	ldr r0, [r5, #4]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200A7EE
	bl sub_02025728
	cmp r0, r7
	bne _0200A7EE
	mov r0, #0xc
	ldr r1, [r5, #4]
	mul r0, r6
	add r0, r1, r0
	pop {r3, r4, r5, r6, r7, pc}
_0200A7EE:
	ldr r0, [r5, #8]
	add r6, r6, #1
	add r4, #0xc
	cmp r6, r0
	blt _0200A7D4
_0200A7F8:
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200A7BC

	thumb_func_start sub_0200A7FC
sub_0200A7FC: ; 0x0200A7FC
	push {r4, lr}
	add r4, r0, #0
	bne _0200A806
	bl GF_AssertFail
_0200A806:
	ldr r0, [r4]
	bl sub_02025728
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200A7FC

	thumb_func_start sub_0200A810
sub_0200A810: ; 0x0200A810
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _0200A81E
	bl GF_AssertFail
_0200A81E:
	add r0, r4, #0
	bl sub_0200ABD4
	ldr r0, [r0]
	pop {r4, pc}
	thumb_func_end sub_0200A810

	thumb_func_start sub_0200A828
sub_0200A828: ; 0x0200A828
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #1
	beq _0200A836
	bl GF_AssertFail
_0200A836:
	add r0, r4, #0
	bl sub_0200ABD4
	ldr r0, [r0]
	pop {r4, pc}
	thumb_func_end sub_0200A828

	thumb_func_start sub_0200A840
sub_0200A840: ; 0x0200A840
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #2
	beq _0200A84E
	bl GF_AssertFail
_0200A84E:
	add r0, r4, #0
	bl sub_0200ABD4
	ldr r0, [r0]
	pop {r4, pc}
	thumb_func_end sub_0200A840

	thumb_func_start sub_0200A858
sub_0200A858: ; 0x0200A858
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #3
	beq _0200A866
	bl GF_AssertFail
_0200A866:
	add r0, r4, #0
	bl sub_0200ABD4
	ldr r0, [r0]
	pop {r4, pc}
	thumb_func_end sub_0200A858

	thumb_func_start sub_0200A870
sub_0200A870: ; 0x0200A870
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #4
	beq _0200A87E
	bl GF_AssertFail
_0200A87E:
	add r0, r4, #0
	bl sub_0200ABD4
	ldr r0, [r0]
	pop {r4, pc}
	thumb_func_end sub_0200A870

	thumb_func_start sub_0200A888
sub_0200A888: ; 0x0200A888
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #5
	beq _0200A896
	bl GF_AssertFail
_0200A896:
	add r0, r4, #0
	bl sub_0200ABD4
	ldr r0, [r0]
	pop {r4, pc}
	thumb_func_end sub_0200A888

	thumb_func_start sub_0200A8A0
sub_0200A8A0: ; 0x0200A8A0
	push {r4, lr}
	add r4, r0, #0
	bne _0200A8AA
	bl GF_AssertFail
_0200A8AA:
	ldr r0, [r4, #4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200A8A0

	thumb_func_start sub_0200A8B0
sub_0200A8B0: ; 0x0200A8B0
	push {r4, lr}
	add r4, r0, #0
	bne _0200A8BA
	bl GF_AssertFail
_0200A8BA:
	ldr r0, [r4, #4]
	cmp r0, #0
	bne _0200A8CA
	add r0, r4, #0
	bl sub_0200ABD4
	ldr r0, [r0, #4]
	pop {r4, pc}
_0200A8CA:
	cmp r0, #1
	bne _0200A8D8
	add r0, r4, #0
	bl sub_0200ABD4
	ldr r0, [r0, #4]
	pop {r4, pc}
_0200A8D8:
	mov r0, #0
	pop {r4, pc}
	thumb_func_end sub_0200A8B0

	thumb_func_start sub_0200A8DC
sub_0200A8DC: ; 0x0200A8DC
	push {r4, lr}
	add r4, r0, #0
	bne _0200A8E6
	bl GF_AssertFail
_0200A8E6:
	ldr r0, [r4, #4]
	cmp r0, #1
	bne _0200A8F6
	add r0, r4, #0
	bl sub_0200ABD4
	ldr r0, [r0, #8]
	pop {r4, pc}
_0200A8F6:
	mov r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200A8DC

	thumb_func_start sub_0200A8FC
sub_0200A8FC: ; 0x0200A8FC
	mov r0, #0x10
	bx lr
	thumb_func_end sub_0200A8FC

	thumb_func_start sub_0200A900
sub_0200A900: ; 0x0200A900
	lsl r1, r1, #4
	add r0, r0, r1
	bx lr
	.align 2, 0
	thumb_func_end sub_0200A900

	thumb_func_start sub_0200A908
sub_0200A908: ; 0x0200A908
	push {r4, r5, r6, lr}
	add r4, r1, #0
	add r5, r0, #0
	add r6, r2, #0
	cmp r4, #0
	bne _0200A918
	bl GF_AssertFail
_0200A918:
	ldr r0, [r5]
	str r0, [r4, #8]
	mov r0, #1
	strb r0, [r4, #0xc]
	add r0, r5, #4
	bl sub_0200AC88
	add r2, r0, #0
	str r0, [r4, #4]
	cmp r2, #0
	ble _0200A93A
	mov r1, #0x18
	add r0, r6, #0
	mul r1, r2
	bl sub_0201AA8C
	b _0200A93C
_0200A93A:
	mov r0, #0
_0200A93C:
	str r0, [r4]
	ldr r0, [r4]
	cmp r0, #0
	beq _0200A950
	ldr r3, [r4, #4]
	mov r2, #0x18
	add r1, r5, #4
	mul r2, r3
	bl sub_020E5AD8
_0200A950:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0200A908

	thumb_func_start sub_0200A954
sub_0200A954: ; 0x0200A954
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _0200A962
	bl sub_0201AB0C
_0200A962:
	mov r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200A954

	thumb_func_start sub_0200A96C
sub_0200A96C: ; 0x0200A96C
	push {r4, lr}
	add r4, r0, #0
	bne _0200A976
	bl GF_AssertFail
_0200A976:
	ldr r0, [r4, #4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200A96C

	thumb_func_start sub_0200A97C
sub_0200A97C: ; 0x0200A97C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _0200A98A
	bl GF_AssertFail
_0200A98A:
	ldr r0, [r5, #4]
	cmp r0, r4
	bgt _0200A994
	bl GF_AssertFail
_0200A994:
	ldrb r0, [r5, #0xc]
	ldr r1, [r5]
	cmp r0, #0
	bne _0200A9A4
	mov r0, #0x4c
	mul r0, r4
	ldr r0, [r1, r0]
	pop {r3, r4, r5, pc}
_0200A9A4:
	mov r0, #0x18
	mul r0, r4
	add r0, r1, r0
	ldr r0, [r0, #0xc]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200A97C

	thumb_func_start sub_0200A9B0
sub_0200A9B0: ; 0x0200A9B0
	push {r4, r5, r6, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _0200A9BE
	bl GF_AssertFail
_0200A9BE:
	ldr r0, [r5, #4]
	cmp r0, r4
	bgt _0200A9C8
	bl GF_AssertFail
_0200A9C8:
	ldrb r0, [r5, #0xc]
	cmp r0, #1
	bne _0200A9D8
	mov r0, #0x18
	ldr r1, [r5]
	mul r0, r4
	add r0, r1, r0
	ldr r6, [r0, #4]
_0200A9D8:
	add r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0200A9B0

	thumb_func_start sub_0200A9DC
sub_0200A9DC: ; 0x0200A9DC
	push {r4, r5, r6, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _0200A9EA
	bl GF_AssertFail
_0200A9EA:
	ldr r0, [r5, #4]
	cmp r0, r4
	bgt _0200A9F4
	bl GF_AssertFail
_0200A9F4:
	ldrb r0, [r5, #0xc]
	cmp r0, #1
	bne _0200AA04
	mov r0, #0x18
	ldr r1, [r5]
	mul r0, r4
	add r0, r1, r0
	ldr r6, [r0, #8]
_0200AA04:
	add r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0200A9DC

	thumb_func_start sub_0200AA08
sub_0200AA08: ; 0x0200AA08
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _0200AA16
	bl GF_AssertFail
_0200AA16:
	ldr r0, [r5, #4]
	cmp r0, r4
	bgt _0200AA20
	bl GF_AssertFail
_0200AA20:
	ldrb r0, [r5, #0xc]
	ldr r1, [r5]
	cmp r0, #0
	bne _0200AA32
	mov r0, #0x4c
	mul r0, r4
	add r0, r1, r0
	ldr r0, [r0, #0x44]
	pop {r3, r4, r5, pc}
_0200AA32:
	mov r0, #0x18
	mul r0, r4
	add r0, r1, r0
	ldr r0, [r0, #0x10]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0200AA08

	thumb_func_start sub_0200AA3C
sub_0200AA3C: ; 0x0200AA3C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _0200AA4A
	bl GF_AssertFail
_0200AA4A:
	ldr r0, [r5, #4]
	cmp r0, r4
	bgt _0200AA54
	bl GF_AssertFail
_0200AA54:
	ldrb r0, [r5, #0xc]
	ldr r1, [r5]
	cmp r0, #0
	bne _0200AA66
	mov r0, #0x4c
	mul r0, r4
	add r0, r1, r0
	ldr r0, [r0, #0x48]
	pop {r3, r4, r5, pc}
_0200AA66:
	mov r0, #0x18
	mul r0, r4
	add r0, r1, r0
	ldr r0, [r0, #0x14]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0200AA3C

	thumb_func_start sub_0200AA70
sub_0200AA70: ; 0x0200AA70
	push {r3, r4}
	ldr r4, [r0, #8]
	mov r1, #0
	cmp r4, #0
	ble _0200AA96
	ldr r3, [r0, #4]
	add r2, r3, #0
_0200AA7E:
	ldr r0, [r2]
	cmp r0, #0
	bne _0200AA8E
	mov r0, #0xc
	mul r0, r1
	add r0, r3, r0
	pop {r3, r4}
	bx lr
_0200AA8E:
	add r1, r1, #1
	add r2, #0xc
	cmp r1, r4
	blt _0200AA7E
_0200AA96:
	mov r0, #0
	pop {r3, r4}
	bx lr
	thumb_func_end sub_0200AA70

	thumb_func_start sub_0200AA9C
sub_0200AA9C: ; 0x0200AA9C
	push {r3, r4, r5, r6, r7, lr}
	add r4, r0, #0
	ldr r0, [r4]
	add r6, r1, #0
	add r7, r2, #0
	str r3, [sp]
	ldr r5, [sp, #0x18]
	bl sub_020256FC
	cmp r6, #5
	bhi _0200AB0A
	add r1, r6, r6
	add r1, pc
	ldrh r1, [r1, #6]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add pc, r1
_0200AABE: ; jump table
	.short _0200AACA - _0200AABE - 2 ; case 0
	.short _0200AAD6 - _0200AABE - 2 ; case 1
	.short _0200AAE4 - _0200AABE - 2 ; case 2
	.short _0200AAEE - _0200AABE - 2 ; case 3
	.short _0200AAF8 - _0200AABE - 2 ; case 4
	.short _0200AB02 - _0200AABE - 2 ; case 5
_0200AACA:
	add r1, r7, #0
	add r2, r5, #0
	bl sub_0200AB0C
	str r0, [r4, #8]
	pop {r3, r4, r5, r6, r7, pc}
_0200AAD6:
	ldr r2, [sp]
	add r1, r7, #0
	add r3, r5, #0
	bl sub_0200AB2C
	str r0, [r4, #8]
	pop {r3, r4, r5, r6, r7, pc}
_0200AAE4:
	add r1, r5, #0
	bl sub_0200AB50
	str r0, [r4, #8]
	pop {r3, r4, r5, r6, r7, pc}
_0200AAEE:
	add r1, r5, #0
	bl sub_0200AB6C
	str r0, [r4, #8]
	pop {r3, r4, r5, r6, r7, pc}
_0200AAF8:
	add r1, r5, #0
	bl sub_0200AB88
	str r0, [r4, #8]
	pop {r3, r4, r5, r6, r7, pc}
_0200AB02:
	add r1, r5, #0
	bl sub_0200ABA4
	str r0, [r4, #8]
_0200AB0A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200AA9C

	thumb_func_start sub_0200AB0C
sub_0200AB0C: ; 0x0200AB0C
	push {r4, r5, r6, lr}
	add r6, r0, #0
	add r5, r1, #0
	add r0, r2, #0
	mov r1, #8
	bl sub_0201AA8C
	add r4, r0, #0
	add r0, r6, #0
	add r1, r4, #0
	bl sub_020B70A8
	str r5, [r4, #4]
	add r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0200AB0C

	thumb_func_start sub_0200AB2C
sub_0200AB2C: ; 0x0200AB2C
	push {r3, r4, r5, r6, r7, lr}
	add r7, r0, #0
	add r5, r1, #0
	add r0, r3, #0
	mov r1, #0xc
	add r6, r2, #0
	bl sub_0201AA8C
	add r4, r0, #0
	add r0, r7, #0
	add r1, r4, #0
	bl sub_020B7140
	str r5, [r4, #4]
	str r6, [r4, #8]
	add r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200AB2C

	thumb_func_start sub_0200AB50
sub_0200AB50: ; 0x0200AB50
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, r1, #0
	mov r1, #4
	bl sub_0201AA8C
	add r4, r0, #0
	add r0, r5, #0
	add r1, r4, #0
	bl sub_020B6EC8
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200AB50

	thumb_func_start sub_0200AB6C
sub_0200AB6C: ; 0x0200AB6C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, r1, #0
	mov r1, #4
	bl sub_0201AA8C
	add r4, r0, #0
	add r0, r5, #0
	add r1, r4, #0
	bl sub_020B6D18
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200AB6C

	thumb_func_start sub_0200AB88
sub_0200AB88: ; 0x0200AB88
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, r1, #0
	mov r1, #4
	bl sub_0201AA8C
	add r4, r0, #0
	add r0, r5, #0
	add r1, r4, #0
	bl sub_020B6FC8
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200AB88

	thumb_func_start sub_0200ABA4
sub_0200ABA4: ; 0x0200ABA4
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, r1, #0
	mov r1, #4
	bl sub_0201AA8C
	add r4, r0, #0
	add r0, r5, #0
	add r1, r4, #0
	bl sub_020B6D24
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200ABA4

	thumb_func_start sub_0200ABC0
sub_0200ABC0: ; 0x0200ABC0
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #8]
	cmp r0, #0
	beq _0200ABCE
	bl sub_0201AB0C
_0200ABCE:
	mov r0, #0
	str r0, [r4, #8]
	pop {r4, pc}
	thumb_func_end sub_0200ABC0

	thumb_func_start sub_0200ABD4
sub_0200ABD4: ; 0x0200ABD4
	push {r4, lr}
	add r4, r0, #0
	bne _0200ABDE
	bl GF_AssertFail
_0200ABDE:
	ldr r0, [r4, #8]
	cmp r0, #0
	bne _0200ABE8
	bl GF_AssertFail
_0200ABE8:
	ldr r0, [r4, #8]
	pop {r4, pc}
	thumb_func_end sub_0200ABD4

	thumb_func_start sub_0200ABEC
sub_0200ABEC: ; 0x0200ABEC
	push {r3, r4, lr}
	sub sp, #4
	add r4, r1, #0
	add r1, r2, #0
	add r2, r3, #0
	ldr r0, [r0]
	ldr r3, [sp, #0x1c]
	bl sub_02025600
	str r0, [r4]
	ldr r1, [sp, #0x18]
	ldr r0, [sp, #0x1c]
	str r1, [r4, #4]
	str r0, [sp]
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #0x14]
	add r0, r4, #0
	bl sub_0200AA9C
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_0200ABEC

	thumb_func_start sub_0200AC18
sub_0200AC18: ; 0x0200AC18
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [sp, #0x28]
	add r4, r1, #0
	str r0, [sp]
	add r0, r2, #0
	add r1, r3, #0
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #0x24]
	bl sub_02007A44
	add r1, r0, #0
	ldr r0, [r5]
	ldr r2, [sp, #0x14]
	bl sub_020255C4
	str r0, [r4]
	ldr r1, [sp, #0x20]
	ldr r0, [sp, #0x24]
	str r1, [r4, #4]
	str r0, [sp]
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	add r0, r4, #0
	bl sub_0200AA9C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200AC18

	thumb_func_start sub_0200AC50
sub_0200AC50: ; 0x0200AC50
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [sp, #0x28]
	add r4, r1, #0
	str r0, [sp]
	add r0, r2, #0
	add r1, r3, #0
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #0x24]
	bl sub_0200ACA4
	add r1, r0, #0
	ldr r0, [r5]
	ldr r2, [sp, #0x14]
	bl sub_020255C4
	str r0, [r4]
	ldr r1, [sp, #0x20]
	ldr r0, [sp, #0x24]
	str r1, [r4, #4]
	str r0, [sp]
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	add r0, r4, #0
	bl sub_0200AA9C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200AC50

	thumb_func_start sub_0200AC88
sub_0200AC88: ; 0x0200AC88
	mov r3, #0
	ldr r2, [r0]
	sub r1, r3, #2
	cmp r2, r1
	beq _0200AC9E
	sub r1, r3, #2
_0200AC94:
	add r0, #0x18
	ldr r2, [r0]
	add r3, r3, #1
	cmp r2, r1
	bne _0200AC94
_0200AC9E:
	add r0, r3, #0
	bx lr
	.align 2, 0
	thumb_func_end sub_0200AC88

	thumb_func_start sub_0200ACA4
sub_0200ACA4: ; 0x0200ACA4
	push {r4, r5, r6, lr}
	add r6, r3, #0
	add r5, r2, #0
	add r2, r6, #0
	bl sub_0200771C
	add r4, r0, #0
	beq _0200ACEA
	cmp r5, #0
	beq _0200ACEA
	ldr r0, [sp, #0x10]
	cmp r0, #0
	bne _0200ACCA
	ldr r1, [r4]
	add r0, r6, #0
	lsr r1, r1, #8
	bl sub_0201AA8C
	b _0200ACD4
_0200ACCA:
	ldr r1, [r4]
	add r0, r6, #0
	lsr r1, r1, #8
	bl sub_0201AACC
_0200ACD4:
	add r5, r0, #0
	cmp r5, #0
	beq _0200ACE8
	add r0, r4, #0
	add r1, r5, #0
	bl sub_020D4BE8
	add r0, r4, #0
	bl sub_0201AB0C
_0200ACE8:
	add r4, r5, #0
_0200ACEA:
	add r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0200ACA4

	thumb_func_start sub_0200ACF0
sub_0200ACF0: ; 0x0200ACF0
	push {r4, lr}
	sub sp, #0x10
	add r4, r0, #0
	bne _0200ACFC
	bl GF_AssertFail
_0200ACFC:
	add r0, r4, #0
	bl sub_0200A8A0
	cmp r0, #0
	beq _0200AD0A
	bl GF_AssertFail
_0200AD0A:
	add r0, r4, #0
	bl sub_0200A810
	str r0, [sp]
	add r0, r4, #0
	bl sub_0200A8B0
	str r0, [sp, #4]
	add r0, r4, #0
	bl sub_0200A7FC
	str r0, [sp, #8]
	mov r0, #0
	str r0, [sp, #0xc]
	add r0, sp, #0
	bl sub_02021758
	add sp, #0x10
	pop {r4, pc}
	thumb_func_end sub_0200ACF0

	thumb_func_start sub_0200AD30
sub_0200AD30: ; 0x0200AD30
	push {r4, r5, r6, lr}
	add r5, r0, #0
	bne _0200AD3A
	bl GF_AssertFail
_0200AD3A:
	ldr r0, [r5, #4]
	mov r6, #0
	cmp r0, #0
	ble _0200AD62
	add r4, r6, #0
_0200AD44:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200AD58
	bl sub_0200ACF0
	cmp r0, #0
	bne _0200AD58
	bl GF_AssertFail
_0200AD58:
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, r4, #4
	cmp r6, r0
	blt _0200AD44
_0200AD62:
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0200AD30

	thumb_func_start sub_0200AD64
sub_0200AD64: ; 0x0200AD64
	push {r4, lr}
	sub sp, #0x10
	add r4, r0, #0
	bne _0200AD70
	bl GF_AssertFail
_0200AD70:
	add r0, r4, #0
	bl sub_0200A8A0
	cmp r0, #0
	beq _0200AD7E
	bl GF_AssertFail
_0200AD7E:
	add r0, r4, #0
	bl sub_0200A810
	str r0, [sp]
	add r0, r4, #0
	bl sub_0200A8B0
	str r0, [sp, #4]
	add r0, r4, #0
	bl sub_0200A7FC
	str r0, [sp, #8]
	mov r0, #0
	str r0, [sp, #0xc]
	add r0, sp, #0
	bl sub_020217B0
	add sp, #0x10
	pop {r4, pc}
	thumb_func_end sub_0200AD64

	thumb_func_start sub_0200ADA4
sub_0200ADA4: ; 0x0200ADA4
	push {r4, lr}
	sub sp, #0x10
	add r4, r0, #0
	bne _0200ADB0
	bl GF_AssertFail
_0200ADB0:
	add r0, r4, #0
	bl sub_0200A8A0
	cmp r0, #0
	beq _0200ADBE
	bl GF_AssertFail
_0200ADBE:
	add r0, r4, #0
	bl sub_0200A810
	str r0, [sp]
	add r0, r4, #0
	bl sub_0200A8B0
	str r0, [sp, #4]
	add r0, r4, #0
	bl sub_0200A7FC
	str r0, [sp, #8]
	mov r0, #1
	str r0, [sp, #0xc]
	add r0, sp, #0
	bl sub_02021758
	add sp, #0x10
	pop {r4, pc}
	thumb_func_end sub_0200ADA4

	thumb_func_start sub_0200ADE4
sub_0200ADE4: ; 0x0200ADE4
	push {r4, r5, r6, lr}
	add r5, r0, #0
	bne _0200ADEE
	bl GF_AssertFail
_0200ADEE:
	ldr r0, [r5, #4]
	mov r6, #0
	cmp r0, #0
	ble _0200AE16
	add r4, r6, #0
_0200ADF8:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200AE0C
	bl sub_0200ADA4
	cmp r0, #0
	bne _0200AE0C
	bl GF_AssertFail
_0200AE0C:
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, r4, #4
	cmp r6, r0
	blt _0200ADF8
_0200AE16:
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0200ADE4

	thumb_func_start sub_0200AE18
sub_0200AE18: ; 0x0200AE18
	push {r4, lr}
	sub sp, #0x10
	add r4, r0, #0
	bne _0200AE24
	bl GF_AssertFail
_0200AE24:
	add r0, r4, #0
	bl sub_0200A8A0
	cmp r0, #0
	beq _0200AE32
	bl GF_AssertFail
_0200AE32:
	add r0, r4, #0
	bl sub_0200A810
	str r0, [sp]
	add r0, r4, #0
	bl sub_0200A8B0
	str r0, [sp, #4]
	add r0, r4, #0
	bl sub_0200A7FC
	str r0, [sp, #8]
	mov r0, #1
	str r0, [sp, #0xc]
	add r0, sp, #0
	bl sub_020217B0
	add sp, #0x10
	pop {r4, pc}
	thumb_func_end sub_0200AE18

	thumb_func_start sub_0200AE58
sub_0200AE58: ; 0x0200AE58
	push {r4, r5, r6, lr}
	add r5, r0, #0
	bne _0200AE62
	bl GF_AssertFail
_0200AE62:
	ldr r0, [r5, #4]
	mov r6, #0
	cmp r0, #0
	ble _0200AE8A
	add r4, r6, #0
_0200AE6C:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200AE80
	bl sub_0200AE18
	cmp r0, #0
	bne _0200AE80
	bl GF_AssertFail
_0200AE80:
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, r4, #4
	cmp r6, r0
	blt _0200AE6C
_0200AE8A:
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0200AE58

	thumb_func_start sub_0200AE8C
sub_0200AE8C: ; 0x0200AE8C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	bne _0200AE96
	bl GF_AssertFail
_0200AE96:
	add r0, r5, #0
	bl sub_0200A7FC
	add r4, r0, #0
	add r0, r5, #0
	bl sub_0200A810
	add r1, r0, #0
	add r0, r4, #0
	bl sub_0202183C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200AE8C

	thumb_func_start sub_0200AEB0
sub_0200AEB0: ; 0x0200AEB0
	push {r4, lr}
	add r4, r0, #0
	bne _0200AEBA
	bl GF_AssertFail
_0200AEBA:
	add r0, r4, #0
	bl sub_0200A8A0
	cmp r0, #0
	beq _0200AEC8
	bl GF_AssertFail
_0200AEC8:
	add r0, r4, #0
	bl sub_0200A7FC
	bl sub_02021884
	pop {r4, pc}
	thumb_func_end sub_0200AEB0

	thumb_func_start sub_0200AED4
sub_0200AED4: ; 0x0200AED4
	push {r4, r5, r6, lr}
	add r5, r0, #0
	bne _0200AEDE
	bl GF_AssertFail
_0200AEDE:
	ldr r0, [r5, #4]
	mov r6, #0
	cmp r0, #0
	ble _0200AEFE
	add r4, r6, #0
_0200AEE8:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200AEF4
	bl sub_0200AEB0
_0200AEF4:
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, r4, #4
	cmp r6, r0
	blt _0200AEE8
_0200AEFE:
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0200AED4

	thumb_func_start sub_0200AF00
sub_0200AF00: ; 0x0200AF00
	push {r4, lr}
	add r4, r0, #0
	bne _0200AF0A
	bl GF_AssertFail
_0200AF0A:
	add r0, r4, #0
	bl sub_0200A8A0
	cmp r0, #0
	beq _0200AF18
	bl GF_AssertFail
_0200AF18:
	add r0, r4, #0
	bl sub_0200A7FC
	bl sub_02021910
	pop {r4, pc}
	thumb_func_end sub_0200AF00

	thumb_func_start sub_0200AF24
sub_0200AF24: ; 0x0200AF24
	push {r3, r4, r5, lr}
	add r4, r0, #0
	add r5, r1, #0
	cmp r4, #0
	bne _0200AF32
	bl GF_AssertFail
_0200AF32:
	add r0, r4, #0
	bl sub_0200A8A0
	cmp r0, #0
	beq _0200AF40
	bl GF_AssertFail
_0200AF40:
	cmp r5, #0
	bne _0200AF48
	bl GF_AssertFail
_0200AF48:
	add r0, r5, #0
	bl sub_0200A8A0
	cmp r0, #2
	beq _0200AF56
	bl GF_AssertFail
_0200AF56:
	add r0, r4, #0
	bl sub_0200A7FC
	add r4, r0, #0
	add r0, r5, #0
	bl sub_0200A840
	add r1, r0, #0
	ldr r1, [r1, #0xc]
	add r0, r4, #0
	ldr r1, [r1]
	bl sub_02021934
	cmp r0, #0
	bne _0200AF7E
	add r0, r4, #0
	bl sub_02021910
	bl sub_020219B8
_0200AF7E:
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0200AF24

	thumb_func_start sub_0200AF80
sub_0200AF80: ; 0x0200AF80
	push {r4, lr}
	add r4, r0, #0
	bne _0200AF8A
	bl GF_AssertFail
_0200AF8A:
	add r0, r4, #0
	bl sub_02021A50
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200AF80

	thumb_func_start sub_0200AF94
sub_0200AF94: ; 0x0200AF94
	push {r4, lr}
	sub sp, #0x10
	add r4, r0, #0
	bne _0200AFA0
	bl GF_AssertFail
_0200AFA0:
	add r0, r4, #0
	bl sub_0200A8A0
	cmp r0, #1
	beq _0200AFAE
	bl GF_AssertFail
_0200AFAE:
	add r0, r4, #0
	bl sub_0200A828
	str r0, [sp]
	add r0, r4, #0
	bl sub_0200A8B0
	str r0, [sp, #4]
	add r0, r4, #0
	bl sub_0200A7FC
	str r0, [sp, #0xc]
	add r0, r4, #0
	bl sub_0200A8DC
	str r0, [sp, #8]
	add r0, sp, #0
	bl sub_02022660
	add sp, #0x10
	pop {r4, pc}
	thumb_func_end sub_0200AF94

	thumb_func_start sub_0200AFD8
sub_0200AFD8: ; 0x0200AFD8
	push {r4, r5, r6, lr}
	add r5, r0, #0
	bne _0200AFE2
	bl GF_AssertFail
_0200AFE2:
	ldr r0, [r5, #4]
	mov r6, #0
	cmp r0, #0
	ble _0200B00A
	add r4, r6, #0
_0200AFEC:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200B000
	bl sub_0200AF94
	cmp r0, #0
	bne _0200B000
	bl GF_AssertFail
_0200B000:
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, r4, #4
	cmp r6, r0
	blt _0200AFEC
_0200B00A:
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0200AFD8

	thumb_func_start sub_0200B00C
sub_0200B00C: ; 0x0200B00C
	push {r4, lr}
	sub sp, #0x10
	add r4, r0, #0
	bne _0200B018
	bl GF_AssertFail
_0200B018:
	add r0, r4, #0
	bl sub_0200A8A0
	cmp r0, #1
	beq _0200B026
	bl GF_AssertFail
_0200B026:
	add r0, r4, #0
	bl sub_0200A828
	str r0, [sp]
	add r0, r4, #0
	bl sub_0200A8B0
	str r0, [sp, #4]
	add r0, r4, #0
	bl sub_0200A7FC
	str r0, [sp, #0xc]
	add r0, r4, #0
	bl sub_0200A8DC
	str r0, [sp, #8]
	add r0, sp, #0
	bl sub_020226A4
	add sp, #0x10
	pop {r4, pc}
	thumb_func_end sub_0200B00C

	thumb_func_start sub_0200B050
sub_0200B050: ; 0x0200B050
	push {r4, r5, r6, lr}
	add r5, r0, #0
	bne _0200B05A
	bl GF_AssertFail
_0200B05A:
	ldr r0, [r5, #4]
	mov r6, #0
	cmp r0, #0
	ble _0200B082
	add r4, r6, #0
_0200B064:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200B078
	bl sub_0200B00C
	cmp r0, #0
	bne _0200B078
	bl GF_AssertFail
_0200B078:
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, r4, #4
	cmp r6, r0
	blt _0200B064
_0200B082:
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0200B050

	thumb_func_start sub_0200B084
sub_0200B084: ; 0x0200B084
	push {r3, r4, r5, lr}
	add r5, r0, #0
	bne _0200B08E
	bl GF_AssertFail
_0200B08E:
	add r0, r5, #0
	bl sub_0200A7FC
	add r4, r0, #0
	add r0, r5, #0
	bl sub_0200A828
	add r1, r0, #0
	add r0, r4, #0
	bl sub_020226E4
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200B084

	thumb_func_start sub_0200B0A8
sub_0200B0A8: ; 0x0200B0A8
	push {r4, lr}
	add r4, r0, #0
	bne _0200B0B2
	bl GF_AssertFail
_0200B0B2:
	add r0, r4, #0
	bl sub_0200A8A0
	cmp r0, #1
	beq _0200B0C0
	bl GF_AssertFail
_0200B0C0:
	add r0, r4, #0
	bl sub_0200A7FC
	bl sub_02022744
	pop {r4, pc}
	thumb_func_end sub_0200B0A8

	thumb_func_start sub_0200B0CC
sub_0200B0CC: ; 0x0200B0CC
	push {r4, r5, r6, lr}
	add r5, r0, #0
	bne _0200B0D6
	bl GF_AssertFail
_0200B0D6:
	ldr r0, [r5, #4]
	mov r6, #0
	cmp r0, #0
	ble _0200B0F6
	add r4, r6, #0
_0200B0E0:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200B0EC
	bl sub_0200B0A8
_0200B0EC:
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, r4, #4
	cmp r6, r0
	blt _0200B0E0
_0200B0F6:
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0200B0CC

	thumb_func_start sub_0200B0F8
sub_0200B0F8: ; 0x0200B0F8
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _0200B106
	bl GF_AssertFail
_0200B106:
	add r0, r5, #0
	bl sub_0200A8A0
	cmp r0, #1
	beq _0200B114
	bl GF_AssertFail
_0200B114:
	add r0, r5, #0
	bl sub_0200A7FC
	cmp r4, #0
	beq _0200B126
	add r1, r4, #0
	bl sub_020227D4
	pop {r3, r4, r5, pc}
_0200B126:
	bl sub_020227AC
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0200B0F8

	thumb_func_start sub_0200B12C
sub_0200B12C: ; 0x0200B12C
	push {r4, lr}
	add r4, r1, #0
	mov r1, #0
	bl sub_0200B0F8
	add r1, r4, #0
	bl sub_020B8078
	mov r1, #0
	mvn r1, r1
	cmp r0, r1
	beq _0200B14C
	asr r1, r0, #4
	lsr r1, r1, #0x1b
	add r1, r0, r1
	asr r0, r1, #5
_0200B14C:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200B12C

	thumb_func_start sub_0200B150
sub_0200B150: ; 0x0200B150
	push {r3, r4, lr}
	sub sp, #0x14
	add r4, r0, #0
	cmp r4, #4
	bge _0200B164
	mov r0, #4
	cmp r1, #0x7c
	ble _0200B164
	sub r4, r0, r4
	sub r1, r1, r4
_0200B164:
	cmp r2, #1
	bge _0200B174
	mov r4, #1
	cmp r3, #0x1e
	ble _0200B176
	sub r2, r4, r2
	sub r3, r3, r2
	b _0200B176
_0200B174:
	add r4, r2, #0
_0200B176:
	ldr r2, [sp, #0x20]
	str r2, [sp]
	ldr r2, [sp, #0x24]
	str r2, [sp, #4]
	ldr r2, [sp, #0x28]
	str r2, [sp, #8]
	ldr r2, [sp, #0x2c]
	str r2, [sp, #0xc]
	ldr r2, [sp, #0x30]
	str r2, [sp, #0x10]
	add r2, r4, #0
	bl sub_0200B194
	add sp, #0x14
	pop {r3, r4, pc}
	thumb_func_end sub_0200B150

	thumb_func_start sub_0200B194
sub_0200B194: ; 0x0200B194
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r5, r0, #0
	ldr r0, _0200B220 ; =0x021D0EB0
	add r4, r1, #0
	ldr r0, [r0]
	add r6, r2, #0
	add r7, r3, #0
	cmp r0, #0
	beq _0200B1AC
	bl GF_AssertFail
_0200B1AC:
	ldr r0, [sp, #0x30]
	mov r1, #0x3c
	bl sub_0201AA8C
	ldr r1, _0200B220 ; =0x021D0EB0
	cmp r0, #0
	str r0, [r1]
	bne _0200B1C0
	bl GF_AssertFail
_0200B1C0:
	ldr r1, _0200B220 ; =0x021D0EB0
	lsl r3, r6, #0x10
	ldr r2, [sp, #0x30]
	ldr r0, [r1]
	lsr r3, r3, #0x10
	str r2, [r0, #0x38]
	lsl r0, r7, #0x10
	lsr r0, r0, #0x10
	str r0, [sp]
	mov r0, #0
	str r0, [sp, #4]
	ldr r0, [r1]
	lsl r1, r5, #0x10
	lsl r2, r4, #0x10
	lsr r1, r1, #0x10
	lsr r2, r2, #0x10
	bl sub_020B7994
	cmp r0, #0
	bne _0200B1EC
	bl GF_AssertFail
_0200B1EC:
	ldr r0, [sp, #0x2c]
	ldr r1, [sp, #0x20]
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	ldr r0, _0200B220 ; =0x021D0EB0
	ldr r2, [sp, #0x24]
	ldr r3, [sp, #0x28]
	ldr r0, [r0]
	lsl r1, r1, #0x10
	lsl r2, r2, #0x10
	lsl r3, r3, #0x10
	add r0, #0x1c
	lsr r1, r1, #0x10
	lsr r2, r2, #0x10
	lsr r3, r3, #0x10
	bl sub_020B7994
	cmp r0, #0
	bne _0200B21C
	bl GF_AssertFail
_0200B21C:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200B220: .word 0x021D0EB0
	thumb_func_end sub_0200B194

	thumb_func_start sub_0200B224
sub_0200B224: ; 0x0200B224
	push {r3, lr}
	ldr r0, _0200B240 ; =0x021D0EB0
	ldr r0, [r0]
	cmp r0, #0
	beq _0200B23C
	bl sub_020B7FE4
	ldr r0, _0200B240 ; =0x021D0EB0
	ldr r0, [r0]
	add r0, #0x1c
	bl sub_020B7FE4
_0200B23C:
	pop {r3, pc}
	nop
_0200B240: .word 0x021D0EB0
	thumb_func_end sub_0200B224

	thumb_func_start sub_0200B244
sub_0200B244: ; 0x0200B244
	push {r3, lr}
	ldr r0, _0200B278 ; =0x021D0EB0
	ldr r0, [r0]
	cmp r0, #0
	bne _0200B252
	bl GF_AssertFail
_0200B252:
	ldr r0, _0200B278 ; =0x021D0EB0
	ldr r0, [r0]
	ldr r0, [r0, #0x38]
	bl sub_0200B2E0
	ldr r0, _0200B278 ; =0x021D0EB0
	ldr r0, [r0]
	ldr r0, [r0, #0x38]
	bl sub_0200B2E8
	ldr r0, _0200B278 ; =0x021D0EB0
	ldr r0, [r0]
	bl sub_0201AB0C
	ldr r0, _0200B278 ; =0x021D0EB0
	mov r1, #0
	str r1, [r0]
	pop {r3, pc}
	nop
_0200B278: .word 0x021D0EB0
	thumb_func_end sub_0200B244

	thumb_func_start sub_0200B27C
sub_0200B27C: ; 0x0200B27C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r6, r0, #0
	ldr r0, _0200B2C8 ; =0x021D0EB0
	add r7, r1, #0
	ldr r0, [r0]
	add r5, r2, #0
	add r4, r3, #0
	cmp r0, #0
	bne _0200B294
	bl GF_AssertFail
_0200B294:
	cmp r5, #1
	bne _0200B2B0
	ldr r0, _0200B2CC ; =sub_02025C98
	ldr r2, _0200B2D0 ; =sub_0200B2F0
	str r0, [sp]
	str r5, [sp, #4]
	ldr r3, _0200B2D4 ; =sub_0200B334
	add r0, r6, #0
	add r1, r7, #0
	str r4, [sp, #8]
	bl sub_02025C54
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_0200B2B0:
	ldr r0, _0200B2CC ; =sub_02025C98
	ldr r2, _0200B2D8 ; =sub_0200B310
	str r0, [sp]
	str r5, [sp, #4]
	ldr r3, _0200B2DC ; =sub_0200B358
	add r0, r6, #0
	add r1, r7, #0
	str r4, [sp, #8]
	bl sub_02025C54
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0200B2C8: .word 0x021D0EB0
_0200B2CC: .word sub_02025C98
_0200B2D0: .word sub_0200B2F0
_0200B2D4: .word sub_0200B334
_0200B2D8: .word sub_0200B310
_0200B2DC: .word sub_0200B358
	thumb_func_end sub_0200B27C

	thumb_func_start sub_0200B2E0
sub_0200B2E0: ; 0x0200B2E0
	ldr r3, _0200B2E4 ; =sub_02024BBC
	bx r3
	.align 2, 0
_0200B2E4: .word sub_02024BBC
	thumb_func_end sub_0200B2E0

	thumb_func_start sub_0200B2E8
sub_0200B2E8: ; 0x0200B2E8
	ldr r3, _0200B2EC ; =sub_02024BF4
	bx r3
	.align 2, 0
_0200B2EC: .word sub_02024BF4
	thumb_func_end sub_0200B2E8

	thumb_func_start sub_0200B2F0
sub_0200B2F0: ; 0x0200B2F0
	push {r4, lr}
	add r3, r0, #0
	ldr r0, _0200B30C ; =0x021D0EB0
	add r2, r1, #0
	ldr r0, [r0]
	add r1, r3, #0
	bl sub_020B7B10
	add r4, r0, #0
	bne _0200B308
	bl GF_AssertFail
_0200B308:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_0200B30C: .word 0x021D0EB0
	thumb_func_end sub_0200B2F0

	thumb_func_start sub_0200B310
sub_0200B310: ; 0x0200B310
	push {r4, lr}
	add r3, r0, #0
	ldr r0, _0200B330 ; =0x021D0EB0
	add r2, r1, #0
	ldr r0, [r0]
	add r1, r3, #0
	add r0, #0x1c
	bl sub_020B7B10
	add r4, r0, #0
	bne _0200B32A
	bl GF_AssertFail
_0200B32A:
	add r0, r4, #0
	pop {r4, pc}
	nop
_0200B330: .word 0x021D0EB0
	thumb_func_end sub_0200B310

	thumb_func_start sub_0200B334
sub_0200B334: ; 0x0200B334
	push {r4, lr}
	add r1, r0, #0
	ldr r0, _0200B350 ; =0x021D0EB0
	ldr r0, [r0]
	bl sub_020B7BF4
	add r4, r0, #0
	ldr r0, _0200B354 ; =0x0000FFFE
	cmp r4, r0
	bne _0200B34C
	bl GF_AssertFail
_0200B34C:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_0200B350: .word 0x021D0EB0
_0200B354: .word 0x0000FFFE
	thumb_func_end sub_0200B334

	thumb_func_start sub_0200B358
sub_0200B358: ; 0x0200B358
	push {r4, lr}
	add r1, r0, #0
	ldr r0, _0200B378 ; =0x021D0EB0
	ldr r0, [r0]
	add r0, #0x1c
	bl sub_020B7BF4
	add r4, r0, #0
	ldr r0, _0200B37C ; =0x0000FFFE
	cmp r4, r0
	bne _0200B372
	bl GF_AssertFail
_0200B372:
	add r0, r4, #0
	pop {r4, pc}
	nop
_0200B378: .word 0x021D0EB0
_0200B37C: .word 0x0000FFFE
	thumb_func_end sub_0200B358

	thumb_func_start sub_0200B380
sub_0200B380: ; 0x0200B380
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	mov r0, #0x10
	ldrsb r2, [r5, r0]
	mov r0, #0x14
	ldrsh r0, [r5, r0]
	add r1, r2, #0
	mov r7, #0x1a
	ldrsh r2, [r5, r7]
	mul r1, r0
	mov r6, #0xa
	ldrsh r0, [r5, r6]
	add r1, r2, r1
	mov r4, #0
	cmp r0, r1
	beq _0200B3DE
	cmp r2, r0
	beq _0200B3DE
	strh r1, [r5, #0x1a]
	ldrh r3, [r5, #0x18]
	ldrh r0, [r5, #0x16]
	add r2, r5, #0
	add r1, r5, #0
	add r0, r3, r0
	strh r0, [r5, #0x18]
	ldrh r3, [r5, #0x18]
	ldrh r0, [r5, #8]
	add r2, #0x1a
	add r1, #0x18
	cmp r3, r0
	blo _0200B3E2
	mov r3, #0x10
	ldrsh r0, [r2, r4]
	ldrsb r3, [r5, r3]
	add r0, r0, r3
	strh r0, [r2]
	ldrsh r2, [r5, r7]
	ldrsh r0, [r5, r6]
	cmp r2, r0
	beq _0200B3DA
	ldrh r2, [r1]
	ldrh r0, [r5, #8]
	sub r0, r2, r0
	strh r0, [r1]
	b _0200B3E2
_0200B3DA:
	mov r4, #1
	b _0200B3E2
_0200B3DE:
	strh r0, [r5, #0x1a]
	mov r4, #1
_0200B3E2:
	ldr r1, [r5, #4]
	mov r0, #1
	tst r0, r1
	beq _0200B3F8
	mov r2, #0x1a
	ldrsh r2, [r5, r2]
	ldr r0, _0200B414 ; =0x04000050
	ldr r1, [r5]
	bl sub_020CF178
	b _0200B40A
_0200B3F8:
	mov r0, #2
	tst r0, r1
	beq _0200B40A
	mov r2, #0x1a
	ldrsh r2, [r5, r2]
	ldr r0, _0200B418 ; =0x04001050
	ldr r1, [r5]
	bl sub_020CF178
_0200B40A:
	cmp r4, #1
	bne _0200B412
	mov r0, #0
	str r0, [r5, #0x1c]
_0200B412:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200B414: .word 0x04000050
_0200B418: .word 0x04001050
	thumb_func_end sub_0200B380

	thumb_func_start sub_0200B41C
sub_0200B41C: ; 0x0200B41C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r0, [r5, #0x1c]
	add r4, r1, #0
	add r6, r2, #0
	add r7, r3, #0
	cmp r0, #0
	beq _0200B430
	bl GF_AssertFail
_0200B430:
	ldr r1, [sp, #0x18]
	mov r0, #1
	lsl r1, r1, #0x18
	str r0, [r5, #0x1c]
	lsr r1, r1, #0x18
	str r1, [r5]
	ldr r1, [sp, #0x1c]
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	str r1, [r5, #4]
	strh r4, [r5, #8]
	strh r6, [r5, #0xa]
	strh r7, [r5, #0x1a]
	sub r1, r7, r6
	strh r1, [r5, #0x12]
	mov r1, #0x12
	ldrsh r2, [r5, r1]
	cmp r2, #0
	ble _0200B45C
	sub r1, #0x13
	strb r1, [r5, #0x10]
	b _0200B466
_0200B45C:
	strb r0, [r5, #0x10]
	ldrsh r0, [r5, r1]
	sub r1, #0x13
	mul r1, r0
	strh r1, [r5, #0x12]
_0200B466:
	mov r0, #0x12
	ldrsh r0, [r5, r0]
	add r1, r4, #0
	bl sub_020F2998
	strh r0, [r5, #0x14]
	mov r0, #0x12
	ldrsh r0, [r5, r0]
	add r1, r4, #0
	bl sub_020F2998
	strh r1, [r5, #0x16]
	mov r0, #0
	strh r0, [r5, #0x18]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200B41C

	thumb_func_start sub_0200B484
sub_0200B484: ; 0x0200B484
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r5, r0, #0
	add r7, r1, #0
	add r6, r2, #0
	add r4, r3, #0
	cmp r5, #0
	beq _0200B4DA
	ldr r1, [sp, #0x20]
	mov r0, #1
	tst r0, r1
	beq _0200B4B6
	ldr r0, _0200B4E0 ; =0x04000050
	add r1, r4, #0
	bl sub_020CF178
	str r4, [sp]
	mov r0, #1
	str r0, [sp, #4]
	ldr r0, _0200B4E4 ; =0x021D0ED4
	add r1, r5, #0
	add r2, r7, #0
	add r3, r6, #0
	bl sub_0200B41C
_0200B4B6:
	ldr r1, [sp, #0x20]
	mov r0, #2
	tst r0, r1
	beq _0200B4DA
	ldr r0, _0200B4E8 ; =0x04001050
	add r1, r4, #0
	add r2, r6, #0
	bl sub_020CF178
	str r4, [sp]
	mov r0, #2
	str r0, [sp, #4]
	ldr r0, _0200B4EC ; =0x021D0EB4
	add r1, r5, #0
	add r2, r7, #0
	add r3, r6, #0
	bl sub_0200B41C
_0200B4DA:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200B4E0: .word 0x04000050
_0200B4E4: .word 0x021D0ED4
_0200B4E8: .word 0x04001050
_0200B4EC: .word 0x021D0EB4
	thumb_func_end sub_0200B484

	thumb_func_start sub_0200B4F0
sub_0200B4F0: ; 0x0200B4F0
	push {r4, r5, r6, lr}
	add r5, r0, #0
	add r4, r2, #0
	mov r0, #1
	add r6, r1, #0
	tst r0, r4
	beq _0200B506
	ldr r0, _0200B520 ; =0x04000050
	add r2, r5, #0
	bl sub_020CF178
_0200B506:
	mov r0, #2
	tst r0, r4
	beq _0200B516
	ldr r0, _0200B524 ; =0x04001050
	add r1, r6, #0
	add r2, r5, #0
	bl sub_020CF178
_0200B516:
	add r0, r4, #0
	bl sub_0200B554
	pop {r4, r5, r6, pc}
	nop
_0200B520: .word 0x04000050
_0200B524: .word 0x04001050
	thumb_func_end sub_0200B4F0

	thumb_func_start sub_0200B528
sub_0200B528: ; 0x0200B528
	push {r3, lr}
	ldr r0, _0200B548 ; =0x021D0ED4
	mov r1, #0
	mov r2, #0x20
	bl sub_020D4994
	ldr r0, _0200B54C ; =0x021D0EB4
	mov r1, #0
	mov r2, #0x20
	bl sub_020D4994
	ldr r0, _0200B550 ; =0x021D0EB4
	mov r1, #0
	str r1, [r0, #0x3c]
	str r1, [r0, #0x1c]
	pop {r3, pc}
	.align 2, 0
_0200B548: .word 0x021D0ED4
_0200B54C: .word 0x021D0EB4
_0200B550: .word 0x021D0EB4
	thumb_func_end sub_0200B528

	thumb_func_start sub_0200B554
sub_0200B554: ; 0x0200B554
	push {r4, lr}
	add r4, r0, #0
	mov r0, #1
	tst r0, r4
	beq _0200B56E
	ldr r0, _0200B588 ; =0x021D0ED4
	mov r1, #0
	mov r2, #0x20
	bl sub_020D4994
	ldr r0, _0200B58C ; =0x021D0EB4
	mov r1, #0
	str r1, [r0, #0x3c]
_0200B56E:
	mov r0, #2
	tst r0, r4
	beq _0200B584
	ldr r0, _0200B590 ; =0x021D0EB4
	mov r1, #0
	mov r2, #0x20
	bl sub_020D4994
	ldr r0, _0200B58C ; =0x021D0EB4
	mov r1, #0
	str r1, [r0, #0x1c]
_0200B584:
	pop {r4, pc}
	nop
_0200B588: .word 0x021D0ED4
_0200B58C: .word 0x021D0EB4
_0200B590: .word 0x021D0EB4
	thumb_func_end sub_0200B554

	thumb_func_start sub_0200B594
sub_0200B594: ; 0x0200B594
	push {r3, lr}
	ldr r0, _0200B5B4 ; =0x021D0EB4
	ldr r0, [r0, #0x3c]
	cmp r0, #0
	beq _0200B5A4
	ldr r0, _0200B5B8 ; =0x021D0ED4
	bl sub_0200B380
_0200B5A4:
	ldr r0, _0200B5B4 ; =0x021D0EB4
	ldr r0, [r0, #0x1c]
	cmp r0, #0
	beq _0200B5B2
	ldr r0, _0200B5BC ; =0x021D0EB4
	bl sub_0200B380
_0200B5B2:
	pop {r3, pc}
	.align 2, 0
_0200B5B4: .word 0x021D0EB4
_0200B5B8: .word 0x021D0ED4
_0200B5BC: .word 0x021D0EB4
	thumb_func_end sub_0200B594

	thumb_func_start sub_0200B5C0
sub_0200B5C0: ; 0x0200B5C0
	cmp r0, #3
	bne _0200B5D6
	ldr r0, _0200B5FC ; =0x021D0EB4
	ldr r1, [r0, #0x3c]
	cmp r1, #0
	bne _0200B5F6
	ldr r0, [r0, #0x1c]
	cmp r0, #0
	bne _0200B5F6
	mov r0, #1
	bx lr
_0200B5D6:
	cmp r0, #1
	bne _0200B5E6
	ldr r0, _0200B5FC ; =0x021D0EB4
	ldr r0, [r0, #0x3c]
	cmp r0, #0
	bne _0200B5F6
	mov r0, #1
	bx lr
_0200B5E6:
	cmp r0, #2
	bne _0200B5F6
	ldr r0, _0200B5FC ; =0x021D0EB4
	ldr r0, [r0, #0x1c]
	cmp r0, #0
	bne _0200B5F6
	mov r0, #1
	bx lr
_0200B5F6:
	mov r0, #0
	bx lr
	nop
_0200B5FC: .word 0x021D0EB4
	thumb_func_end sub_0200B5C0

	thumb_func_start sub_0200B600
sub_0200B600: ; 0x0200B600
	lsl r1, r1, #8
	orr r1, r0
	ldr r0, _0200B60C ; =0x021D0EB4
	str r1, [r0, #0x20]
	bx lr
	nop
_0200B60C: .word 0x021D0EB4
	thumb_func_end sub_0200B600

	thumb_func_start sub_0200B610
sub_0200B610: ; 0x0200B610
	ldr r3, _0200B614 ; =sub_02007524
	bx r3
	.align 2, 0
_0200B614: .word sub_02007524
	thumb_func_end sub_0200B610

	thumb_func_start sub_0200B618
sub_0200B618: ; 0x0200B618
	ldr r3, _0200B61C ; =sub_0201AB0C
	bx r3
	.align 2, 0
_0200B61C: .word sub_0201AB0C
	thumb_func_end sub_0200B618

	thumb_func_start sub_0200B620
sub_0200B620: ; 0x0200B620
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r3, r0, #0
	ldrh r0, [r3]
	add r5, r1, #0
	add r4, r2, #0
	cmp r5, r0
	bhs _0200B690
	lsl r0, r5, #3
	add r0, r3, r0
	ldr r2, [r0, #4]
	ldr r1, [r0, #8]
	ldr r6, _0200B698 ; =0x000002FD
	str r2, [sp]
	str r1, [sp, #4]
	ldrh r0, [r3, #2]
	add r7, r5, #1
	mul r6, r0
	add r0, r7, #0
	mul r0, r6
	lsl r0, r0, #0x10
	lsr r6, r0, #0x10
	lsl r0, r6, #0x10
	orr r0, r6
	eor r2, r0
	eor r0, r1
	str r0, [sp, #4]
	str r2, [sp]
	add r1, r3, r2
	add r0, r4, #0
	add r2, sp, #0
	bl sub_0200B74C
	ldr r2, [sp, #4]
	ldr r0, _0200B69C ; =0x00091BD3
	add r1, r7, #0
	mul r0, r1
	lsl r0, r0, #0x10
	lsr r5, r0, #0x10
	sub r3, r2, #1
	cmp r2, #0
	beq _0200B694
	ldr r0, _0200B6A0 ; =0x0000493D
_0200B676:
	ldrh r1, [r4]
	eor r1, r5
	strh r1, [r4]
	add r1, r5, r0
	lsl r1, r1, #0x10
	lsr r5, r1, #0x10
	add r1, r3, #0
	add r4, r4, #2
	sub r3, r3, #1
	cmp r1, #0
	bne _0200B676
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_0200B690:
	bl GF_AssertFail
_0200B694:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200B698: .word 0x000002FD
_0200B69C: .word 0x00091BD3
_0200B6A0: .word 0x0000493D
	thumb_func_end sub_0200B620

	thumb_func_start sub_0200B6A4
sub_0200B6A4: ; 0x0200B6A4
	push {r4, r5, r6, lr}
	sub sp, #0x10
	add r5, r1, #0
	add r1, r3, #0
	add r4, r2, #0
	bl sub_02007688
	add r6, r0, #0
	beq _0200B73A
	add r1, sp, #0xc
	str r1, [sp]
	add r1, r5, #0
	mov r2, #0
	mov r3, #4
	bl sub_0200782C
	add r0, sp, #4
	lsl r2, r4, #3
	str r0, [sp]
	add r0, r6, #0
	add r1, r5, #0
	add r2, r2, #4
	mov r3, #8
	bl sub_0200782C
	add r0, sp, #4
	ldrh r2, [r0, #0xa]
	ldr r0, _0200B740 ; =0x000002FD
	add r1, r4, #1
	mul r0, r2
	mul r0, r1
	lsl r0, r0, #0x10
	lsr r1, r0, #0x10
	lsl r0, r1, #0x10
	orr r1, r0
	ldr r0, [sp, #4]
	eor r0, r1
	str r0, [sp, #4]
	ldr r0, [sp, #8]
	eor r0, r1
	str r0, [sp, #8]
	ldr r0, [sp, #0x20]
	add r1, r5, #0
	str r0, [sp]
	ldr r3, [sp, #8]
	ldr r2, [sp, #4]
	add r0, r6, #0
	lsl r3, r3, #1
	bl sub_0200782C
	ldr r2, _0200B744 ; =0x00091BD3
	add r3, r4, #1
	mul r2, r3
	lsl r2, r2, #0x10
	ldr r0, [sp, #8]
	lsr r3, r2, #0x10
	sub r2, r0, #1
	ldr r1, [sp, #0x20]
	cmp r0, #0
	beq _0200B734
	ldr r0, _0200B748 ; =0x0000493D
_0200B71E:
	ldrh r4, [r1]
	eor r4, r3
	strh r4, [r1]
	add r3, r3, r0
	lsl r3, r3, #0x10
	add r4, r2, #0
	add r1, r1, #2
	lsr r3, r3, #0x10
	sub r2, r2, #1
	cmp r4, #0
	bne _0200B71E
_0200B734:
	add r0, r6, #0
	bl sub_0200770C
_0200B73A:
	add sp, #0x10
	pop {r4, r5, r6, pc}
	nop
_0200B740: .word 0x000002FD
_0200B744: .word 0x00091BD3
_0200B748: .word 0x0000493D
	thumb_func_end sub_0200B6A4

	thumb_func_start sub_0200B74C
sub_0200B74C: ; 0x0200B74C
	add r3, r0, #0
	add r0, r1, #0
	add r1, r3, #0
	ldr r2, [r2, #4]
	ldr r3, _0200B75C ; =sub_020D47B8
	lsl r2, r2, #1
	bx r3
	nop
_0200B75C: .word sub_020D47B8
	thumb_func_end sub_0200B74C

	thumb_func_start sub_0200B760
sub_0200B760: ; 0x0200B760
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r5, r0, #0
	ldrh r0, [r5]
	add r4, r1, #0
	str r2, [sp]
	cmp r4, r0
	bhs _0200B7F6
	lsl r0, r4, #3
	add r0, r5, r0
	ldr r3, [r0, #4]
	ldr r2, [r0, #8]
	ldrh r1, [r5, #2]
	ldr r6, _0200B804 ; =0x000002FD
	add r0, r4, #1
	mul r6, r1
	add r1, r0, #0
	mul r1, r6
	lsl r0, r1, #0x10
	lsr r1, r0, #0x10
	lsl r0, r1, #0x10
	orr r1, r0
	add r0, r3, #0
	add r6, r2, #0
	str r3, [sp, #8]
	eor r0, r1
	eor r6, r1
	str r0, [sp, #8]
	lsl r0, r6, #1
	str r0, [sp, #4]
	str r2, [sp, #0xc]
	ldr r1, [sp, #4]
	mov r0, #0
	str r6, [sp, #0xc]
	bl sub_0201AACC
	add r7, r0, #0
	beq _0200B800
	ldr r0, [sp, #8]
	ldr r2, [sp, #4]
	add r0, r5, r0
	add r1, r7, #0
	bl sub_020D47B8
	ldr r1, _0200B808 ; =0x00091BD3
	add r2, r4, #1
	mul r1, r2
	lsl r1, r1, #0x10
	lsr r2, r1, #0x10
	add r0, r7, #0
	sub r1, r6, #1
	cmp r6, #0
	beq _0200B7E2
	ldr r3, _0200B80C ; =0x0000493D
_0200B7CC:
	ldrh r4, [r0]
	eor r4, r2
	strh r4, [r0]
	add r2, r2, r3
	lsl r2, r2, #0x10
	add r4, r1, #0
	add r0, r0, #2
	lsr r2, r2, #0x10
	sub r1, r1, #1
	cmp r4, #0
	bne _0200B7CC
_0200B7E2:
	ldr r0, [sp]
	add r1, r7, #0
	add r2, r6, #0
	bl sub_02026A04
	add r0, r7, #0
	bl sub_0201AB0C
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
_0200B7F6:
	bl GF_AssertFail
	ldr r0, [sp]
	bl sub_020263AC
_0200B800:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200B804: .word 0x000002FD
_0200B808: .word 0x00091BD3
_0200B80C: .word 0x0000493D
	thumb_func_end sub_0200B760

	thumb_func_start sub_0200B810
sub_0200B810: ; 0x0200B810
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r5, r0, #0
	ldrh r0, [r5]
	add r4, r1, #0
	str r2, [sp]
	cmp r4, r0
	bhs _0200B8B8
	lsl r0, r4, #3
	add r0, r5, r0
	ldr r3, [r0, #4]
	ldr r2, [r0, #8]
	ldrh r1, [r5, #2]
	ldr r6, _0200B8C8 ; =0x000002FD
	add r0, r4, #1
	mul r6, r1
	add r1, r0, #0
	mul r1, r6
	lsl r0, r1, #0x10
	lsr r1, r0, #0x10
	lsl r0, r1, #0x10
	orr r1, r0
	add r0, r3, #0
	add r6, r2, #0
	str r3, [sp, #8]
	eor r0, r1
	eor r6, r1
	str r0, [sp, #8]
	lsl r0, r6, #1
	str r0, [sp, #4]
	str r2, [sp, #0xc]
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r6, [sp, #0xc]
	bl sub_0201AACC
	add r7, r0, #0
	beq _0200B8B2
	ldr r0, [sp, #8]
	ldr r2, [sp, #4]
	add r0, r5, r0
	add r1, r7, #0
	bl sub_020D47B8
	ldr r1, _0200B8CC ; =0x00091BD3
	add r2, r4, #1
	mul r1, r2
	lsl r1, r1, #0x10
	lsr r2, r1, #0x10
	add r0, r7, #0
	sub r1, r6, #1
	cmp r6, #0
	beq _0200B892
	ldr r3, _0200B8D0 ; =0x0000493D
_0200B87C:
	ldrh r4, [r0]
	eor r4, r2
	strh r4, [r0]
	add r2, r2, r3
	lsl r2, r2, #0x10
	add r4, r1, #0
	add r0, r0, #2
	lsr r2, r2, #0x10
	sub r1, r1, #1
	cmp r4, #0
	bne _0200B87C
_0200B892:
	ldr r1, [sp]
	add r0, r6, #0
	bl sub_02026354
	add r4, r0, #0
	beq _0200B8A6
	add r1, r7, #0
	add r2, r6, #0
	bl sub_02026A04
_0200B8A6:
	add r0, r7, #0
	bl sub_0201AB0C
	add sp, #0x10
	add r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200B8B2:
	add sp, #0x10
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200B8B8:
	bl GF_AssertFail
	ldr r1, [sp]
	mov r0, #4
	bl sub_02026354
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200B8C8: .word 0x000002FD
_0200B8CC: .word 0x00091BD3
_0200B8D0: .word 0x0000493D
	thumb_func_end sub_0200B810

	thumb_func_start sub_0200B8D4
sub_0200B8D4: ; 0x0200B8D4
	push {r3, r4, r5, r6, r7, lr}
	add r7, r3, #0
	add r5, r1, #0
	add r1, r7, #0
	add r4, r2, #0
	bl sub_02007688
	add r6, r0, #0
	beq _0200B8FA
	ldr r1, [sp, #0x18]
	add r2, r4, #0
	str r1, [sp]
	add r1, r5, #0
	add r3, r7, #0
	bl sub_0200B8FC
	add r0, r6, #0
	bl sub_0200770C
_0200B8FA:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200B8D4

	thumb_func_start sub_0200B8FC
sub_0200B8FC: ; 0x0200B8FC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	add r5, r2, #0
	add r2, sp, #0x10
	add r4, r3, #0
	str r2, [sp]
	mov r2, #0
	mov r3, #4
	add r7, r0, #0
	str r1, [sp, #4]
	bl sub_0200782C
	add r0, sp, #8
	ldrh r0, [r0, #8]
	cmp r5, r0
	bhs _0200B9AA
	add r0, sp, #8
	lsl r2, r5, #3
	str r0, [sp]
	ldr r1, [sp, #4]
	add r0, r7, #0
	add r2, r2, #4
	mov r3, #8
	bl sub_0200782C
	add r0, sp, #8
	ldrh r2, [r0, #0xa]
	ldr r0, _0200B9B8 ; =0x000002FD
	add r1, r5, #1
	mul r0, r2
	mul r0, r1
	lsl r0, r0, #0x10
	lsr r1, r0, #0x10
	lsl r0, r1, #0x10
	orr r1, r0
	ldr r0, [sp, #8]
	eor r0, r1
	str r0, [sp, #8]
	ldr r0, [sp, #0xc]
	eor r0, r1
	lsl r6, r0, #1
	str r0, [sp, #0xc]
	add r0, r4, #0
	add r1, r6, #0
	bl sub_0201AACC
	add r4, r0, #0
	beq _0200B9B4
	str r4, [sp]
	ldr r1, [sp, #4]
	ldr r2, [sp, #8]
	add r0, r7, #0
	add r3, r6, #0
	bl sub_0200782C
	ldr r2, _0200B9BC ; =0x00091BD3
	add r3, r5, #1
	mul r2, r3
	lsl r2, r2, #0x10
	ldr r0, [sp, #0xc]
	lsr r3, r2, #0x10
	add r1, r4, #0
	sub r2, r0, #1
	cmp r0, #0
	beq _0200B996
	ldr r0, _0200B9C0 ; =0x0000493D
_0200B980:
	ldrh r5, [r1]
	eor r5, r3
	strh r5, [r1]
	add r3, r3, r0
	lsl r3, r3, #0x10
	add r5, r2, #0
	add r1, r1, #2
	lsr r3, r3, #0x10
	sub r2, r2, #1
	cmp r5, #0
	bne _0200B980
_0200B996:
	ldr r0, [sp, #0x28]
	ldr r2, [sp, #0xc]
	add r1, r4, #0
	bl sub_02026A04
	add r0, r4, #0
	bl sub_0201AB0C
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
_0200B9AA:
	bl GF_AssertFail
	ldr r0, [sp, #0x28]
	bl sub_020263AC
_0200B9B4:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0200B9B8: .word 0x000002FD
_0200B9BC: .word 0x00091BD3
_0200B9C0: .word 0x0000493D
	thumb_func_end sub_0200B8FC

	thumb_func_start sub_0200B9C4
sub_0200B9C4: ; 0x0200B9C4
	push {r3, r4, r5, r6, r7, lr}
	add r6, r3, #0
	add r5, r1, #0
	add r1, r6, #0
	add r4, r2, #0
	bl sub_02007688
	add r7, r0, #0
	beq _0200B9EA
	add r1, r5, #0
	add r2, r4, #0
	add r3, r6, #0
	bl sub_0200B9F8
	add r4, r0, #0
	add r0, r7, #0
	bl sub_0200770C
	b _0200B9F4
_0200B9EA:
	mov r0, #4
	add r1, r6, #0
	bl sub_02026354
	add r4, r0, #0
_0200B9F4:
	add r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200B9C4

	thumb_func_start sub_0200B9F8
sub_0200B9F8: ; 0x0200B9F8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	add r4, r2, #0
	add r2, sp, #0x14
	add r5, r3, #0
	str r2, [sp]
	mov r2, #0
	mov r3, #4
	add r7, r0, #0
	str r1, [sp, #4]
	bl sub_0200782C
	add r0, sp, #0xc
	ldrh r0, [r0, #8]
	cmp r4, r0
	bhs _0200BAB6
	add r0, sp, #0xc
	lsl r2, r4, #3
	str r0, [sp]
	ldr r1, [sp, #4]
	add r0, r7, #0
	add r2, r2, #4
	mov r3, #8
	bl sub_0200782C
	add r0, sp, #0xc
	ldrh r2, [r0, #0xa]
	ldr r0, _0200BAC8 ; =0x000002FD
	add r1, r4, #1
	mul r0, r2
	mul r0, r1
	lsl r0, r0, #0x10
	lsr r1, r0, #0x10
	lsl r0, r1, #0x10
	orr r1, r0
	ldr r0, [sp, #0xc]
	eor r0, r1
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x10]
	eor r0, r1
	add r1, r5, #0
	str r0, [sp, #0x10]
	bl sub_02026354
	str r0, [sp, #8]
	cmp r0, #0
	beq _0200BAB0
	ldr r0, [sp, #0x10]
	lsl r6, r0, #1
	add r0, r5, #0
	add r1, r6, #0
	bl sub_0201AACC
	add r5, r0, #0
	beq _0200BAB0
	str r5, [sp]
	ldr r1, [sp, #4]
	ldr r2, [sp, #0xc]
	add r0, r7, #0
	add r3, r6, #0
	bl sub_0200782C
	ldr r2, _0200BACC ; =0x00091BD3
	add r3, r4, #1
	mul r2, r3
	lsl r2, r2, #0x10
	ldr r0, [sp, #0x10]
	lsr r3, r2, #0x10
	add r1, r5, #0
	sub r2, r0, #1
	cmp r0, #0
	beq _0200BAA0
	ldr r0, _0200BAD0 ; =0x0000493D
_0200BA8A:
	ldrh r4, [r1]
	eor r4, r3
	strh r4, [r1]
	add r3, r3, r0
	lsl r3, r3, #0x10
	add r4, r2, #0
	add r1, r1, #2
	lsr r3, r3, #0x10
	sub r2, r2, #1
	cmp r4, #0
	bne _0200BA8A
_0200BAA0:
	ldr r0, [sp, #8]
	ldr r2, [sp, #0x10]
	add r1, r5, #0
	bl sub_02026A04
	add r0, r5, #0
	bl sub_0201AB0C
_0200BAB0:
	ldr r0, [sp, #8]
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
_0200BAB6:
	bl GF_AssertFail
	mov r0, #4
	add r1, r5, #0
	bl sub_02026354
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200BAC8: .word 0x000002FD
_0200BACC: .word 0x00091BD3
_0200BAD0: .word 0x0000493D
	thumb_func_end sub_0200B9F8

	thumb_func_start sub_0200BAD4
sub_0200BAD4: ; 0x0200BAD4
	ldrh r0, [r0]
	bx lr
	thumb_func_end sub_0200BAD4

	thumb_func_start sub_0200BAD8
sub_0200BAD8: ; 0x0200BAD8
	push {r3, lr}
	sub sp, #8
	add r3, r0, #0
	mov r0, #4
	add r2, r1, #0
	str r0, [sp]
	add r1, r3, #0
	add r0, sp, #4
	mov r3, #0
	bl sub_02007560
	add r0, sp, #4
	ldrh r0, [r0]
	add sp, #8
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_0200BAD8

	thumb_func_start sub_0200BAF8
sub_0200BAF8: ; 0x0200BAF8
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r1, #0
	add r0, r3, #0
	mov r1, #0xc
	add r7, r2, #0
	str r3, [sp]
	bl sub_0201AACC
	add r4, r0, #0
	beq _0200BB40
	cmp r5, #0
	bne _0200BB2C
	ldr r2, [sp]
	add r0, r6, #0
	add r1, r7, #0
	bl sub_0200B610
	str r0, [r4, #8]
	cmp r0, #0
	bne _0200BB36
	add r0, r4, #0
	bl sub_0201AB0C
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200BB2C:
	ldr r1, [sp]
	add r0, r6, #0
	bl sub_02007688
	str r0, [r4, #8]
_0200BB36:
	strh r5, [r4]
	strh r6, [r4, #4]
	ldr r0, [sp]
	strh r7, [r4, #6]
	strh r0, [r4, #2]
_0200BB40:
	add r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200BAF8

	thumb_func_start sub_0200BB44
sub_0200BB44: ; 0x0200BB44
	push {r4, lr}
	add r4, r0, #0
	beq _0200BB6A
	ldrh r0, [r4]
	cmp r0, #0
	beq _0200BB56
	cmp r0, #1
	beq _0200BB5E
	b _0200BB64
_0200BB56:
	ldr r0, [r4, #8]
	bl sub_0200B618
	b _0200BB64
_0200BB5E:
	ldr r0, [r4, #8]
	bl sub_0200770C
_0200BB64:
	add r0, r4, #0
	bl sub_0201AB0C
_0200BB6A:
	pop {r4, pc}
	thumb_func_end sub_0200BB44

	thumb_func_start sub_0200BB6C
sub_0200BB6C: ; 0x0200BB6C
	push {r3, r4, lr}
	sub sp, #4
	add r4, r0, #0
	ldrh r0, [r4]
	add r3, r1, #0
	cmp r0, #0
	beq _0200BB82
	cmp r0, #1
	beq _0200BB8C
	add sp, #4
	pop {r3, r4, pc}
_0200BB82:
	ldr r0, [r4, #8]
	bl sub_0200B760
	add sp, #4
	pop {r3, r4, pc}
_0200BB8C:
	str r2, [sp]
	add r2, r3, #0
	ldrh r1, [r4, #6]
	ldrh r3, [r4, #2]
	ldr r0, [r4, #8]
	bl sub_0200B8FC
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_0200BB6C

	thumb_func_start sub_0200BBA0
sub_0200BBA0: ; 0x0200BBA0
	push {r3, lr}
	add r3, r0, #0
	ldrh r0, [r3]
	add r2, r1, #0
	cmp r0, #0
	beq _0200BBB2
	cmp r0, #1
	beq _0200BBBC
	b _0200BBC8
_0200BBB2:
	ldrh r2, [r3, #2]
	ldr r0, [r3, #8]
	bl sub_0200B810
	pop {r3, pc}
_0200BBBC:
	ldr r0, [r3, #8]
	ldrh r1, [r3, #6]
	ldrh r3, [r3, #2]
	bl sub_0200B9F8
	pop {r3, pc}
_0200BBC8:
	mov r0, #0
	pop {r3, pc}
	thumb_func_end sub_0200BBA0

	thumb_func_start sub_0200BBCC
sub_0200BBCC: ; 0x0200BBCC
	push {r3, lr}
	add r1, r0, #0
	ldrh r0, [r1]
	cmp r0, #0
	beq _0200BBDC
	cmp r0, #1
	beq _0200BBE4
	b _0200BBEE
_0200BBDC:
	ldr r0, [r1, #8]
	bl sub_0200BAD4
	pop {r3, pc}
_0200BBE4:
	ldrh r0, [r1, #4]
	ldrh r1, [r1, #6]
	bl sub_0200BAD8
	pop {r3, pc}
_0200BBEE:
	mov r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_0200BBCC

	thumb_func_start sub_0200BBF4
sub_0200BBF4: ; 0x0200BBF4
	push {r3, r4, lr}
	sub sp, #4
	add r4, r0, #0
	ldrh r0, [r4]
	add r3, r1, #0
	cmp r0, #0
	beq _0200BC0A
	cmp r0, #1
	beq _0200BC14
	add sp, #4
	pop {r3, r4, pc}
_0200BC0A:
	ldr r0, [r4, #8]
	bl sub_0200B620
	add sp, #4
	pop {r3, r4, pc}
_0200BC14:
	str r2, [sp]
	add r2, r3, #0
	ldrh r0, [r4, #4]
	ldrh r1, [r4, #6]
	ldrh r3, [r4, #2]
	bl sub_0200B6A4
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_0200BBF4

	thumb_func_start sub_0200BC28
sub_0200BC28: ; 0x0200BC28
	push {r4, r5, r6, lr}
	add r5, r0, #0
	add r3, r1, #0
	add r4, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0xed
	bl sub_0200BAF8
	add r6, r0, #0
	add r1, r5, #0
	add r2, r4, #0
	bl sub_0200BBF4
	add r0, r6, #0
	bl sub_0200BB44
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0200BC28

	thumb_func_start sub_0200BC4C
sub_0200BC4C: ; 0x0200BC4C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r7, r0, #0
	mov r0, #0
	str r0, [sp, #4]
	add r5, r1, #0
	mov r0, #1
	ldr r1, [sp, #4]
	lsl r0, r0, #0xa
	add r6, r2, #0
	str r3, [sp]
	bl sub_02026354
	add r4, r0, #0
	beq _0200BC96
	add r0, r5, #0
	add r1, r6, #0
	bl sub_0200BBA0
	add r5, r0, #0
	beq _0200BC90
	add r0, r7, #0
	add r1, r4, #0
	add r2, r5, #0
	bl sub_0200CBBC
	ldr r1, [sp]
	add r0, r4, #0
	bl sub_0202642C
	str r0, [sp, #4]
	add r0, r5, #0
	bl sub_02026380
_0200BC90:
	add r0, r4, #0
	bl sub_02026380
_0200BC96:
	ldr r0, [sp, #4]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200BC4C

	thumb_func_start sub_0200BC9C
sub_0200BC9C: ; 0x0200BC9C
	push {r4, r5, r6, lr}
	add r5, r1, #0
	add r6, r0, #0
	ldr r2, _0200BCD8 ; =0x000002EE
	mov r0, #1
	mov r1, #0x1b
	add r3, r5, #0
	bl sub_0200BAF8
	add r4, r0, #0
	beq _0200BCD2
	mov r0, #0x10
	add r1, r5, #0
	bl sub_02026354
	add r5, r0, #0
	beq _0200BCC8
	add r0, r4, #0
	add r1, r6, #0
	add r2, r5, #0
	bl sub_0200BB6C
_0200BCC8:
	add r0, r4, #0
	bl sub_0200BB44
	add r0, r5, #0
	pop {r4, r5, r6, pc}
_0200BCD2:
	mov r0, #0
	pop {r4, r5, r6, pc}
	nop
_0200BCD8: .word 0x000002EE
	thumb_func_end sub_0200BC9C

	thumb_func_start sub_0200BCDC
sub_0200BCDC: ; 0x0200BCDC
	push {r3, r4, r5, lr}
	add r4, r0, #0
	add r3, r1, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0xed
	bl sub_0200BAF8
	add r5, r0, #0
	beq _0200BD02
	add r1, r4, #0
	bl sub_0200BBA0
	add r4, r0, #0
	add r0, r5, #0
	bl sub_0200BB44
	add r0, r4, #0
	pop {r3, r4, r5, pc}
_0200BD02:
	mov r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200BCDC

	thumb_func_start sub_0200BD08
sub_0200BD08: ; 0x0200BD08
	ldr r3, _0200BD14 ; =sub_0200BD18
	add r2, r0, #0
	mov r0, #8
	mov r1, #0x20
	bx r3
	nop
_0200BD14: .word sub_0200BD18
	thumb_func_end sub_0200BD08

	thumb_func_start sub_0200BD18
sub_0200BD18: ; 0x0200BD18
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r7, r0, #0
	str r1, [sp]
	str r2, [sp, #4]
	bne _0200BD28
	bl GF_AssertFail
_0200BD28:
	ldr r0, [sp]
	cmp r0, #0
	bne _0200BD32
	bl GF_AssertFail
_0200BD32:
	ldr r0, [sp, #4]
	mov r1, #0x10
	bl sub_0201AACC
	add r4, r0, #0
	beq _0200BD98
	ldr r0, [sp, #4]
	str r7, [r4]
	str r0, [r4, #4]
	ldr r0, [sp]
	ldr r1, [sp, #4]
	bl sub_02026354
	str r0, [r4, #0xc]
	cmp r0, #0
	beq _0200BD98
	ldr r0, [sp, #4]
	lsl r1, r7, #3
	bl sub_0201AACC
	str r0, [r4, #8]
	cmp r0, #0
	beq _0200BD98
	mov r6, #0
	cmp r7, #0
	bls _0200BD8E
	add r5, r6, #0
_0200BD68:
	add r0, r0, r5
	bl sub_0200BDF4
	ldr r0, [sp]
	ldr r1, [sp, #4]
	bl sub_02026354
	ldr r1, [r4, #8]
	add r1, r1, r5
	str r0, [r1, #4]
	ldr r0, [r4, #8]
	add r1, r0, r5
	ldr r1, [r1, #4]
	cmp r1, #0
	beq _0200BD8E
	add r6, r6, #1
	add r5, #8
	cmp r6, r7
	blo _0200BD68
_0200BD8E:
	cmp r6, r7
	bne _0200BD98
	add sp, #8
	add r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200BD98:
	mov r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200BD18

	thumb_func_start sub_0200BDA0
sub_0200BDA0: ; 0x0200BDA0
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5]
	cmp r0, #0
	bne _0200BDAE
	bl GF_AssertFail
_0200BDAE:
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _0200BDDC
	ldr r0, [r5]
	mov r6, #0
	cmp r0, #0
	bls _0200BDD6
	add r4, r6, #0
_0200BDBE:
	ldr r0, [r5, #8]
	add r0, r0, r4
	ldr r0, [r0, #4]
	cmp r0, #0
	beq _0200BDD6
	bl sub_02026380
	ldr r0, [r5]
	add r6, r6, #1
	add r4, #8
	cmp r6, r0
	blo _0200BDBE
_0200BDD6:
	ldr r0, [r5, #8]
	bl sub_0201AB0C
_0200BDDC:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	beq _0200BDE6
	bl sub_02026380
_0200BDE6:
	mov r0, #0
	str r0, [r5]
	add r0, r5, #0
	bl sub_0201AB0C
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0200BDA0

	thumb_func_start sub_0200BDF4
sub_0200BDF4: ; 0x0200BDF4
	bx lr
	.align 2, 0
	thumb_func_end sub_0200BDF4

	thumb_func_start sub_0200BDF8
sub_0200BDF8: ; 0x0200BDF8
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r0, [r5]
	add r6, r1, #0
	add r7, r2, #0
	add r4, r3, #0
	cmp r6, r0
	blo _0200BE0C
	bl GF_AssertFail
_0200BE0C:
	ldr r0, [r5]
	cmp r6, r0
	bhs _0200BE3A
	cmp r4, #0
	beq _0200BE2C
	ldrb r0, [r4]
	ldr r3, [r5, #8]
	lsl r2, r6, #3
	strb r0, [r3, r2]
	ldrb r0, [r4, #1]
	add r1, r3, r2
	strb r0, [r1, #1]
	ldrb r0, [r4, #2]
	strb r0, [r1, #2]
	ldrb r0, [r4, #3]
	strb r0, [r1, #3]
_0200BE2C:
	ldr r1, [r5, #8]
	lsl r0, r6, #3
	add r0, r1, r0
	ldr r0, [r0, #4]
	add r1, r7, #0
	bl sub_020263D4
_0200BE3A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200BDF8

	thumb_func_start sub_0200BE3C
sub_0200BE3C: ; 0x0200BE3C
	push {r3, lr}
	mov r3, #0
	bl sub_0200BDF8
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_0200BE3C

	thumb_func_start sub_0200BE48
sub_0200BE48: ; 0x0200BE48
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, r2, #0
	add r4, r1, #0
	bl sub_02028F54
	add r1, r0, #0
	ldr r0, [r5, #0xc]
	bl sub_020269A0
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200BE48

	thumb_func_start sub_0200BE6C
sub_0200BE6C: ; 0x0200BE6C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, r2, #0
	add r4, r1, #0
	bl sub_0202A960
	bl sub_0202A9A8
	add r1, r0, #0
	ldr r0, [r5, #0xc]
	bl sub_020269A0
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200BE6C

	thumb_func_start sub_0200BE94
sub_0200BE94: ; 0x0200BE94
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r0, r2, #0
	add r6, r1, #0
	bl sub_02028E9C
	add r7, r0, #0
	ldr r2, _0200BEE4 ; =0x000001BD
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r4, r0, #0
	add r0, r7, #0
	bl sub_02028F94
	cmp r0, #0
	bne _0200BEC6
	ldr r2, [r5, #0xc]
	add r0, r4, #0
	mov r1, #1
	bl sub_0200BB6C
	b _0200BED0
_0200BEC6:
	ldr r2, [r5, #0xc]
	add r0, r4, #0
	mov r1, #0
	bl sub_0200BB6C
_0200BED0:
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r6, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r4, #0
	bl sub_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200BEE4: .word 0x000001BD
	thumb_func_end sub_0200BE94

	thumb_func_start sub_0200BEE8
sub_0200BEE8: ; 0x0200BEE8
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r4, r1, #0
	add r6, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0xed
	bl sub_0200BAF8
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	add r7, r0, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200BEE8

	thumb_func_start sub_0200BF1C
sub_0200BF1C: ; 0x0200BF1C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	add r0, r2, #0
	mov r1, #5
	mov r2, #0
	bl sub_0206E640
	add r2, r0, #0
	lsl r2, r2, #0x10
	add r0, r5, #0
	add r1, r4, #0
	lsr r2, r2, #0x10
	bl sub_0200BEE8
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0200BF1C

	thumb_func_start sub_0200BF3C
sub_0200BF3C: ; 0x0200BF3C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	add r0, r2, #0
	mov r1, #5
	mov r2, #0
	bl sub_0206E640
	add r2, r0, #0
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0200BF58
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0200BF3C

	thumb_func_start sub_0200BF58
sub_0200BF58: ; 0x0200BF58
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r4, r1, #0
	add r6, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0xee
	bl sub_0200BAF8
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	add r7, r0, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200BF58

	thumb_func_start sub_0200BF8C
sub_0200BF8C: ; 0x0200BF8C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, r2, #0
	add r4, r1, #0
	ldr r2, [r5, #0xc]
	mov r1, #0x77
	bl sub_0206E640
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200BF8C

	thumb_func_start sub_0200BFAC
sub_0200BFAC: ; 0x0200BFAC
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, r2, #0
	add r4, r1, #0
	ldr r2, [r5, #0xc]
	mov r1, #0x91
	bl sub_0206E640
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200BFAC

	thumb_func_start sub_0200BFCC
sub_0200BFCC: ; 0x0200BFCC
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [sp, #0x14]
	add r4, r1, #0
	str r0, [sp]
	add r1, r2, #0
	add r2, r3, #0
	ldr r0, [r5, #0xc]
	ldr r3, [sp, #0x10]
	bl sub_02026464
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0200BFCC

	thumb_func_start sub_0200BFF0
sub_0200BFF0: ; 0x0200BFF0
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	add r4, r1, #0
	ldr r2, _0200C024 ; =0x000002EE
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C022
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C022:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C024: .word 0x000002EE
	thumb_func_end sub_0200BFF0

	thumb_func_start sub_0200C028
sub_0200C028: ; 0x0200C028
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	mov r2, #0x6a
	add r4, r1, #0
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	lsl r2, r2, #2
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C05C
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C05C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200C028

	thumb_func_start sub_0200C060
sub_0200C060: ; 0x0200C060
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	mov r2, #0x2d
	add r4, r1, #0
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	lsl r2, r2, #4
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C094
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C094:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200C060

	thumb_func_start sub_0200C098
sub_0200C098: ; 0x0200C098
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r4, r1, #0
	add r6, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0x22
	bl sub_0200BAF8
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	add r7, r0, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200C098

	thumb_func_start sub_0200C0CC
sub_0200C0CC: ; 0x0200C0CC
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r4, r1, #0
	add r6, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0xde
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C0FE
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C0FE:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200C0CC

	thumb_func_start sub_0200C100
sub_0200C100: ; 0x0200C100
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r4, r1, #0
	add r6, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0xdf
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C132
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C132:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200C100

	thumb_func_start sub_0200C134
sub_0200C134: ; 0x0200C134
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r4, r1, #0
	add r6, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0xe0
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C166
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C166:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200C134

	thumb_func_start sub_0200C168
sub_0200C168: ; 0x0200C168
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r4, r1, #0
	add r6, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0xe2
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C19A
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C19A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200C168

	thumb_func_start sub_0200C19C
sub_0200C19C: ; 0x0200C19C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	add r4, r1, #0
	ldr r2, _0200C1D0 ; =0x000002DF
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C1CE
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C1CE:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C1D0: .word 0x000002DF
	thumb_func_end sub_0200C19C

	thumb_func_start sub_0200C1D4
sub_0200C1D4: ; 0x0200C1D4
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	add r4, r1, #0
	ldr r2, _0200C208 ; =0x000001BB
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C206
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C206:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C208: .word 0x000001BB
	thumb_func_end sub_0200C1D4

	thumb_func_start sub_0200C20C
sub_0200C20C: ; 0x0200C20C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r4, r1, #0
	add r6, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0x2c
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C23E
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C23E:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200C20C

	thumb_func_start sub_0200C240
sub_0200C240: ; 0x0200C240
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	add r4, r1, #0
	ldr r2, _0200C274 ; =0x0000027F
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C272
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C272:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C274: .word 0x0000027F
	thumb_func_end sub_0200C240

	thumb_func_start sub_0200C278
sub_0200C278: ; 0x0200C278
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r7, r1, #0
	mov r1, #0x1b
	add r4, r2, #0
	add r2, r1, #0
	ldr r3, [r5, #4]
	mov r0, #1
	add r2, #0xfc
	bl sub_0200BAF8
	add r6, r0, #0
	beq _0200C2D2
	cmp r4, #0
	beq _0200C29E
	bl sub_0200BBCC
	cmp r4, r0
	blo _0200C2B6
_0200C29E:
	add r0, r6, #0
	bl sub_0200BB44
	mov r1, #0x1b
	add r2, r1, #0
	ldr r3, [r5, #4]
	mov r0, #1
	add r2, #0xfd
	bl sub_0200BAF8
	add r6, r0, #0
	mov r4, #2
_0200C2B6:
	ldr r2, [r5, #0xc]
	add r0, r6, #0
	add r1, r4, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r7, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r6, #0
	bl sub_0200BB44
_0200C2D2:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200C278

	thumb_func_start sub_0200C2D4
sub_0200C2D4: ; 0x0200C2D4
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	add r4, r1, #0
	ldr r2, _0200C308 ; =0x000002DA
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C306
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C306:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C308: .word 0x000002DA
	thumb_func_end sub_0200C2D4

	thumb_func_start sub_0200C30C
sub_0200C30C: ; 0x0200C30C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	add r4, r1, #0
	ldr r2, _0200C340 ; =0x000002DB
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C33E
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C33E:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C340: .word 0x000002DB
	thumb_func_end sub_0200C30C

	thumb_func_start sub_0200C344
sub_0200C344: ; 0x0200C344
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r4, r2, #0
	add r6, r1, #0
	ldr r2, _0200C378 ; =0x000002DA
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C376
	ldrb r1, [r4, #1]
	ldr r2, [r5, #0xc]
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r6, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C376:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C378: .word 0x000002DA
	thumb_func_end sub_0200C344

	thumb_func_start sub_0200C37C
sub_0200C37C: ; 0x0200C37C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	add r4, r1, #0
	ldr r2, _0200C3B0 ; =0x000002D9
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C3AE
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C3AE:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C3B0: .word 0x000002D9
	thumb_func_end sub_0200C37C

	thumb_func_start sub_0200C3B4
sub_0200C3B4: ; 0x0200C3B4
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r4, r1, #0
	mov r1, #0x1b
	add r6, r2, #0
	ldr r3, [r5, #4]
	mov r0, #1
	add r2, r1, #0
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C3E6
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C3E6:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200C3B4

	thumb_func_start sub_0200C3E8
sub_0200C3E8: ; 0x0200C3E8
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	add r2, #0x14
	add r4, r1, #0
	add r1, r2, #0
	bl sub_020269A0
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200C3E8

	thumb_func_start sub_0200C408
sub_0200C408: ; 0x0200C408
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	add r4, r1, #0
	ldr r2, _0200C43C ; =0x000002E1
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C43A
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C43A:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C43C: .word 0x000002E1
	thumb_func_end sub_0200C408

	thumb_func_start sub_0200C440
sub_0200C440: ; 0x0200C440
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r6, r1, #0
	add r4, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0x28
	bl sub_0200BAF8
	add r7, r0, #0
	cmp r4, #0
	beq _0200C460
	cmp r4, #1
	beq _0200C46A
	b _0200C474
_0200C460:
	ldr r2, [r5, #0xc]
	mov r1, #0x37
	bl sub_0200BB6C
	b _0200C47A
_0200C46A:
	ldr r2, [r5, #0xc]
	mov r1, #0x38
	bl sub_0200BB6C
	b _0200C47A
_0200C474:
	ldr r0, [r5, #0xc]
	bl sub_020263AC
_0200C47A:
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r6, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200C440

	thumb_func_start sub_0200C490
sub_0200C490: ; 0x0200C490
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, r2, #0
	add r4, r1, #0
	ldr r2, [r5, #0xc]
	add r1, r3, #0
	bl sub_02073F00
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200C490

	thumb_func_start sub_0200C4B0
sub_0200C4B0: ; 0x0200C4B0
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	add r4, r1, #0
	ldr r2, _0200C4E4 ; =0x0000031E
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C4E2
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C4E2:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C4E4: .word 0x0000031E
	thumb_func_end sub_0200C4B0

	thumb_func_start sub_0200C4E8
sub_0200C4E8: ; 0x0200C4E8
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r0, r2, #0
	add r6, r1, #0
	add r4, r3, #0
	bl sub_020916B4
	add r2, r0, #0
	beq _0200C526
	cmp r4, #0
	beq _0200C526
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C526
	ldr r2, [r5, #0xc]
	add r1, r4, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r6, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C526:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200C4E8

	thumb_func_start sub_0200C528
sub_0200C528: ; 0x0200C528
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	ldr r1, [r5, #0xc]
	add r0, r2, #0
	bl sub_02015B1C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0200C528

	thumb_func_start sub_0200C544
sub_0200C544: ; 0x0200C544
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r4, r1, #0
	add r6, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0xf
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C576
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C576:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200C544

	thumb_func_start sub_0200C578
sub_0200C578: ; 0x0200C578
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r4, r1, #0
	add r6, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0x10
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C5AA
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C5AA:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200C578

	thumb_func_start sub_0200C5AC
sub_0200C5AC: ; 0x0200C5AC
	push {r3, r4, r5, r6, r7, lr}
	add r4, r2, #0
	add r5, r0, #0
	add r0, r4, #0
	str r1, [sp]
	bl sub_02017FAC
	add r6, r0, #0
	add r0, r4, #0
	bl sub_02017FCC
	add r4, r0, #0
	ldr r2, _0200C64C ; =0x020F5C1C
	lsl r3, r6, #1
	ldrh r2, [r2, r3]
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C648
	bl sub_0200BBCC
	cmp r4, r0
	bhs _0200C606
	cmp r6, #0
	bne _0200C5E8
	cmp r4, #0
	beq _0200C606
_0200C5E8:
	ldr r2, [r5, #0xc]
	add r0, r7, #0
	add r1, r4, #0
	bl sub_0200BB6C
	ldr r1, [sp]
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
_0200C606:
	add r0, r7, #0
	bl sub_0200BB44
	cmp r6, #0
	bne _0200C61A
	cmp r4, #0
	bne _0200C61A
	ldr r2, _0200C650 ; =0x00000119
	mov r4, #0xc
	b _0200C620
_0200C61A:
	mov r2, #0x46
	lsl r2, r2, #2
	mov r4, #2
_0200C620:
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r6, r0, #0
	beq _0200C648
	ldr r2, [r5, #0xc]
	add r1, r4, #0
	bl sub_0200BB6C
	ldr r1, [sp]
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r6, #0
	bl sub_0200BB44
_0200C648:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200C64C: .word 0x020F5C1C
_0200C650: .word 0x00000119
	thumb_func_end sub_0200C5AC

	thumb_func_start sub_0200C654
sub_0200C654: ; 0x0200C654
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r4, r1, #0
	add r6, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0xd8
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C686
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C686:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200C654

	thumb_func_start sub_0200C688
sub_0200C688: ; 0x0200C688
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r4, r1, #0
	add r6, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0xd9
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C6BA
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C6BA:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200C688

	thumb_func_start sub_0200C6BC
sub_0200C6BC: ; 0x0200C6BC
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r4, r1, #0
	add r6, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0xda
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C6EE
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C6EE:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200C6BC

	thumb_func_start sub_0200C6F0
sub_0200C6F0: ; 0x0200C6F0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r0, [sp, #8]
	add r5, r2, #0
	add r0, r1, #0
	str r3, [sp, #0xc]
	bl sub_0202C854
	add r6, r0, #0
	add r1, r5, #0
	bl sub_0202C830
	str r0, [sp, #0x10]
	add r0, r6, #0
	add r1, r5, #0
	bl sub_0202C83C
	add r7, r0, #0
	mov r0, #0x40
	mov r1, #4
	bl sub_02026354
	add r4, r0, #0
	ldr r2, [sp, #0x28]
	add r0, r6, #0
	add r1, r5, #0
	bl sub_0202C7E0
	add r1, r0, #0
	add r0, r4, #0
	bl sub_020269A0
	mov r0, #1
	str r0, [sp]
	ldr r0, [sp, #8]
	ldr r1, [sp, #0xc]
	ldr r3, [sp, #0x10]
	add r2, r4, #0
	str r7, [sp, #4]
	bl sub_0200BE3C
	add r0, r4, #0
	bl sub_02026380
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0200C6F0

	thumb_func_start sub_0200C74C
sub_0200C74C: ; 0x0200C74C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	add r4, r1, #0
	ldr r2, _0200C780 ; =0x000002F3
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C77E
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C77E:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C780: .word 0x000002F3
	thumb_func_end sub_0200C74C

	thumb_func_start sub_0200C784
sub_0200C784: ; 0x0200C784
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	add r4, r1, #0
	ldr r2, _0200C7B8 ; =0x000002F1
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C7B6
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C7B6:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C7B8: .word 0x000002F1
	thumb_func_end sub_0200C784

	thumb_func_start sub_0200C7BC
sub_0200C7BC: ; 0x0200C7BC
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	mov r2, #0xbd
	add r4, r1, #0
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	lsl r2, r2, #2
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C7F0
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C7F0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200C7BC

	thumb_func_start sub_0200C7F4
sub_0200C7F4: ; 0x0200C7F4
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	add r4, r1, #0
	ldr r2, _0200C828 ; =0x00000303
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C826
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C826:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C828: .word 0x00000303
	thumb_func_end sub_0200C7F4

	thumb_func_start sub_0200C82C
sub_0200C82C: ; 0x0200C82C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	add r4, r1, #0
	ldr r2, _0200C860 ; =0x000002FF
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C85E
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C85E:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C860: .word 0x000002FF
	thumb_func_end sub_0200C82C

	thumb_func_start sub_0200C864
sub_0200C864: ; 0x0200C864
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	mov r2, #3
	add r4, r1, #0
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	lsl r2, r2, #8
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C898
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C898:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200C864

	thumb_func_start sub_0200C89C
sub_0200C89C: ; 0x0200C89C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	add r4, r1, #0
	ldr r2, _0200C8D0 ; =0x00000302
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C8CE
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C8CE:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C8D0: .word 0x00000302
	thumb_func_end sub_0200C89C

	thumb_func_start sub_0200C8D4
sub_0200C8D4: ; 0x0200C8D4
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	add r4, r1, #0
	ldr r2, _0200C908 ; =0x00000301
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C906
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C906:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C908: .word 0x00000301
	thumb_func_end sub_0200C8D4

	thumb_func_start sub_0200C90C
sub_0200C90C: ; 0x0200C90C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r2, #0
	mov r2, #0xc1
	add r4, r1, #0
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	lsl r2, r2, #2
	bl sub_0200BAF8
	add r7, r0, #0
	beq _0200C940
	ldr r2, [r5, #0xc]
	add r1, r6, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r4, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r7, #0
	bl sub_0200BB44
_0200C940:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200C90C

	thumb_func_start sub_0200C944
sub_0200C944: ; 0x0200C944
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r4, r2, #0
	add r7, r1, #0
	ldr r2, _0200C980 ; =0x00000139
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r6, r0, #0
	cmp r4, #0xb
	blo _0200C962
	bl GF_AssertFail
_0200C962:
	ldr r2, [r5, #0xc]
	add r0, r6, #0
	add r1, r4, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r7, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r6, #0
	bl sub_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C980: .word 0x00000139
	thumb_func_end sub_0200C944

	thumb_func_start sub_0200C984
sub_0200C984: ; 0x0200C984
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r4, r2, #0
	add r7, r1, #0
	ldr r2, _0200C9C4 ; =0x00000139
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r6, r0, #0
	cmp r4, #5
	blo _0200C9A2
	bl GF_AssertFail
_0200C9A2:
	add r4, #0xf
	ldr r2, [r5, #0xc]
	add r0, r6, #0
	add r1, r4, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r7, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r6, #0
	bl sub_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200C9C4: .word 0x00000139
	thumb_func_end sub_0200C984

	thumb_func_start sub_0200C9C8
sub_0200C9C8: ; 0x0200C9C8
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r4, r2, #0
	add r7, r1, #0
	ldr r2, _0200CA08 ; =0x00000139
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r6, r0, #0
	cmp r4, #0xa
	blo _0200C9E6
	bl GF_AssertFail
_0200C9E6:
	add r4, #0x14
	ldr r2, [r5, #0xc]
	add r0, r6, #0
	add r1, r4, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r7, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r6, #0
	bl sub_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200CA08: .word 0x00000139
	thumb_func_end sub_0200C9C8

	thumb_func_start sub_0200CA0C
sub_0200CA0C: ; 0x0200CA0C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r7, r1, #0
	add r4, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0x15
	bl sub_0200BAF8
	add r6, r0, #0
	cmp r4, #7
	blo _0200CA2E
	blo _0200CA2C
	bl GF_AssertFail
_0200CA2C:
	mov r4, #0
_0200CA2E:
	ldr r2, [r5, #0xc]
	add r0, r6, #0
	add r1, r4, #7
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r7, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r6, #0
	bl sub_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200CA0C

	thumb_func_start sub_0200CA4C
sub_0200CA4C: ; 0x0200CA4C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r4, r2, #0
	add r7, r1, #0
	ldr r2, _0200CA90 ; =0x000001AE
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	bl sub_0200BAF8
	add r6, r0, #0
	cmp r4, #0x18
	blo _0200CA6E
	blo _0200CA6C
	bl GF_AssertFail
_0200CA6C:
	mov r4, #0
_0200CA6E:
	add r4, #0xe
	ldr r2, [r5, #0xc]
	add r0, r6, #0
	add r1, r4, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r7, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r6, #0
	bl sub_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200CA90: .word 0x000001AE
	thumb_func_end sub_0200CA4C

	thumb_func_start sub_0200CA94
sub_0200CA94: ; 0x0200CA94
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r4, r2, #0
	mov r2, #0x6b
	add r7, r1, #0
	ldr r3, [r5, #4]
	mov r0, #1
	mov r1, #0x1b
	lsl r2, r2, #2
	bl sub_0200BAF8
	add r6, r0, #0
	cmp r4, #0xc
	blo _0200CAB8
	blo _0200CAB6
	bl GF_AssertFail
_0200CAB6:
	mov r4, #0
_0200CAB8:
	ldr r2, [r5, #0xc]
	add r0, r6, #0
	add r1, r4, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r7, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r6, #0
	bl sub_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200CA94

	thumb_func_start sub_0200CAD8
sub_0200CAD8: ; 0x0200CAD8
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r7, r1, #0
	mov r1, #0x1b
	add r4, r2, #0
	add r2, r1, #0
	ldr r3, [r5, #4]
	mov r0, #1
	add r2, #0xf7
	bl sub_0200BAF8
	add r6, r0, #0
	cmp r4, #0x1b
	blo _0200CAFC
	blo _0200CAFA
	bl GF_AssertFail
_0200CAFA:
	mov r4, #0
_0200CAFC:
	add r4, #0x5b
	ldr r2, [r5, #0xc]
	add r0, r6, #0
	add r1, r4, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r7, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r6, #0
	bl sub_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200CAD8

	thumb_func_start sub_0200CB1C
sub_0200CB1C: ; 0x0200CB1C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r7, r1, #0
	add r4, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0xef
	bl sub_0200BAF8
	add r6, r0, #0
	beq _0200CB5A
	cmp r4, #1
	blo _0200CB3C
	cmp r4, #0xc
	bls _0200CB3E
_0200CB3C:
	mov r4, #1
_0200CB3E:
	ldr r2, [r5, #0xc]
	add r0, r6, #0
	sub r1, r4, #1
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r7, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r6, #0
	bl sub_0200BB44
_0200CB5A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200CB1C

	thumb_func_start sub_0200CB5C
sub_0200CB5C: ; 0x0200CB5C
	ldr r2, [r0, #8]
	lsl r0, r1, #3
	add r0, r2, r0
	ldr r3, _0200CB6C ; =sub_02026C04
	ldr r0, [r0, #4]
	mov r1, #0
	bx r3
	nop
_0200CB6C: .word sub_02026C04
	thumb_func_end sub_0200CB5C

	thumb_func_start sub_0200CB70
sub_0200CB70: ; 0x0200CB70
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r3, [r5, #4]
	add r7, r1, #0
	add r4, r2, #0
	mov r0, #1
	mov r1, #0x1b
	mov r2, #0xbf
	bl sub_0200BAF8
	add r6, r0, #0
	cmp r4, #6
	bls _0200CB8E
	bl GF_AssertFail
_0200CB8E:
	cmp r6, #0
	beq _0200CBB8
	cmp r4, #0
	bne _0200CB9A
	mov r4, #0x7a
	b _0200CB9C
_0200CB9A:
	add r4, #0x73
_0200CB9C:
	ldr r2, [r5, #0xc]
	add r0, r6, #0
	add r1, r4, #0
	bl sub_0200BB6C
	ldr r2, [r5, #0xc]
	add r0, r5, #0
	add r1, r7, #0
	mov r3, #0
	bl sub_0200BDF8
	add r0, r6, #0
	bl sub_0200BB44
_0200CBB8:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200CB70

	thumb_func_start sub_0200CBBC
sub_0200CBBC: ; 0x0200CBBC
	push {r3, r4, r5, r6, r7, lr}
	add r7, r0, #0
	add r6, r1, #0
	add r0, r2, #0
	bl sub_02026AA4
	add r5, r0, #0
	add r0, r6, #0
	bl sub_020263AC
	ldrh r1, [r5]
	ldr r0, _0200CC48 ; =0x0000FFFF
	cmp r1, r0
	beq _0200CC44
_0200CBD8:
	ldr r0, _0200CC4C ; =0x0000FFFE
	cmp r1, r0
	bne _0200CC32
	add r0, r5, #0
	bl sub_0201FB5C
	cmp r0, #0
	beq _0200CC14
	add r0, r5, #0
	mov r1, #0
	bl sub_0201FB90
	add r4, r0, #0
	ldr r0, [r7]
	cmp r4, r0
	blo _0200CBFC
	bl GF_AssertFail
_0200CBFC:
	ldr r2, [r7, #8]
	lsl r1, r4, #3
	add r1, r2, r1
	ldr r1, [r1, #4]
	add r0, r6, #0
	bl sub_02026B88
	add r0, r5, #0
	bl sub_0201FB1C
	add r5, r0, #0
	b _0200CC3C
_0200CC14:
	add r0, r5, #0
	add r4, r5, #0
	bl sub_0201FB1C
	add r5, r0, #0
	cmp r4, r5
	bhs _0200CC3C
_0200CC22:
	ldrh r1, [r4]
	add r0, r6, #0
	add r4, r4, #2
	bl sub_02026B28
	cmp r4, r5
	blo _0200CC22
	b _0200CC3C
_0200CC32:
	ldrh r1, [r5]
	add r0, r6, #0
	add r5, r5, #2
	bl sub_02026B28
_0200CC3C:
	ldrh r1, [r5]
	ldr r0, _0200CC48 ; =0x0000FFFF
	cmp r1, r0
	bne _0200CBD8
_0200CC44:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200CC48: .word 0x0000FFFF
_0200CC4C: .word 0x0000FFFE
	thumb_func_end sub_0200CBBC

	thumb_func_start sub_0200CC50
sub_0200CC50: ; 0x0200CC50
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5]
	mov r6, #0
	cmp r0, #0
	bls _0200CC72
	add r4, r6, #0
_0200CC5E:
	ldr r0, [r5, #8]
	add r0, r0, r4
	ldr r0, [r0, #4]
	bl sub_020263AC
	ldr r0, [r5]
	add r6, r6, #1
	add r4, #8
	cmp r6, r0
	blo _0200CC5E
_0200CC72:
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0200CC50

	thumb_func_start sub_0200CC74
sub_0200CC74: ; 0x0200CC74
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	add r4, r3, #0
	add r5, r0, #0
	add r6, r1, #0
	add r0, r4, #0
	mov r1, #0x2c
	str r2, [sp, #4]
	bl sub_0201AA8C
	str r0, [sp, #8]
	cmp r0, #0
	beq _0200CD8E
	ldr r3, [sp, #8]
	mov r0, #0x10
	mov r1, #5
	mov r2, #1
	add r3, r3, #4
	str r4, [sp]
	bl sub_020079BC
	ldr r1, [sp, #8]
	mov r3, #0
	str r0, [r1]
	add r0, r1, #0
	ldr r0, [r0, #4]
	ldr r4, [r0, #0x14]
	ldr r0, [r0, #0x10]
	cmp r0, #0
	bls _0200CD88
	ldr r0, [sp, #4]
	ldr r1, [sp, #4]
	lsl r0, r0, #4
	orr r1, r0
	str r1, [sp, #0xc]
	add r1, r0, #0
	orr r1, r5
	str r1, [sp, #0x10]
	orr r0, r6
	str r0, [sp, #0x14]
	ldr r1, [sp, #4]
	lsl r0, r5, #4
	orr r1, r0
	str r1, [sp, #0x18]
	add r1, r5, #0
	orr r1, r0
	str r1, [sp, #0x1c]
	orr r0, r6
	lsl r2, r6, #4
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x20]
	ldr r0, [sp, #0x1c]
	ldr r1, [sp, #4]
	add r7, r2, #0
	orr r7, r1
	add r1, r2, #0
	orr r1, r5
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	orr r2, r6
	str r1, [sp, #0x28]
	lsl r1, r7, #0x18
	lsl r0, r0, #0x18
	lsr r7, r0, #0x18
	ldr r0, [sp, #0x18]
	lsl r2, r2, #0x18
	lsr r2, r2, #0x18
	lsr r1, r1, #0x18
	lsl r0, r0, #0x18
	mov ip, r2
	str r1, [sp, #0x24]
	lsr r6, r0, #0x18
	ldr r0, [sp, #0x14]
	ldr r1, [sp, #0x10]
	ldr r2, [sp, #0xc]
	lsl r0, r0, #0x18
	lsl r1, r1, #0x18
	lsl r2, r2, #0x18
	lsr r0, r0, #0x18
	lsr r1, r1, #0x18
	lsr r2, r2, #0x18
_0200CD18:
	ldrb r5, [r4, r3]
	cmp r5, #0x12
	bgt _0200CD40
	bge _0200CD66
	cmp r5, #0x10
	bgt _0200CD3A
	bge _0200CD5E
	cmp r5, #2
	bgt _0200CD7C
	cmp r5, #0
	blt _0200CD7C
	beq _0200CD52
	cmp r5, #1
	beq _0200CD56
	cmp r5, #2
	beq _0200CD5A
	b _0200CD7C
_0200CD3A:
	cmp r5, #0x11
	beq _0200CD62
	b _0200CD7C
_0200CD40:
	cmp r5, #0x21
	bgt _0200CD4C
	bge _0200CD72
	cmp r5, #0x20
	beq _0200CD6C
	b _0200CD7C
_0200CD4C:
	cmp r5, #0x22
	beq _0200CD78
	b _0200CD7C
_0200CD52:
	strb r2, [r4, r3]
	b _0200CD7C
_0200CD56:
	strb r1, [r4, r3]
	b _0200CD7C
_0200CD5A:
	strb r0, [r4, r3]
	b _0200CD7C
_0200CD5E:
	strb r6, [r4, r3]
	b _0200CD7C
_0200CD62:
	strb r7, [r4, r3]
	b _0200CD7C
_0200CD66:
	ldr r5, [sp, #0x20]
	strb r5, [r4, r3]
	b _0200CD7C
_0200CD6C:
	ldr r5, [sp, #0x24]
	strb r5, [r4, r3]
	b _0200CD7C
_0200CD72:
	ldr r5, [sp, #0x28]
	strb r5, [r4, r3]
	b _0200CD7C
_0200CD78:
	mov r5, ip
	strb r5, [r4, r3]
_0200CD7C:
	ldr r5, [sp, #8]
	add r3, r3, #1
	ldr r5, [r5, #4]
	ldr r5, [r5, #0x10]
	cmp r3, r5
	blo _0200CD18
_0200CD88:
	ldr r1, [sp, #4]
	ldr r0, [sp, #8]
	str r1, [r0, #0x28]
_0200CD8E:
	ldr r0, [sp, #8]
	add sp, #0x2c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0200CC74

	thumb_func_start sub_0200CD94
sub_0200CD94: ; 0x0200CD94
	push {r4, lr}
	add r4, r0, #0
	beq _0200CDAA
	ldr r0, [r4]
	cmp r0, #0
	beq _0200CDA4
	bl sub_0201AB0C
_0200CDA4:
	add r0, r4, #0
	bl sub_0201AB0C
_0200CDAA:
	pop {r4, pc}
	thumb_func_end sub_0200CD94

	thumb_func_start sub_0200CDAC
sub_0200CDAC: ; 0x0200CDAC
	push {r3, r4, r5, lr}
	sub sp, #0x18
	add r4, r0, #0
	ldr r0, _0200CDE8 ; =0x020F5C26
	lsl r5, r1, #2
	ldrh r1, [r0, r5]
	lsl r3, r3, #0x10
	mov r0, #8
	str r1, [sp]
	str r0, [sp, #4]
	lsr r3, r3, #0x10
	str r3, [sp, #8]
	ldr r3, [sp, #0x28]
	lsl r3, r3, #0x10
	lsr r3, r3, #0x10
	str r3, [sp, #0xc]
	str r1, [sp, #0x10]
	str r0, [sp, #0x14]
	ldr r1, [r4, #4]
	add r0, r2, #0
	ldr r2, [r1, #0x14]
	ldr r1, _0200CDEC ; =0x020F5C24
	ldrh r1, [r1, r5]
	add r1, r2, r1
	mov r2, #0
	add r3, r2, #0
	bl sub_0201D9D8
	add sp, #0x18
	pop {r3, r4, r5, pc}
	.align 2, 0
_0200CDE8: .word 0x020F5C26
_0200CDEC: .word 0x020F5C24
	thumb_func_end sub_0200CDAC

	thumb_func_start sub_0200CDF0
sub_0200CDF0: ; 0x0200CDF0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	add r6, r0, #0
	ldr r0, [sp, #0x30]
	add r4, r2, #0
	str r0, [sp, #0x30]
	add r0, r6, #0
	add r2, r3, #0
	add r0, #8
	add r3, r4, #0
	ldr r5, [sp, #0x34]
	ldr r7, [sp, #0x38]
	bl PrintDecimalInteger
	ldrh r1, [r6, #8]
	ldr r0, _0200CE78 ; =0x0000FFFF
	cmp r1, r0
	beq _0200CE72
	lsl r0, r7, #0x10
	add r4, r6, #0
	lsr r7, r0, #0x10
_0200CE1A:
	ldrh r2, [r4, #8]
	cmp r2, #0xa2
	blo _0200CE4E
	cmp r2, #0xab
	bhi _0200CE4E
	mov r0, #8
	str r0, [sp]
	str r0, [sp, #4]
	lsl r0, r5, #0x10
	lsr r0, r0, #0x10
	str r0, [sp, #8]
	str r7, [sp, #0xc]
	mov r0, #8
	str r0, [sp, #0x10]
	str r0, [sp, #0x14]
	ldr r1, [r6, #4]
	sub r2, #0xa2
	ldr r1, [r1, #0x14]
	lsl r2, r2, #5
	add r1, r1, r2
	mov r2, #0
	ldr r0, [sp, #0x30]
	add r3, r2, #0
	bl sub_0201D9D8
	b _0200CE66
_0200CE4E:
	mov r0, #8
	str r0, [sp]
	str r0, [sp, #4]
	ldr r1, [r6, #0x28]
	lsl r2, r5, #0x10
	lsl r1, r1, #0x18
	ldr r0, [sp, #0x30]
	lsr r1, r1, #0x18
	lsr r2, r2, #0x10
	add r3, r7, #0
	bl sub_0201DA74
_0200CE66:
	add r4, r4, #2
	ldrh r1, [r4, #8]
	ldr r0, _0200CE78 ; =0x0000FFFF
	add r5, #8
	cmp r1, r0
	bne _0200CE1A
_0200CE72:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200CE78: .word 0x0000FFFF
	thumb_func_end sub_0200CDF0

	thumb_func_start sub_0200CE7C
sub_0200CE7C: ; 0x0200CE7C
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	add r4, r2, #0
	ldr r2, [sp, #0x2c]
	add r6, r3, #0
	str r2, [sp]
	ldr r2, [sp, #0x24]
	ldr r3, [sp, #0x28]
	add r5, r0, #0
	bl sub_0200CDAC
	ldr r0, [sp, #0x24]
	ldr r3, [sp, #0x20]
	str r0, [sp]
	ldr r0, [sp, #0x28]
	add r1, r4, #0
	add r0, #0x10
	str r0, [sp, #4]
	ldr r0, [sp, #0x2c]
	add r2, r6, #0
	str r0, [sp, #8]
	add r0, r5, #0
	bl sub_0200CDF0
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	thumb_func_end sub_0200CE7C

	thumb_func_start sub_0200CEB0
sub_0200CEB0: ; 0x0200CEB0
	push {r3, r4, r5, r6, r7, lr}
	add r7, r0, #0
	add r4, r2, #0
	ldr r2, [r7, #0x28]
	ldr r6, [sp, #0x18]
	lsl r0, r2, #4
	orr r0, r2
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	add r0, r7, #0
	add r2, r3, #0
	add r0, #8
	add r3, r4, #0
	bl PrintDecimalInteger
	ldrh r1, [r7, #8]
	ldr r0, _0200CF14 ; =0x0000FFFF
	cmp r1, r0
	beq _0200CF10
	add r4, r7, #0
	mov r5, #0
_0200CEDC:
	ldrh r2, [r4, #8]
	cmp r2, #0xa2
	blo _0200CEFA
	cmp r2, #0xab
	bhi _0200CEFA
	ldr r0, [r7, #4]
	sub r2, #0xa2
	ldr r1, [r0, #0x14]
	lsl r0, r2, #5
	add r0, r1, r0
	add r1, r6, r5
	mov r2, #0x20
	bl sub_020D4808
	b _0200CF04
_0200CEFA:
	ldr r1, [sp]
	add r0, r6, r5
	mov r2, #0x20
	bl sub_020D4994
_0200CF04:
	add r4, r4, #2
	ldrh r1, [r4, #8]
	ldr r0, _0200CF14 ; =0x0000FFFF
	add r5, #0x20
	cmp r1, r0
	bne _0200CEDC
_0200CF10:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200CF14: .word 0x0000FFFF
	thumb_func_end sub_0200CEB0

	thumb_func_start sub_0200CF18
sub_0200CF18: ; 0x0200CF18
	push {r4, lr}
	mov r1, #0x4e
	lsl r1, r1, #2
	add r4, r0, #0
	bl sub_0201AA8C
	cmp r0, #0
	bne _0200CF2C
	mov r0, #0
	pop {r4, pc}
_0200CF2C:
	str r4, [r0]
	mov r1, #0
	str r1, [r0, #4]
	mov r1, #1
	str r1, [r0, #8]
	pop {r4, pc}
	thumb_func_end sub_0200CF18

	thumb_func_start sub_0200CF38
sub_0200CF38: ; 0x0200CF38
	push {r4, lr}
	add r4, r0, #0
	bne _0200CF42
	bl GF_AssertFail
_0200CF42:
	ldr r0, [r4]
	mov r1, #0x58
	bl sub_0201AA8C
	cmp r0, #0
	bne _0200CF52
	mov r0, #0
	pop {r4, pc}
_0200CF52:
	ldr r1, [r4, #4]
	mov r2, #0
	add r1, r1, #1
	str r1, [r4, #4]
	add r3, r0, #0
	add r1, r2, #0
_0200CF5E:
	add r2, r2, #1
	str r1, [r3, #0xc]
	add r3, r3, #4
	cmp r2, #6
	blt _0200CF5E
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200CF38

	thumb_func_start sub_0200CF6C
sub_0200CF6C: ; 0x0200CF6C
	add r0, #0x10
	bx lr
	thumb_func_end sub_0200CF6C

	thumb_func_start sub_0200CF70
sub_0200CF70: ; 0x0200CF70
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	add r5, r0, #0
	add r4, r1, #0
	add r6, r2, #0
	add r7, r3, #0
	cmp r5, #0
	bne _0200CF84
	bl GF_AssertFail
_0200CF84:
	cmp r5, #0
	bne _0200CF8E
	add sp, #0x24
	mov r0, #0
	pop {r4, r5, r6, r7, pc}
_0200CF8E:
	ldr r0, [r6]
	str r0, [sp, #0x14]
	ldr r0, [r6, #4]
	str r0, [sp, #0x18]
	ldr r0, [r6, #8]
	str r0, [sp, #0x1c]
	ldr r0, [r5]
	str r0, [sp, #0x20]
	ldr r1, [r6, #0xc]
	ldr r2, [r6, #0x10]
	add r0, sp, #0x14
	bl sub_020215C0
	ldr r1, [r5]
	add r0, r7, #0
	bl sub_02022588
	bl sub_020B78D4
	ldr r0, [r5, #8]
	cmp r0, #1
	bne _0200CFDA
	ldr r0, [r4, #0x10]
	str r0, [sp]
	ldr r0, [r4, #0x14]
	str r0, [sp, #4]
	ldr r0, [r4, #0x18]
	str r0, [sp, #8]
	ldr r0, [r4, #0x1c]
	str r0, [sp, #0xc]
	ldr r0, [r5]
	str r0, [sp, #0x10]
	ldr r0, [r4]
	ldr r1, [r4, #4]
	ldr r2, [r4, #8]
	ldr r3, [r4, #0xc]
	bl sub_0200B150
_0200CFDA:
	ldr r1, [r5]
	mov r0, #0x20
	bl sub_02020654
	str r0, [r5, #0xc]
	bl sub_020216C8
	bl sub_02022638
	mov r0, #1
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200CF70

	thumb_func_start sub_0200CFF4
sub_0200CFF4: ; 0x0200CFF4
	push {r4, lr}
	add r3, r0, #0
	add r4, r1, #0
	cmp r3, #0
	beq _0200D002
	cmp r4, #0
	bne _0200D006
_0200D002:
	mov r0, #0
	pop {r4, pc}
_0200D006:
	add r0, r2, #0
	add r1, r3, #0
	ldr r2, [r3]
	add r1, #0x10
	bl sub_02009F40
	str r0, [r4]
	mov r0, #1
	pop {r4, pc}
	thumb_func_end sub_0200CFF4

	thumb_func_start sub_0200D018
sub_0200D018: ; 0x0200D018
	ldr r3, _0200D01C ; =sub_02024758
	bx r3
	.align 2, 0
_0200D01C: .word sub_02024758
	thumb_func_end sub_0200D018

	thumb_func_start sub_0200D020
sub_0200D020: ; 0x0200D020
	push {r4, lr}
	add r4, r0, #0
	bne _0200D02A
	bl GF_AssertFail
_0200D02A:
	ldr r0, [r4]
	bl sub_0202457C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200D020

	thumb_func_start sub_0200D034
sub_0200D034: ; 0x0200D034
	ldr r3, _0200D038 ; =sub_0200B224
	bx r3
	.align 2, 0
_0200D038: .word sub_0200B224
	thumb_func_end sub_0200D034

	thumb_func_start sub_0200D03C
sub_0200D03C: ; 0x0200D03C
	ldr r3, _0200D040 ; =sub_02020674
	bx r3
	.align 2, 0
_0200D040: .word sub_02020674
	thumb_func_end sub_0200D03C

	thumb_func_start sub_0200D044
sub_0200D044: ; 0x0200D044
	ldr r3, _0200D04C ; =sub_02024504
	ldr r0, [r0]
	bx r3
	nop
_0200D04C: .word sub_02024504
	thumb_func_end sub_0200D044

	thumb_func_start sub_0200D050
sub_0200D050: ; 0x0200D050
	push {r3, lr}
	ldr r0, [r0, #4]
	cmp r0, #0
	beq _0200D05C
	bl sub_02009F24
_0200D05C:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_0200D050

	thumb_func_start sub_0200D060
sub_0200D060: ; 0x0200D060
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #0x54]
	mov r4, #0
	cmp r0, #0
	ble _0200D080
_0200D06C:
	ldr r0, [r5, #8]
	add r1, r4, #0
	bl sub_0200A900
	bl sub_0200A954
	ldr r0, [r5, #0x54]
	add r4, r4, #1
	cmp r4, r0
	blt _0200D06C
_0200D080:
	ldr r0, [r5, #8]
	bl sub_0201AB0C
	ldr r0, [r5, #0x24]
	bl sub_0200AED4
	ldr r0, [r5, #0x28]
	bl sub_0200B0CC
	ldr r0, [r5, #0x54]
	mov r6, #0
	cmp r0, #0
	ble _0200D0B2
	add r4, r5, #0
_0200D09C:
	ldr r0, [r4, #0x24]
	bl sub_0200A714
	ldr r0, [r4, #0xc]
	bl sub_0200A0D0
	ldr r0, [r5, #0x54]
	add r6, r6, #1
	add r4, r4, #4
	cmp r6, r0
	blt _0200D09C
_0200D0B2:
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0200D060

	thumb_func_start sub_0200D0B4
sub_0200D0B4: ; 0x0200D0B4
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0xc]
	bl sub_0202067C
	bl sub_0202168C
	bl sub_02022608
	ldr r0, [r4, #8]
	cmp r0, #1
	bne _0200D0D0
	bl sub_0200B244
_0200D0D0:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200D0B4

	thumb_func_start sub_0200D0D4
sub_0200D0D4: ; 0x0200D0D4
	ldr r2, [r0, #4]
	ldr r3, _0200D0E0 ; =sub_0201AB0C
	sub r2, r2, #1
	str r2, [r0, #4]
	add r0, r1, #0
	bx r3
	.align 2, 0
_0200D0E0: .word sub_0201AB0C
	thumb_func_end sub_0200D0D4

	thumb_func_start sub_0200D0E4
sub_0200D0E4: ; 0x0200D0E4
	push {r3, r4, r5, lr}
	add r4, r1, #0
	add r5, r0, #0
	add r0, r4, #0
	bl sub_0200D044
	add r0, r4, #0
	bl sub_0200D050
	add r0, r4, #0
	bl sub_0200D060
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0200D0D4
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200D0E4

	thumb_func_start sub_0200D108
sub_0200D108: ; 0x0200D108
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _0200D116
	bl GF_AssertFail
_0200D116:
	add r0, r4, #0
	bl sub_0200D0B4
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	thumb_func_end sub_0200D108

	thumb_func_start sub_0200D124
sub_0200D124: ; 0x0200D124
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	add r5, r0, #0
	add r4, r1, #0
	mov r7, #6
	str r2, [sp, #0x10]
	str r3, [sp, #0x14]
	cmp r5, #0
	beq _0200D13A
	cmp r4, #0
	bne _0200D140
_0200D13A:
	add sp, #0x34
	mov r0, #0
	pop {r4, r5, r6, r7, pc}
_0200D140:
	add r0, r2, #0
	ldrh r1, [r0, #8]
	ldr r0, _0200D290 ; =0x0000FFFF
	cmp r1, r0
	bne _0200D14C
	mov r7, #4
_0200D14C:
	str r7, [r4, #0x54]
	bl sub_0200A8FC
	add r2, r0, #0
	add r1, r2, #0
	ldr r0, [r5]
	mul r1, r7
	bl sub_0201AA8C
	str r0, [r4, #8]
	ldr r1, [r5]
	mov r0, #0xaf
	bl sub_02007688
	str r0, [sp, #0x20]
	mov r0, #0
	str r0, [sp, #0x24]
	cmp r7, #0
	ble _0200D1AA
	ldr r6, [sp, #0x10]
_0200D174:
	ldr r0, [r4, #8]
	ldr r1, [sp, #0x24]
	bl sub_0200A900
	str r0, [sp, #0x28]
	mov r0, #1
	str r0, [sp]
	ldrh r1, [r6]
	ldr r0, [sp, #0x20]
	ldr r3, [r5]
	mov r2, #0
	bl sub_02007C98
	ldr r1, [sp, #0x28]
	ldr r2, [r5]
	str r0, [sp, #0x2c]
	bl sub_0200A908
	ldr r0, [sp, #0x2c]
	bl sub_0201AB0C
	ldr r0, [sp, #0x24]
	add r6, r6, #2
	add r0, r0, #1
	str r0, [sp, #0x24]
	cmp r0, r7
	blt _0200D174
_0200D1AA:
	mov r6, #0
	cmp r7, #0
	ble _0200D1D6
	str r4, [sp, #0x1c]
_0200D1B2:
	ldr r0, [r4, #8]
	add r1, r6, #0
	bl sub_0200A900
	bl sub_0200A96C
	ldr r2, [r5]
	add r1, r6, #0
	bl sub_0200A090
	ldr r1, [sp, #0x1c]
	add r6, r6, #1
	str r0, [r1, #0xc]
	add r0, r1, #0
	add r0, r0, #4
	str r0, [sp, #0x1c]
	cmp r6, r7
	blt _0200D1B2
_0200D1D6:
	mov r0, #0
	str r0, [sp, #0x18]
	cmp r7, #0
	ble _0200D210
	add r6, r4, #0
_0200D1E0:
	ldr r0, [r4, #8]
	ldr r1, [sp, #0x18]
	bl sub_0200A900
	str r0, [sp, #0x30]
	bl sub_0200A96C
	ldr r1, [r5]
	bl sub_0200A6F0
	add r2, r0, #0
	str r2, [r6, #0x24]
	ldr r0, [r6, #0xc]
	ldr r1, [sp, #0x30]
	ldr r3, [r5]
	bl sub_0200A674
	str r0, [r6, #0x3c]
	ldr r0, [sp, #0x18]
	add r6, r6, #4
	add r0, r0, #1
	str r0, [sp, #0x18]
	cmp r0, r7
	blt _0200D1E0
_0200D210:
	ldr r0, [sp, #0x14]
	cmp r0, #0
	beq _0200D21E
	cmp r0, #1
	beq _0200D226
	cmp r0, #2
	b _0200D22E
_0200D21E:
	ldr r0, [r4, #0x24]
	bl sub_0200ADE4
	b _0200D234
_0200D226:
	ldr r0, [r4, #0x24]
	bl sub_0200AE58
	b _0200D234
_0200D22E:
	ldr r0, [r4, #0x24]
	bl sub_0200AD30
_0200D234:
	ldr r0, [sp, #0x48]
	cmp r0, #0
	beq _0200D23E
	cmp r0, #1
	b _0200D246
_0200D23E:
	ldr r0, [r4, #0x28]
	bl sub_0200B050
	b _0200D24C
_0200D246:
	ldr r0, [r4, #0x28]
	bl sub_0200AFD8
_0200D24C:
	mov r0, #1
	str r0, [sp]
	ldr r1, [sp, #0x10]
	ldr r0, [sp, #0x20]
	ldrh r1, [r1, #0xc]
	ldr r3, [r5]
	mov r2, #0
	bl sub_02007C98
	ldr r1, [r4, #0x14]
	add r6, r0, #0
	str r1, [sp]
	ldr r1, [r4, #0x18]
	str r1, [sp, #4]
	ldr r1, [r4, #0x1c]
	str r1, [sp, #8]
	ldr r1, [r4, #0x20]
	str r1, [sp, #0xc]
	ldr r1, [r5]
	ldr r2, [r4, #0xc]
	ldr r3, [r4, #0x10]
	bl sub_02009E84
	str r0, [r4, #4]
	add r0, r6, #0
	bl sub_0201AB0C
	ldr r0, [sp, #0x20]
	bl sub_0200770C
	mov r0, #1
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	nop
_0200D290: .word 0x0000FFFF
	thumb_func_end sub_0200D124

	thumb_func_start sub_0200D294
sub_0200D294: ; 0x0200D294
	push {r3, lr}
	mov r3, #1
	str r3, [sp]
	mov r3, #2
	bl sub_0200D124
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_0200D294

	thumb_func_start sub_0200D2A4
sub_0200D2A4: ; 0x0200D2A4
	push {r3, r4, lr}
	sub sp, #4
	ldr r4, [sp, #0x10]
	str r4, [sp]
	bl sub_0200D124
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end sub_0200D2A4

	thumb_func_start sub_0200D2B4
sub_0200D2B4: ; 0x0200D2B4
	push {r4, lr}
	sub sp, #0x28
	mov r3, #4
	mov r4, #6
	ldrsh r3, [r2, r3]
	ldrsh r4, [r2, r4]
	str r4, [sp]
	str r3, [sp, #4]
	ldrh r4, [r2, #0xa]
	str r4, [sp, #8]
	ldr r4, [r2, #0xc]
	str r4, [sp, #0xc]
	ldr r4, [r2, #0x10]
	str r4, [sp, #0x10]
	ldr r4, [r2, #0x14]
	str r4, [sp, #0x14]
	ldr r4, [r2, #0x18]
	str r4, [sp, #0x18]
	ldr r4, [r2, #0x1c]
	str r4, [sp, #0x1c]
	ldr r4, [r2, #0x20]
	str r4, [sp, #0x20]
	ldr r4, [r2, #0x24]
	str r4, [sp, #0x24]
	ldr r2, [r2]
	bl sub_0200D2F0
	add sp, #0x28
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200D2B4

	thumb_func_start sub_0200D2F0
sub_0200D2F0: ; 0x0200D2F0
	push {r4, lr}
	sub sp, #0x30
	add r4, r0, #0
	ldr r0, [r1]
	str r0, [sp]
	ldr r0, [r1, #4]
	ldr r1, [r0]
	mov r0, #0x24
	mul r0, r2
	add r0, r1, r0
	str r0, [sp, #4]
	cmp r3, #0
	ble _0200D31C
	lsl r0, r3, #0xc
	bl sub_020F2178
	add r1, r0, #0
	mov r0, #0x3f
	lsl r0, r0, #0x18
	bl sub_020F1520
	b _0200D32A
_0200D31C:
	lsl r0, r3, #0xc
	bl sub_020F2178
	mov r1, #0x3f
	lsl r1, r1, #0x18
	bl sub_020F24C8
_0200D32A:
	bl sub_020F2104
	str r0, [sp, #8]
	add r1, sp, #0x28
	mov r0, #0x10
	ldrsh r0, [r1, r0]
	cmp r0, #0
	ble _0200D34C
	lsl r0, r0, #0xc
	bl sub_020F2178
	add r1, r0, #0
	mov r0, #0x3f
	lsl r0, r0, #0x18
	bl sub_020F1520
	b _0200D35A
_0200D34C:
	lsl r0, r0, #0xc
	bl sub_020F2178
	mov r1, #0x3f
	lsl r1, r1, #0x18
	bl sub_020F24C8
_0200D35A:
	bl sub_020F2104
	str r0, [sp, #0xc]
	add r1, sp, #0x28
	mov r0, #0x14
	ldrsh r0, [r1, r0]
	cmp r0, #0
	ble _0200D37C
	lsl r0, r0, #0xc
	bl sub_020F2178
	add r1, r0, #0
	mov r0, #0x3f
	lsl r0, r0, #0x18
	bl sub_020F1520
	b _0200D38A
_0200D37C:
	lsl r0, r0, #0xc
	bl sub_020F2178
	mov r1, #0x3f
	lsl r1, r1, #0x18
	bl sub_020F24C8
_0200D38A:
	bl sub_020F2104
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x4c]
	cmp r0, #2
	bne _0200D3A0
	mov r0, #3
	ldr r1, [sp, #0xc]
	lsl r0, r0, #0x12
	add r0, r1, r0
	str r0, [sp, #0xc]
_0200D3A0:
	mov r0, #1
	lsl r0, r0, #0xc
	str r0, [sp, #0x14]
	str r0, [sp, #0x18]
	str r0, [sp, #0x1c]
	mov r1, #0
	add r0, sp, #0
	strh r1, [r0, #0x20]
	ldr r0, [sp, #0x44]
	str r0, [sp, #0x24]
	ldr r0, [sp, #0x4c]
	str r0, [sp, #0x28]
	ldr r0, [r4]
	str r0, [sp, #0x2c]
	add r0, sp, #0
	bl sub_02024624
	add r4, r0, #0
	beq _0200D3F0
	add r1, sp, #0x28
	ldrh r1, [r1, #0x18]
	bl sub_020248F0
	ldr r0, [sp, #0x50]
	cmp r0, #0
	beq _0200D3DE
	cmp r0, #1
	beq _0200D3F0
	cmp r0, #2
	beq _0200D3E8
	b _0200D3F0
_0200D3DE:
	ldr r1, [sp, #0x48]
	add r0, r4, #0
	bl sub_02024A14
	b _0200D3F0
_0200D3E8:
	ldr r1, [sp, #0x48]
	add r0, r4, #0
	bl sub_02024A48
_0200D3F0:
	add r0, r4, #0
	add sp, #0x30
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200D2F0

	thumb_func_start sub_0200D3F8
sub_0200D3F8: ; 0x0200D3F8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r0, [sp]
	mov r0, #6
	str r0, [sp, #4]
	ldr r0, [sp]
	add r5, r1, #0
	add r6, r2, #0
	cmp r0, #0
	beq _0200D410
	cmp r5, #0
	bne _0200D416
_0200D410:
	add sp, #0xc
	mov r0, #0
	pop {r4, r5, r6, r7, pc}
_0200D416:
	ldr r0, [r6, #0x10]
	cmp r0, #0
	beq _0200D422
	ldr r0, [r6, #0x14]
	cmp r0, #0
	bne _0200D426
_0200D422:
	mov r0, #4
	str r0, [sp, #4]
_0200D426:
	ldr r0, [sp, #4]
	str r0, [r5, #0x54]
	mov r0, #0
	str r0, [sp, #8]
	ldr r0, [sp, #4]
	cmp r0, #0
	ble _0200D456
	add r7, r6, #0
	add r4, r5, #0
_0200D438:
	ldr r2, [sp]
	ldr r0, [r7]
	ldr r1, [sp, #8]
	ldr r2, [r2]
	bl sub_0200A090
	str r0, [r4, #0xc]
	ldr r0, [sp, #8]
	add r7, r7, #4
	add r1, r0, #1
	ldr r0, [sp, #4]
	add r4, r4, #4
	str r1, [sp, #8]
	cmp r1, r0
	blt _0200D438
_0200D456:
	ldr r0, [sp, #4]
	mov r7, #0
	cmp r0, #0
	ble _0200D49C
	add r4, r7, #0
_0200D460:
	ldr r0, [r6]
	cmp r0, #0
	beq _0200D490
	ldr r1, [sp]
	ldr r1, [r1]
	bl sub_0200A6F0
	str r0, [r5, #0x24]
	mov r0, #0
	str r0, [r5, #0x3c]
	ldr r3, [r5, #0x24]
	add r1, r0, #0
	ldr r0, [r3, #4]
	cmp r0, #0
	ble _0200D490
	add r2, r1, #0
_0200D480:
	ldr r0, [r3]
	add r1, r1, #1
	str r4, [r0, r2]
	ldr r3, [r5, #0x24]
	add r2, r2, #4
	ldr r0, [r3, #4]
	cmp r1, r0
	blt _0200D480
_0200D490:
	ldr r0, [sp, #4]
	add r7, r7, #1
	add r6, r6, #4
	add r5, r5, #4
	cmp r7, r0
	blt _0200D460
_0200D49C:
	mov r0, #1
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200D3F8

	thumb_func_start sub_0200D4A4
sub_0200D4A4: ; 0x0200D4A4
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4, #0xc]
	ldr r1, [sp, #0x28]
	add r6, r2, #0
	add r7, r3, #0
	bl sub_0200A728
	cmp r0, #0
	bne _0200D4C2
	add sp, #0xc
	mov r0, #0
	pop {r4, r5, r6, r7, pc}
_0200D4C2:
	ldr r0, [sp, #0x28]
	ldr r3, [sp, #0x20]
	str r0, [sp]
	ldr r0, [sp, #0x24]
	add r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r5]
	add r2, r7, #0
	str r0, [sp, #8]
	ldr r0, [r4, #0xc]
	bl sub_0200A1D8
	add r5, r0, #0
	beq _0200D4F0
	bl sub_0200ADA4
	ldr r0, [r4, #0x24]
	add r1, r5, #0
	bl sub_0200DAE4
	add sp, #0xc
	mov r0, #1
	pop {r4, r5, r6, r7, pc}
_0200D4F0:
	bl GF_AssertFail
	cmp r5, #0
	beq _0200D4FE
	add sp, #0xc
	mov r0, #1
	pop {r4, r5, r6, r7, pc}
_0200D4FE:
	mov r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0200D4A4

	thumb_func_start sub_0200D504
sub_0200D504: ; 0x0200D504
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4, #0xc]
	ldr r1, [sp, #0x28]
	add r6, r2, #0
	add r7, r3, #0
	bl sub_0200A728
	cmp r0, #0
	bne _0200D522
	add sp, #0xc
	mov r0, #0
	pop {r4, r5, r6, r7, pc}
_0200D522:
	ldr r0, [sp, #0x28]
	ldr r3, [sp, #0x20]
	str r0, [sp]
	ldr r0, [sp, #0x24]
	add r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r5]
	add r2, r7, #0
	str r0, [sp, #8]
	ldr r0, [r4, #0xc]
	bl sub_0200A3C8
	add r5, r0, #0
	beq _0200D550
	bl sub_0200ADA4
	ldr r0, [r4, #0x24]
	add r1, r5, #0
	bl sub_0200DAE4
	add sp, #0xc
	mov r0, #1
	pop {r4, r5, r6, r7, pc}
_0200D550:
	bl GF_AssertFail
	cmp r5, #0
	beq _0200D55E
	add sp, #0xc
	mov r0, #1
	pop {r4, r5, r6, r7, pc}
_0200D55E:
	mov r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0200D504

	thumb_func_start sub_0200D564
sub_0200D564: ; 0x0200D564
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4, #0x10]
	ldr r1, [sp, #0x34]
	add r6, r2, #0
	add r7, r3, #0
	bl sub_0200A728
	cmp r0, #0
	bne _0200D584
	mov r0, #0
	add sp, #0x10
	mvn r0, r0
	pop {r3, r4, r5, r6, r7, pc}
_0200D584:
	ldr r0, [sp, #0x34]
	ldr r3, [sp, #0x28]
	str r0, [sp]
	ldr r0, [sp, #0x30]
	add r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x2c]
	add r2, r7, #0
	str r0, [sp, #8]
	ldr r0, [r5]
	str r0, [sp, #0xc]
	ldr r0, [r4, #0x10]
	bl sub_0200A234
	add r5, r0, #0
	beq _0200D5C8
	bl sub_0200B00C
	cmp r0, #1
	beq _0200D5B0
	bl GF_AssertFail
_0200D5B0:
	ldr r0, [r4, #0x28]
	add r1, r5, #0
	bl sub_0200DAE4
	ldr r1, [sp, #0x30]
	add r0, r5, #0
	bl sub_0200B12C
	lsl r0, r0, #0x18
	add sp, #0x10
	asr r0, r0, #0x18
	pop {r3, r4, r5, r6, r7, pc}
_0200D5C8:
	bl GF_AssertFail
	mov r0, #0
	mvn r0, r0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200D564

	thumb_func_start sub_0200D5D4
sub_0200D5D4: ; 0x0200D5D4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4, #0x10]
	ldr r1, [sp, #0x34]
	add r6, r2, #0
	add r7, r3, #0
	bl sub_0200A728
	cmp r0, #0
	bne _0200D5F4
	mov r0, #0
	add sp, #0x10
	mvn r0, r0
	pop {r3, r4, r5, r6, r7, pc}
_0200D5F4:
	ldr r0, [sp, #0x34]
	ldr r3, [sp, #0x28]
	str r0, [sp]
	ldr r0, [sp, #0x30]
	add r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x2c]
	add r2, r7, #0
	str r0, [sp, #8]
	ldr r0, [r5]
	str r0, [sp, #0xc]
	ldr r0, [r4, #0x10]
	bl sub_0200A480
	add r5, r0, #0
	beq _0200D638
	bl sub_0200B00C
	cmp r0, #1
	beq _0200D620
	bl GF_AssertFail
_0200D620:
	ldr r0, [r4, #0x28]
	add r1, r5, #0
	bl sub_0200DAE4
	ldr r1, [sp, #0x30]
	add r0, r5, #0
	bl sub_0200B12C
	lsl r0, r0, #0x18
	add sp, #0x10
	asr r0, r0, #0x18
	pop {r3, r4, r5, r6, r7, pc}
_0200D638:
	bl GF_AssertFail
	mov r0, #0
	mvn r0, r0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200D5D4

	thumb_func_start sub_0200D644
sub_0200D644: ; 0x0200D644
	push {r4, r5, r6, lr}
	sub sp, #0x10
	add r5, r0, #0
	ldr r0, [sp, #0x28]
	add r6, r1, #0
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	add r1, r3, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x30]
	ldr r3, [sp, #0x24]
	str r0, [sp, #8]
	ldr r0, [sp, #0x34]
	str r0, [sp, #0xc]
	add r0, r2, #0
	ldr r2, [sp, #0x20]
	bl sub_0200D564
	add r4, r0, #0
	mov r0, #0
	mvn r0, r0
	cmp r4, r0
	beq _0200D682
	ldr r3, [sp, #0x2c]
	lsl r2, r4, #0x14
	add r0, r5, #0
	add r1, r6, #0
	lsr r2, r2, #0x10
	lsl r3, r3, #5
	bl sub_020032A4
_0200D682:
	lsl r0, r4, #0x18
	lsr r0, r0, #0x18
	add sp, #0x10
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0200D644

	thumb_func_start sub_0200D68C
sub_0200D68C: ; 0x0200D68C
	push {r4, r5, r6, lr}
	sub sp, #0x10
	add r5, r0, #0
	ldr r0, [sp, #0x28]
	add r6, r1, #0
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	add r1, r3, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x30]
	ldr r3, [sp, #0x24]
	str r0, [sp, #8]
	ldr r0, [sp, #0x34]
	str r0, [sp, #0xc]
	add r0, r2, #0
	ldr r2, [sp, #0x20]
	bl sub_0200D5D4
	add r4, r0, #0
	mov r0, #0
	mvn r0, r0
	cmp r4, r0
	beq _0200D6CA
	ldr r3, [sp, #0x2c]
	lsl r2, r4, #0x14
	add r0, r5, #0
	add r1, r6, #0
	lsr r2, r2, #0x10
	lsl r3, r3, #5
	bl sub_020032A4
_0200D6CA:
	lsl r0, r4, #0x18
	lsr r0, r0, #0x18
	add sp, #0x10
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0200D68C

	thumb_func_start sub_0200D6D4
sub_0200D6D4: ; 0x0200D6D4
	push {r3, r4, lr}
	sub sp, #0xc
	ldr r4, [sp, #0x18]
	str r4, [sp]
	mov r4, #2
	str r4, [sp, #4]
	ldr r4, [sp, #0x1c]
	str r4, [sp, #8]
	bl sub_0200DA04
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end sub_0200D6D4

	thumb_func_start sub_0200D6EC
sub_0200D6EC: ; 0x0200D6EC
	push {r3, r4, lr}
	sub sp, #0xc
	ldr r4, [sp, #0x18]
	str r4, [sp]
	mov r4, #2
	str r4, [sp, #4]
	ldr r4, [sp, #0x1c]
	str r4, [sp, #8]
	bl sub_0200DA74
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end sub_0200D6EC

	thumb_func_start sub_0200D704
sub_0200D704: ; 0x0200D704
	push {r3, r4, lr}
	sub sp, #0xc
	ldr r4, [sp, #0x18]
	str r4, [sp]
	mov r4, #3
	str r4, [sp, #4]
	ldr r4, [sp, #0x1c]
	str r4, [sp, #8]
	bl sub_0200DA04
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end sub_0200D704

	thumb_func_start sub_0200D71C
sub_0200D71C: ; 0x0200D71C
	push {r3, r4, lr}
	sub sp, #0xc
	ldr r4, [sp, #0x18]
	str r4, [sp]
	mov r4, #3
	str r4, [sp, #4]
	ldr r4, [sp, #0x1c]
	str r4, [sp, #8]
	bl sub_0200DA74
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end sub_0200D71C

	thumb_func_start sub_0200D734
sub_0200D734: ; 0x0200D734
	push {r3, lr}
	mov r3, #3
	lsl r3, r3, #0x12
	bl sub_0200D748
	pop {r3, pc}
	thumb_func_end sub_0200D734

	thumb_func_start sub_0200D740
sub_0200D740: ; 0x0200D740
	push {r3, lr}
	bl sub_0200D748
	pop {r3, pc}
	thumb_func_end sub_0200D740

	thumb_func_start sub_0200D748
sub_0200D748: ; 0x0200D748
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x78
	add r7, r0, #0
	ldr r0, [r7]
	add r6, r1, #0
	mov r1, #0x10
	add r5, r2, #0
	str r3, [sp, #0x2c]
	bl sub_0201AA8C
	add r4, r0, #0
	bne _0200D766
	add sp, #0x78
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200D766:
	ldr r0, [r7]
	mov r1, #8
	bl sub_0201AA8C
	str r0, [r4, #8]
	cmp r0, #0
	bne _0200D77A
	add sp, #0x78
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200D77A:
	ldr r0, [r7]
	mov r1, #0x24
	bl sub_0201AA8C
	ldr r1, [r4, #8]
	str r0, [r1]
	ldr r0, [r4, #8]
	ldr r0, [r0]
	str r0, [r4, #4]
	ldr r0, [r4, #8]
	ldr r1, [r0]
	cmp r1, #0
	bne _0200D7A2
	cmp r0, #0
	beq _0200D79C
	bl sub_0201AB0C
_0200D79C:
	add sp, #0x78
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200D7A2:
	mov r1, #0
	add r2, r5, #0
	add r3, sp, #0x30
_0200D7A8:
	ldr r0, [r2, #0x14]
	add r1, r1, #1
	add r2, r2, #4
	stmia r3!, {r0}
	cmp r1, #6
	blt _0200D7A8
	ldr r0, [r6, #0x1c]
	cmp r0, #0
	beq _0200D7C0
	ldr r1, [r6, #0x20]
	cmp r1, #0
	bne _0200D7CA
_0200D7C0:
	mov r0, #0
	mvn r0, r0
	str r0, [sp, #0x40]
	str r0, [sp, #0x44]
	b _0200D7FC
_0200D7CA:
	mov r2, #0
	ldr r1, [sp, #0x40]
	mvn r2, r2
	cmp r1, r2
	beq _0200D7E2
	bl sub_0200A728
	cmp r0, #0
	bne _0200D7E2
	mov r0, #0
	mvn r0, r0
	str r0, [sp, #0x40]
_0200D7E2:
	mov r0, #0
	ldr r1, [sp, #0x44]
	mvn r0, r0
	cmp r1, r0
	beq _0200D7FC
	ldr r0, [r6, #0x20]
	bl sub_0200A728
	cmp r0, #0
	bne _0200D7FC
	mov r0, #0
	mvn r0, r0
	str r0, [sp, #0x44]
_0200D7FC:
	ldr r0, [sp, #0x3c]
	str r0, [sp]
	ldr r0, [sp, #0x40]
	str r0, [sp, #4]
	ldr r0, [sp, #0x44]
	str r0, [sp, #8]
	ldr r0, [r5, #0x30]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x2c]
	str r0, [sp, #0x10]
	ldr r0, [r6, #0xc]
	str r0, [sp, #0x14]
	ldr r0, [r6, #0x10]
	str r0, [sp, #0x18]
	ldr r0, [r6, #0x14]
	str r0, [sp, #0x1c]
	ldr r0, [r6, #0x18]
	str r0, [sp, #0x20]
	ldr r0, [r6, #0x1c]
	str r0, [sp, #0x24]
	ldr r0, [r6, #0x20]
	str r0, [sp, #0x28]
	ldr r0, [r4, #4]
	ldr r1, [sp, #0x30]
	ldr r2, [sp, #0x34]
	ldr r3, [sp, #0x38]
	bl sub_02009D48
	ldr r0, [r6]
	str r0, [sp, #0x48]
	ldr r0, [r4, #4]
	str r0, [sp, #0x4c]
	mov r0, #0
	ldrsh r0, [r5, r0]
	cmp r0, #0
	ble _0200D856
	lsl r0, r0, #0xc
	bl sub_020F2178
	add r1, r0, #0
	mov r0, #0x3f
	lsl r0, r0, #0x18
	bl sub_020F1520
	b _0200D864
_0200D856:
	lsl r0, r0, #0xc
	bl sub_020F2178
	mov r1, #0x3f
	lsl r1, r1, #0x18
	bl sub_020F24C8
_0200D864:
	bl sub_020F2104
	str r0, [sp, #0x50]
	mov r0, #2
	ldrsh r0, [r5, r0]
	cmp r0, #0
	ble _0200D884
	lsl r0, r0, #0xc
	bl sub_020F2178
	add r1, r0, #0
	mov r0, #0x3f
	lsl r0, r0, #0x18
	bl sub_020F1520
	b _0200D892
_0200D884:
	lsl r0, r0, #0xc
	bl sub_020F2178
	mov r1, #0x3f
	lsl r1, r1, #0x18
	bl sub_020F24C8
_0200D892:
	bl sub_020F2104
	str r0, [sp, #0x54]
	mov r0, #4
	ldrsh r0, [r5, r0]
	cmp r0, #0
	ble _0200D8B2
	lsl r0, r0, #0xc
	bl sub_020F2178
	add r1, r0, #0
	mov r0, #0x3f
	lsl r0, r0, #0x18
	bl sub_020F1520
	b _0200D8C0
_0200D8B2:
	lsl r0, r0, #0xc
	bl sub_020F2178
	mov r1, #0x3f
	lsl r1, r1, #0x18
	bl sub_020F24C8
_0200D8C0:
	bl sub_020F2104
	str r0, [sp, #0x58]
	ldr r0, [r5, #0x10]
	cmp r0, #2
	bne _0200D8D4
	ldr r1, [sp, #0x54]
	ldr r0, [sp, #0x2c]
	add r0, r1, r0
	str r0, [sp, #0x54]
_0200D8D4:
	mov r0, #1
	lsl r0, r0, #0xc
	str r0, [sp, #0x5c]
	str r0, [sp, #0x60]
	str r0, [sp, #0x64]
	mov r1, #0
	add r0, sp, #0x30
	strh r1, [r0, #0x38]
	ldr r0, [r5, #8]
	str r0, [sp, #0x6c]
	ldr r0, [r5, #0x10]
	str r0, [sp, #0x70]
	ldr r0, [r7]
	str r0, [sp, #0x74]
	add r0, sp, #0x48
	bl sub_02024624
	str r0, [r4]
	ldr r0, [r5, #0x30]
	str r0, [r4, #0xc]
	ldr r0, [r4]
	cmp r0, #0
	beq _0200D924
	ldrh r1, [r5, #6]
	bl sub_020248F0
	ldr r1, [r5, #0xc]
	ldr r0, _0200D930 ; =0x0000FFFF
	cmp r1, r0
	beq _0200D928
	ldr r0, [r4]
	bl sub_02024A6C
	add r2, r0, #0
	ldr r1, [r5, #0xc]
	ldr r0, [r4]
	add r1, r2, r1
	bl sub_02024A14
	b _0200D928
_0200D924:
	bl GF_AssertFail
_0200D928:
	add r0, r4, #0
	add sp, #0x78
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200D930: .word 0x0000FFFF
	thumb_func_end sub_0200D748

	thumb_func_start sub_0200D934
sub_0200D934: ; 0x0200D934
	push {r3, lr}
	ldr r0, [r0, #0x10]
	bl sub_0200A7BC
	mov r1, #0
	bl sub_0200B0F8
	pop {r3, pc}
	thumb_func_end sub_0200D934

	thumb_func_start sub_0200D944
sub_0200D944: ; 0x0200D944
	push {r4, lr}
	ldr r0, [r0, #0x10]
	add r4, r2, #0
	bl sub_0200A7BC
	add r1, r4, #0
	bl sub_0200B12C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200D944

	thumb_func_start sub_0200D958
sub_0200D958: ; 0x0200D958
	add r3, r0, #0
	add r2, r1, #0
	ldr r0, [r3, #0xc]
	ldr r1, [r3, #0x24]
	ldr r3, _0200D964 ; =sub_0200DB64
	bx r3
	.align 2, 0
_0200D964: .word sub_0200DB64
	thumb_func_end sub_0200D958

	thumb_func_start sub_0200D968
sub_0200D968: ; 0x0200D968
	add r3, r0, #0
	add r2, r1, #0
	ldr r0, [r3, #0x10]
	ldr r1, [r3, #0x28]
	ldr r3, _0200D974 ; =sub_0200DBB8
	bx r3
	.align 2, 0
_0200D974: .word sub_0200DBB8
	thumb_func_end sub_0200D968

	thumb_func_start sub_0200D978
sub_0200D978: ; 0x0200D978
	add r3, r0, #0
	add r2, r1, #0
	ldr r0, [r3, #0x14]
	ldr r1, [r3, #0x2c]
	ldr r3, _0200D984 ; =sub_0200DB18
	bx r3
	.align 2, 0
_0200D984: .word sub_0200DB18
	thumb_func_end sub_0200D978

	thumb_func_start sub_0200D988
sub_0200D988: ; 0x0200D988
	add r3, r0, #0
	add r2, r1, #0
	ldr r0, [r3, #0x18]
	ldr r1, [r3, #0x30]
	ldr r3, _0200D994 ; =sub_0200DB18
	bx r3
	.align 2, 0
_0200D994: .word sub_0200DB18
	thumb_func_end sub_0200D988

	thumb_func_start sub_0200D998
sub_0200D998: ; 0x0200D998
	push {r3, r4, r5, r6, r7, lr}
	add r6, r1, #0
	add r7, r0, #0
	add r0, r6, #0
	bl sub_0200D044
	ldr r0, [r6, #0x24]
	bl sub_0200AED4
	ldr r0, [r6, #0x28]
	bl sub_0200B0CC
	ldr r0, [r6, #0x54]
	mov r4, #0
	cmp r0, #0
	ble _0200D9D0
	add r5, r6, #0
_0200D9BA:
	ldr r0, [r5, #0x24]
	bl sub_0200A714
	ldr r0, [r5, #0xc]
	bl sub_0200A0D0
	ldr r0, [r6, #0x54]
	add r4, r4, #1
	add r5, r5, #4
	cmp r4, r0
	blt _0200D9BA
_0200D9D0:
	add r0, r7, #0
	add r1, r6, #0
	bl sub_0200D0D4
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200D998

	thumb_func_start sub_0200D9DC
sub_0200D9DC: ; 0x0200D9DC
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0xc]
	cmp r0, #0
	beq _0200D9EE
	ldr r0, [r4, #4]
	ldr r0, [r0]
	bl sub_0200AF80
_0200D9EE:
	ldr r0, [r4]
	bl sub_02024758
	ldr r0, [r4, #8]
	bl sub_02009F24
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200D9DC

	thumb_func_start sub_0200DA04
sub_0200DA04: ; 0x0200DA04
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	add r6, r1, #0
	add r7, r0, #0
	ldr r0, [sp, #0x2c]
	add r5, r6, #0
	lsl r4, r0, #2
	add r5, #0xc
	ldr r0, [r5, r4]
	ldr r1, [sp, #0x30]
	str r2, [sp, #0xc]
	str r3, [sp, #0x10]
	bl sub_0200A728
	cmp r0, #0
	bne _0200DA2A
	add sp, #0x14
	mov r0, #0
	pop {r4, r5, r6, r7, pc}
_0200DA2A:
	ldr r0, [sp, #0x30]
	ldr r1, [sp, #0xc]
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	ldr r2, [sp, #0x10]
	str r0, [sp, #4]
	ldr r0, [r7]
	ldr r3, [sp, #0x28]
	str r0, [sp, #8]
	ldr r0, [r5, r4]
	bl sub_0200A294
	add r5, r0, #0
	beq _0200DA60
	add r0, r6, r4
	ldr r0, [r0, #0x24]
	add r1, r5, #0
	bl sub_0200DAE4
	add r4, r0, #0
	cmp r4, #1
	beq _0200DA5A
	bl GF_AssertFail
_0200DA5A:
	add sp, #0x14
	add r0, r4, #0
	pop {r4, r5, r6, r7, pc}
_0200DA60:
	bl GF_AssertFail
	cmp r5, #0
	beq _0200DA6E
	add sp, #0x14
	mov r0, #1
	pop {r4, r5, r6, r7, pc}
_0200DA6E:
	mov r0, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0200DA04

	thumb_func_start sub_0200DA74
sub_0200DA74: ; 0x0200DA74
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	add r6, r1, #0
	add r7, r0, #0
	ldr r0, [sp, #0x2c]
	add r5, r6, #0
	lsl r4, r0, #2
	add r5, #0xc
	ldr r0, [r5, r4]
	ldr r1, [sp, #0x30]
	str r2, [sp, #0xc]
	str r3, [sp, #0x10]
	bl sub_0200A728
	cmp r0, #0
	bne _0200DA9A
	add sp, #0x14
	mov r0, #0
	pop {r4, r5, r6, r7, pc}
_0200DA9A:
	ldr r0, [sp, #0x30]
	ldr r1, [sp, #0xc]
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	ldr r2, [sp, #0x10]
	str r0, [sp, #4]
	ldr r0, [r7]
	ldr r3, [sp, #0x28]
	str r0, [sp, #8]
	ldr r0, [r5, r4]
	bl sub_0200A540
	add r5, r0, #0
	beq _0200DAD0
	add r0, r6, r4
	ldr r0, [r0, #0x24]
	add r1, r5, #0
	bl sub_0200DAE4
	add r4, r0, #0
	cmp r4, #1
	beq _0200DACA
	bl GF_AssertFail
_0200DACA:
	add sp, #0x14
	add r0, r4, #0
	pop {r4, r5, r6, r7, pc}
_0200DAD0:
	bl GF_AssertFail
	cmp r5, #0
	beq _0200DADE
	add sp, #0x14
	mov r0, #1
	pop {r4, r5, r6, r7, pc}
_0200DADE:
	mov r0, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0200DA74

	thumb_func_start sub_0200DAE4
sub_0200DAE4: ; 0x0200DAE4
	push {r3, r4, r5, r6}
	ldr r6, [r0, #4]
	mov r3, #0
	cmp r6, #0
	ble _0200DB10
	ldr r5, [r0]
	add r4, r5, #0
_0200DAF2:
	ldr r2, [r4]
	cmp r2, #0
	bne _0200DB08
	lsl r2, r3, #2
	str r1, [r5, r2]
	ldr r1, [r0, #8]
	add r1, r1, #1
	str r1, [r0, #8]
	mov r0, #1
	pop {r3, r4, r5, r6}
	bx lr
_0200DB08:
	add r3, r3, #1
	add r4, r4, #4
	cmp r3, r6
	blt _0200DAF2
_0200DB10:
	mov r0, #0
	pop {r3, r4, r5, r6}
	bx lr
	.align 2, 0
	thumb_func_end sub_0200DAE4

	thumb_func_start sub_0200DB18
sub_0200DB18: ; 0x0200DB18
	push {r3, r4, r5, r6, r7, lr}
	add r5, r1, #0
	str r0, [sp]
	ldr r0, [r5, #4]
	add r7, r2, #0
	mov r6, #0
	cmp r0, #0
	ble _0200DB60
	add r4, r6, #0
_0200DB2A:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200DB56
	bl sub_0200A7FC
	cmp r0, r7
	bne _0200DB56
	ldr r1, [r5]
	lsl r4, r6, #2
	ldr r0, [sp]
	ldr r1, [r1, r4]
	bl sub_0200A75C
	ldr r0, [r5]
	mov r1, #0
	str r1, [r0, r4]
	ldr r0, [r5, #8]
	sub r0, r0, #1
	str r0, [r5, #8]
	mov r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0200DB56:
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, r4, #4
	cmp r6, r0
	blt _0200DB2A
_0200DB60:
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200DB18

	thumb_func_start sub_0200DB64
sub_0200DB64: ; 0x0200DB64
	push {r3, r4, r5, r6, r7, lr}
	add r5, r1, #0
	str r0, [sp]
	ldr r0, [r5, #4]
	add r7, r2, #0
	mov r6, #0
	cmp r0, #0
	ble _0200DBB2
	add r4, r6, #0
_0200DB76:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200DBA8
	bl sub_0200A7FC
	cmp r0, r7
	bne _0200DBA8
	add r0, r7, #0
	bl sub_02021884
	ldr r1, [r5]
	lsl r4, r6, #2
	ldr r0, [sp]
	ldr r1, [r1, r4]
	bl sub_0200A75C
	ldr r0, [r5]
	mov r1, #0
	str r1, [r0, r4]
	ldr r0, [r5, #8]
	sub r0, r0, #1
	str r0, [r5, #8]
	mov r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0200DBA8:
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, r4, #4
	cmp r6, r0
	blt _0200DB76
_0200DBB2:
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200DB64

	thumb_func_start sub_0200DBB8
sub_0200DBB8: ; 0x0200DBB8
	push {r3, r4, r5, r6, r7, lr}
	add r5, r1, #0
	str r0, [sp]
	ldr r0, [r5, #4]
	add r7, r2, #0
	mov r6, #0
	cmp r0, #0
	ble _0200DC06
	add r4, r6, #0
_0200DBCA:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200DBFC
	bl sub_0200A7FC
	cmp r0, r7
	bne _0200DBFC
	add r0, r7, #0
	bl sub_02022744
	ldr r1, [r5]
	lsl r4, r6, #2
	ldr r0, [sp]
	ldr r1, [r1, r4]
	bl sub_0200A75C
	ldr r0, [r5]
	mov r1, #0
	str r1, [r0, r4]
	ldr r0, [r5, #8]
	sub r0, r0, #1
	str r0, [r5, #8]
	mov r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0200DBFC:
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, r4, #4
	cmp r6, r0
	blt _0200DBCA
_0200DC06:
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200DBB8

	thumb_func_start sub_0200DC0C
sub_0200DC0C: ; 0x0200DC0C
	ldr r3, _0200DC14 ; =sub_020249B0
	mov r1, #1
	lsl r1, r1, #0xc
	bx r3
	.align 2, 0
_0200DC14: .word sub_020249B0
	thumb_func_end sub_0200DC0C

	thumb_func_start sub_0200DC18
sub_0200DC18: ; 0x0200DC18
	ldr r3, _0200DC20 ; =sub_0200DC0C
	ldr r0, [r0]
	bx r3
	nop
_0200DC20: .word sub_0200DC0C
	thumb_func_end sub_0200DC18

	thumb_func_start sub_0200DC24
sub_0200DC24: ; 0x0200DC24
	ldr r3, _0200DC30 ; =sub_020249B0
	mov r1, #2
	ldr r0, [r0]
	lsl r1, r1, #0xc
	bx r3
	nop
_0200DC30: .word sub_020249B0
	thumb_func_end sub_0200DC24

	thumb_func_start sub_0200DC34
sub_0200DC34: ; 0x0200DC34
	ldr r3, _0200DC3C ; =sub_020249B0
	ldr r0, [r0]
	bx r3
	nop
_0200DC3C: .word sub_020249B0
	thumb_func_end sub_0200DC34

	thumb_func_start sub_0200DC40
sub_0200DC40: ; 0x0200DC40
	ldr r3, _0200DC48 ; =sub_020248C8
	ldr r0, [r0]
	bx r3
	nop
_0200DC48: .word sub_020248C8
	thumb_func_end sub_0200DC40

	thumb_func_start sub_0200DC4C
sub_0200DC4C: ; 0x0200DC4C
	ldr r3, _0200DC54 ; =sub_020248F0
	ldr r0, [r0]
	bx r3
	nop
_0200DC54: .word sub_020248F0
	thumb_func_end sub_0200DC4C

	thumb_func_start sub_0200DC58
sub_0200DC58: ; 0x0200DC58
	ldr r3, _0200DC60 ; =sub_02024950
	ldr r0, [r0]
	bx r3
	nop
_0200DC60: .word sub_02024950
	thumb_func_end sub_0200DC58

	thumb_func_start sub_0200DC64
sub_0200DC64: ; 0x0200DC64
	ldr r3, _0200DC6C ; =sub_020249A8
	ldr r0, [r0]
	bx r3
	nop
_0200DC6C: .word sub_020249A8
	thumb_func_end sub_0200DC64

	thumb_func_start sub_0200DC70
sub_0200DC70: ; 0x0200DC70
	ldr r3, _0200DC74 ; =sub_0202484C
	bx r3
	.align 2, 0
_0200DC74: .word sub_0202484C
	thumb_func_end sub_0200DC70

	thumb_func_start sub_0200DC78
sub_0200DC78: ; 0x0200DC78
	ldr r3, _0200DC80 ; =sub_0200DC70
	ldr r0, [r0]
	bx r3
	nop
_0200DC80: .word sub_0200DC70
	thumb_func_end sub_0200DC78

	thumb_func_start sub_0200DC84
sub_0200DC84: ; 0x0200DC84
	ldr r3, _0200DC88 ; =sub_02024868
	bx r3
	.align 2, 0
_0200DC88: .word sub_02024868
	thumb_func_end sub_0200DC84

	thumb_func_start sub_0200DC8C
sub_0200DC8C: ; 0x0200DC8C
	ldr r3, _0200DC94 ; =sub_0200DC84
	ldr r0, [r0]
	bx r3
	nop
_0200DC94: .word sub_0200DC84
	thumb_func_end sub_0200DC8C

	thumb_func_start sub_0200DC98
sub_0200DC98: ; 0x0200DC98
	ldr r3, _0200DC9C ; =sub_02024B68
	bx r3
	.align 2, 0
_0200DC9C: .word sub_02024B68
	thumb_func_end sub_0200DC98

	thumb_func_start sub_0200DCA0
sub_0200DCA0: ; 0x0200DCA0
	ldr r3, _0200DCA8 ; =sub_0200DC98
	ldr r0, [r0]
	bx r3
	nop
_0200DCA8: .word sub_0200DC98
	thumb_func_end sub_0200DCA0

	thumb_func_start sub_0200DCAC
sub_0200DCAC: ; 0x0200DCAC
	ldr r3, _0200DCB4 ; =sub_02024964
	ldr r0, [r0]
	bx r3
	nop
_0200DCB4: .word sub_02024964
	thumb_func_end sub_0200DCAC

	thumb_func_start sub_0200DCB8
sub_0200DCB8: ; 0x0200DCB8
	ldr r3, _0200DCBC ; =sub_020249D4
	bx r3
	.align 2, 0
_0200DCBC: .word sub_020249D4
	thumb_func_end sub_0200DCB8

	thumb_func_start sub_0200DCC0
sub_0200DCC0: ; 0x0200DCC0
	ldr r3, _0200DCC8 ; =sub_0200DCB8
	ldr r0, [r0]
	bx r3
	nop
_0200DCC8: .word sub_0200DCB8
	thumb_func_end sub_0200DCC0

	thumb_func_start sub_0200DCCC
sub_0200DCCC: ; 0x0200DCCC
	ldr r3, _0200DCD0 ; =sub_020249F8
	bx r3
	.align 2, 0
_0200DCD0: .word sub_020249F8
	thumb_func_end sub_0200DCCC

	thumb_func_start sub_0200DCD4
sub_0200DCD4: ; 0x0200DCD4
	ldr r3, _0200DCDC ; =sub_0200DCCC
	ldr r0, [r0]
	bx r3
	nop
_0200DCDC: .word sub_0200DCCC
	thumb_func_end sub_0200DCD4

	thumb_func_start sub_0200DCE0
sub_0200DCE0: ; 0x0200DCE0
	ldr r3, _0200DCE4 ; =sub_02024830
	bx r3
	.align 2, 0
_0200DCE4: .word sub_02024830
	thumb_func_end sub_0200DCE0

	thumb_func_start sub_0200DCE8
sub_0200DCE8: ; 0x0200DCE8
	ldr r3, _0200DCF0 ; =sub_0200DCE0
	ldr r0, [r0]
	bx r3
	nop
_0200DCF0: .word sub_0200DCE0
	thumb_func_end sub_0200DCE8

	thumb_func_start sub_0200DCF4
sub_0200DCF4: ; 0x0200DCF4
	ldr r3, _0200DCF8 ; =sub_020248B8
	bx r3
	.align 2, 0
_0200DCF8: .word sub_020248B8
	thumb_func_end sub_0200DCF4

	thumb_func_start sub_0200DCFC
sub_0200DCFC: ; 0x0200DCFC
	ldr r3, _0200DD04 ; =sub_0200DCF4
	ldr r0, [r0]
	bx r3
	nop
_0200DD04: .word sub_0200DCF4
	thumb_func_end sub_0200DCFC

	thumb_func_start sub_0200DD08
sub_0200DD08: ; 0x0200DD08
	ldr r3, _0200DD0C ; =sub_02024A14
	bx r3
	.align 2, 0
_0200DD0C: .word sub_02024A14
	thumb_func_end sub_0200DD08

	thumb_func_start sub_0200DD10
sub_0200DD10: ; 0x0200DD10
	ldr r3, _0200DD18 ; =sub_0200DD08
	ldr r0, [r0]
	bx r3
	nop
_0200DD18: .word sub_0200DD08
	thumb_func_end sub_0200DD10

	thumb_func_start sub_0200DD1C
sub_0200DD1C: ; 0x0200DD1C
	ldr r3, _0200DD20 ; =sub_02024A74
	bx r3
	.align 2, 0
_0200DD20: .word sub_02024A74
	thumb_func_end sub_0200DD1C

	thumb_func_start sub_0200DD24
sub_0200DD24: ; 0x0200DD24
	ldr r3, _0200DD2C ; =sub_0200DD1C
	ldr r0, [r0]
	bx r3
	nop
_0200DD2C: .word sub_0200DD1C
	thumb_func_end sub_0200DD24

	thumb_func_start sub_0200DD30
sub_0200DD30: ; 0x0200DD30
	ldr r3, _0200DD38 ; =sub_02024ACC
	ldr r0, [r0]
	bx r3
	nop
_0200DD38: .word sub_02024ACC
	thumb_func_end sub_0200DD30

	thumb_func_start sub_0200DD3C
sub_0200DD3C: ; 0x0200DD3C
	ldr r3, _0200DD44 ; =sub_02024A04
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	bx r3
	.align 2, 0
_0200DD44: .word sub_02024A04
	thumb_func_end sub_0200DD3C

	thumb_func_start sub_0200DD48
sub_0200DD48: ; 0x0200DD48
	ldr r3, _0200DD50 ; =sub_02024A0C
	ldr r0, [r0]
	bx r3
	nop
_0200DD50: .word sub_02024A0C
	thumb_func_end sub_0200DD48

	thumb_func_start sub_0200DD54
sub_0200DD54: ; 0x0200DD54
	ldr r3, _0200DD5C ; =sub_0200DD3C
	ldr r0, [r0]
	bx r3
	nop
_0200DD5C: .word sub_0200DD3C
	thumb_func_end sub_0200DD54

	thumb_func_start sub_0200DD60
sub_0200DD60: ; 0x0200DD60
	ldr r3, _0200DD64 ; =sub_02024ADC
	bx r3
	.align 2, 0
_0200DD64: .word sub_02024ADC
	thumb_func_end sub_0200DD60

	thumb_func_start sub_0200DD68
sub_0200DD68: ; 0x0200DD68
	ldr r3, _0200DD70 ; =sub_0200DD60
	ldr r0, [r0]
	bx r3
	nop
_0200DD70: .word sub_0200DD60
	thumb_func_end sub_0200DD68

	thumb_func_start sub_0200DD74
sub_0200DD74: ; 0x0200DD74
	ldr r3, _0200DD78 ; =sub_02024AF8
	bx r3
	.align 2, 0
_0200DD78: .word sub_02024AF8
	thumb_func_end sub_0200DD74

	thumb_func_start sub_0200DD7C
sub_0200DD7C: ; 0x0200DD7C
	ldr r3, _0200DD84 ; =sub_0200DD74
	ldr r0, [r0]
	bx r3
	nop
_0200DD84: .word sub_0200DD74
	thumb_func_end sub_0200DD7C

	thumb_func_start sub_0200DD88
sub_0200DD88: ; 0x0200DD88
	push {r3, r4, lr}
	sub sp, #0xc
	lsl r1, r1, #0xc
	str r1, [sp]
	lsl r1, r2, #0xc
	add r4, r0, #0
	str r1, [sp, #4]
	bl sub_02024B60
	cmp r0, #2
	bne _0200DDA8
	mov r0, #3
	ldr r1, [sp, #4]
	lsl r0, r0, #0x12
	add r0, r1, r0
	str r0, [sp, #4]
_0200DDA8:
	mov r0, #0
	str r0, [sp, #8]
	add r0, r4, #0
	add r1, sp, #0
	bl sub_020247D4
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end sub_0200DD88

	thumb_func_start sub_0200DDB8
sub_0200DDB8: ; 0x0200DDB8
	ldr r3, _0200DDC0 ; =sub_0200DD88
	ldr r0, [r0]
	bx r3
	nop
_0200DDC0: .word sub_0200DD88
	thumb_func_end sub_0200DDB8

	thumb_func_start sub_0200DDC4
sub_0200DDC4: ; 0x0200DDC4
	push {r4, r5, lr}
	sub sp, #0xc
	lsl r1, r1, #0xc
	str r1, [sp]
	lsl r1, r2, #0xc
	add r5, r0, #0
	add r4, r3, #0
	str r1, [sp, #4]
	bl sub_02024B60
	cmp r0, #2
	bne _0200DDE2
	ldr r0, [sp, #4]
	add r0, r0, r4
	str r0, [sp, #4]
_0200DDE2:
	mov r0, #0
	str r0, [sp, #8]
	add r0, r5, #0
	add r1, sp, #0
	bl sub_020247D4
	add sp, #0xc
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200DDC4

	thumb_func_start sub_0200DDF4
sub_0200DDF4: ; 0x0200DDF4
	push {r3, lr}
	ldr r0, [r0]
	bl sub_0200DDC4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_0200DDF4

	thumb_func_start sub_0200DE00
sub_0200DE00: ; 0x0200DE00
	push {r3, r4, r5, r6, r7, lr}
	add r7, r0, #0
	add r6, r1, #0
	add r5, r2, #0
	bl sub_020248AC
	add r4, r0, #0
	ldr r1, [r4]
	asr r0, r1, #0xb
	lsr r0, r0, #0x14
	add r0, r1, r0
	asr r0, r0, #0xc
	strh r0, [r6]
	add r0, r7, #0
	bl sub_02024B60
	cmp r0, #2
	ldr r1, [r4, #4]
	bne _0200DE38
	mov r0, #3
	lsl r0, r0, #0x12
	sub r1, r1, r0
	asr r0, r1, #0xb
	lsr r0, r0, #0x14
	add r0, r1, r0
	asr r0, r0, #0xc
	strh r0, [r5]
	pop {r3, r4, r5, r6, r7, pc}
_0200DE38:
	asr r0, r1, #0xb
	lsr r0, r0, #0x14
	add r0, r1, r0
	asr r0, r0, #0xc
	strh r0, [r5]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200DE00

	thumb_func_start sub_0200DE44
sub_0200DE44: ; 0x0200DE44
	ldr r3, _0200DE4C ; =sub_0200DE00
	ldr r0, [r0]
	bx r3
	nop
_0200DE4C: .word sub_0200DE00
	thumb_func_end sub_0200DE44

	thumb_func_start sub_0200DE50
sub_0200DE50: ; 0x0200DE50
	push {r3, r4, r5, r6, r7, lr}
	str r0, [sp]
	add r6, r1, #0
	add r5, r2, #0
	add r7, r3, #0
	bl sub_020248AC
	add r4, r0, #0
	ldr r1, [r4]
	asr r0, r1, #0xb
	lsr r0, r0, #0x14
	add r0, r1, r0
	asr r0, r0, #0xc
	strh r0, [r6]
	ldr r0, [sp]
	bl sub_02024B60
	cmp r0, #2
	bne _0200DE86
	ldr r0, [r4, #4]
	sub r1, r0, r7
	asr r0, r1, #0xb
	lsr r0, r0, #0x14
	add r0, r1, r0
	asr r0, r0, #0xc
	strh r0, [r5]
	pop {r3, r4, r5, r6, r7, pc}
_0200DE86:
	ldr r1, [r4, #4]
	asr r0, r1, #0xb
	lsr r0, r0, #0x14
	add r0, r1, r0
	asr r0, r0, #0xc
	strh r0, [r5]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200DE50

	thumb_func_start sub_0200DE94
sub_0200DE94: ; 0x0200DE94
	push {r3, lr}
	ldr r0, [r0]
	bl sub_0200DE50
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_0200DE94

	thumb_func_start sub_0200DEA0
sub_0200DEA0: ; 0x0200DEA0
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	add r6, r0, #0
	add r5, r1, #0
	add r4, r2, #0
	bl sub_020248AC
	ldr r2, [r0]
	lsl r1, r5, #0xc
	add r1, r2, r1
	str r1, [sp]
	ldr r2, [r0, #4]
	lsl r1, r4, #0xc
	add r1, r2, r1
	str r1, [sp, #4]
	ldr r0, [r0, #8]
	add r1, sp, #0
	str r0, [sp, #8]
	add r0, r6, #0
	bl sub_020247D4
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0200DEA0

	thumb_func_start sub_0200DED0
sub_0200DED0: ; 0x0200DED0
	ldr r3, _0200DED8 ; =sub_0200DEA0
	ldr r0, [r0]
	bx r3
	nop
_0200DED8: .word sub_0200DEA0
	thumb_func_end sub_0200DED0

	thumb_func_start sub_0200DEDC
sub_0200DEDC: ; 0x0200DEDC
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	add r5, r0, #0
	ldr r0, [r5]
	add r4, r1, #0
	add r6, r2, #0
	bl sub_020248AC
	ldr r1, [r0]
	add r1, r1, r4
	str r1, [sp]
	ldr r1, [r0, #4]
	add r1, r1, r6
	str r1, [sp, #4]
	ldr r0, [r0, #8]
	add r1, sp, #0
	str r0, [sp, #8]
	ldr r0, [r5]
	bl sub_020247D4
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	thumb_func_end sub_0200DEDC

	thumb_func_start sub_0200DF08
sub_0200DF08: ; 0x0200DF08
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	add r5, r0, #0
	ldr r0, [r5]
	add r4, r1, #0
	add r6, r2, #0
	bl sub_020248AC
	str r4, [sp]
	str r6, [sp, #4]
	ldr r0, [r0, #8]
	add r1, sp, #0
	str r0, [sp, #8]
	ldr r0, [r5]
	bl sub_020247D4
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	thumb_func_end sub_0200DF08

	thumb_func_start sub_0200DF2C
sub_0200DF2C: ; 0x0200DF2C
	push {r3, r4, r5, lr}
	ldr r0, [r0]
	add r5, r1, #0
	add r4, r2, #0
	bl sub_020248AC
	ldr r1, [r0]
	str r1, [r5]
	ldr r0, [r0, #4]
	str r0, [r4]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200DF2C

	thumb_func_start sub_0200DF44
sub_0200DF44: ; 0x0200DF44
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r0, [r5]
	add r6, r1, #0
	add r4, r2, #0
	add r7, r3, #0
	bl sub_02024B60
	cmp r0, #2
	bne _0200DF64
	add r0, r5, #0
	add r1, r6, #0
	add r2, r4, r7
	bl sub_0200DF08
	pop {r3, r4, r5, r6, r7, pc}
_0200DF64:
	add r0, r5, #0
	add r1, r6, #0
	add r2, r4, #0
	bl sub_0200DF08
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200DF44

	thumb_func_start sub_0200DF70
sub_0200DF70: ; 0x0200DF70
	push {r4, r5, r6, lr}
	add r5, r0, #0
	add r4, r2, #0
	add r6, r3, #0
	bl sub_0200DF2C
	ldr r0, [r5]
	bl sub_02024B60
	cmp r0, #2
	bne _0200DF8C
	ldr r0, [r4]
	sub r0, r0, r6
	str r0, [r4]
_0200DF8C:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0200DF70

	thumb_func_start sub_0200DF90
sub_0200DF90: ; 0x0200DF90
	ldr r3, _0200DF94 ; =sub_0202487C
	bx r3
	.align 2, 0
_0200DF94: .word sub_0202487C
	thumb_func_end sub_0200DF90

	thumb_func_start sub_0200DF98
sub_0200DF98: ; 0x0200DF98
	ldr r3, _0200DFA0 ; =sub_0200DF90
	ldr r0, [r0]
	bx r3
	nop
_0200DFA0: .word sub_0200DF90
	thumb_func_end sub_0200DF98

	thumb_func_start sub_0200DFA4
sub_0200DFA4: ; 0x0200DFA4
	push {r3, r4, r5, r6, r7, lr}
	add r5, r1, #0
	add r7, r0, #0
	add r6, r2, #0
	bl sub_020248B0
	add r4, r0, #0
	add r0, r5, #0
	mov r1, #0
	bl sub_020F1ACC
	ldr r0, _0200E020 ; =0x45800000
	bls _0200DFD0
	add r1, r5, #0
	bl sub_020F22DC
	add r1, r0, #0
	mov r0, #0x3f
	lsl r0, r0, #0x18
	bl sub_020F1520
	b _0200DFDE
_0200DFD0:
	add r1, r5, #0
	bl sub_020F22DC
	mov r1, #0x3f
	lsl r1, r1, #0x18
	bl sub_020F24C8
_0200DFDE:
	bl sub_020F2104
	str r0, [r4]
	add r0, r6, #0
	mov r1, #0
	bl sub_020F1ACC
	ldr r0, _0200E020 ; =0x45800000
	bls _0200E002
	add r1, r6, #0
	bl sub_020F22DC
	add r1, r0, #0
	mov r0, #0x3f
	lsl r0, r0, #0x18
	bl sub_020F1520
	b _0200E010
_0200E002:
	add r1, r6, #0
	bl sub_020F22DC
	mov r1, #0x3f
	lsl r1, r1, #0x18
	bl sub_020F24C8
_0200E010:
	bl sub_020F2104
	str r0, [r4, #4]
	add r0, r7, #0
	add r1, r4, #0
	bl sub_020247F4
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200E020: .word 0x45800000
	thumb_func_end sub_0200DFA4

	thumb_func_start sub_0200E024
sub_0200E024: ; 0x0200E024
	ldr r3, _0200E02C ; =sub_0200DFA4
	ldr r0, [r0]
	bx r3
	nop
_0200E02C: .word sub_0200DFA4
	thumb_func_end sub_0200E024

	thumb_func_start sub_0200E030
sub_0200E030: ; 0x0200E030
	push {r4, r5, r6, lr}
	add r5, r1, #0
	add r4, r2, #0
	bl sub_020248B0
	add r6, r0, #0
	ldr r0, [r6]
	bl sub_020F2178
	ldr r1, _0200E05C ; =0x45800000
	bl sub_020F1CC8
	str r0, [r5]
	ldr r0, [r6, #4]
	bl sub_020F2178
	ldr r1, _0200E05C ; =0x45800000
	bl sub_020F1CC8
	str r0, [r4]
	pop {r4, r5, r6, pc}
	nop
_0200E05C: .word 0x45800000
	thumb_func_end sub_0200E030

	thumb_func_start sub_0200E060
sub_0200E060: ; 0x0200E060
	ldr r3, _0200E068 ; =sub_0200E030
	ldr r0, [r0]
	bx r3
	nop
_0200E068: .word sub_0200E030
	thumb_func_end sub_0200E060

	thumb_func_start sub_0200E06C
sub_0200E06C: ; 0x0200E06C
	ldr r3, _0200E070 ; =sub_02024818
	bx r3
	.align 2, 0
_0200E070: .word sub_02024818
	thumb_func_end sub_0200E06C

	thumb_func_start sub_0200E074
sub_0200E074: ; 0x0200E074
	ldr r3, _0200E07C ; =sub_0200E06C
	ldr r0, [r0]
	bx r3
	nop
_0200E07C: .word sub_0200E06C
	thumb_func_end sub_0200E074

	thumb_func_start sub_0200E080
sub_0200E080: ; 0x0200E080
	push {r3, r4, r5, lr}
	add r5, r1, #0
	add r4, r0, #0
	bl sub_020248B4
	add r0, r0, r5
	lsl r0, r0, #0x10
	lsr r1, r0, #0x10
	add r0, r4, #0
	bl sub_02024818
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0200E080

	thumb_func_start sub_0200E098
sub_0200E098: ; 0x0200E098
	ldr r3, _0200E0A0 ; =sub_0200E080
	ldr r0, [r0]
	bx r3
	nop
_0200E0A0: .word sub_0200E080
	thumb_func_end sub_0200E098

	thumb_func_start sub_0200E0A4
sub_0200E0A4: ; 0x0200E0A4
	ldr r3, _0200E0A8 ; =sub_020248B4
	bx r3
	.align 2, 0
_0200E0A8: .word sub_020248B4
	thumb_func_end sub_0200E0A4

	thumb_func_start sub_0200E0AC
sub_0200E0AC: ; 0x0200E0AC
	ldr r3, _0200E0B4 ; =sub_0200E0A4
	ldr r0, [r0]
	bx r3
	nop
_0200E0B4: .word sub_0200E0A4
	thumb_func_end sub_0200E0AC

	thumb_func_start sub_0200E0B8
sub_0200E0B8: ; 0x0200E0B8
	ldr r3, _0200E0BC ; =sub_02024890
	bx r3
	.align 2, 0
_0200E0BC: .word sub_02024890
	thumb_func_end sub_0200E0B8

	thumb_func_start sub_0200E0C0
sub_0200E0C0: ; 0x0200E0C0
	ldr r3, _0200E0C8 ; =sub_0200E0B8
	ldr r0, [r0]
	bx r3
	nop
_0200E0C8: .word sub_0200E0B8
	thumb_func_end sub_0200E0C0

	thumb_func_start sub_0200E0CC
sub_0200E0CC: ; 0x0200E0CC
	push {lr}
	sub sp, #0xc
	lsl r1, r1, #0xc
	str r1, [sp]
	lsl r1, r2, #0xc
	str r1, [sp, #4]
	mov r1, #0
	str r1, [sp, #8]
	ldr r0, [r0]
	add r1, sp, #0
	bl sub_020247E4
	add sp, #0xc
	pop {pc}
	thumb_func_end sub_0200E0CC

	thumb_func_start sub_0200E0E8
sub_0200E0E8: ; 0x0200E0E8
	ldr r3, _0200E0F0 ; =sub_02024B38
	ldr r0, [r0]
	bx r3
	nop
_0200E0F0: .word sub_02024B38
	thumb_func_end sub_0200E0E8

	thumb_func_start sub_0200E0F4
sub_0200E0F4: ; 0x0200E0F4
	ldr r3, _0200E0F8 ; =sub_02024B78
	bx r3
	.align 2, 0
_0200E0F8: .word sub_02024B78
	thumb_func_end sub_0200E0F4

	thumb_func_start sub_0200E0FC
sub_0200E0FC: ; 0x0200E0FC
	ldr r3, _0200E104 ; =sub_0200E0F4
	ldr r0, [r0]
	bx r3
	nop
_0200E104: .word sub_0200E0F4
	thumb_func_end sub_0200E0FC

	thumb_func_start sub_0200E108
sub_0200E108: ; 0x0200E108
	ldr r3, _0200E10C ; =sub_02024BAC
	bx r3
	.align 2, 0
_0200E10C: .word sub_02024BAC
	thumb_func_end sub_0200E108

	thumb_func_start sub_0200E110
sub_0200E110: ; 0x0200E110
	ldr r3, _0200E118 ; =sub_0200E108
	ldr r0, [r0]
	bx r3
	nop
_0200E118: .word sub_0200E108
	thumb_func_end sub_0200E110

	thumb_func_start sub_0200E11C
sub_0200E11C: ; 0x0200E11C
	ldr r3, _0200E124 ; =sub_02024C9C
	ldr r0, [r0]
	bx r3
	nop
_0200E124: .word sub_02024C9C
	thumb_func_end sub_0200E11C

	thumb_func_start sub_0200E128
sub_0200E128: ; 0x0200E128
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4, #0xc]
	ldr r1, [sp, #0x28]
	add r6, r2, #0
	add r7, r3, #0
	bl sub_0200A728
	cmp r0, #0
	bne _0200E146
	add sp, #0xc
	mov r0, #0
	pop {r4, r5, r6, r7, pc}
_0200E146:
	ldr r0, [sp, #0x28]
	ldr r3, [sp, #0x20]
	str r0, [sp]
	ldr r0, [sp, #0x24]
	add r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r5]
	add r2, r7, #0
	str r0, [sp, #8]
	ldr r0, [r4, #0xc]
	bl sub_0200A1D8
	add r5, r0, #0
	beq _0200E174
	bl sub_0200AD64
	ldr r0, [r4, #0x24]
	add r1, r5, #0
	bl sub_0200DAE4
	add sp, #0xc
	mov r0, #1
	pop {r4, r5, r6, r7, pc}
_0200E174:
	bl GF_AssertFail
	cmp r5, #0
	beq _0200E182
	add sp, #0xc
	mov r0, #1
	pop {r4, r5, r6, r7, pc}
_0200E182:
	mov r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0200E128

	thumb_func_start sub_0200E188
sub_0200E188: ; 0x0200E188
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4, #0xc]
	ldr r1, [sp, #0x28]
	add r6, r2, #0
	add r7, r3, #0
	bl sub_0200A728
	cmp r0, #0
	bne _0200E1A6
	add sp, #0xc
	mov r0, #0
	pop {r4, r5, r6, r7, pc}
_0200E1A6:
	ldr r0, [sp, #0x28]
	ldr r3, [sp, #0x20]
	str r0, [sp]
	ldr r0, [sp, #0x24]
	add r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r5]
	add r2, r7, #0
	str r0, [sp, #8]
	ldr r0, [r4, #0xc]
	bl sub_0200A1D8
	add r5, r0, #0
	beq _0200E1D4
	bl sub_0200AE18
	ldr r0, [r4, #0x24]
	add r1, r5, #0
	bl sub_0200DAE4
	add sp, #0xc
	mov r0, #1
	pop {r4, r5, r6, r7, pc}
_0200E1D4:
	bl GF_AssertFail
	cmp r5, #0
	beq _0200E1E2
	add sp, #0xc
	mov r0, #1
	pop {r4, r5, r6, r7, pc}
_0200E1E2:
	mov r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0200E188

	thumb_func_start sub_0200E1E8
sub_0200E1E8: ; 0x0200E1E8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4, #0xc]
	ldr r1, [sp, #0x28]
	add r6, r2, #0
	add r7, r3, #0
	bl sub_0200A728
	cmp r0, #0
	bne _0200E206
	add sp, #0xc
	mov r0, #0
	pop {r4, r5, r6, r7, pc}
_0200E206:
	ldr r0, [sp, #0x28]
	ldr r3, [sp, #0x20]
	str r0, [sp]
	ldr r0, [sp, #0x24]
	add r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r5]
	add r2, r7, #0
	str r0, [sp, #8]
	ldr r0, [r4, #0xc]
	bl sub_0200A3C8
	add r5, r0, #0
	beq _0200E234
	bl sub_0200AE18
	ldr r0, [r4, #0x24]
	add r1, r5, #0
	bl sub_0200DAE4
	add sp, #0xc
	mov r0, #1
	pop {r4, r5, r6, r7, pc}
_0200E234:
	bl GF_AssertFail
	cmp r5, #0
	beq _0200E242
	add sp, #0xc
	mov r0, #1
	pop {r4, r5, r6, r7, pc}
_0200E242:
	mov r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0200E1E8

	thumb_func_start sub_0200E248
sub_0200E248: ; 0x0200E248
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4, #0xc]
	ldr r1, [sp, #0x24]
	add r7, r2, #0
	str r3, [sp, #8]
	bl sub_0200A7BC
	add r6, r0, #0
	ldr r0, [sp, #0x20]
	ldr r3, [sp, #8]
	str r0, [sp]
	ldr r0, [r5]
	add r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r4, #0xc]
	add r2, r7, #0
	bl sub_0200A2E4
	add r0, r6, #0
	bl sub_0200AE8C
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0200E248

	thumb_func_start sub_0200E27C
sub_0200E27C: ; 0x0200E27C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4, #0x10]
	ldr r1, [sp, #0x24]
	add r7, r2, #0
	str r3, [sp, #8]
	bl sub_0200A7BC
	add r6, r0, #0
	ldr r0, [sp, #0x20]
	ldr r3, [sp, #8]
	str r0, [sp]
	ldr r0, [r5]
	add r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r4, #0x10]
	add r2, r7, #0
	bl sub_0200A350
	add r0, r6, #0
	bl sub_0200B084
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0200E27C

	thumb_func_start sub_0200E2B0
sub_0200E2B0: ; 0x0200E2B0
	ldr r0, [r0]
	bx lr
	thumb_func_end sub_0200E2B0

	thumb_func_start sub_0200E2B4
sub_0200E2B4: ; 0x0200E2B4
	str r1, [r0]
	bx lr
	thumb_func_end sub_0200E2B4

	thumb_func_start sub_0200E2B8
sub_0200E2B8: ; 0x0200E2B8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4, #0xc]
	ldr r1, [sp, #0x24]
	add r7, r2, #0
	str r3, [sp, #8]
	bl sub_0200A7BC
	add r6, r0, #0
	ldr r0, [sp, #0x20]
	ldr r3, [sp, #8]
	str r0, [sp]
	ldr r0, [r5]
	add r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r4, #0xc]
	add r2, r7, #0
	bl sub_0200A590
	add r0, r6, #0
	bl sub_0200AE8C
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0200E2B8

	thumb_func_start sub_0200E2EC
sub_0200E2EC: ; 0x0200E2EC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4, #0x10]
	ldr r1, [sp, #0x24]
	add r7, r2, #0
	str r3, [sp, #8]
	bl sub_0200A7BC
	add r6, r0, #0
	ldr r0, [sp, #0x20]
	ldr r3, [sp, #8]
	str r0, [sp]
	ldr r0, [r5]
	add r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r4, #0x10]
	add r2, r7, #0
	bl sub_0200A5FC
	add r0, r6, #0
	bl sub_0200B084
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0200E2EC

	thumb_func_start sub_0200E320
sub_0200E320: ; 0x0200E320
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, _0200E338 ; =0x021D110C
	add r4, r1, #0
	add r3, r2, #0
	ldr r0, [r0, #0x18]
	add r1, r5, #0
	add r2, r4, #0
	bl sub_0201F8C0
	pop {r3, r4, r5, pc}
	nop
_0200E338: .word 0x021D110C
	thumb_func_end sub_0200E320

	thumb_func_start sub_0200E33C
sub_0200E33C: ; 0x0200E33C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, _0200E354 ; =0x021D110C
	add r4, r1, #0
	add r3, r2, #0
	ldr r0, [r0, #0x1c]
	add r1, r5, #0
	add r2, r4, #0
	bl sub_0201F8C0
	pop {r3, r4, r5, pc}
	nop
_0200E354: .word 0x021D110C
	thumb_func_end sub_0200E33C

	thumb_func_start sub_0200E358
sub_0200E358: ; 0x0200E358
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, _0200E370 ; =0x021D110C
	add r4, r1, #0
	add r3, r2, #0
	ldr r0, [r0, #0x24]
	add r1, r5, #0
	add r2, r4, #0
	bl sub_0201F8C0
	pop {r3, r4, r5, pc}
	nop
_0200E370: .word 0x021D110C
	thumb_func_end sub_0200E358

	thumb_func_start sub_0200E374
sub_0200E374: ; 0x0200E374
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, _0200E38C ; =0x021D110C
	add r4, r1, #0
	add r3, r2, #0
	ldr r0, [r0, #0x20]
	add r1, r5, #0
	add r2, r4, #0
	bl sub_0201F8C0
	pop {r3, r4, r5, pc}
	nop
_0200E38C: .word 0x021D110C
	thumb_func_end sub_0200E374

	thumb_func_start sub_0200E390
sub_0200E390: ; 0x0200E390
	ldr r3, _0200E394 ; =sub_0201F954
	bx r3
	.align 2, 0
_0200E394: .word sub_0201F954
	thumb_func_end sub_0200E390

	thumb_func_start sub_0200E398
sub_0200E398: ; 0x0200E398
	push {r3, r4, r5, lr}
	sub sp, #0x10
	add r5, r0, #0
	add r4, r1, #0
	cmp r3, #0
	str r2, [sp]
	bne _0200E3BE
	mov r1, #0
	str r1, [sp, #4]
	ldr r0, [sp, #0x20]
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	mov r0, #0x26
	add r2, r5, #0
	add r3, r4, #0
	bl sub_020078F0
	add sp, #0x10
	pop {r3, r4, r5, pc}
_0200E3BE:
	mov r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [sp, #0x20]
	mov r1, #1
	str r0, [sp, #0xc]
	mov r0, #0x26
	add r2, r5, #0
	add r3, r4, #0
	bl sub_020078F0
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0200E398

	thumb_func_start sub_0200E3D8
sub_0200E3D8: ; 0x0200E3D8
	mov r0, #0x19
	bx lr
	thumb_func_end sub_0200E3D8

	thumb_func_start sub_0200E3DC
sub_0200E3DC: ; 0x0200E3DC
	push {r4, r5, r6, lr}
	sub sp, #0x10
	add r6, r0, #0
	add r0, sp, #0x10
	ldrb r0, [r0, #0x10]
	add r5, r1, #0
	add r4, r3, #0
	cmp r0, #0
	beq _0200E3F2
	mov r1, #1
	b _0200E3F4
_0200E3F2:
	mov r1, #0
_0200E3F4:
	str r2, [sp]
	mov r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [sp, #0x24]
	add r2, r6, #0
	str r0, [sp, #0xc]
	mov r0, #0x26
	add r3, r5, #0
	bl sub_020078F0
	add r0, sp, #0x10
	ldrb r0, [r0, #0x10]
	cmp r0, #2
	bne _0200E416
	mov r1, #0x2e
	b _0200E418
_0200E416:
	mov r1, #0x19
_0200E418:
	cmp r5, #4
	bhs _0200E432
	mov r0, #0x20
	str r0, [sp]
	ldr r0, [sp, #0x24]
	mov r2, #0
	str r0, [sp, #4]
	mov r0, #0x26
	lsl r3, r4, #5
	bl sub_02007938
	add sp, #0x10
	pop {r4, r5, r6, pc}
_0200E432:
	mov r0, #0x20
	str r0, [sp]
	ldr r0, [sp, #0x24]
	mov r2, #4
	str r0, [sp, #4]
	mov r0, #0x26
	lsl r3, r4, #5
	bl sub_02007938
	add sp, #0x10
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0200E3DC

	thumb_func_start sub_0200E448
sub_0200E448: ; 0x0200E448
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	str r1, [sp, #0x14]
	str r2, [sp, #0x18]
	str r3, [sp, #0x1c]
	ldr r2, [sp, #0x1c]
	ldr r5, [sp, #0x40]
	sub r7, r2, #1
	ldr r2, [sp, #0x18]
	str r0, [sp, #0x10]
	sub r6, r2, #1
	lsl r2, r7, #0x18
	lsr r2, r2, #0x18
	str r2, [sp]
	mov r2, #1
	str r2, [sp, #4]
	str r2, [sp, #8]
	lsl r3, r6, #0x18
	str r5, [sp, #0xc]
	add r2, sp, #0x28
	ldrh r2, [r2, #0x1c]
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	add r1, sp, #0x28
	ldrh r4, [r1, #0x1c]
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	ldrb r0, [r1, #0x10]
	add r2, r4, #1
	lsl r2, r2, #0x10
	str r0, [sp, #4]
	mov r0, #1
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	ldr r3, [sp, #0x18]
	lsr r2, r2, #0x10
	bl sub_0201C8C4
	add r0, sp, #0x28
	ldrb r1, [r0, #0x10]
	ldr r0, [sp, #0x18]
	add r2, r4, #2
	add r0, r0, r1
	str r0, [sp, #0x20]
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x20]
	str r5, [sp, #0xc]
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x1c]
	add r2, r4, #3
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	add r0, sp, #0x28
	ldrb r0, [r0, #0x14]
	lsl r2, r2, #0x10
	lsl r3, r6, #0x18
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x1c]
	ldr r3, [sp, #0x20]
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	add r0, sp, #0x28
	ldrb r0, [r0, #0x14]
	add r2, r4, #5
	lsl r2, r2, #0x10
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	add r0, sp, #0x28
	ldrb r1, [r0, #0x14]
	ldr r0, [sp, #0x1c]
	add r2, r4, #6
	add r7, r0, r1
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	lsl r2, r2, #0x10
	lsl r3, r6, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	add r0, sp, #0x28
	ldrb r0, [r0, #0x10]
	add r2, r4, #7
	lsl r2, r2, #0x10
	str r0, [sp, #4]
	mov r0, #1
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	ldr r3, [sp, #0x18]
	lsr r2, r2, #0x10
	bl sub_0201C8C4
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x20]
	str r5, [sp, #0xc]
	add r4, #8
	lsl r2, r4, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200E448

	thumb_func_start sub_0200E580
sub_0200E580: ; 0x0200E580
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	add r5, r0, #0
	add r4, r1, #0
	add r6, r2, #0
	add r7, r3, #0
	bl sub_0201EE8C
	str r0, [sp, #0x10]
	add r0, r5, #0
	bl sub_0201EE98
	str r0, [sp, #0x14]
	add r0, r5, #0
	bl sub_0201EE9C
	str r0, [sp, #0x18]
	add r0, r5, #0
	bl sub_0201EE90
	str r0, [sp, #0x1c]
	add r0, r5, #0
	bl sub_0201EE94
	ldr r1, [sp, #0x1c]
	ldr r2, [sp, #0x14]
	str r1, [sp]
	str r0, [sp, #4]
	str r7, [sp, #8]
	str r6, [sp, #0xc]
	ldr r0, [r5]
	ldr r1, [sp, #0x10]
	ldr r3, [sp, #0x18]
	bl sub_0200E448
	cmp r4, #0
	bne _0200E5D0
	add r0, r5, #0
	bl sub_0201D578
_0200E5D0:
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200E580

	thumb_func_start sub_0200E5D4
sub_0200E5D4: ; 0x0200E5D4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	add r5, r0, #0
	add r4, r1, #0
	bl sub_0201EE8C
	str r0, [sp, #0x10]
	add r0, r5, #0
	bl sub_0201EE98
	add r6, r0, #0
	add r0, r5, #0
	bl sub_0201EE9C
	add r7, r0, #0
	add r0, r5, #0
	bl sub_0201EE90
	str r0, [sp, #0x14]
	add r0, r5, #0
	bl sub_0201EE94
	sub r1, r7, #1
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	str r1, [sp]
	ldr r1, [sp, #0x14]
	add r0, r0, #2
	add r1, r1, #2
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	lsl r0, r0, #0x18
	str r1, [sp, #4]
	lsr r0, r0, #0x18
	sub r3, r6, #1
	lsl r3, r3, #0x18
	str r0, [sp, #8]
	mov r2, #0
	str r2, [sp, #0xc]
	ldr r0, [r5]
	ldr r1, [sp, #0x10]
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	cmp r4, #0
	bne _0200E636
	add r0, r5, #0
	bl sub_0201D8C8
_0200E636:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200E5D4

	thumb_func_start sub_0200E63C
sub_0200E63C: ; 0x0200E63C
	add r0, r0, #2
	bx lr
	thumb_func_end sub_0200E63C

	thumb_func_start sub_0200E640
sub_0200E640: ; 0x0200E640
	add r0, #0x1a
	bx lr
	thumb_func_end sub_0200E640

	thumb_func_start sub_0200E644
sub_0200E644: ; 0x0200E644
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r0, [sp, #0x10]
	add r0, sp, #0x18
	ldrb r7, [r0, #0x10]
	add r6, r2, #0
	add r5, r1, #0
	add r0, r7, #0
	add r4, r3, #0
	bl sub_0200E63C
	add r1, r0, #0
	str r6, [sp]
	mov r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [sp, #0x2c]
	ldr r2, [sp, #0x10]
	str r0, [sp, #0xc]
	mov r0, #0x26
	add r3, r5, #0
	bl sub_020078F0
	cmp r5, #4
	bhs _0200E694
	add r0, r7, #0
	bl sub_0200E640
	add r1, r0, #0
	mov r0, #0x20
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	mov r2, #0
	str r0, [sp, #4]
	mov r0, #0x26
	lsl r3, r4, #5
	bl sub_02007938
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
_0200E694:
	add r0, r7, #0
	bl sub_0200E640
	add r1, r0, #0
	mov r0, #0x20
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	mov r2, #4
	str r0, [sp, #4]
	mov r0, #0x26
	lsl r3, r4, #5
	bl sub_02007938
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200E644

	thumb_func_start sub_0200E6B4
sub_0200E6B4: ; 0x0200E6B4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x30
	str r1, [sp, #0x10]
	str r2, [sp, #0x14]
	str r3, [sp, #0x18]
	ldr r2, [sp, #0x4c]
	add r7, r0, #0
	str r2, [sp, #0x4c]
	ldr r2, [sp, #0x18]
	ldr r5, [sp, #0x50]
	sub r6, r2, #1
	ldr r2, [sp, #0x14]
	sub r2, r2, #2
	str r2, [sp, #0x28]
	lsl r2, r6, #0x18
	lsr r2, r2, #0x18
	str r2, [sp]
	mov r2, #1
	str r2, [sp, #4]
	str r2, [sp, #8]
	ldr r3, [sp, #0x28]
	str r5, [sp, #0xc]
	add r2, sp, #0x38
	lsl r3, r3, #0x18
	ldrh r2, [r2, #0x1c]
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x14]
	sub r0, r0, #1
	str r0, [sp, #0x24]
	add r0, sp, #0x38
	ldrh r4, [r0, #0x1c]
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x24]
	str r5, [sp, #0xc]
	add r2, r4, #1
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r1, [sp, #0x10]
	add r0, r7, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	add r0, sp, #0x38
	ldrb r0, [r0, #0x10]
	add r2, r4, #2
	lsl r2, r2, #0x10
	str r0, [sp, #4]
	mov r0, #1
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	ldr r1, [sp, #0x10]
	ldr r3, [sp, #0x14]
	add r0, r7, #0
	lsr r2, r2, #0x10
	bl sub_0201C8C4
	add r0, sp, #0x38
	ldrb r1, [r0, #0x10]
	ldr r0, [sp, #0x14]
	add r2, r4, #3
	add r0, r0, r1
	str r0, [sp, #0x2c]
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x2c]
	str r5, [sp, #0xc]
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r1, [sp, #0x10]
	add r0, r7, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x2c]
	add r2, r4, #4
	add r0, r0, #1
	str r0, [sp, #0x20]
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x20]
	str r5, [sp, #0xc]
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r1, [sp, #0x10]
	add r0, r7, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x2c]
	add r2, r4, #5
	add r0, r0, #2
	str r0, [sp, #0x1c]
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x1c]
	str r5, [sp, #0xc]
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r1, [sp, #0x10]
	add r0, r7, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x18]
	ldr r3, [sp, #0x28]
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	ldr r0, [sp, #0x4c]
	add r2, r4, #6
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r1, [sp, #0x10]
	add r0, r7, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x18]
	ldr r3, [sp, #0x24]
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	ldr r0, [sp, #0x4c]
	add r2, r4, #7
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r1, [sp, #0x10]
	add r0, r7, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x18]
	add r2, r4, #0
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	ldr r0, [sp, #0x4c]
	ldr r3, [sp, #0x2c]
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	add r2, #9
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r1, [sp, #0x10]
	add r0, r7, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x18]
	add r2, r4, #0
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	ldr r0, [sp, #0x4c]
	ldr r3, [sp, #0x20]
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	add r2, #0xa
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r1, [sp, #0x10]
	add r0, r7, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x18]
	add r2, r4, #0
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	ldr r0, [sp, #0x4c]
	ldr r3, [sp, #0x1c]
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	add r2, #0xb
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r1, [sp, #0x10]
	add r0, r7, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	add r2, r4, #0
	ldr r3, [sp, #0x28]
	add r2, #0xc
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r1, [sp, #0x18]
	ldr r0, [sp, #0x4c]
	lsr r2, r2, #0x10
	add r6, r1, r0
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	ldr r1, [sp, #0x10]
	add r0, r7, #0
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	add r2, r4, #0
	ldr r3, [sp, #0x24]
	str r5, [sp, #0xc]
	add r2, #0xd
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r1, [sp, #0x10]
	add r0, r7, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	add r0, sp, #0x38
	ldrb r0, [r0, #0x10]
	add r2, r4, #0
	add r2, #0xe
	str r0, [sp, #4]
	mov r0, #1
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	lsl r2, r2, #0x10
	ldr r1, [sp, #0x10]
	ldr r3, [sp, #0x14]
	add r0, r7, #0
	lsr r2, r2, #0x10
	bl sub_0201C8C4
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	add r2, r4, #0
	ldr r3, [sp, #0x2c]
	str r5, [sp, #0xc]
	add r2, #0xf
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r1, [sp, #0x10]
	add r0, r7, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	add r2, r4, #0
	ldr r3, [sp, #0x20]
	str r5, [sp, #0xc]
	add r2, #0x10
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r1, [sp, #0x10]
	add r0, r7, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x1c]
	str r5, [sp, #0xc]
	add r4, #0x11
	lsl r2, r4, #0x10
	lsl r3, r3, #0x18
	ldr r1, [sp, #0x10]
	add r0, r7, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200E6B4

	thumb_func_start sub_0200E948
sub_0200E948: ; 0x0200E948
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	add r5, r0, #0
	add r6, r1, #0
	add r7, r2, #0
	bl sub_0201EE8C
	str r0, [sp, #0x10]
	add r0, r5, #0
	bl sub_0201EE98
	str r0, [sp, #0x14]
	add r0, r5, #0
	bl sub_0201EE9C
	str r0, [sp, #0x18]
	add r0, r5, #0
	bl sub_0201EE90
	add r4, r0, #0
	add r0, r5, #0
	bl sub_0201EE94
	str r4, [sp]
	str r0, [sp, #4]
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #8]
	lsl r0, r6, #0x10
	lsr r0, r0, #0x10
	str r0, [sp, #0xc]
	ldr r0, [r5]
	ldr r1, [sp, #0x10]
	ldr r2, [sp, #0x14]
	ldr r3, [sp, #0x18]
	bl sub_0200E6B4
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200E948

	thumb_func_start sub_0200E998
sub_0200E998: ; 0x0200E998
	push {r4, r5, r6, lr}
	add r6, r2, #0
	add r4, r1, #0
	add r1, r6, #0
	add r2, r3, #0
	add r5, r0, #0
	bl sub_0200E948
	cmp r4, #0
	bne _0200E9B2
	add r0, r5, #0
	bl sub_0201D578
_0200E9B2:
	add r0, r6, #0
	bl sub_020027F0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0200E998

	thumb_func_start sub_0200E9BC
sub_0200E9BC: ; 0x0200E9BC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	add r5, r0, #0
	add r4, r1, #0
	bl sub_0201EE8C
	str r0, [sp, #0x10]
	add r0, r5, #0
	bl sub_0201EE98
	add r6, r0, #0
	add r0, r5, #0
	bl sub_0201EE9C
	add r7, r0, #0
	add r0, r5, #0
	bl sub_0201EE90
	str r0, [sp, #0x14]
	add r0, r5, #0
	bl sub_0201EE94
	sub r1, r7, #1
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	str r1, [sp]
	ldr r1, [sp, #0x14]
	add r0, r0, #2
	add r1, r1, #5
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	lsl r0, r0, #0x18
	str r1, [sp, #4]
	lsr r0, r0, #0x18
	sub r3, r6, #2
	lsl r3, r3, #0x18
	str r0, [sp, #8]
	mov r2, #0
	str r2, [sp, #0xc]
	ldr r0, [r5]
	ldr r1, [sp, #0x10]
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	cmp r4, #0
	bne _0200EA1E
	add r0, r5, #0
	bl sub_0201D8C8
_0200EA1E:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200E9BC

	thumb_func_start sub_0200EA24
sub_0200EA24: ; 0x0200EA24
	push {r4, r5, lr}
	sub sp, #0x24
	add r5, r1, #0
	str r0, [sp, #0x1c]
	add r1, sp, #0x14
	strh r3, [r1, #0xc]
	add r4, r2, #0
	add r0, sp, #0x20
	ldrh r2, [r0, #0x10]
	add r3, r4, #0
	strh r2, [r1, #0xe]
	ldr r2, [sp, #0x34]
	str r2, [sp, #0x14]
	ldrh r2, [r0, #0x18]
	strh r2, [r1, #4]
	ldrh r2, [r0, #0x1c]
	strh r2, [r1, #6]
	ldrh r1, [r0, #0x20]
	add r2, r5, #0
	str r1, [sp]
	ldrh r1, [r0, #0x24]
	str r1, [sp, #4]
	ldrh r1, [r0, #0x28]
	str r1, [sp, #8]
	ldrh r0, [r0, #0x2c]
	add r1, sp, #0x14
	str r0, [sp, #0xc]
	mov r0, #0
	str r0, [sp, #0x10]
	add r0, sp, #0x1c
	bl sub_0201CE08
	add sp, #0x24
	pop {r4, r5, pc}
	thumb_func_end sub_0200EA24

	thumb_func_start sub_0200EA68
sub_0200EA68: ; 0x0200EA68
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x48
	str r2, [sp, #0x24]
	str r3, [sp, #0x28]
	str r0, [sp, #0x20]
	ldr r0, [r0]
	add r7, r1, #0
	bl sub_0201ACAC
	add r6, r0, #0
	ldr r0, [sp, #0x20]
	bl sub_0201EE8C
	str r0, [sp, #0x2c]
	ldr r0, [sp, #0x28]
	lsl r0, r0, #7
	str r0, [sp, #0x30]
	ldr r1, [sp, #0x30]
	add r0, r6, #0
	bl sub_0201AA8C
	add r5, r0, #0
	ldr r0, [sp, #0x2c]
	bl sub_0201CB4C
	add r4, r0, #0
	str r6, [sp]
	mov r0, #0x26
	add r1, r7, #0
	mov r2, #0
	add r3, sp, #0x44
	bl sub_020079BC
	str r0, [sp, #0x34]
	ldr r0, [sp, #0x44]
	mov r7, #0
	ldr r0, [r0, #0x14]
	str r0, [sp, #0x38]
	ldr r0, [sp, #0x28]
	cmp r0, #0
	ble _0200EB12
	ldr r0, [sp, #0x24]
	add r0, #0xa
	lsl r0, r0, #5
	str r0, [sp, #0x3c]
	ldr r0, [sp, #0x24]
	add r0, #0xb
	lsl r0, r0, #5
	str r0, [sp, #0x40]
_0200EACA:
	ldr r1, [sp, #0x3c]
	lsl r6, r7, #7
	add r0, r5, r6
	add r1, r4, r1
	mov r2, #0x20
	bl sub_020E5AD8
	add r0, r6, #0
	ldr r1, [sp, #0x40]
	add r0, #0x20
	add r0, r5, r0
	add r1, r4, r1
	mov r2, #0x20
	bl sub_020E5AD8
	add r0, r6, #0
	ldr r1, [sp, #0x3c]
	add r0, #0x40
	add r0, r5, r0
	add r1, r4, r1
	mov r2, #0x20
	bl sub_020E5AD8
	ldr r1, [sp, #0x40]
	add r6, #0x60
	add r0, r5, r6
	add r1, r4, r1
	mov r2, #0x20
	bl sub_020E5AD8
	add r0, r7, #1
	lsl r0, r0, #0x18
	lsr r7, r0, #0x18
	ldr r0, [sp, #0x28]
	cmp r7, r0
	blt _0200EACA
_0200EB12:
	add r1, sp, #0x50
	ldrb r2, [r1, #0x14]
	mov r3, #0x10
	ldr r0, [sp, #0x28]
	sub r4, r3, r2
	mul r0, r4
	ldrb r1, [r1, #0x10]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	sub r3, r3, r1
	lsl r3, r3, #0x18
	str r0, [sp]
	lsr r3, r3, #0x18
	str r5, [sp, #4]
	str r3, [sp, #8]
	str r0, [sp, #0xc]
	mov r4, #0
	str r4, [sp, #0x10]
	str r4, [sp, #0x14]
	str r3, [sp, #0x18]
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0x38]
	bl sub_0200EA24
	ldr r0, [sp, #0x24]
	ldr r3, [sp, #0x30]
	add r0, #0x12
	str r0, [sp, #0x24]
	str r0, [sp]
	ldr r0, [sp, #0x20]
	ldr r1, [sp, #0x2c]
	ldr r0, [r0]
	add r2, r5, #0
	bl sub_0201C0C0
	ldr r0, [sp, #0x34]
	bl sub_0201AB0C
	add r0, r5, #0
	bl sub_0201AB0C
	add sp, #0x48
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200EA68

	thumb_func_start sub_0200EB68
sub_0200EB68: ; 0x0200EB68
	push {r3, lr}
	sub sp, #8
	mov r3, #3
	add r2, r1, #0
	str r3, [sp]
	mov r1, #0
	str r1, [sp, #4]
	mov r1, #0x16
	bl sub_0200EA68
	add sp, #8
	pop {r3, pc}
	thumb_func_end sub_0200EB68

	thumb_func_start sub_0200EB80
sub_0200EB80: ; 0x0200EB80
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r0, [sp, #4]
	str r1, [sp, #8]
	add r0, sp, #0x18
	ldrb r0, [r0, #0x10]
	add r7, r2, #0
	add r5, r3, #0
	bl sub_0200E63C
	add r1, r0, #0
	ldr r0, [sp, #0x2c]
	mov r2, #0
	str r0, [sp]
	mov r0, #0x26
	add r3, sp, #0x10
	bl sub_020079BC
	str r0, [sp, #0xc]
	mov r1, #9
	ldr r0, [sp, #0x2c]
	lsl r1, r1, #6
	bl sub_0201AA8C
	ldr r1, [sp, #0x10]
	mov r2, #9
	ldr r1, [r1, #0x14]
	lsl r2, r2, #6
	add r4, r0, #0
	bl sub_020E5AD8
	mov r0, #9
	mov r3, #0
	lsl r0, r0, #6
	mov r1, #0xf
_0200EBC6:
	ldrb r2, [r4, r3]
	lsl r6, r2, #0x14
	and r2, r1
	lsl r2, r2, #0x18
	lsr r6, r6, #0x18
	lsr r2, r2, #0x18
	cmp r6, #0
	bne _0200EBD8
	add r6, r5, #0
_0200EBD8:
	cmp r2, #0
	bne _0200EBDE
	add r2, r5, #0
_0200EBDE:
	lsl r6, r6, #4
	orr r2, r6
	strb r2, [r4, r3]
	add r3, r3, #1
	cmp r3, r0
	blo _0200EBC6
	str r7, [sp]
	mov r3, #9
	ldr r0, [sp, #4]
	ldr r1, [sp, #8]
	add r2, r4, #0
	lsl r3, r3, #6
	bl sub_0201C0C0
	ldr r0, [sp, #0xc]
	bl sub_0201AB0C
	add r0, r4, #0
	bl sub_0201AB0C
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200EB80

	thumb_func_start sub_0200EC0C
sub_0200EC0C: ; 0x0200EC0C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	str r0, [sp, #0x10]
	add r5, r2, #0
	mov r0, #0xf
	add r6, r1, #0
	add r7, r3, #0
	str r5, [sp]
	lsl r0, r0, #6
	str r0, [sp, #4]
	mov r1, #0
	ldr r4, [sp, #0x38]
	str r1, [sp, #8]
	ldr r2, [sp, #0x10]
	mov r0, #0x24
	add r3, r6, #0
	str r4, [sp, #0xc]
	bl sub_020078F0
	mov r0, #0x24
	mov r1, #1
	add r2, r4, #0
	bl sub_02007524
	add r1, sp, #0x18
	str r0, [sp, #0x14]
	bl sub_020B7140
	add r2, sp, #0x20
	ldr r1, [sp, #0x18]
	ldrb r2, [r2, #0x10]
	lsl r3, r7, #0x15
	ldr r1, [r1, #0xc]
	lsl r2, r2, #5
	add r1, r1, r2
	add r0, r6, #0
	mov r2, #0x20
	lsr r3, r3, #0x10
	bl sub_0201C260
	ldr r1, [sp, #0x14]
	add r0, r4, #0
	bl sub_0201AB80
	add r0, sp, #0x20
	ldrb r3, [r0, #0x10]
	cmp r3, #1
	bhi _0200EC80
	ldrh r0, [r0, #0x14]
	add r5, #0x1e
	lsl r2, r5, #0x10
	str r0, [sp]
	ldr r0, [sp, #0x10]
	add r1, r6, #0
	lsr r2, r2, #0x10
	str r4, [sp, #4]
	bl sub_0200EC84
_0200EC80:
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0200EC0C

	thumb_func_start sub_0200EC84
sub_0200EC84: ; 0x0200EC84
	push {r3, r4, r5, lr}
	sub sp, #0x10
	add r4, r1, #0
	add r5, r0, #0
	ldr r1, [sp, #0x20]
	cmp r3, #0
	bne _0200EC98
	add r1, #0x21
	lsl r0, r1, #0x10
	b _0200EC9C
_0200EC98:
	add r0, r1, #2
	lsl r0, r0, #0x10
_0200EC9C:
	lsr r1, r0, #0x10
	mov r0, #3
	str r2, [sp]
	lsl r0, r0, #8
	str r0, [sp, #4]
	mov r0, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x24]
	add r2, r5, #0
	str r0, [sp, #0xc]
	mov r0, #0x24
	add r3, r4, #0
	bl sub_020078F0
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0200EC84

	thumb_func_start sub_0200ECBC
sub_0200ECBC: ; 0x0200ECBC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x40
	str r1, [sp, #0x14]
	str r2, [sp, #0x18]
	str r3, [sp, #0x1c]
	ldr r2, [sp, #0x1c]
	ldr r6, [sp, #0x5c]
	sub r7, r2, #1
	ldr r2, [sp, #0x18]
	ldr r5, [sp, #0x60]
	str r2, [sp, #0x34]
	sub r2, #9
	str r2, [sp, #0x34]
	lsl r2, r7, #0x18
	lsr r2, r2, #0x18
	str r2, [sp]
	mov r2, #1
	str r2, [sp, #4]
	str r2, [sp, #8]
	ldr r3, [sp, #0x34]
	str r5, [sp, #0xc]
	add r2, sp, #0x48
	lsl r3, r3, #0x18
	ldrh r2, [r2, #0x1c]
	lsr r3, r3, #0x18
	str r0, [sp, #0x10]
	bl sub_0201C8C4
	ldr r0, [sp, #0x18]
	str r0, [sp, #0x30]
	sub r0, #8
	str r0, [sp, #0x30]
	add r0, sp, #0x48
	ldrh r4, [r0, #0x1c]
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x30]
	str r5, [sp, #0xc]
	add r2, r4, #1
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	add r0, sp, #0x48
	ldrb r0, [r0, #0x10]
	add r2, r4, #2
	lsl r2, r2, #0x10
	str r0, [sp, #0x3c]
	add r0, r0, #7
	str r0, [sp, #0x24]
	ldr r0, [sp, #0x18]
	lsr r2, r2, #0x10
	sub r0, r0, #7
	str r0, [sp, #0x20]
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	ldr r0, [sp, #0x24]
	ldr r3, [sp, #0x20]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #4]
	mov r0, #1
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	add r2, r4, #3
	lsl r2, r2, #0x10
	ldr r1, [sp, #0x18]
	ldr r0, [sp, #0x3c]
	lsr r2, r2, #0x10
	add r0, r1, r0
	str r0, [sp, #0x38]
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x38]
	str r5, [sp, #0xc]
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x38]
	add r2, r4, #4
	add r0, r0, #1
	str r0, [sp, #0x2c]
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x2c]
	str r5, [sp, #0xc]
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x38]
	add r0, r0, #2
	str r0, [sp, #0x28]
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x28]
	str r5, [sp, #0xc]
	add r2, r4, #5
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x1c]
	ldr r3, [sp, #0x34]
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r6, [sp, #8]
	str r5, [sp, #0xc]
	add r2, r4, #6
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x1c]
	ldr r3, [sp, #0x30]
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r6, [sp, #8]
	str r5, [sp, #0xc]
	add r2, r4, #7
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x1c]
	add r2, r4, #0
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r6, [sp, #8]
	str r5, [sp, #0xc]
	ldr r3, [sp, #0x18]
	add r2, #8
	sub r3, r3, #1
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x1c]
	add r2, r4, #0
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r6, [sp, #8]
	ldr r3, [sp, #0x38]
	str r5, [sp, #0xc]
	add r2, #9
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x1c]
	add r2, r4, #0
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r6, [sp, #8]
	ldr r3, [sp, #0x2c]
	str r5, [sp, #0xc]
	add r2, #0xa
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x1c]
	add r2, r4, #0
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r6, [sp, #8]
	ldr r3, [sp, #0x28]
	str r5, [sp, #0xc]
	add r2, #0xb
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x1c]
	add r2, r4, #0
	add r6, r0, r6
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x34]
	str r5, [sp, #0xc]
	add r2, #0xc
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	add r2, r4, #0
	ldr r3, [sp, #0x30]
	str r5, [sp, #0xc]
	add r2, #0xd
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	ldr r0, [sp, #0x24]
	add r2, r4, #0
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #4]
	mov r0, #1
	str r0, [sp, #8]
	ldr r3, [sp, #0x20]
	str r5, [sp, #0xc]
	add r2, #0xe
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	add r2, r4, #0
	ldr r3, [sp, #0x38]
	str r5, [sp, #0xc]
	add r2, #0xf
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	add r2, r4, #0
	ldr r3, [sp, #0x2c]
	str r5, [sp, #0xc]
	add r2, #0x10
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x28]
	str r5, [sp, #0xc]
	add r4, #0x11
	lsl r2, r4, #0x10
	lsl r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	add sp, #0x40
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200ECBC

	thumb_func_start sub_0200EF84
sub_0200EF84: ; 0x0200EF84
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	str r1, [sp, #0x10]
	add r7, r0, #0
	str r2, [sp, #0x14]
	bl sub_0201EE8C
	str r0, [sp, #0x20]
	add r0, r7, #0
	bl sub_0201EE98
	sub r0, r0, #7
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	str r0, [sp, #0x18]
	add r0, r7, #0
	bl sub_0201EE9C
	str r0, [sp, #0x1c]
	mov r0, #0
	str r0, [sp, #0x24]
_0200EFAE:
	ldr r2, [sp, #0x24]
	ldr r1, [sp, #0x1c]
	ldr r0, [sp, #0x24]
	add r3, r2, #0
	add r0, r1, r0
	mov r1, #6
	mul r3, r1
	ldr r1, [sp, #0x10]
	lsl r0, r0, #0x18
	mov r4, #0
	add r5, r1, r3
	lsr r6, r0, #0x18
_0200EFC6:
	str r6, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [sp, #0x14]
	ldr r3, [sp, #0x18]
	str r0, [sp, #0xc]
	add r2, r4, r5
	add r3, r3, r4
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [r7]
	ldr r1, [sp, #0x20]
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	add r0, r4, #1
	lsl r0, r0, #0x10
	lsr r4, r0, #0x10
	cmp r4, #6
	blo _0200EFC6
	ldr r0, [sp, #0x24]
	add r0, r0, #1
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	str r0, [sp, #0x24]
	cmp r0, #4
	blo _0200EFAE
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0200EF84

	thumb_func_start sub_0200F004
sub_0200F004: ; 0x0200F004
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	add r4, r0, #0
	str r1, [sp, #0x10]
	add r6, r2, #0
	add r7, r3, #0
	bl sub_0201EE8C
	str r0, [sp, #0x14]
	add r0, sp, #0x30
	ldrb r0, [r0, #0x10]
	cmp r0, #1
	bhi _0200F062
	add r0, r4, #0
	bl sub_0201EE98
	str r0, [sp, #0x18]
	add r0, r4, #0
	bl sub_0201EE9C
	str r0, [sp, #0x1c]
	add r0, r4, #0
	bl sub_0201EE90
	add r5, r0, #0
	add r0, r4, #0
	bl sub_0201EE94
	str r5, [sp]
	str r0, [sp, #4]
	str r7, [sp, #8]
	str r6, [sp, #0xc]
	ldr r0, [r4]
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	bl sub_0200ECBC
	add r1, r6, #0
	add r1, #0x1e
	lsl r1, r1, #0x10
	add r0, r4, #0
	lsr r1, r1, #0x10
	add r2, r7, #0
	bl sub_0200EF84
	b _0200F094
_0200F062:
	add r0, r4, #0
	bl sub_0201EE98
	str r0, [sp, #0x20]
	add r0, r4, #0
	bl sub_0201EE9C
	str r0, [sp, #0x24]
	add r0, r4, #0
	bl sub_0201EE90
	add r5, r0, #0
	add r0, r4, #0
	bl sub_0201EE94
	str r5, [sp]
	str r0, [sp, #4]
	str r7, [sp, #8]
	str r6, [sp, #0xc]
	ldr r0, [r4]
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x20]
	ldr r3, [sp, #0x24]
	bl sub_0200E6B4
_0200F094:
	ldr r0, [sp, #0x10]
	cmp r0, #0
	bne _0200F0A0
	add r0, r4, #0
	bl sub_0201D578
_0200F0A0:
	add r0, r6, #0
	bl sub_020027F0
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0200F004

	thumb_func_start sub_0200F0AC
sub_0200F0AC: ; 0x0200F0AC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	str r0, [sp, #0x20]
	ldr r0, [r0]
	str r1, [sp, #0x24]
	bl sub_0201ACAC
	str r0, [sp, #0x28]
	ldr r0, [sp, #0x20]
	bl sub_0201EE8C
	bl sub_0201CB4C
	add r5, r0, #0
	ldr r0, [sp, #0x28]
	ldr r1, _0200F1C4 ; =0x0000048C
	bl sub_0201AA8C
	ldr r1, [sp, #0x24]
	add r4, r0, #0
	ldr r0, _0200F1C8 ; =0x00000404
	add r1, #0x12
	lsl r1, r1, #5
	add r0, r4, r0
	add r1, r5, r1
	mov r2, #0x80
	bl sub_020E5AD8
	ldr r0, [sp, #0x28]
	mov r1, #0x80
	bl sub_0201AA8C
	ldr r1, [sp, #0x24]
	mov r2, #0x20
	add r1, #0xa
	lsl r1, r1, #5
	str r1, [sp, #0x2c]
	add r1, r5, r1
	add r6, r0, #0
	bl sub_020E5AD8
	ldr r0, [sp, #0x24]
	mov r2, #0x20
	add r0, #0xb
	lsl r7, r0, #5
	add r0, r6, #0
	add r0, #0x20
	add r1, r5, r7
	bl sub_020E5AD8
	ldr r1, [sp, #0x2c]
	add r0, r6, #0
	add r0, #0x40
	add r1, r5, r1
	mov r2, #0x20
	bl sub_020E5AD8
	add r0, r6, #0
	add r0, #0x60
	add r1, r5, r7
	mov r2, #0x20
	bl sub_020E5AD8
	mov r5, #0
	add r7, r4, #4
_0200F12E:
	lsl r0, r5, #7
	add r0, r7, r0
	add r1, r6, #0
	mov r2, #0x80
	bl sub_020E5AD8
	add r0, r5, #1
	lsl r0, r0, #0x18
	lsr r5, r0, #0x18
	cmp r5, #8
	blo _0200F12E
	add r0, r6, #0
	bl sub_0201AB0C
	ldr r0, [sp, #0x28]
	mov r1, #0x17
	str r0, [sp]
	mov r0, #0x26
	mov r2, #0
	add r3, sp, #0x30
	bl sub_020079BC
	mov r2, #0x80
	add r5, r0, #0
	str r2, [sp]
	add r0, r4, #4
	str r0, [sp, #4]
	mov r3, #0x10
	str r3, [sp, #8]
	str r2, [sp, #0xc]
	mov r1, #0
	str r1, [sp, #0x10]
	str r1, [sp, #0x14]
	str r3, [sp, #0x18]
	str r2, [sp, #0x1c]
	ldr r0, [sp, #0x30]
	add r2, r1, #0
	ldr r0, [r0, #0x14]
	bl sub_0200EA24
	add r0, r5, #0
	bl sub_0201AB0C
	ldr r0, [sp, #0x20]
	ldr r1, _0200F1CC ; =0x00000484
	str r0, [r4]
	ldr r0, [sp, #0x24]
	mov r2, #0
	strh r0, [r4, r1]
	add r0, r1, #2
	strb r2, [r4, r0]
	add r0, r1, #3
	ldrb r3, [r4, r0]
	mov r0, #0x7f
	bic r3, r0
	add r0, r1, #3
	strb r3, [r4, r0]
	add r0, r1, #4
	ldrb r3, [r4, r0]
	mov r0, #3
	bic r3, r0
	add r0, r1, #4
	strb r3, [r4, r0]
	ldr r0, _0200F1D0 ; =sub_0200F3D0
	add r1, r4, #0
	bl sub_0200E33C
	add r0, r4, #0
	mov r1, #1
	bl sub_0200F1D4
	add r0, r4, #0
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	nop
_0200F1C4: .word 0x0000048C
_0200F1C8: .word 0x00000404
_0200F1CC: .word 0x00000484
_0200F1D0: .word sub_0200F3D0
	thumb_func_end sub_0200F0AC

	thumb_func_start sub_0200F1D4
sub_0200F1D4: ; 0x0200F1D4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	add r5, r0, #0
	ldr r0, [r5]
	add r6, r1, #0
	bl sub_0201EE8C
	add r4, r0, #0
	ldr r0, [r5]
	bl sub_0201EE98
	str r0, [sp, #0x18]
	ldr r0, [r5]
	bl sub_0201EE9C
	str r0, [sp, #0x1c]
	ldr r0, [r5]
	bl sub_0201EE90
	str r0, [sp, #0x20]
	cmp r6, #2
	bne _0200F2DE
	ldr r2, _0200F3CC ; =0x00000484
	add r1, r4, #0
	ldrh r0, [r5, r2]
	sub r2, #0x80
	add r2, r5, r2
	add r0, #0x12
	str r0, [sp]
	ldr r0, [r5]
	mov r3, #0x80
	ldr r0, [r0]
	bl sub_0201C0C0
	ldr r0, [sp, #0x1c]
	ldr r1, [sp, #0x18]
	add r7, r0, #2
	ldr r0, [sp, #0x20]
	ldr r2, _0200F3CC ; =0x00000484
	add r6, r1, r0
	add r0, r6, #1
	str r0, [sp, #0x14]
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	mov r0, #0x10
	str r0, [sp, #0xc]
	ldrh r2, [r5, r2]
	ldr r0, [r5]
	ldr r3, [sp, #0x14]
	add r2, #0xa
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [r0]
	add r1, r4, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	mov r0, #0x10
	str r0, [sp, #0xc]
	ldr r2, _0200F3CC ; =0x00000484
	ldr r0, [r5]
	ldrh r2, [r5, r2]
	add r6, r6, #2
	lsl r3, r6, #0x18
	add r2, #0xb
	lsl r2, r2, #0x10
	ldr r0, [r0]
	add r1, r4, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x1c]
	ldr r3, [sp, #0x14]
	add r7, r0, #3
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	mov r0, #0x10
	str r0, [sp, #0xc]
	ldr r2, _0200F3CC ; =0x00000484
	ldr r0, [r5]
	ldrh r2, [r5, r2]
	lsl r3, r3, #0x18
	ldr r0, [r0]
	add r2, #0xa
	lsl r2, r2, #0x10
	add r1, r4, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	mov r0, #0x10
	str r0, [sp, #0xc]
	ldr r2, _0200F3CC ; =0x00000484
	ldr r0, [r5]
	ldrh r2, [r5, r2]
	lsl r3, r6, #0x18
	ldr r0, [r0]
	add r2, #0xb
	lsl r2, r2, #0x10
	add r1, r4, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [r5]
	add r1, r4, #0
	ldr r0, [r0]
	bl sub_0201BF7C
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
_0200F2DE:
	ldr r3, _0200F3CC ; =0x00000484
	add r2, r5, #4
	ldrh r0, [r5, r3]
	add r3, r3, #3
	add r1, r4, #0
	add r0, #0x12
	str r0, [sp]
	ldrb r3, [r5, r3]
	ldr r0, [r5]
	lsl r3, r3, #0x19
	lsr r3, r3, #0x19
	lsl r3, r3, #7
	add r2, r2, r3
	ldr r0, [r0]
	mov r3, #0x80
	bl sub_0201C0C0
	cmp r6, #0
	beq _0200F3C6
	ldr r0, [sp, #0x1c]
	ldr r1, [sp, #0x18]
	add r7, r0, #2
	ldr r0, [sp, #0x20]
	ldr r2, _0200F3CC ; =0x00000484
	add r6, r1, r0
	add r0, r6, #1
	str r0, [sp, #0x10]
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	mov r0, #0x10
	str r0, [sp, #0xc]
	ldrh r2, [r5, r2]
	ldr r0, [r5]
	ldr r3, [sp, #0x10]
	add r2, #0x12
	lsl r2, r2, #0x10
	lsl r3, r3, #0x18
	ldr r0, [r0]
	add r1, r4, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	mov r0, #0x10
	str r0, [sp, #0xc]
	ldr r2, _0200F3CC ; =0x00000484
	ldr r0, [r5]
	ldrh r2, [r5, r2]
	add r6, r6, #2
	lsl r3, r6, #0x18
	add r2, #0x13
	lsl r2, r2, #0x10
	ldr r0, [r0]
	add r1, r4, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [sp, #0x1c]
	ldr r3, [sp, #0x10]
	add r7, r0, #3
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	mov r0, #0x10
	str r0, [sp, #0xc]
	ldr r2, _0200F3CC ; =0x00000484
	ldr r0, [r5]
	ldrh r2, [r5, r2]
	lsl r3, r3, #0x18
	ldr r0, [r0]
	add r2, #0x14
	lsl r2, r2, #0x10
	add r1, r4, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	lsl r0, r7, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	mov r0, #0x10
	str r0, [sp, #0xc]
	ldr r2, _0200F3CC ; =0x00000484
	ldr r0, [r5]
	ldrh r2, [r5, r2]
	lsl r3, r6, #0x18
	ldr r0, [r0]
	add r2, #0x15
	lsl r2, r2, #0x10
	add r1, r4, #0
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r0, [r5]
	add r1, r4, #0
	ldr r0, [r0]
	bl sub_0201BF7C
_0200F3C6:
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	nop
_0200F3CC: .word 0x00000484
	thumb_func_end sub_0200F1D4

	thumb_func_start sub_0200F3D0
sub_0200F3D0: ; 0x0200F3D0
	push {r3, r4, r5, lr}
	add r4, r0, #0
	ldr r0, _0200F438 ; =0x00000488
	ldrb r2, [r1, r0]
	lsl r2, r2, #0x1e
	lsr r2, r2, #0x1e
	beq _0200F3F2
	cmp r2, #1
	bne _0200F3EA
	add r0, r1, #0
	mov r1, #2
	bl sub_0200F1D4
_0200F3EA:
	add r0, r4, #0
	bl sub_0200E390
	pop {r3, r4, r5, pc}
_0200F3F2:
	sub r2, r0, #2
	ldrb r2, [r1, r2]
	add r3, r2, #1
	sub r2, r0, #2
	strb r3, [r1, r2]
	ldrb r2, [r1, r2]
	cmp r2, #0x10
	bne _0200F434
	mov r3, #0
	sub r2, r0, #2
	strb r3, [r1, r2]
	sub r2, r0, #1
	ldrb r2, [r1, r2]
	mov r4, #0x7f
	bic r2, r4
	sub r4, r0, #1
	ldrb r4, [r1, r4]
	sub r0, r0, #1
	lsl r4, r4, #0x19
	lsr r4, r4, #0x19
	add r5, r4, #1
	mov r4, #7
	and r4, r5
	lsl r4, r4, #0x18
	lsr r5, r4, #0x18
	mov r4, #0x7f
	and r4, r5
	orr r2, r4
	strb r2, [r1, r0]
	add r0, r1, #0
	add r1, r3, #0
	bl sub_0200F1D4
_0200F434:
	pop {r3, r4, r5, pc}
	nop
_0200F438: .word 0x00000488
	thumb_func_end sub_0200F3D0

	thumb_func_start sub_0200F43C
sub_0200F43C: ; 0x0200F43C
	push {r4, lr}
	add r4, r0, #0
	add r0, r1, #0
	bl sub_0201AB0C
	add r0, r4, #0
	bl sub_0200E390
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200F43C

	thumb_func_start sub_0200F450
sub_0200F450: ; 0x0200F450
	push {r4, lr}
	add r4, r0, #0
	ldr r0, _0200F470 ; =sub_0200F43C
	add r1, r4, #0
	mov r2, #0
	bl sub_0200E374
	ldr r1, _0200F474 ; =0x00000488
	mov r0, #3
	ldrb r2, [r4, r1]
	bic r2, r0
	mov r0, #1
	orr r0, r2
	strb r0, [r4, r1]
	pop {r4, pc}
	nop
_0200F470: .word sub_0200F43C
_0200F474: .word 0x00000488
	thumb_func_end sub_0200F450

	thumb_func_start sub_0200F478
sub_0200F478: ; 0x0200F478
	push {r4, lr}
	add r4, r0, #0
	ldr r0, _0200F498 ; =sub_0200F43C
	add r1, r4, #0
	mov r2, #0
	bl sub_0200E374
	ldr r1, _0200F49C ; =0x00000488
	mov r0, #3
	ldrb r2, [r4, r1]
	bic r2, r0
	mov r0, #2
	orr r0, r2
	strb r0, [r4, r1]
	pop {r4, pc}
	nop
_0200F498: .word sub_0200F43C
_0200F49C: .word 0x00000488
	thumb_func_end sub_0200F478

	thumb_func_start sub_0200F4A0
sub_0200F4A0: ; 0x0200F4A0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r2, [sp, #4]
	ldr r5, [sp, #0x30]
	str r3, [sp, #8]
	add r6, r0, #0
	add r7, r1, #0
	str r5, [sp]
	bl sub_0200F5C4
	add r4, r0, #0
	add r1, r5, #0
	bl sub_0200F600
	add r0, r4, #0
	bl sub_0200F62C
	ldr r1, [sp, #4]
	ldr r2, [sp, #8]
	add r0, r4, #0
	bl sub_0200F684
	add r2, sp, #0x10
	ldrh r1, [r2, #0x18]
	ldrb r2, [r2, #0x1c]
	add r0, r4, #0
	bl sub_0200F6D4
	add r2, sp, #0x10
	ldrb r1, [r2, #0x10]
	ldrh r2, [r2, #0x14]
	add r0, r4, #0
	bl sub_0200F82C
	add r0, r6, #0
	add r1, r7, #0
	bl sub_0201BF7C
	ldr r0, _0200F4F4 ; =0x0000016F
	add r0, r4, r0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0200F4F4: .word 0x0000016F
	thumb_func_end sub_0200F4A0

	thumb_func_start sub_0200F4F8
sub_0200F4F8: ; 0x0200F4F8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r2, [sp, #4]
	ldr r5, [sp, #0x2c]
	str r3, [sp, #8]
	add r6, r0, #0
	add r7, r1, #0
	str r5, [sp]
	bl sub_0200F5C4
	add r4, r0, #0
	add r1, r5, #0
	bl sub_0200F600
	add r0, r4, #0
	bl sub_0200F62C
	ldr r1, [sp, #4]
	ldr r2, [sp, #8]
	add r0, r4, #0
	bl sub_0200F684
	ldr r1, [sp, #0x28]
	add r0, r4, #0
	bl sub_0200F714
	add r2, sp, #0x10
	ldrb r1, [r2, #0x10]
	ldrh r2, [r2, #0x14]
	add r0, r4, #0
	bl sub_0200F82C
	add r0, r6, #0
	add r1, r7, #0
	bl sub_0201BF7C
	ldr r0, _0200F548 ; =0x0000016F
	add r0, r4, r0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0200F548: .word 0x0000016F
	thumb_func_end sub_0200F4F8

	thumb_func_start sub_0200F54C
sub_0200F54C: ; 0x0200F54C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, _0200F5C0 ; =0x0000016F
	add r4, r1, #0
	ldrb r1, [r4, r0]
	cmp r1, #1
	beq _0200F564
	cmp r1, #2
	beq _0200F582
	cmp r1, #3
	beq _0200F594
	b _0200F5A8
_0200F564:
	add r0, r4, #0
	bl sub_0200F9DC
	mov r0, #0x59
	lsl r0, r0, #2
	ldr r0, [r4, r0]
	bl sub_0200D9DC
	add r0, r4, #0
	bl ov01_021E86F4
	add r0, r5, #0
	bl sub_02007234
	pop {r3, r4, r5, pc}
_0200F582:
	mov r1, #3
	strb r1, [r4, r0]
	sub r0, #0xb
	ldr r0, [r4, r0]
	mov r1, #1
	ldr r0, [r0]
	bl sub_020248F0
	b _0200F5A8
_0200F594:
	sub r0, #0xb
	ldr r0, [r4, r0]
	ldr r0, [r0]
	bl sub_020249F8
	cmp r0, #6
	bne _0200F5A8
	ldr r0, _0200F5C0 ; =0x0000016F
	mov r1, #0
	strb r1, [r4, r0]
_0200F5A8:
	mov r0, #0x59
	lsl r0, r0, #2
	ldr r0, [r4, r0]
	mov r1, #1
	ldr r0, [r0]
	lsl r1, r1, #0xc
	bl sub_020249B0
	ldr r0, [r4]
	bl sub_0202457C
	pop {r3, r4, r5, pc}
	.align 2, 0
_0200F5C0: .word 0x0000016F
	thumb_func_end sub_0200F54C

	thumb_func_start sub_0200F5C4
sub_0200F5C4: ; 0x0200F5C4
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r4, r1, #0
	add r7, r3, #0
	mov r1, #0x17
	add r6, r2, #0
	ldr r0, _0200F5F8 ; =sub_0200F54C
	ldr r3, [sp, #0x18]
	lsl r1, r1, #4
	mov r2, #0
	bl sub_02007200
	bl sub_0201F988
	ldr r1, _0200F5FC ; =0x0000016F
	mov r2, #0
	strb r2, [r0, r1]
	sub r2, r1, #7
	str r5, [r0, r2]
	sub r2, r1, #3
	strb r4, [r0, r2]
	sub r2, r1, #2
	strb r6, [r0, r2]
	sub r1, r1, #1
	strb r7, [r0, r1]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200F5F8: .word sub_0200F54C
_0200F5FC: .word 0x0000016F
	thumb_func_end sub_0200F5C4

	thumb_func_start sub_0200F600
sub_0200F600: ; 0x0200F600
	push {r4, r5, r6, lr}
	sub sp, #0x18
	ldr r5, _0200F628 ; =0x020F5C60
	add r4, sp, #0
	add r6, r0, #0
	add r3, r1, #0
	add r2, r4, #0
	ldmia r5!, {r0, r1}
	stmia r4!, {r0, r1}
	ldmia r5!, {r0, r1}
	stmia r4!, {r0, r1}
	ldmia r5!, {r0, r1}
	stmia r4!, {r0, r1}
	add r1, r2, #0
	add r0, r6, #0
	mov r2, #1
	bl ov01_021E8298
	add sp, #0x18
	pop {r4, r5, r6, pc}
	.align 2, 0
_0200F628: .word 0x020F5C60
	thumb_func_end sub_0200F600

	thumb_func_start sub_0200F62C
sub_0200F62C: ; 0x0200F62C
	push {r3, r4, lr}
	sub sp, #0xc
	mov r1, #1
	str r1, [sp]
	str r1, [sp, #4]
	ldr r1, _0200F680 ; =0x00015CD5
	mov r2, #0x32
	str r1, [sp, #8]
	mov r1, #0x26
	mov r3, #0
	add r4, r0, #0
	bl ov01_021E8378
	ldr r0, _0200F680 ; =0x00015CD5
	mov r1, #0x26
	str r0, [sp]
	add r0, r4, #0
	mov r2, #0x30
	mov r3, #0
	bl ov01_021E83F0
	ldr r0, _0200F680 ; =0x00015CD5
	mov r1, #0x26
	str r0, [sp]
	add r0, r4, #0
	mov r2, #0x2f
	mov r3, #0
	bl ov01_021E8404
	mov r0, #1
	str r0, [sp]
	ldr r0, _0200F680 ; =0x00015CD5
	mov r1, #0x26
	str r0, [sp, #4]
	add r0, r4, #0
	mov r2, #0x31
	mov r3, #0
	bl ov01_021E8418
	add sp, #0xc
	pop {r3, r4, pc}
	nop
_0200F680: .word 0x00015CD5
	thumb_func_end sub_0200F62C

	thumb_func_start sub_0200F684
sub_0200F684: ; 0x0200F684
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	ldr r5, _0200F6D0 ; =0x020F5C78
	add r6, r2, #0
	add r4, r0, #0
	add r7, r1, #0
	add r3, sp, #0
	mov r2, #6
_0200F694:
	ldmia r5!, {r0, r1}
	stmia r3!, {r0, r1}
	sub r2, r2, #1
	bne _0200F694
	ldr r0, [r5]
	str r0, [r3]
	add r0, r7, #5
	lsl r1, r0, #3
	add r0, sp, #0
	strh r1, [r0]
	add r1, r6, #5
	lsl r1, r1, #3
	strh r1, [r0, #2]
	add r0, r4, #0
	add r1, sp, #0
	bl ov01_021E851C
	mov r1, #0x59
	lsl r1, r1, #2
	str r0, [r4, r1]
	ldr r0, [r4]
	bl sub_0202457C
	mov r0, #0x10
	mov r1, #1
	bl sub_02022CC8
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	nop
_0200F6D0: .word 0x020F5C78
	thumb_func_end sub_0200F684

	thumb_func_start sub_0200F6D4
sub_0200F6D4: ; 0x0200F6D4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	add r5, r0, #0
	ldr r0, _0200F710 ; =0x00000162
	add r4, r1, #0
	ldrh r0, [r5, r0]
	add r6, r2, #0
	bl sub_02007FD4
	add r7, r0, #0
	mov r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	add r0, sp, #0xc
	add r1, r4, #0
	add r2, r6, #0
	mov r3, #2
	bl sub_020701E4
	add r0, r5, #0
	add r1, sp, #0xc
	bl sub_0200F748
	add r0, r7, #0
	bl sub_02008524
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_0200F710: .word 0x00000162
	thumb_func_end sub_0200F6D4

	thumb_func_start sub_0200F714
sub_0200F714: ; 0x0200F714
	push {r4, r5, r6, lr}
	sub sp, #0x10
	add r5, r0, #0
	ldr r0, _0200F744 ; =0x00000162
	add r4, r1, #0
	ldrh r0, [r5, r0]
	bl sub_02007FD4
	add r6, r0, #0
	add r0, sp, #0
	add r1, r4, #0
	mov r2, #2
	bl sub_02070124
	add r0, r5, #0
	add r1, sp, #0
	bl sub_0200F748
	add r0, r6, #0
	bl sub_02008524
	add sp, #0x10
	pop {r4, r5, r6, pc}
	nop
_0200F744: .word 0x00000162
	thumb_func_end sub_0200F714

	thumb_func_start sub_0200F748
sub_0200F748: ; 0x0200F748
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	add r5, r0, #0
	ldr r0, _0200F81C ; =0x00000162
	add r6, r1, #0
	mov r1, #0x19
	ldrh r0, [r5, r0]
	lsl r1, r1, #8
	bl sub_0201AA8C
	add r2, sp, #0x18
	ldr r3, _0200F820 ; =0x020F5C50
	add r4, r0, #0
	add r7, r2, #0
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	str r4, [sp]
	ldr r2, _0200F81C ; =0x00000162
	ldrh r0, [r6]
	ldrh r1, [r6, #2]
	ldrh r2, [r5, r2]
	add r3, r7, #0
	bl sub_020143E0
	ldr r3, _0200F824 ; =0x020F5C40
	add r2, sp, #8
	add r7, r2, #0
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	mov r0, #0x32
	lsl r0, r0, #6
	add r0, r4, r0
	str r0, [sp]
	ldr r2, _0200F81C ; =0x00000162
	ldrh r0, [r6]
	ldrh r1, [r6, #2]
	ldrh r2, [r5, r2]
	add r3, r7, #0
	bl sub_020143E0
	mov r0, #0x13
	lsl r0, r0, #4
	ldr r0, [r5, r0]
	ldr r1, _0200F828 ; =0x00015CD5
	bl sub_0200A7BC
	bl sub_0200AF00
	mov r1, #1
	str r0, [sp, #4]
	bl sub_020B802C
	mov r1, #0x19
	add r7, r0, #0
	add r0, r4, #0
	lsl r1, r1, #8
	bl DC_FlushRange
	mov r2, #0x19
	add r0, r4, #0
	add r1, r7, #0
	lsl r2, r2, #8
	bl sub_020CFE74
	add r0, r4, #0
	bl sub_0201AB0C
	ldr r2, _0200F81C ; =0x00000162
	ldrh r0, [r6]
	ldrh r1, [r6, #4]
	ldrh r2, [r5, r2]
	bl sub_02014450
	add r4, r0, #0
	mov r0, #0x4d
	lsl r0, r0, #2
	ldr r0, [r5, r0]
	ldr r1, _0200F828 ; =0x00015CD5
	bl sub_0200A7BC
	ldr r1, [sp, #4]
	bl sub_0200B0F8
	mov r1, #1
	bl sub_020B8078
	add r5, r0, #0
	add r0, r4, #0
	mov r1, #0x20
	bl DC_FlushRange
	add r0, r4, #0
	add r1, r5, #0
	mov r2, #0x20
	bl sub_020CFD18
	add r0, r4, #0
	bl sub_0201AB0C
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200F81C: .word 0x00000162
_0200F820: .word 0x020F5C50
_0200F824: .word 0x020F5C40
_0200F828: .word 0x00015CD5
	thumb_func_end sub_0200F748

	thumb_func_start sub_0200F82C
sub_0200F82C: ; 0x0200F82C
	push {r4, r5, r6, lr}
	sub sp, #0x10
	ldr r3, _0200F9D8 ; =0x0000016E
	add r5, r0, #0
	ldrb r0, [r5, r3]
	add r4, r1, #0
	sub r1, r3, #2
	sub r0, r0, #1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	sub r0, r3, #6
	sub r3, r3, #1
	ldrb r3, [r5, r3]
	ldrb r1, [r5, r1]
	ldr r0, [r5, r0]
	sub r3, r3, #1
	lsl r3, r3, #0x18
	lsr r3, r3, #0x18
	add r6, r2, #0
	bl sub_0201C8C4
	ldr r3, _0200F9D8 ; =0x0000016E
	add r2, r6, #1
	ldrb r0, [r5, r3]
	sub r1, r3, #2
	lsl r2, r2, #0x10
	sub r0, r0, #1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #0xa
	str r0, [sp, #4]
	mov r0, #1
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	sub r0, r3, #6
	sub r3, r3, #1
	ldrb r1, [r5, r1]
	ldrb r3, [r5, r3]
	ldr r0, [r5, r0]
	lsr r2, r2, #0x10
	bl sub_0201C8C4
	ldr r3, _0200F9D8 ; =0x0000016E
	add r2, r6, #2
	ldrb r0, [r5, r3]
	lsl r2, r2, #0x10
	sub r1, r3, #2
	sub r0, r0, #1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	sub r0, r3, #6
	sub r3, r3, #1
	ldrb r3, [r5, r3]
	ldrb r1, [r5, r1]
	ldr r0, [r5, r0]
	add r3, #0xa
	lsl r3, r3, #0x18
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r3, _0200F9D8 ; =0x0000016E
	add r2, r6, #4
	ldrb r0, [r5, r3]
	lsl r2, r2, #0x10
	sub r1, r3, #2
	str r0, [sp]
	mov r0, #0xa
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	sub r0, r3, #6
	sub r3, r3, #1
	ldrb r1, [r5, r1]
	ldrb r3, [r5, r3]
	ldr r0, [r5, r0]
	lsr r2, r2, #0x10
	bl sub_0201C8C4
	ldr r3, _0200F9D8 ; =0x0000016E
	add r2, r6, #3
	ldrb r0, [r5, r3]
	lsl r2, r2, #0x10
	sub r1, r3, #2
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	mov r0, #0xa
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	sub r0, r3, #6
	sub r3, r3, #1
	ldrb r3, [r5, r3]
	ldrb r1, [r5, r1]
	ldr r0, [r5, r0]
	sub r3, r3, #1
	lsl r3, r3, #0x18
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r3, _0200F9D8 ; =0x0000016E
	add r2, r6, #5
	ldrb r0, [r5, r3]
	lsl r2, r2, #0x10
	sub r1, r3, #2
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	mov r0, #0xa
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	sub r0, r3, #6
	sub r3, r3, #1
	ldrb r3, [r5, r3]
	ldrb r1, [r5, r1]
	ldr r0, [r5, r0]
	add r3, #0xa
	lsl r3, r3, #0x18
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r3, _0200F9D8 ; =0x0000016E
	add r2, r6, #6
	ldrb r0, [r5, r3]
	lsl r2, r2, #0x10
	sub r1, r3, #2
	add r0, #0xa
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	sub r0, r3, #6
	sub r3, r3, #1
	ldrb r3, [r5, r3]
	ldrb r1, [r5, r1]
	ldr r0, [r5, r0]
	sub r3, r3, #1
	lsl r3, r3, #0x18
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r3, _0200F9D8 ; =0x0000016E
	add r2, r6, #7
	ldrb r0, [r5, r3]
	sub r1, r3, #2
	lsl r2, r2, #0x10
	add r0, #0xa
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #0xa
	str r0, [sp, #4]
	mov r0, #1
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	sub r0, r3, #6
	sub r3, r3, #1
	ldrb r1, [r5, r1]
	ldrb r3, [r5, r3]
	ldr r0, [r5, r0]
	lsr r2, r2, #0x10
	bl sub_0201C8C4
	ldr r3, _0200F9D8 ; =0x0000016E
	add r6, #8
	ldrb r0, [r5, r3]
	lsl r2, r6, #0x10
	sub r1, r3, #2
	add r0, #0xa
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	sub r0, r3, #6
	sub r3, r3, #1
	ldrb r3, [r5, r3]
	ldrb r1, [r5, r1]
	ldr r0, [r5, r0]
	add r3, #0xa
	lsl r3, r3, #0x18
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	mov r1, #0x5a
	lsl r1, r1, #2
	ldr r0, [r5, r1]
	add r1, r1, #4
	ldrb r1, [r5, r1]
	bl sub_0201EFBC
	add sp, #0x10
	pop {r4, r5, r6, pc}
	nop
_0200F9D8: .word 0x0000016E
	thumb_func_end sub_0200F82C

	thumb_func_start sub_0200F9DC
sub_0200F9DC: ; 0x0200F9DC
	push {r4, lr}
	sub sp, #0x10
	ldr r3, _0200FA20 ; =0x0000016E
	add r4, r0, #0
	ldrb r0, [r4, r3]
	mov r2, #0
	sub r1, r3, #2
	sub r0, r0, #1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #0xc
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r2, [sp, #0xc]
	sub r0, r3, #6
	sub r3, r3, #1
	ldrb r3, [r4, r3]
	ldrb r1, [r4, r1]
	ldr r0, [r4, r0]
	sub r3, r3, #1
	lsl r3, r3, #0x18
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	mov r1, #0x5a
	lsl r1, r1, #2
	ldr r0, [r4, r1]
	add r1, r1, #4
	ldrb r1, [r4, r1]
	bl sub_0201EFBC
	add sp, #0x10
	pop {r4, pc}
	.align 2, 0
_0200FA20: .word 0x0000016E
	thumb_func_end sub_0200F9DC

	thumb_func_start sub_0200FA24
sub_0200FA24: ; 0x0200FA24
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	add r5, r0, #0
	ldr r0, [sp, #0x30]
	add r4, r1, #0
	add r7, r2, #0
	add r6, r3, #0
	cmp r0, #0
	bne _0200FA3A
	bl GF_AssertFail
_0200FA3A:
	ldr r0, [sp, #0x34]
	cmp r0, #0
	bne _0200FA44
	bl GF_AssertFail
_0200FA44:
	ldr r0, _0200FB00 ; =0x021D1034
	ldrh r0, [r0, #0xc]
	cmp r0, #0
	beq _0200FA50
	bl GF_AssertFail
_0200FA50:
	ldr r0, _0200FB04 ; =0x021D0EF4
	bl sub_020100C4
	ldr r1, _0200FB04 ; =0x021D0EF4
	add r0, r5, #0
	bl sub_0200FE14
	ldr r0, _0200FB08 ; =0x021D0F68
	bl sub_0200FEB0
	ldr r0, _0200FB04 ; =0x021D0EF4
	add r1, r6, #0
	bl sub_02010018
	add r5, r0, #0
	mov r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r0, _0200FB0C ; =0x021D0F80
	ldr r2, [sp, #0x30]
	str r0, [sp, #0xc]
	ldr r0, _0200FB08 ; =0x021D0F68
	ldr r3, [sp, #0x34]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x38]
	add r1, r4, #0
	str r0, [sp, #0x14]
	ldr r0, _0200FB10 ; =0x021D0F08
	str r5, [sp, #0x18]
	bl sub_0200FE84
	mov r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	mov r0, #1
	str r0, [sp, #8]
	ldr r0, _0200FB0C ; =0x021D0F80
	ldr r2, [sp, #0x30]
	str r0, [sp, #0xc]
	ldr r0, _0200FB08 ; =0x021D0F68
	ldr r3, [sp, #0x34]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x38]
	add r1, r7, #0
	str r0, [sp, #0x14]
	ldr r0, _0200FB14 ; =0x021D0F38
	str r5, [sp, #0x18]
	bl sub_0200FE84
	ldr r0, _0200FB00 ; =0x021D1034
	mov r1, #1
	strh r1, [r0, #0xc]
	ldr r0, _0200FB18 ; =0x021D0EF8
	ldr r1, _0200FB10 ; =0x021D0F08
	bl sub_0200FDE4
	ldr r0, _0200FB1C ; =0x021D0EFC
	ldr r1, _0200FB14 ; =0x021D0F38
	bl sub_0200FDE4
	ldr r0, _0200FB20 ; =0x021D0EF4
	ldr r0, [r0, #0xc]
	cmp r0, #0
	beq _0200FAE2
	ldr r0, _0200FB04 ; =0x021D0EF4
	add r0, #0x14
	bl sub_02010064
	ldr r1, _0200FB24 ; =0x0000014E
	ldr r0, _0200FB04 ; =0x021D0EF4
	mov r2, #1
	strb r2, [r0, r1]
_0200FAE2:
	ldr r0, _0200FB04 ; =0x021D0EF4
	ldr r0, [r0, #0x10]
	cmp r0, #0
	beq _0200FAFA
	ldr r0, _0200FB04 ; =0x021D0EF4
	add r0, #0x44
	bl sub_02010064
	ldr r1, _0200FB28 ; =0x0000014F
	ldr r0, _0200FB04 ; =0x021D0EF4
	mov r2, #1
	strb r2, [r0, r1]
_0200FAFA:
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_0200FB00: .word 0x021D1034
_0200FB04: .word 0x021D0EF4
_0200FB08: .word 0x021D0F68
_0200FB0C: .word 0x021D0F80
_0200FB10: .word 0x021D0F08
_0200FB14: .word 0x021D0F38
_0200FB18: .word 0x021D0EF8
_0200FB1C: .word 0x021D0EFC
_0200FB20: .word 0x021D0EF4
_0200FB24: .word 0x0000014E
_0200FB28: .word 0x0000014F
	thumb_func_end sub_0200FA24

	thumb_func_start sub_0200FB2C
sub_0200FB2C: ; 0x0200FB2C
	push {r4, lr}
	ldr r0, _0200FB54 ; =0x021D1034
	ldr r4, _0200FB58 ; =0x021D0EF4
	ldrh r0, [r0, #0xc]
	cmp r0, #0
	beq _0200FB50
	add r1, r4, #0
	add r2, r4, #0
	add r0, r4, #0
	add r1, #0x14
	add r2, #0x44
	bl sub_0200FD74
	cmp r0, #1
	bne _0200FB50
	add r0, r4, #0
	bl sub_0200FD1C
_0200FB50:
	pop {r4, pc}
	nop
_0200FB54: .word 0x021D1034
_0200FB58: .word 0x021D0EF4
	thumb_func_end sub_0200FB2C

	thumb_func_start sub_0200FB5C
sub_0200FB5C: ; 0x0200FB5C
	ldr r0, _0200FB6C ; =0x021D1034
	ldrh r0, [r0, #0xc]
	cmp r0, #0
	bne _0200FB68
	mov r0, #1
	bx lr
_0200FB68:
	mov r0, #0
	bx lr
	.align 2, 0
_0200FB6C: .word 0x021D1034
	thumb_func_end sub_0200FB5C

	thumb_func_start sub_0200FB70
sub_0200FB70: ; 0x0200FB70
	push {r3, lr}
	ldr r0, _0200FBBC ; =0x021D0F68
	mov r1, #0
	bl sub_0200FF5C
	ldr r0, _0200FBBC ; =0x021D0F68
	mov r1, #1
	bl sub_0200FF5C
	ldr r0, _0200FBC0 ; =0x021D0EF4
	ldr r1, [r0, #4]
	cmp r1, #0
	beq _0200FB8E
	mov r1, #2
	str r1, [r0, #0x20]
_0200FB8E:
	ldr r0, _0200FBC0 ; =0x021D0EF4
	ldr r1, [r0, #8]
	cmp r1, #0
	beq _0200FB9A
	mov r1, #2
	str r1, [r0, #0x50]
_0200FB9A:
	ldr r0, _0200FBC4 ; =0x021D0EF8
	ldr r1, _0200FBC8 ; =0x021D0F08
	bl sub_0200FDE4
	ldr r0, _0200FBCC ; =0x021D0EFC
	ldr r1, _0200FBD0 ; =0x021D0F38
	bl sub_0200FDE4
	ldr r0, _0200FBD4 ; =0x021D1034
	mov r1, #0
	strh r1, [r0, #0xc]
	strb r1, [r0, #0xe]
	strb r1, [r0, #0xf]
	ldr r0, _0200FBD8 ; =0x021D0EF4
	bl sub_020100C4
	pop {r3, pc}
	.align 2, 0
_0200FBBC: .word 0x021D0F68
_0200FBC0: .word 0x021D0EF4
_0200FBC4: .word 0x021D0EF8
_0200FBC8: .word 0x021D0F08
_0200FBCC: .word 0x021D0EFC
_0200FBD0: .word 0x021D0F38
_0200FBD4: .word 0x021D1034
_0200FBD8: .word 0x021D0EF4
	thumb_func_end sub_0200FB70

	thumb_func_start sub_0200FBDC
sub_0200FBDC: ; 0x0200FBDC
	ldr r3, _0200FBE4 ; =sub_020131F4
	add r1, r0, #0
	mov r0, #0
	bx r3
	.align 2, 0
_0200FBE4: .word sub_020131F4
	thumb_func_end sub_0200FBDC

	thumb_func_start sub_0200FBE8
sub_0200FBE8: ; 0x0200FBE8
	ldr r3, _0200FBF0 ; =sub_0200FCFC
	mov r1, #0
	bx r3
	nop
_0200FBF0: .word sub_0200FCFC
	thumb_func_end sub_0200FBE8

	thumb_func_start sub_0200FBF4
sub_0200FBF4: ; 0x0200FBF4
	ldr r2, _0200FC10 ; =0x0000FFFF
	cmp r1, r2
	bne _0200FBFE
	ldr r1, _0200FC14 ; =0x021D1034
	ldrh r1, [r1, #0x10]
_0200FBFE:
	ldr r2, _0200FC18 ; =0x00007FFF
	cmp r1, r2
	bne _0200FC08
	mov r1, #0x10
	b _0200FC0C
_0200FC08:
	mov r1, #0xf
	mvn r1, r1
_0200FC0C:
	ldr r3, _0200FC1C ; =sub_0200FCFC
	bx r3
	.align 2, 0
_0200FC10: .word 0x0000FFFF
_0200FC14: .word 0x021D1034
_0200FC18: .word 0x00007FFF
_0200FC1C: .word sub_0200FCFC
	thumb_func_end sub_0200FBF4

	thumb_func_start sub_0200FC20
sub_0200FC20: ; 0x0200FC20
	push {r3, r4, r5, lr}
	add r4, r0, #0
	ldr r0, _0200FC54 ; =0x0000FFFF
	cmp r4, r0
	bne _0200FC2E
	ldr r0, _0200FC58 ; =0x021D1034
	ldrh r4, [r0, #0x10]
_0200FC2E:
	ldr r0, _0200FC5C ; =0x00007FFF
	cmp r4, r0
	bne _0200FC38
	mov r5, #0x10
	b _0200FC3C
_0200FC38:
	mov r5, #0xf
	mvn r5, r5
_0200FC3C:
	mov r0, #0
	add r1, r5, #0
	bl sub_0200FCFC
	mov r0, #1
	add r1, r5, #0
	bl sub_0200FCFC
	ldr r0, _0200FC58 ; =0x021D1034
	strh r4, [r0, #0x10]
	pop {r3, r4, r5, pc}
	nop
_0200FC54: .word 0x0000FFFF
_0200FC58: .word 0x021D1034
_0200FC5C: .word 0x00007FFF
	thumb_func_end sub_0200FC20

	thumb_func_start sub_0200FC60
sub_0200FC60: ; 0x0200FC60
	push {r0, r1, r2, r3}
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #0x18
	ldrh r2, [r1, #4]
	add r4, r0, #0
	ldr r0, _0200FCD0 ; =0x0000FFFF
	cmp r2, r0
	bne _0200FC78
	ldr r0, _0200FCD4 ; =0x021D1034
	ldrh r0, [r0, #0x10]
	strh r0, [r1, #4]
_0200FC78:
	cmp r4, #0
	add r0, sp, #0x1c
	bne _0200FC88
	mov r1, #0
	mov r2, #2
	bl sub_020CFC6C
	b _0200FC90
_0200FC88:
	mov r1, #0
	mov r2, #2
	bl sub_020CFCC0
_0200FC90:
	ldr r0, _0200FCD8 ; =0x021D0F80
	mov r1, #1
	add r2, r4, #0
	bl sub_02013424
	mov r2, #0
	ldr r0, _0200FCD8 ; =0x021D0F80
	mov r1, #0x3f
	add r3, r2, #0
	str r4, [sp]
	bl sub_02013440
	mov r1, #0
	str r1, [sp]
	str r1, [sp, #4]
	ldr r0, _0200FCD8 ; =0x021D0F80
	add r2, r1, #0
	add r3, r1, #0
	str r4, [sp, #8]
	bl sub_02013488
	ldr r0, _0200FCD8 ; =0x021D0F80
	mov r1, #0x20
	mov r2, #0
	add r3, r4, #0
	bl sub_02013468
	add sp, #0xc
	pop {r3, r4}
	pop {r3}
	add sp, #0x10
	bx r3
	.align 2, 0
_0200FCD0: .word 0x0000FFFF
_0200FCD4: .word 0x021D1034
_0200FCD8: .word 0x021D0F80
	thumb_func_end sub_0200FC60

	thumb_func_start sub_0200FCDC
sub_0200FCDC: ; 0x0200FCDC
	push {r0, r1, r2, r3}
	push {r3, lr}
	add r0, sp, #8
	mov r1, #0
	mov r2, #2
	bl sub_020CFC6C
	add r0, sp, #8
	mov r1, #0
	mov r2, #2
	bl sub_020CFCC0
	pop {r3}
	pop {r3}
	add sp, #0x10
	bx r3
	thumb_func_end sub_0200FCDC

	thumb_func_start sub_0200FCFC
sub_0200FCFC: ; 0x0200FCFC
	push {r3, lr}
	cmp r0, #0
	bne _0200FD0A
	ldr r0, _0200FD14 ; =0x0400006C
	bl sub_020CDA80
	pop {r3, pc}
_0200FD0A:
	ldr r0, _0200FD18 ; =0x0400106C
	bl sub_020CDA80
	pop {r3, pc}
	nop
_0200FD14: .word 0x0400006C
_0200FD18: .word 0x0400106C
	thumb_func_end sub_0200FCFC

	thumb_func_start sub_0200FD1C
sub_0200FD1C: ; 0x0200FD1C
	push {r4, lr}
	mov r1, #0x53
	add r4, r0, #0
	mov r2, #0
	lsl r1, r1, #2
	strh r2, [r4, r1]
	bl sub_0201002C
	mov r1, #0x15
	lsl r1, r1, #4
	strh r0, [r4, r1]
	ldr r0, [r4, #0xc]
	cmp r0, #0
	beq _0200FD4C
	add r0, r4, #0
	add r0, #0x14
	bl sub_02010094
	ldr r0, [r4, #0x3c]
	cmp r0, #0
	bne _0200FD4C
	ldr r0, _0200FD70 ; =0x021D1034
	mov r1, #0
	strb r1, [r0, #0xe]
_0200FD4C:
	ldr r0, [r4, #0x10]
	cmp r0, #0
	beq _0200FD66
	add r0, r4, #0
	add r0, #0x44
	bl sub_02010094
	ldr r0, [r4, #0x3c]
	cmp r0, #0
	bne _0200FD66
	ldr r0, _0200FD70 ; =0x021D1034
	mov r1, #0
	strb r1, [r0, #0xf]
_0200FD66:
	add r0, r4, #0
	bl sub_020100C4
	pop {r4, pc}
	nop
_0200FD70: .word 0x021D1034
	thumb_func_end sub_0200FD1C

	thumb_func_start sub_0200FD74
sub_0200FD74: ; 0x0200FD74
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [r5]
	add r4, r2, #0
	cmp r0, #0
	beq _0200FD8A
	cmp r0, #1
	beq _0200FD9C
	cmp r0, #2
	beq _0200FDB6
	b _0200FDCE
_0200FD8A:
	add r0, r5, #4
	bl sub_0200FDE4
	add r0, r5, #0
	add r0, #8
	add r1, r4, #0
	bl sub_0200FDE4
	b _0200FDCE
_0200FD9C:
	ldr r0, [r5, #4]
	cmp r0, #0
	beq _0200FDAA
	add r0, r5, #4
	bl sub_0200FDE4
	b _0200FDCE
_0200FDAA:
	add r0, r5, #0
	add r0, #8
	add r1, r4, #0
	bl sub_0200FDE4
	b _0200FDCE
_0200FDB6:
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _0200FDC8
	add r0, r5, #0
	add r0, #8
	add r1, r4, #0
	bl sub_0200FDE4
	b _0200FDCE
_0200FDC8:
	add r0, r5, #4
	bl sub_0200FDE4
_0200FDCE:
	ldr r0, [r5, #4]
	cmp r0, #0
	bne _0200FDDE
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0200FDDE
	mov r0, #1
	pop {r3, r4, r5, pc}
_0200FDDE:
	mov r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200FD74

	thumb_func_start sub_0200FDE4
sub_0200FDE4: ; 0x0200FDE4
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _0200FDFC
	add r0, r1, #0
	bl sub_0200FE00
	cmp r0, #1
	bne _0200FDFC
	mov r0, #0
	str r0, [r4]
_0200FDFC:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0200FDE4

	thumb_func_start sub_0200FE00
sub_0200FE00: ; 0x0200FE00
	push {r3, lr}
	ldr r1, [r0]
	lsl r2, r1, #2
	ldr r1, _0200FE10 ; =0x020F5CAC
	ldr r1, [r1, r2]
	blx r1
	pop {r3, pc}
	nop
_0200FE10: .word 0x020F5CAC
	thumb_func_end sub_0200FE00

	thumb_func_start sub_0200FE14
sub_0200FE14: ; 0x0200FE14
	push {r3, lr}
	cmp r0, #4
	bhi _0200FE74
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_0200FE26: ; jump table
	.short _0200FE30 - _0200FE26 - 2 ; case 0
	.short _0200FE3E - _0200FE26 - 2 ; case 1
	.short _0200FE4C - _0200FE26 - 2 ; case 2
	.short _0200FE5A - _0200FE26 - 2 ; case 3
	.short _0200FE68 - _0200FE26 - 2 ; case 4
_0200FE30:
	mov r2, #1
	add r0, r1, #0
	mov r1, #0
	add r3, r2, #0
	bl sub_0200FE78
	pop {r3, pc}
_0200FE3E:
	add r0, r1, #0
	mov r1, #1
	add r2, r1, #0
	add r3, r1, #0
	bl sub_0200FE78
	pop {r3, pc}
_0200FE4C:
	mov r2, #1
	add r0, r1, #0
	mov r1, #2
	add r3, r2, #0
	bl sub_0200FE78
	pop {r3, pc}
_0200FE5A:
	add r0, r1, #0
	mov r1, #1
	add r2, r1, #0
	mov r3, #0
	bl sub_0200FE78
	pop {r3, pc}
_0200FE68:
	add r0, r1, #0
	mov r1, #2
	mov r2, #0
	mov r3, #1
	bl sub_0200FE78
_0200FE74:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_0200FE14

	thumb_func_start sub_0200FE78
sub_0200FE78: ; 0x0200FE78
	str r1, [r0]
	str r2, [r0, #4]
	str r3, [r0, #8]
	str r2, [r0, #0xc]
	str r3, [r0, #0x10]
	bx lr
	thumb_func_end sub_0200FE78

	thumb_func_start sub_0200FE84
sub_0200FE84: ; 0x0200FE84
	str r1, [r0]
	str r2, [r0, #4]
	ldr r1, [sp]
	str r3, [r0, #8]
	str r1, [r0, #0xc]
	ldr r1, [sp, #4]
	str r1, [r0, #0x14]
	ldr r1, [sp, #8]
	str r1, [r0, #0x10]
	ldr r1, [sp, #0xc]
	str r1, [r0, #0x18]
	ldr r1, [sp, #0x10]
	str r1, [r0, #0x1c]
	ldr r1, [sp, #0x14]
	str r1, [r0, #0x20]
	ldr r1, _0200FEAC ; =0xFFFFFFF0
	add r1, sp
	ldrh r1, [r1, #0x28]
	strh r1, [r0, #0x24]
	bx lr
	.align 2, 0
_0200FEAC: .word 0xFFFFFFF0
	thumb_func_end sub_0200FE84

	thumb_func_start sub_0200FEB0
sub_0200FEB0: ; 0x0200FEB0
	mov r3, #0
	ldr r1, _0200FEC8 ; =sub_02010014
	add r2, r3, #0
_0200FEB6:
	str r2, [r0]
	str r1, [r0, #8]
	str r2, [r0, #0x10]
	add r3, r3, #1
	add r0, r0, #4
	cmp r3, #2
	blt _0200FEB6
	bx lr
	nop
_0200FEC8: .word sub_02010014
	thumb_func_end sub_0200FEB0

	thumb_func_start sub_0200FECC
sub_0200FECC: ; 0x0200FECC
	push {r3, r4, r5, lr}
	add r5, r0, #0
	mov r4, #0
_0200FED2:
	ldr r0, [r5]
	ldr r1, [r5, #8]
	blx r1
	add r4, r4, #1
	add r5, r5, #4
	cmp r4, #2
	blt _0200FED2
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0200FECC

	thumb_func_start sub_0200FEE4
sub_0200FEE4: ; 0x0200FEE4
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r5, r0, #0
	mov r0, #1
	str r0, [sp, #4]
	add r0, r5, #0
	str r0, [sp, #8]
	add r0, #0x10
	lsl r4, r3, #2
	str r0, [sp, #8]
	ldr r0, [r0, r4]
	add r7, r2, #0
	str r1, [sp]
	cmp r0, #0
	beq _0200FF06
	bl GF_AssertFail
_0200FF06:
	add r6, r5, #0
	add r6, #8
	ldr r0, [r6, r4]
	cmp r0, #0
	bne _0200FF14
	bl GF_AssertFail
_0200FF14:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _0200FF2E
	ldr r0, [r5, #0x14]
	cmp r0, #0
	bne _0200FF2E
	ldr r0, _0200FF54 ; =sub_0200FECC
	add r1, r5, #0
	bl sub_0201A120
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #4]
_0200FF2E:
	ldr r0, [sp, #4]
	cmp r0, #1
	beq _0200FF38
	bl GF_AssertFail
_0200FF38:
	ldr r0, [sp]
	cmp r7, #0
	str r0, [r5, r4]
	beq _0200FF44
	str r7, [r6, r4]
	b _0200FF48
_0200FF44:
	ldr r0, _0200FF58 ; =sub_02010014
	str r0, [r6, r4]
_0200FF48:
	ldr r0, [sp, #8]
	mov r1, #1
	str r1, [r0, r4]
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_0200FF54: .word sub_0200FECC
_0200FF58: .word sub_02010014
	thumb_func_end sub_0200FEE4

	thumb_func_start sub_0200FF5C
sub_0200FF5C: ; 0x0200FF5C
	push {r3, r4, r5, lr}
	lsl r4, r1, #2
	add r5, r0, #0
	mov r1, #0
	add r0, r5, r4
	str r1, [r0, #0x10]
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _0200FF78
	ldr r0, [r5, #0x14]
	cmp r0, #0
	bne _0200FF78
	bl sub_0201A108
_0200FF78:
	ldr r1, _0200FF84 ; =sub_02010014
	add r0, r5, r4
	str r1, [r0, #8]
	mov r0, #0
	str r0, [r5, r4]
	pop {r3, r4, r5, pc}
	.align 2, 0
_0200FF84: .word sub_02010014
	thumb_func_end sub_0200FF5C

	thumb_func_start sub_0200FF88
sub_0200FF88: ; 0x0200FF88
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r4, r1, #0
	ldr r0, [sp, #0x18]
	mov r1, #0x10
	add r6, r2, #0
	add r7, r3, #0
	bl sub_0201AACC
	add r1, r0, #0
	str r5, [r1]
	str r4, [r1, #4]
	mov r2, #1
	str r6, [r1, #8]
	ldr r0, _0200FFB0 ; =sub_0200FFD8
	lsl r2, r2, #0xa
	str r7, [r1, #0xc]
	bl sub_0200E374
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200FFB0: .word sub_0200FFD8
	thumb_func_end sub_0200FF88

	thumb_func_start sub_0200FFB4
sub_0200FFB4: ; 0x0200FFB4
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	add r0, r2, #0
	mov r1, #8
	bl sub_0201AACC
	add r1, r0, #0
	mov r2, #1
	str r5, [r1]
	ldr r0, _0200FFD4 ; =sub_0200FFF8
	lsl r2, r2, #0xa
	str r4, [r1, #4]
	bl sub_0200E374
	pop {r3, r4, r5, pc}
	.align 2, 0
_0200FFD4: .word sub_0200FFF8
	thumb_func_end sub_0200FFB4

	thumb_func_start sub_0200FFD8
sub_0200FFD8: ; 0x0200FFD8
	push {r3, r4, r5, lr}
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4]
	ldr r1, [r4, #4]
	ldr r2, [r4, #8]
	ldr r3, [r4, #0xc]
	bl sub_0200FEE4
	add r0, r5, #0
	bl sub_0200E390
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0200FFD8

	thumb_func_start sub_0200FFF8
sub_0200FFF8: ; 0x0200FFF8
	push {r3, r4, r5, lr}
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4]
	ldr r1, [r4, #4]
	bl sub_0200FF5C
	add r0, r5, #0
	bl sub_0200E390
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0200FFF8

	thumb_func_start sub_02010014
sub_02010014: ; 0x02010014
	bx lr
	.align 2, 0
	thumb_func_end sub_02010014

	thumb_func_start sub_02010018
sub_02010018: ; 0x02010018
	ldr r2, _02010028 ; =0x0000FFFF
	cmp r1, r2
	bne _02010024
	mov r1, #0x15
	lsl r1, r1, #4
	ldrh r1, [r0, r1]
_02010024:
	add r0, r1, #0
	bx lr
	.align 2, 0
_02010028: .word 0x0000FFFF
	thumb_func_end sub_02010018

	thumb_func_start sub_0201002C
sub_0201002C: ; 0x0201002C
	ldr r1, [r0, #0xc]
	cmp r1, #1
	bne _02010038
	add r2, r0, #0
	add r2, #0x14
	b _0201003C
_02010038:
	add r2, r0, #0
	add r2, #0x44
_0201003C:
	ldr r1, [r2, #0x28]
	cmp r1, #1
	bne _02010046
	ldrh r0, [r2, #0x24]
	bx lr
_02010046:
	mov r1, #0x15
	lsl r1, r1, #4
	ldrh r0, [r0, r1]
	bx lr
	.align 2, 0
	thumb_func_end sub_0201002C

	thumb_func_start sub_02010050
sub_02010050: ; 0x02010050
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r1, #0x10]
	mov r1, #0
	bl sub_0200FCFC
	add r0, r4, #0
	bl sub_0200E390
	pop {r4, pc}
	thumb_func_end sub_02010050

	thumb_func_start sub_02010064
sub_02010064: ; 0x02010064
	push {r3, lr}
	add r1, r0, #0
	ldr r0, [r1, #0x28]
	cmp r0, #0
	bne _0201008A
	ldrh r2, [r1, #0x24]
	ldr r0, _0201008C ; =0x00007FFF
	cmp r2, r0
	beq _0201007A
	cmp r2, #0
	bne _0201008A
_0201007A:
	ldr r0, [r1, #0x2c]
	cmp r0, #0
	bne _0201008A
	mov r2, #1
	ldr r0, _02010090 ; =sub_02010050
	lsl r2, r2, #0xa
	bl sub_0200E374
_0201008A:
	pop {r3, pc}
	.align 2, 0
_0201008C: .word 0x00007FFF
_02010090: .word sub_02010050
	thumb_func_end sub_02010064

	thumb_func_start sub_02010094
sub_02010094: ; 0x02010094
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x28]
	cmp r0, #1
	bne _020100BC
	ldrh r1, [r4, #0x24]
	ldr r0, _020100C0 ; =0x00007FFF
	cmp r1, r0
	beq _020100AA
	cmp r1, #0
	bne _020100BC
_020100AA:
	ldr r0, [r4, #0x2c]
	cmp r0, #0
	bne _020100BC
	ldr r0, [r4, #0x10]
	bl sub_0200FBF4
	ldr r0, [r4, #0x10]
	bl sub_0200FBDC
_020100BC:
	pop {r4, pc}
	nop
_020100C0: .word 0x00007FFF
	thumb_func_end sub_02010094

	thumb_func_start sub_020100C4
sub_020100C4: ; 0x020100C4
	push {r4, lr}
	add r4, r0, #0
	add r2, r4, #0
	mov r1, #0x14
	mov r0, #0
_020100CE:
	strb r0, [r2]
	add r2, r2, #1
	sub r1, r1, #1
	bne _020100CE
	add r0, r4, #0
	add r0, #0x14
	mov r1, #0
	mov r2, #0x30
	bl sub_020E5B44
	add r0, r4, #0
	add r0, #0x44
	mov r1, #0
	mov r2, #0x30
	bl sub_020E5B44
	add r2, r4, #0
	add r2, #0x74
	mov r1, #0x18
	mov r0, #0
_020100F6:
	strb r0, [r2]
	add r2, r2, #1
	sub r1, r1, #1
	bne _020100F6
	add r4, #0x8c
	add r0, r4, #0
	mov r1, #0
	mov r2, #0xc0
	bl sub_020E5B44
	pop {r4, pc}
	thumb_func_end sub_020100C4

	thumb_func_start sub_0201010C
sub_0201010C: ; 0x0201010C
	push {r3, lr}
	ldr r1, [r0, #0xc]
	cmp r1, #0
	bne _02010122
	mov r1, #1
	str r1, [r0, #0x28]
	str r1, [r0, #0x2c]
	bl sub_02010B14
	mov r0, #0
	pop {r3, pc}
_02010122:
	bl sub_02010BB4
	pop {r3, pc}
	thumb_func_end sub_0201010C

	thumb_func_start sub_02010128
sub_02010128: ; 0x02010128
	push {r3, lr}
	ldr r1, [r0, #0xc]
	cmp r1, #0
	bne _02010140
	mov r1, #0
	str r1, [r0, #0x28]
	mov r2, #1
	str r2, [r0, #0x2c]
	bl sub_02010B14
	mov r0, #0
	pop {r3, pc}
_02010140:
	bl sub_02010BB4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_02010128

	thumb_func_start sub_02010148
sub_02010148: ; 0x02010148
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010170
	ldr r1, _02010178 ; =0x020F5D60
	ldr r0, _0201017C ; =0x0210F64C
	str r1, [r0]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010180 ; =0x0210F64C
	add r0, r4, #0
	bl sub_0201289C
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010170:
	bl sub_020128E0
	pop {r4, pc}
	nop
_02010178: .word 0x020F5D60
_0201017C: .word 0x0210F64C
_02010180: .word 0x0210F64C
	thumb_func_end sub_02010148

	thumb_func_start sub_02010184
sub_02010184: ; 0x02010184
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020101AA
	ldr r1, _020101B0 ; =0x020F5D5C
	ldr r0, _020101B4 ; =0x0210F64C
	str r1, [r0, #0x10]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _020101B8 ; =0x0210F65C
	add r0, r4, #0
	bl sub_0201289C
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020101AA:
	bl sub_020128E0
	pop {r4, pc}
	.align 2, 0
_020101B0: .word 0x020F5D5C
_020101B4: .word 0x0210F64C
_020101B8: .word 0x0210F65C
	thumb_func_end sub_02010184

	thumb_func_start sub_020101BC
sub_020101BC: ; 0x020101BC
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020101E4
	ldr r1, _020101EC ; =0x020F5D64
	ldr r0, _020101F0 ; =0x0210F64C
	str r1, [r0, #0x20]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _020101F4 ; =0x0210F66C
	add r0, r4, #0
	bl sub_0201289C
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020101E4:
	bl sub_020128E0
	pop {r4, pc}
	nop
_020101EC: .word 0x020F5D64
_020101F0: .word 0x0210F64C
_020101F4: .word 0x0210F66C
	thumb_func_end sub_020101BC

	thumb_func_start sub_020101F8
sub_020101F8: ; 0x020101F8
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201021E
	ldr r1, _02010224 ; =0x020F5D58
	ldr r0, _02010228 ; =0x0210F64C
	str r1, [r0, #0x28]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _0201022C ; =0x0210F674
	add r0, r4, #0
	bl sub_0201289C
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201021E:
	bl sub_020128E0
	pop {r4, pc}
	.align 2, 0
_02010224: .word 0x020F5D58
_02010228: .word 0x0210F64C
_0201022C: .word 0x0210F674
	thumb_func_end sub_020101F8

	thumb_func_start sub_02010230
sub_02010230: ; 0x02010230
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010252
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010258 ; =0x020F5E2C
	add r0, r4, #0
	bl sub_0201164C
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010252:
	bl sub_0201169C
	pop {r4, pc}
	.align 2, 0
_02010258: .word 0x020F5E2C
	thumb_func_end sub_02010230

	thumb_func_start sub_0201025C
sub_0201025C: ; 0x0201025C
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201027C
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010284 ; =0x020F5E38
	add r0, r4, #0
	bl sub_0201164C
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201027C:
	bl sub_0201169C
	pop {r4, pc}
	nop
_02010284: .word 0x020F5E38
	thumb_func_end sub_0201025C

	thumb_func_start sub_02010288
sub_02010288: ; 0x02010288
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020102B0
	ldr r1, _020102B8 ; =0x020F5D90
	ldr r0, _020102BC ; =0x0210F64C
	str r1, [r0, #8]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _020102C0 ; =0x0210F654
	add r0, r4, #0
	bl sub_0201289C
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020102B0:
	bl sub_020128E0
	pop {r4, pc}
	nop
_020102B8: .word 0x020F5D90
_020102BC: .word 0x0210F64C
_020102C0: .word 0x0210F654
	thumb_func_end sub_02010288

	thumb_func_start sub_020102C4
sub_020102C4: ; 0x020102C4
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020102EA
	ldr r1, _020102F0 ; =0x020F5D68
	ldr r0, _020102F4 ; =0x0210F64C
	str r1, [r0, #0x38]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _020102F8 ; =0x0210F684
	add r0, r4, #0
	bl sub_0201289C
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020102EA:
	bl sub_020128E0
	pop {r4, pc}
	.align 2, 0
_020102F0: .word 0x020F5D68
_020102F4: .word 0x0210F64C
_020102F8: .word 0x0210F684
	thumb_func_end sub_020102C4

	thumb_func_start sub_020102FC
sub_020102FC: ; 0x020102FC
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010324
	ldr r1, _0201032C ; =0x020F5D80
	ldr r0, _02010330 ; =0x0210F64C
	str r1, [r0, #0x48]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010334 ; =0x0210F694
	add r0, r4, #0
	bl sub_0201289C
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010324:
	bl sub_020128E0
	pop {r4, pc}
	nop
_0201032C: .word 0x020F5D80
_02010330: .word 0x0210F64C
_02010334: .word 0x0210F694
	thumb_func_end sub_020102FC

	thumb_func_start sub_02010338
sub_02010338: ; 0x02010338
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201035E
	ldr r1, _02010364 ; =0x020F5DB8
	ldr r0, _02010368 ; =0x0210F64C
	str r1, [r0, #0x40]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _0201036C ; =0x0210F68C
	add r0, r4, #0
	bl sub_0201289C
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201035E:
	bl sub_020128E0
	pop {r4, pc}
	.align 2, 0
_02010364: .word 0x020F5DB8
_02010368: .word 0x0210F64C
_0201036C: .word 0x0210F68C
	thumb_func_end sub_02010338

	thumb_func_start sub_02010370
sub_02010370: ; 0x02010370
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010392
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010398 ; =0x020F5E5C
	add r0, r4, #0
	bl sub_0201164C
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010392:
	bl sub_0201169C
	pop {r4, pc}
	.align 2, 0
_02010398: .word 0x020F5E5C
	thumb_func_end sub_02010370

	thumb_func_start sub_0201039C
sub_0201039C: ; 0x0201039C
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020103BC
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _020103C4 ; =0x020F5E68
	add r0, r4, #0
	bl sub_0201164C
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020103BC:
	bl sub_0201169C
	pop {r4, pc}
	nop
_020103C4: .word 0x020F5E68
	thumb_func_end sub_0201039C

	thumb_func_start sub_020103C8
sub_020103C8: ; 0x020103C8
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020103EC
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _020103F4 ; =0x020F5E80
	ldr r2, _020103F8 ; =0x020F5E8C
	add r0, r4, #0
	bl sub_020116EC
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020103EC:
	bl sub_02011744
	pop {r4, pc}
	nop
_020103F4: .word 0x020F5E80
_020103F8: .word 0x020F5E8C
	thumb_func_end sub_020103C8

	thumb_func_start sub_020103FC
sub_020103FC: ; 0x020103FC
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201041E
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010424 ; =0x020F5EA4
	ldr r2, _02010428 ; =0x020F5EB0
	add r0, r4, #0
	bl sub_020116EC
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201041E:
	bl sub_02011744
	pop {r4, pc}
	.align 2, 0
_02010424: .word 0x020F5EA4
_02010428: .word 0x020F5EB0
	thumb_func_end sub_020103FC

	thumb_func_start sub_0201042C
sub_0201042C: ; 0x0201042C
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201044E
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010454 ; =0x020F5EC8
	add r0, r4, #0
	bl sub_02011884
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201044E:
	bl sub_020118BC
	pop {r4, pc}
	.align 2, 0
_02010454: .word 0x020F5EC8
	thumb_func_end sub_0201042C

	thumb_func_start sub_02010458
sub_02010458: ; 0x02010458
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010478
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010480 ; =0x020F5ED4
	add r0, r4, #0
	bl sub_02011884
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010478:
	bl sub_020118BC
	pop {r4, pc}
	nop
_02010480: .word 0x020F5ED4
	thumb_func_end sub_02010458

	thumb_func_start sub_02010484
sub_02010484: ; 0x02010484
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020104A6
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _020104AC ; =0x020F5DD8
	add r0, r4, #0
	bl sub_02011884
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020104A6:
	bl sub_020118BC
	pop {r4, pc}
	.align 2, 0
_020104AC: .word 0x020F5DD8
	thumb_func_end sub_02010484

	thumb_func_start sub_020104B0
sub_020104B0: ; 0x020104B0
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020104D0
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _020104D8 ; =0x020F5DE4
	add r0, r4, #0
	bl sub_02011884
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020104D0:
	bl sub_020118BC
	pop {r4, pc}
	nop
_020104D8: .word 0x020F5DE4
	thumb_func_end sub_020104B0

	thumb_func_start sub_020104DC
sub_020104DC: ; 0x020104DC
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020104FE
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010504 ; =0x020F5DD0
	add r0, r4, #0
	bl sub_02011B5C
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020104FE:
	bl sub_02011B94
	pop {r4, pc}
	.align 2, 0
_02010504: .word 0x020F5DD0
	thumb_func_end sub_020104DC

	thumb_func_start sub_02010508
sub_02010508: ; 0x02010508
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010528
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010530 ; =0x020F5DC8
	add r0, r4, #0
	bl sub_02011B5C
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010528:
	bl sub_02011B94
	pop {r4, pc}
	nop
_02010530: .word 0x020F5DC8
	thumb_func_end sub_02010508

	thumb_func_start sub_02010534
sub_02010534: ; 0x02010534
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010556
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _0201055C ; =0x020F5E08
	add r0, r4, #0
	bl sub_0201164C
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010556:
	bl sub_0201169C
	pop {r4, pc}
	.align 2, 0
_0201055C: .word 0x020F5E08
	thumb_func_end sub_02010534

	thumb_func_start sub_02010560
sub_02010560: ; 0x02010560
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010580
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010588 ; =0x020F5E14
	add r0, r4, #0
	bl sub_0201164C
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010580:
	bl sub_0201169C
	pop {r4, pc}
	nop
_02010588: .word 0x020F5E14
	thumb_func_end sub_02010560

	thumb_func_start sub_0201058C
sub_0201058C: ; 0x0201058C
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020105AE
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _020105B4 ; =0x020F5E20
	add r0, r4, #0
	bl sub_0201164C
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020105AE:
	bl sub_0201169C
	pop {r4, pc}
	.align 2, 0
_020105B4: .word 0x020F5E20
	thumb_func_end sub_0201058C

	thumb_func_start sub_020105B8
sub_020105B8: ; 0x020105B8
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020105D8
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _020105E0 ; =0x020F5E44
	add r0, r4, #0
	bl sub_0201164C
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020105D8:
	bl sub_0201169C
	pop {r4, pc}
	nop
_020105E0: .word 0x020F5E44
	thumb_func_end sub_020105B8

	thumb_func_start sub_020105E4
sub_020105E4: ; 0x020105E4
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010606
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _0201060C ; =0x020F5DA8
	add r0, r4, #0
	bl sub_02011D60
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010606:
	bl sub_02011D98
	pop {r4, pc}
	.align 2, 0
_0201060C: .word 0x020F5DA8
	thumb_func_end sub_020105E4

	thumb_func_start sub_02010610
sub_02010610: ; 0x02010610
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010630
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010638 ; =0x020F5DA0
	add r0, r4, #0
	bl sub_02011D60
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010630:
	bl sub_02011D98
	pop {r4, pc}
	nop
_02010638: .word 0x020F5DA0
	thumb_func_end sub_02010610

	thumb_func_start sub_0201063C
sub_0201063C: ; 0x0201063C
	push {r4, lr}
	sub sp, #0x10
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010680
	ldr r0, _02010688 ; =0x020F5EEC
	mov r1, #4
	str r0, [sp]
	ldr r0, _0201068C ; =0x020F5EFC
	str r0, [sp, #4]
	add r0, sp, #0
	strh r1, [r0, #8]
	mov r1, #0
	strh r1, [r0, #0xa]
	mov r1, #0x3f
	strb r1, [r0, #0xc]
	mov r1, #0x20
	strb r1, [r0, #0xd]
	mov r1, #1
	strh r1, [r0, #0xe]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	add r0, r4, #0
	add r1, sp, #0
	bl sub_02011FF8
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	add sp, #0x10
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010680:
	bl sub_02012030
	add sp, #0x10
	pop {r4, pc}
	.align 2, 0
_02010688: .word 0x020F5EEC
_0201068C: .word 0x020F5EFC
	thumb_func_end sub_0201063C

	thumb_func_start sub_02010690
sub_02010690: ; 0x02010690
	push {r4, lr}
	sub sp, #0x10
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020106D0
	ldr r0, _020106D8 ; =0x020F5F0C
	mov r1, #4
	str r0, [sp]
	ldr r0, _020106DC ; =0x020F5F1C
	mov r2, #0
	str r0, [sp, #4]
	add r0, sp, #0
	strh r1, [r0, #8]
	strh r2, [r0, #0xa]
	mov r1, #0x3f
	strb r1, [r0, #0xc]
	mov r1, #0x20
	strb r1, [r0, #0xd]
	strh r2, [r0, #0xe]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	add r0, r4, #0
	add r1, sp, #0
	bl sub_02011FF8
	mov r0, #0
	str r0, [r4, #0x28]
	add sp, #0x10
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020106D0:
	bl sub_02012030
	add sp, #0x10
	pop {r4, pc}
	.align 2, 0
_020106D8: .word 0x020F5F0C
_020106DC: .word 0x020F5F1C
	thumb_func_end sub_02010690

	thumb_func_start sub_020106E0
sub_020106E0: ; 0x020106E0
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010708
	ldr r1, _02010710 ; =0x020F5EBC
	ldr r0, _02010714 ; =0x0210F64C
	str r1, [r0, #0x30]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010718 ; =0x0210F67C
	add r0, r4, #0
	bl sub_0201289C
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010708:
	bl sub_020128E0
	pop {r4, pc}
	nop
_02010710: .word 0x020F5EBC
_02010714: .word 0x0210F64C
_02010718: .word 0x0210F67C
	thumb_func_end sub_020106E0

	thumb_func_start sub_0201071C
sub_0201071C: ; 0x0201071C
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010742
	ldr r1, _02010748 ; =0x020F5DF0
	ldr r0, _0201074C ; =0x0210F64C
	str r1, [r0, #0x18]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010750 ; =0x0210F664
	add r0, r4, #0
	bl sub_0201289C
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010742:
	bl sub_020128E0
	pop {r4, pc}
	.align 2, 0
_02010748: .word 0x020F5DF0
_0201074C: .word 0x0210F64C
_02010750: .word 0x0210F664
	thumb_func_end sub_0201071C

	thumb_func_start sub_02010754
sub_02010754: ; 0x02010754
	push {r4, lr}
	sub sp, #8
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201078E
	ldr r1, _02010798 ; =0x020F5D58
	add r0, sp, #0
	ldrh r2, [r1, #0x30]
	strh r2, [r0]
	ldrh r2, [r1, #0x32]
	strh r2, [r0, #2]
	ldrh r2, [r1, #0x34]
	ldrh r1, [r1, #0x36]
	strh r2, [r0, #4]
	strh r1, [r0, #6]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	add r0, r4, #0
	add r1, sp, #0
	bl sub_020122B8
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	add sp, #8
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201078E:
	bl sub_020122F8
	add sp, #8
	pop {r4, pc}
	nop
_02010798: .word 0x020F5D58
	thumb_func_end sub_02010754

	thumb_func_start sub_0201079C
sub_0201079C: ; 0x0201079C
	push {r4, lr}
	sub sp, #8
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020107D4
	ldr r1, _020107DC ; =0x020F5D98
	add r0, sp, #0
	ldrh r2, [r1, #0x28]
	strh r2, [r0]
	ldrh r2, [r1, #0x2a]
	strh r2, [r0, #2]
	ldrh r2, [r1, #0x2c]
	ldrh r1, [r1, #0x2e]
	strh r2, [r0, #4]
	strh r1, [r0, #6]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	add r0, r4, #0
	add r1, sp, #0
	bl sub_020122B8
	mov r0, #0
	str r0, [r4, #0x28]
	add sp, #8
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020107D4:
	bl sub_020122F8
	add sp, #8
	pop {r4, pc}
	.align 2, 0
_020107DC: .word 0x020F5D98
	thumb_func_end sub_0201079C

	thumb_func_start sub_020107E0
sub_020107E0: ; 0x020107E0
	push {r4, lr}
	sub sp, #8
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201081A
	ldr r1, _02010824 ; =0x020F5D58
	add r0, sp, #0
	ldrh r2, [r1, #0x20]
	strh r2, [r0]
	ldrh r2, [r1, #0x22]
	strh r2, [r0, #2]
	ldrh r2, [r1, #0x24]
	ldrh r1, [r1, #0x26]
	strh r2, [r0, #4]
	strh r1, [r0, #6]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	add r0, r4, #0
	add r1, sp, #0
	bl sub_020125EC
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	add sp, #8
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201081A:
	bl sub_0201262C
	add sp, #8
	pop {r4, pc}
	nop
_02010824: .word 0x020F5D58
	thumb_func_end sub_020107E0

	thumb_func_start sub_02010828
sub_02010828: ; 0x02010828
	push {r4, lr}
	sub sp, #8
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010860
	ldr r1, _02010868 ; =0x020F5D58
	add r0, sp, #0
	ldrh r2, [r1, #0x18]
	strh r2, [r0]
	ldrh r2, [r1, #0x1a]
	strh r2, [r0, #2]
	ldrh r2, [r1, #0x1c]
	ldrh r1, [r1, #0x1e]
	strh r2, [r0, #4]
	strh r1, [r0, #6]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	add r0, r4, #0
	add r1, sp, #0
	bl sub_020125EC
	mov r0, #0
	str r0, [r4, #0x28]
	add sp, #8
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010860:
	bl sub_0201262C
	add sp, #8
	pop {r4, pc}
	.align 2, 0
_02010868: .word 0x020F5D58
	thumb_func_end sub_02010828

	thumb_func_start sub_0201086C
sub_0201086C: ; 0x0201086C
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201088E
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010894 ; =0x020F5E98
	add r0, r4, #0
	bl sub_02011884
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201088E:
	bl sub_020118BC
	pop {r4, pc}
	.align 2, 0
_02010894: .word 0x020F5E98
	thumb_func_end sub_0201086C

	thumb_func_start sub_02010898
sub_02010898: ; 0x02010898
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020108B8
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _020108C0 ; =0x020F5EE0
	add r0, r4, #0
	bl sub_02011884
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020108B8:
	bl sub_020118BC
	pop {r4, pc}
	nop
_020108C0: .word 0x020F5EE0
	thumb_func_end sub_02010898

	thumb_func_start sub_020108C4
sub_020108C4: ; 0x020108C4
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020108E6
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _020108EC ; =0x020F5DFC
	add r0, r4, #0
	bl sub_0201164C
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020108E6:
	bl sub_0201169C
	pop {r4, pc}
	.align 2, 0
_020108EC: .word 0x020F5DFC
	thumb_func_end sub_020108C4

	thumb_func_start sub_020108F0
sub_020108F0: ; 0x020108F0
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010910
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010918 ; =0x020F5E50
	add r0, r4, #0
	bl sub_0201164C
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010910:
	bl sub_0201169C
	pop {r4, pc}
	nop
_02010918: .word 0x020F5E50
	thumb_func_end sub_020108F0

	thumb_func_start sub_0201091C
sub_0201091C: ; 0x0201091C
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010944
	ldr r1, _0201094C ; =0x020F5D98
	ldr r0, _02010950 ; =0x0210F64C
	str r1, [r0, #0x5c]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _02010954 ; =0x0210F69C
	add r0, r4, #0
	bl sub_02012B1C
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010944:
	bl sub_02012B80
	pop {r4, pc}
	nop
_0201094C: .word 0x020F5D98
_02010950: .word 0x0210F64C
_02010954: .word 0x0210F69C
	thumb_func_end sub_0201091C

	thumb_func_start sub_02010958
sub_02010958: ; 0x02010958
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201097E
	ldr r1, _02010984 ; =0x020F5DB0
	ldr r0, _02010988 ; =0x0210F64C
	str r1, [r0, #0x74]
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _0201098C ; =0x0210F6B4
	add r0, r4, #0
	bl sub_02012B1C
	mov r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201097E:
	bl sub_02012B80
	pop {r4, pc}
	.align 2, 0
_02010984: .word 0x020F5DB0
_02010988: .word 0x0210F64C
_0201098C: .word 0x0210F6B4
	thumb_func_end sub_02010958

	thumb_func_start sub_02010990
sub_02010990: ; 0x02010990
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020109B2
	ldrh r0, [r4, #0x24]
	bl sub_0200FCDC
	ldr r1, _020109B8 ; =0x020F5E74
	add r0, r4, #0
	bl sub_02012DD8
	mov r0, #1
	str r0, [r4, #0x28]
	mov r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020109B2:
	bl sub_02012E10
	pop {r4, pc}
	.align 2, 0
_020109B8: .word 0x020F5E74
	thumb_func_end sub_02010990

	thumb_func_start sub_020109BC
sub_020109BC: ; 0x020109BC
	asr r0, r0, #4
	lsl r1, r0, #1
	lsl r0, r1, #1
	ldr r2, _020109D0 ; =0x021094DC
	add r1, r1, #1
	lsl r1, r1, #1
	ldr r3, _020109D4 ; =sub_020CCBA0
	ldrsh r0, [r2, r0]
	ldrsh r1, [r2, r1]
	bx r3
	.align 2, 0
_020109D0: .word 0x021094DC
_020109D4: .word sub_020CCBA0
	thumb_func_end sub_020109BC

	thumb_func_start sub_020109D8
sub_020109D8: ; 0x020109D8
	push {r4, lr}
	add r4, r1, #0
	bl sub_020109BC
	lsl r2, r4, #0xc
	asr r1, r0, #0x1f
	asr r3, r2, #0x1f
	bl sub_020F2948
	mov r2, #2
	mov r3, #0
	lsl r2, r2, #0xa
	add r2, r0, r2
	adc r1, r3
	lsl r0, r1, #0x14
	lsr r1, r2, #0xc
	orr r1, r0
	asr r0, r1, #0xc
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020109D8

	thumb_func_start sub_02010A00
sub_02010A00: ; 0x02010A00
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r5, r1, #0
	add r7, r2, #0
	add r6, r3, #0
	bl sub_020109BC
	cmp r6, r7
	bge _02010A4A
	lsl r1, r6, #2
	str r0, [sp]
	asr r0, r0, #0x1f
	lsl r4, r6, #0xc
	add r5, r5, r1
	str r0, [sp, #4]
_02010A1E:
	ldr r0, [sp]
	ldr r1, [sp, #4]
	asr r3, r4, #0x1f
	add r2, r4, #0
	bl sub_020F2948
	mov r2, #2
	lsl r2, r2, #0xa
	add r0, r0, r2
	ldr r2, _02010A50 ; =0x00000000
	adc r1, r2
	lsl r1, r1, #0x14
	lsr r0, r0, #0xc
	orr r0, r1
	asr r0, r0, #0xc
	stmia r5!, {r0}
	mov r0, #1
	lsl r0, r0, #0xc
	add r6, r6, #1
	add r4, r4, r0
	cmp r6, r7
	blt _02010A1E
_02010A4A:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02010A50: .word 0x00000000
	thumb_func_end sub_02010A00

	thumb_func_start sub_02010A54
sub_02010A54: ; 0x02010A54
	push {r4, lr}
	add r4, r1, #0
	bl sub_020109BC
	add r1, r0, #0
	lsr r0, r4, #0x1f
	add r0, r4, r0
	asr r0, r0, #1
	lsl r0, r0, #0xc
	bl sub_020CCBA0
	pop {r4, pc}
	thumb_func_end sub_02010A54

	thumb_func_start sub_02010A6C
sub_02010A6C: ; 0x02010A6C
	ldr r3, _02010A78 ; =sub_020F2998
	sub r0, r1, r0
	lsl r0, r0, #7
	add r1, r2, #0
	bx r3
	nop
_02010A78: .word sub_020F2998
	thumb_func_end sub_02010A6C

	thumb_func_start sub_02010A7C
sub_02010A7C: ; 0x02010A7C
	add r0, r0, r1
	bpl _02010A82
	mov r0, #0
_02010A82:
	cmp r0, #0xff
	ble _02010A88
	mov r0, #0xff
_02010A88:
	bx lr
	.align 2, 0
	thumb_func_end sub_02010A7C

	thumb_func_start sub_02010A8C
sub_02010A8C: ; 0x02010A8C
	ldr r3, [r0]
	ldr r2, [r1]
	add r2, r3, r2
	str r2, [r0]
	ldr r3, [r0, #4]
	ldr r2, [r1, #4]
	add r2, r3, r2
	str r2, [r0, #4]
	ldr r3, [r0, #8]
	ldr r2, [r1, #8]
	add r2, r3, r2
	str r2, [r0, #8]
	ldr r2, [r0, #0xc]
	ldr r1, [r1, #0xc]
	add r1, r2, r1
	str r1, [r0, #0xc]
	bx lr
	.align 2, 0
	thumb_func_end sub_02010A8C

	thumb_func_start sub_02010AB0
sub_02010AB0: ; 0x02010AB0
	push {r3, r4, r5, r6, r7, lr}
	add r5, r3, #0
	add r6, r2, #0
	ldrb r2, [r5]
	ldr r4, [sp, #0x18]
	ldr r7, [sp, #0x1c]
	lsl r2, r2, #7
	str r2, [r0]
	ldrb r2, [r5, #1]
	lsl r2, r2, #7
	str r2, [r0, #4]
	ldrb r2, [r5, #2]
	lsl r2, r2, #7
	str r2, [r0, #8]
	ldrb r2, [r5, #3]
	lsl r2, r2, #7
	str r2, [r0, #0xc]
	ldrb r0, [r4]
	add r2, r7, #0
	str r0, [r1]
	ldrb r0, [r4, #1]
	str r0, [r1, #4]
	ldrb r0, [r4, #2]
	str r0, [r1, #8]
	ldrb r0, [r4, #3]
	str r0, [r1, #0xc]
	ldrb r0, [r5]
	ldrb r1, [r4]
	bl sub_02010A6C
	str r0, [r6]
	ldrb r0, [r5, #1]
	ldrb r1, [r4, #1]
	add r2, r7, #0
	bl sub_02010A6C
	str r0, [r6, #4]
	ldrb r0, [r5, #2]
	ldrb r1, [r4, #2]
	add r2, r7, #0
	bl sub_02010A6C
	str r0, [r6, #8]
	ldrb r0, [r5, #3]
	ldrb r1, [r4, #3]
	add r2, r7, #0
	bl sub_02010A6C
	str r0, [r6, #0xc]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02010AB0

	thumb_func_start sub_02010B14
sub_02010B14: ; 0x02010B14
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r0, [r5, #0x20]
	add r6, r1, #0
	mov r1, #0x1c
	bl sub_0201AA8C
	str r0, [r5, #0x14]
	mov r2, #0x1c
	mov r1, #0
_02010B28:
	strb r1, [r0]
	add r0, r0, #1
	sub r2, r2, #1
	bne _02010B28
	ldr r4, [r5, #0x14]
	cmp r6, #0
	ldrh r1, [r5, #0x24]
	ldr r0, _02010BB0 ; =0x00007FFF
	bne _02010B5C
	cmp r1, r0
	bne _02010B44
	mov r7, #0x10
	mov r6, #0
	b _02010B7C
_02010B44:
	cmp r1, #0
	bne _02010B50
	mov r7, #0xf
	mvn r7, r7
	mov r6, #0
	b _02010B7C
_02010B50:
	mov r7, #0xf
	mvn r7, r7
	mov r6, #0
	bl GF_AssertFail
	b _02010B7C
_02010B5C:
	cmp r1, r0
	bne _02010B66
	mov r7, #0
	mov r6, #0x10
	b _02010B7C
_02010B66:
	cmp r1, #0
	bne _02010B72
	mov r7, #0
	add r6, r7, #0
	sub r6, #0x10
	b _02010B7C
_02010B72:
	mov r7, #0
	add r6, r7, #0
	sub r6, #0x10
	bl GF_AssertFail
_02010B7C:
	ldr r0, [r5, #0x10]
	add r1, r7, #0
	bl sub_0200FCFC
	ldr r0, [r5, #4]
	add r1, r6, #0
	str r0, [r4]
	ldr r0, [r5, #8]
	str r0, [r4, #4]
	mov r0, #0
	str r0, [r4, #8]
	lsl r0, r7, #7
	str r0, [r4, #0xc]
	lsl r0, r6, #7
	str r0, [r4, #0x10]
	ldr r2, [r5, #4]
	add r0, r7, #0
	bl sub_02010A6C
	str r0, [r4, #0x14]
	ldr r0, [r5, #0x10]
	str r0, [r4, #0x18]
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02010BB0: .word 0x00007FFF
	thumb_func_end sub_02010B14

	thumb_func_start sub_02010BB4
sub_02010BB4: ; 0x02010BB4
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r1, [r5, #0xc]
	mov r4, #0
	ldr r0, [r5, #0x14]
	cmp r1, #1
	beq _02010BCC
	cmp r1, #2
	beq _02010BDC
	cmp r1, #3
	beq _02010BEE
	b _02010BF0
_02010BCC:
	bl sub_02010BF4
	cmp r0, #1
	bne _02010BF0
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _02010BF0
_02010BDC:
	bl sub_0201AB0C
	add r0, r4, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	mov r4, #1
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _02010BF0
_02010BEE:
	mov r4, #1
_02010BF0:
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02010BB4

	thumb_func_start sub_02010BF4
sub_02010BF4: ; 0x02010BF4
	push {r4, lr}
	add r1, r0, #0
	ldr r0, [r1, #8]
	mov r4, #0
	add r2, r0, #1
	str r2, [r1, #8]
	ldr r0, [r1, #4]
	cmp r2, r0
	blt _02010C32
	str r4, [r1, #8]
	ldr r0, [r1]
	sub r0, r0, #1
	cmp r0, #0
	ble _02010C1C
	str r0, [r1]
	ldr r2, [r1, #0xc]
	ldr r0, [r1, #0x14]
	add r0, r2, r0
	str r0, [r1, #0xc]
	b _02010C22
_02010C1C:
	ldr r0, [r1, #0x10]
	mov r4, #1
	str r0, [r1, #0xc]
_02010C22:
	ldr r2, [r1, #0xc]
	ldr r0, [r1, #0x18]
	asr r1, r2, #6
	lsr r1, r1, #0x19
	add r1, r2, r1
	asr r1, r1, #7
	bl sub_0200FCFC
_02010C32:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02010BF4

	thumb_func_start sub_02010C38
sub_02010C38: ; 0x02010C38
	push {r4, r5, r6, lr}
	add r4, r0, #0
	bne _02010C42
	bl GF_AssertFail
_02010C42:
	ldr r0, _02010E54 ; =0x04000006
	ldrh r0, [r0]
	cmp r0, #0xc0
	bge _02010CE8
	add r5, r0, #1
	cmp r5, #0xbf
	ble _02010C52
	sub r5, #0xc0
_02010C52:
	ldr r0, [r4, #4]
	cmp r0, #1
	bne _02010D02
	add r0, r4, #0
	mov r1, #0
	bl sub_02010EE0
	ldr r3, [r4, #8]
	lsl r5, r5, #1
	mov r4, #6
	add r1, r0, r5
	lsl r4, r4, #6
	ldrsh r2, [r1, r4]
	lsl r4, r4, #2
	ldrsh r1, [r0, r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	ldr r0, _02010E58 ; =0x04000004
	bne _02010CBC
	cmp r3, #0
	bne _02010C9C
	ldrh r4, [r0]
	mov r3, #2
	tst r3, r4
	beq _02010CE8
	lsl r3, r1, #8
	mov r1, #0xff
	lsl r1, r1, #8
	and r3, r1
	lsl r1, r2, #0x18
	lsr r1, r1, #0x18
	orr r1, r3
	strh r1, [r0, #0x3c]
	mov r1, #0xc0
	add r0, #0x40
	strh r1, [r0]
	pop {r4, r5, r6, pc}
_02010C9C:
	ldrh r3, [r0]
	mov r0, #2
	tst r0, r3
	beq _02010CE8
	mov r0, #0xff
	lsl r1, r1, #8
	lsl r0, r0, #8
	and r1, r0
	lsl r0, r2, #0x18
	lsr r0, r0, #0x18
	orr r0, r1
	ldr r1, _02010E5C ; =0x04001040
	strh r0, [r1]
	mov r0, #0xc0
	strh r0, [r1, #4]
	pop {r4, r5, r6, pc}
_02010CBC:
	cmp r3, #0
	bne _02010CE0
	ldrh r4, [r0]
	mov r3, #2
	tst r3, r4
	beq _02010CE8
	lsl r3, r1, #8
	mov r1, #0xff
	lsl r1, r1, #8
	and r3, r1
	lsl r1, r2, #0x18
	lsr r1, r1, #0x18
	orr r1, r3
	strh r1, [r0, #0x3e]
	mov r1, #0xc0
	add r0, #0x42
	strh r1, [r0]
	pop {r4, r5, r6, pc}
_02010CE0:
	ldrh r3, [r0]
	mov r0, #2
	tst r0, r3
	bne _02010CEA
_02010CE8:
	b _02010E50
_02010CEA:
	mov r0, #0xff
	lsl r1, r1, #8
	lsl r0, r0, #8
	and r1, r0
	lsl r0, r2, #0x18
	lsr r0, r0, #0x18
	orr r0, r1
	ldr r1, _02010E60 ; =0x04001042
	strh r0, [r1]
	mov r0, #0xc0
	strh r0, [r1, #4]
	pop {r4, r5, r6, pc}
_02010D02:
	add r0, r4, #0
	mov r1, #0
	bl sub_02010EE0
	add r3, r0, #0
	lsl r5, r5, #1
	mov r6, #6
	add r1, r3, r5
	lsl r6, r6, #6
	ldrsh r2, [r1, r6]
	lsl r6, r6, #2
	ldrsh r1, [r3, r5]
	ldr r3, [r3, r6]
	ldr r0, [r4, #8]
	cmp r3, #0
	bne _02010D68
	cmp r0, #0
	ldr r0, _02010E58 ; =0x04000004
	bne _02010D48
	ldrh r6, [r0]
	mov r3, #2
	tst r3, r6
	beq _02010DAC
	lsl r3, r1, #8
	mov r1, #0xff
	lsl r1, r1, #8
	and r3, r1
	lsl r1, r2, #0x18
	lsr r1, r1, #0x18
	orr r1, r3
	strh r1, [r0, #0x3c]
	mov r1, #0xc0
	add r0, #0x40
	strh r1, [r0]
	b _02010DAC
_02010D48:
	ldrh r3, [r0]
	mov r0, #2
	tst r0, r3
	beq _02010DAC
	mov r0, #0xff
	lsl r1, r1, #8
	lsl r0, r0, #8
	and r1, r0
	lsl r0, r2, #0x18
	lsr r0, r0, #0x18
	orr r0, r1
	ldr r1, _02010E5C ; =0x04001040
	strh r0, [r1]
	mov r0, #0xc0
	strh r0, [r1, #4]
	b _02010DAC
_02010D68:
	cmp r0, #0
	ldr r0, _02010E58 ; =0x04000004
	bne _02010D8E
	ldrh r6, [r0]
	mov r3, #2
	tst r3, r6
	beq _02010DAC
	lsl r3, r1, #8
	mov r1, #0xff
	lsl r1, r1, #8
	and r3, r1
	lsl r1, r2, #0x18
	lsr r1, r1, #0x18
	orr r1, r3
	strh r1, [r0, #0x3e]
	mov r1, #0xc0
	add r0, #0x42
	strh r1, [r0]
	b _02010DAC
_02010D8E:
	ldrh r3, [r0]
	mov r0, #2
	tst r0, r3
	beq _02010DAC
	mov r0, #0xff
	lsl r1, r1, #8
	lsl r0, r0, #8
	and r1, r0
	lsl r0, r2, #0x18
	lsr r0, r0, #0x18
	orr r0, r1
	ldr r1, _02010E60 ; =0x04001042
	strh r0, [r1]
	mov r0, #0xc0
	strh r0, [r1, #4]
_02010DAC:
	add r0, r4, #0
	mov r1, #1
	bl sub_02010EE0
	ldr r3, [r4, #8]
	mov r4, #6
	add r1, r0, r5
	lsl r4, r4, #6
	ldrsh r2, [r1, r4]
	lsl r4, r4, #2
	ldrsh r1, [r0, r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	ldr r0, _02010E58 ; =0x04000004
	bne _02010E0E
	cmp r3, #0
	bne _02010DEE
	ldrh r4, [r0]
	mov r3, #2
	tst r3, r4
	beq _02010E50
	lsl r3, r1, #8
	mov r1, #0xff
	lsl r1, r1, #8
	and r3, r1
	lsl r1, r2, #0x18
	lsr r1, r1, #0x18
	orr r1, r3
	strh r1, [r0, #0x3c]
	mov r1, #0xc0
	add r0, #0x40
	strh r1, [r0]
	pop {r4, r5, r6, pc}
_02010DEE:
	ldrh r3, [r0]
	mov r0, #2
	tst r0, r3
	beq _02010E50
	mov r0, #0xff
	lsl r1, r1, #8
	lsl r0, r0, #8
	and r1, r0
	lsl r0, r2, #0x18
	lsr r0, r0, #0x18
	orr r0, r1
	ldr r1, _02010E5C ; =0x04001040
	strh r0, [r1]
	mov r0, #0xc0
	strh r0, [r1, #4]
	pop {r4, r5, r6, pc}
_02010E0E:
	cmp r3, #0
	bne _02010E32
	ldrh r4, [r0]
	mov r3, #2
	tst r3, r4
	beq _02010E50
	lsl r3, r1, #8
	mov r1, #0xff
	lsl r1, r1, #8
	and r3, r1
	lsl r1, r2, #0x18
	lsr r1, r1, #0x18
	orr r1, r3
	strh r1, [r0, #0x3e]
	mov r1, #0xc0
	add r0, #0x42
	strh r1, [r0]
	pop {r4, r5, r6, pc}
_02010E32:
	ldrh r3, [r0]
	mov r0, #2
	tst r0, r3
	beq _02010E50
	mov r0, #0xff
	lsl r1, r1, #8
	lsl r0, r0, #8
	and r1, r0
	lsl r0, r2, #0x18
	lsr r0, r0, #0x18
	orr r0, r1
	ldr r1, _02010E60 ; =0x04001042
	strh r0, [r1]
	mov r0, #0xc0
	strh r0, [r1, #4]
_02010E50:
	pop {r4, r5, r6, pc}
	nop
_02010E54: .word 0x04000006
_02010E58: .word 0x04000004
_02010E5C: .word 0x04001040
_02010E60: .word 0x04001042
	thumb_func_end sub_02010C38

	thumb_func_start sub_02010E64
sub_02010E64: ; 0x02010E64
	push {r4, r5, r6, lr}
	add r4, r1, #0
	add r5, r0, #0
	add r6, r2, #0
	cmp r4, #0
	beq _02010E7A
	cmp r4, #1
	beq _02010E7A
	cmp r4, #2
	beq _02010E94
	pop {r4, r5, r6, pc}
_02010E7A:
	ldr r1, _02010EC0 ; =0x00000604
	add r0, r3, #0
	bl sub_0201AA8C
	str r0, [r5]
	mov r0, #1
	str r0, [r5, #4]
	str r6, [r5, #8]
	mov r0, #6
	ldr r1, [r5]
	lsl r0, r0, #8
	str r4, [r1, r0]
	pop {r4, r5, r6, pc}
_02010E94:
	ldr r1, _02010EC4 ; =0x00000C08
	add r0, r3, #0
	bl sub_0201AA8C
	str r0, [r5]
	mov r0, #2
	str r0, [r5, #4]
	mov r0, #6
	mov r3, #0
	lsl r0, r0, #8
	str r6, [r5, #8]
	add r4, r3, #0
	add r1, r0, #4
_02010EAE:
	ldr r2, [r5]
	add r2, r2, r4
	str r3, [r2, r0]
	add r3, r3, #1
	add r4, r4, r1
	cmp r3, #2
	blt _02010EAE
	pop {r4, r5, r6, pc}
	nop
_02010EC0: .word 0x00000604
_02010EC4: .word 0x00000C08
	thumb_func_end sub_02010E64

	thumb_func_start sub_02010EC8
sub_02010EC8: ; 0x02010EC8
	ldr r3, _02010ECC ; =sub_02010ED0
	bx r3
	.align 2, 0
_02010ECC: .word sub_02010ED0
	thumb_func_end sub_02010EC8

	thumb_func_start sub_02010ED0
sub_02010ED0: ; 0x02010ED0
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4]
	bl sub_0201AB0C
	mov r0, #0
	str r0, [r4]
	pop {r4, pc}
	thumb_func_end sub_02010ED0

	thumb_func_start sub_02010EE0
sub_02010EE0: ; 0x02010EE0
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [r5, #4]
	add r4, r1, #0
	cmp r0, r4
	bgt _02010EF0
	bl GF_AssertFail
_02010EF0:
	ldr r0, _02010EFC ; =0x00000604
	ldr r1, [r5]
	mul r0, r4
	add r0, r1, r0
	pop {r3, r4, r5, pc}
	nop
_02010EFC: .word 0x00000604
	thumb_func_end sub_02010EE0

	thumb_func_start sub_02010F00
sub_02010F00: ; 0x02010F00
	push {r3, r4, r5, r6, r7, lr}
	add r5, r1, #0
	str r0, [sp]
	ldr r0, [r5, #4]
	mov r4, #0
	cmp r0, #0
	ble _02010F2C
	mov r7, #3
	lsl r7, r7, #8
	add r6, r7, #0
_02010F14:
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02010EE0
	add r1, r0, r6
	add r2, r7, #0
	bl sub_020E5AD8
	ldr r0, [r5, #4]
	add r4, r4, #1
	cmp r4, r0
	blt _02010F14
_02010F2C:
	ldr r0, [sp]
	bl sub_0200E390
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02010F00

	thumb_func_start sub_02010F34
sub_02010F34: ; 0x02010F34
	push {r4, r5, lr}
	sub sp, #0xc
	add r5, r1, #0
	add r4, r2, #0
	cmp r0, #0
	bne _02010F4C
	add r0, r5, #0
	mov r1, #0
	bl sub_02013424
	add sp, #0xc
	pop {r4, r5, pc}
_02010F4C:
	add r0, r5, #0
	mov r1, #1
	bl sub_02013424
	mov r2, #0
	add r0, r5, #0
	mov r1, #0x3f
	add r3, r2, #0
	str r4, [sp]
	bl sub_02013440
	mov r1, #0
	str r1, [sp]
	str r1, [sp, #4]
	add r0, r5, #0
	add r2, r1, #0
	add r3, r1, #0
	str r4, [sp, #8]
	bl sub_02013488
	add r0, r5, #0
	mov r1, #0x20
	mov r2, #0
	add r3, r4, #0
	bl sub_02013468
	add sp, #0xc
	pop {r4, r5, pc}
	thumb_func_end sub_02010F34

	thumb_func_start sub_02010F84
sub_02010F84: ; 0x02010F84
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r7, r2, #0
	ldr r2, [sp, #0x34]
	add r6, r0, #0
	add r5, r3, #0
	ldr r4, [sp, #0x20]
	cmp r2, #0
	bne _02010FC0
	add r0, r1, #0
	mov r1, #0
	add r2, r5, #0
	add r3, r4, #0
	bl sub_02013220
	add r0, r7, #0
	mov r1, #0
	add r2, r4, #0
	bl sub_020132A8
	str r5, [sp]
	ldr r0, [sp, #0x24]
	ldr r1, [sp, #0x28]
	ldr r2, [sp, #0x2c]
	ldr r3, [sp, #0x30]
	str r4, [sp, #4]
	bl sub_02013364
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_02010FC0:
	mov r2, #0
	str r4, [sp]
	bl sub_02013440
	add r0, r6, #0
	add r1, r7, #0
	mov r2, #0
	add r3, r4, #0
	bl sub_02013468
	ldr r0, [sp, #0x30]
	ldr r1, [sp, #0x24]
	str r0, [sp]
	str r5, [sp, #4]
	ldr r2, [sp, #0x28]
	ldr r3, [sp, #0x2c]
	add r0, r6, #0
	str r4, [sp, #8]
	bl sub_02013488
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_02010F84

	thumb_func_start sub_02010FEC
sub_02010FEC: ; 0x02010FEC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r5, r1, #0
	add r4, r2, #0
	add r6, r0, #0
	add r0, r5, #0
	add r1, r4, #0
	add r7, r3, #0
	bl sub_020132E8
	add r1, sp, #4
	strb r0, [r1, #1]
	ldrb r0, [r1, #1]
	strb r0, [r1, #3]
	add r0, r4, #0
	bl sub_0201333C
	add r1, sp, #4
	strb r0, [r1]
	ldrb r0, [r1]
	cmp r7, #0
	strb r0, [r1, #2]
	bne _0201103E
	ldrb r0, [r1, #2]
	mov r1, #0
	add r2, r5, #0
	lsl r0, r0, #0x1b
	lsr r0, r0, #0x1b
	add r3, r4, #0
	bl sub_02013220
	add r0, sp, #4
	ldrb r0, [r0, #3]
	mov r1, #0
	add r2, r4, #0
	lsl r0, r0, #0x1b
	lsr r0, r0, #0x1b
	bl sub_020132A8
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_0201103E:
	str r4, [sp]
	ldrb r1, [r1, #2]
	add r0, r6, #0
	mov r2, #0
	lsl r1, r1, #0x1b
	lsr r1, r1, #0x1b
	add r3, r5, #0
	bl sub_02013440
	add r1, sp, #4
	ldrb r1, [r1, #3]
	add r0, r6, #0
	mov r2, #0
	lsl r1, r1, #0x1b
	lsr r1, r1, #0x1b
	add r3, r4, #0
	bl sub_02013468
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02010FEC

	thumb_func_start sub_02011068
sub_02011068: ; 0x02011068
	push {r3, lr}
	cmp r3, #0
	bne _02011078
	add r0, r1, #0
	add r1, r2, #0
	bl sub_020131F4
	pop {r3, pc}
_02011078:
	bl sub_02013424
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_02011068

	thumb_func_start sub_02011080
sub_02011080: ; 0x02011080
	push {r3, r4, r5, r6, r7, lr}
	add r4, r2, #0
	mov r2, #0xc3
	add r6, r1, #0
	mov r1, #0
	lsl r2, r2, #2
	add r5, r0, #0
	add r7, r3, #0
	bl sub_020E5B44
	cmp r4, #1
	bne _020110AA
	mov r0, #6
	lsl r0, r0, #6
	str r7, [r5, r0]
	mov r0, #0xc2
	lsl r0, r0, #2
	strb r4, [r5, r0]
	add r0, r0, #1
	strb r6, [r5, r0]
	pop {r3, r4, r5, r6, r7, pc}
_020110AA:
	mov r0, #6
	lsl r0, r0, #6
	str r7, [r5, r0]
	mov r0, #0xc1
	ldr r1, [sp, #0x18]
	lsl r0, r0, #2
	str r1, [r5, r0]
	add r1, r0, #4
	strb r4, [r5, r1]
	add r0, r0, #5
	strb r6, [r5, r0]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02011080

	thumb_func_start sub_020110C4
sub_020110C4: ; 0x020110C4
	ldr r3, _020110D0 ; =sub_0200E374
	add r1, r0, #0
	ldr r0, _020110D4 ; =sub_02011104
	ldr r2, _020110D8 ; =0x000003FF
	bx r3
	nop
_020110D0: .word sub_0200E374
_020110D4: .word sub_02011104
_020110D8: .word 0x000003FF
	thumb_func_end sub_020110C4

	thumb_func_start sub_020110DC
sub_020110DC: ; 0x020110DC
	push {r3, lr}
	ldr r3, _020110EC ; =0x00000309
	str r2, [sp]
	ldrb r3, [r1, r3]
	ldr r2, _020110F0 ; =sub_02011130
	bl sub_0200FF88
	pop {r3, pc}
	.align 2, 0
_020110EC: .word 0x00000309
_020110F0: .word sub_02011130
	thumb_func_end sub_020110DC

	thumb_func_start sub_020110F4
sub_020110F4: ; 0x020110F4
	ldr r3, _020110FC ; =0x00000309
	ldrb r1, [r1, r3]
	ldr r3, _02011100 ; =sub_0200FFB4
	bx r3
	.align 2, 0
_020110FC: .word 0x00000309
_02011100: .word sub_0200FFB4
	thumb_func_end sub_020110F4

	thumb_func_start sub_02011104
sub_02011104: ; 0x02011104
	push {r3, r4, r5, r6, r7, lr}
	mov r7, #0xc0
	add r6, r7, #0
	str r0, [sp]
	add r5, r1, #0
	mov r4, #0
	add r6, #0xc4
_02011112:
	add r0, r5, #0
	add r0, #0xc0
	add r1, r5, #0
	add r2, r7, #0
	bl sub_020E5AD8
	add r4, r4, #1
	add r5, r5, r6
	cmp r4, #2
	blt _02011112
	ldr r0, [sp]
	bl sub_0200E390
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02011104

	thumb_func_start sub_02011130
sub_02011130: ; 0x02011130
	push {r3, r4, r5, lr}
	add r4, r0, #0
	bne _0201113A
	bl GF_AssertFail
_0201113A:
	ldr r0, _02011428 ; =0x04000006
	ldrh r0, [r0]
	cmp r0, #0xc0
	bge _020111BC
	add r0, r0, #1
	cmp r0, #0xbf
	ble _0201114A
	sub r0, #0xc0
_0201114A:
	mov r2, #0xc2
	lsl r2, r2, #2
	ldrb r1, [r4, r2]
	cmp r1, #1
	beq _02011156
	b _020112F0
_02011156:
	add r0, r4, r0
	add r0, #0xc0
	ldrb r0, [r0]
	cmp r0, #0
	bne _02011226
	add r0, r2, #1
	ldrb r0, [r4, r0]
	cmp r0, #0
	ldr r0, _0201142C ; =0x04000004
	bne _02011186
	ldrh r2, [r0]
	mov r1, #2
	tst r1, r2
	beq _020111A0
	add r0, #0x46
	ldrh r2, [r0]
	mov r1, #0x3f
	bic r2, r1
	mov r1, #0x3f
	orr r2, r1
	mov r1, #0x20
	orr r1, r2
	strh r1, [r0]
	b _020111A0
_02011186:
	ldrh r1, [r0]
	mov r0, #2
	tst r0, r1
	beq _020111A0
	ldr r1, _02011430 ; =0x0400104A
	mov r0, #0x3f
	ldrh r2, [r1]
	bic r2, r0
	mov r0, #0x3f
	orr r2, r0
	mov r0, #0x20
	orr r0, r2
	strh r0, [r1]
_020111A0:
	ldr r0, _02011434 ; =0x00000309
	ldrb r1, [r4, r0]
	mov r0, #6
	lsl r0, r0, #6
	ldr r0, [r4, r0]
	cmp r0, #0
	bne _020111EC
	cmp r1, #0
	bne _020111D0
	ldr r2, _0201142C ; =0x04000004
	mov r0, #2
	ldrh r1, [r2]
	tst r0, r1
	bne _020111BE
_020111BC:
	b _02011634
_020111BE:
	add r2, #0x44
	ldrh r1, [r2]
	mov r0, #0x3f
	bic r1, r0
	mov r0, #0x20
	orr r1, r0
	orr r0, r1
	strh r0, [r2]
	pop {r3, r4, r5, pc}
_020111D0:
	ldr r0, _0201142C ; =0x04000004
	ldrh r1, [r0]
	mov r0, #2
	tst r0, r1
	beq _020112D8
	ldr r1, _02011438 ; =0x04001048
	mov r0, #0x3f
	ldrh r2, [r1]
	bic r2, r0
	mov r0, #0x20
	orr r2, r0
	orr r0, r2
	strh r0, [r1]
	pop {r3, r4, r5, pc}
_020111EC:
	cmp r1, #0
	ldr r0, _0201142C ; =0x04000004
	bne _0201120C
	ldrh r1, [r0]
	mov r2, #2
	tst r1, r2
	beq _020112D8
	add r0, #0x44
	ldrh r3, [r0]
	ldr r1, _0201143C ; =0xFFFFC0FF
	and r3, r1
	lsl r1, r2, #0xc
	orr r3, r1
	orr r1, r3
	strh r1, [r0]
	pop {r3, r4, r5, pc}
_0201120C:
	ldrh r1, [r0]
	mov r0, #2
	tst r0, r1
	beq _020112D8
	ldr r2, _02011438 ; =0x04001048
	ldr r0, _0201143C ; =0xFFFFC0FF
	ldrh r1, [r2]
	and r1, r0
	lsr r0, r2, #0xd
	orr r1, r0
	orr r0, r1
	strh r0, [r2]
	pop {r3, r4, r5, pc}
_02011226:
	add r0, r2, #1
	ldrb r0, [r4, r0]
	cmp r0, #0
	ldr r0, _0201142C ; =0x04000004
	bne _0201124A
	ldrh r2, [r0]
	mov r1, #2
	tst r1, r2
	beq _02011262
	add r0, #0x46
	ldrh r2, [r0]
	mov r1, #0x3f
	bic r2, r1
	mov r1, #0x20
	orr r2, r1
	orr r1, r2
	strh r1, [r0]
	b _02011262
_0201124A:
	ldrh r1, [r0]
	mov r0, #2
	tst r0, r1
	beq _02011262
	ldr r1, _02011430 ; =0x0400104A
	mov r0, #0x3f
	ldrh r2, [r1]
	bic r2, r0
	mov r0, #0x20
	orr r2, r0
	orr r0, r2
	strh r0, [r1]
_02011262:
	ldr r0, _02011434 ; =0x00000309
	ldrb r1, [r4, r0]
	mov r0, #6
	lsl r0, r0, #6
	ldr r0, [r4, r0]
	cmp r0, #0
	ldr r0, _0201142C ; =0x04000004
	bne _020112AE
	cmp r1, #0
	bne _02011292
	ldrh r2, [r0]
	mov r1, #2
	tst r1, r2
	beq _020112D8
	add r0, #0x44
	ldrh r2, [r0]
	mov r1, #0x3f
	bic r2, r1
	mov r1, #0x3f
	orr r2, r1
	mov r1, #0x20
	orr r1, r2
	strh r1, [r0]
	pop {r3, r4, r5, pc}
_02011292:
	ldrh r1, [r0]
	mov r0, #2
	tst r0, r1
	beq _020112D8
	ldr r1, _02011438 ; =0x04001048
	mov r0, #0x3f
	ldrh r2, [r1]
	bic r2, r0
	mov r0, #0x3f
	orr r2, r0
	mov r0, #0x20
	orr r0, r2
	strh r0, [r1]
	pop {r3, r4, r5, pc}
_020112AE:
	cmp r1, #0
	bne _020112D0
	ldrh r1, [r0]
	mov r2, #2
	tst r1, r2
	beq _020112D8
	add r0, #0x44
	ldrh r3, [r0]
	ldr r1, _0201143C ; =0xFFFFC0FF
	and r3, r1
	mov r1, #0x3f
	lsl r1, r1, #8
	orr r3, r1
	lsl r1, r2, #0xc
	orr r1, r3
	strh r1, [r0]
	pop {r3, r4, r5, pc}
_020112D0:
	ldrh r1, [r0]
	mov r0, #2
	tst r0, r1
	bne _020112DA
_020112D8:
	b _02011634
_020112DA:
	ldr r2, _02011438 ; =0x04001048
	ldr r0, _0201143C ; =0xFFFFC0FF
	ldrh r1, [r2]
	and r1, r0
	mov r0, #0x3f
	lsl r0, r0, #8
	orr r1, r0
	lsr r0, r2, #0xd
	orr r0, r1
	strh r0, [r2]
	pop {r3, r4, r5, pc}
_020112F0:
	add r1, r4, r0
	add r1, #0xc0
	ldrb r1, [r1]
	cmp r1, #0
	bne _020113BC
	add r1, r2, #1
	ldrb r1, [r4, r1]
	cmp r1, #0
	ldr r1, _0201142C ; =0x04000004
	bne _02011320
	ldrh r3, [r1]
	mov r2, #2
	tst r2, r3
	beq _0201133A
	add r1, #0x46
	ldrh r3, [r1]
	mov r2, #0x3f
	bic r3, r2
	mov r2, #0x3f
	orr r3, r2
	mov r2, #0x20
	orr r2, r3
	strh r2, [r1]
	b _0201133A
_02011320:
	ldrh r2, [r1]
	mov r1, #2
	tst r1, r2
	beq _0201133A
	ldr r2, _02011430 ; =0x0400104A
	mov r1, #0x3f
	ldrh r3, [r2]
	bic r3, r1
	mov r1, #0x3f
	orr r3, r1
	mov r1, #0x20
	orr r1, r3
	strh r1, [r2]
_0201133A:
	ldr r1, _02011434 ; =0x00000309
	ldrb r2, [r4, r1]
	mov r1, #6
	lsl r1, r1, #6
	ldr r1, [r4, r1]
	cmp r1, #0
	ldr r1, _0201142C ; =0x04000004
	bne _02011382
	cmp r2, #0
	bne _02011368
	ldrh r3, [r1]
	mov r2, #2
	tst r2, r3
	beq _0201138E
	add r1, #0x44
	ldrh r3, [r1]
	mov r2, #0x3f
	bic r3, r2
	mov r2, #0x20
	orr r3, r2
	orr r2, r3
	strh r2, [r1]
	b _0201149A
_02011368:
	ldrh r2, [r1]
	mov r1, #2
	tst r1, r2
	beq _0201138E
	ldr r2, _02011438 ; =0x04001048
	mov r1, #0x3f
	ldrh r3, [r2]
	bic r3, r1
	mov r1, #0x20
	orr r3, r1
	orr r1, r3
	strh r1, [r2]
	b _0201149A
_02011382:
	cmp r2, #0
	bne _020113A2
	ldrh r2, [r1]
	mov r3, #2
	tst r2, r3
	bne _02011390
_0201138E:
	b _0201149A
_02011390:
	add r1, #0x44
	ldrh r5, [r1]
	ldr r2, _0201143C ; =0xFFFFC0FF
	and r5, r2
	lsl r2, r3, #0xc
	orr r5, r2
	orr r2, r5
	strh r2, [r1]
	b _0201149A
_020113A2:
	ldrh r2, [r1]
	mov r1, #2
	tst r1, r2
	beq _0201149A
	ldr r3, _02011438 ; =0x04001048
	ldr r1, _0201143C ; =0xFFFFC0FF
	ldrh r2, [r3]
	and r2, r1
	lsr r1, r3, #0xd
	orr r2, r1
	orr r1, r2
	strh r1, [r3]
	b _0201149A
_020113BC:
	add r1, r2, #1
	ldrb r1, [r4, r1]
	cmp r1, #0
	ldr r1, _0201142C ; =0x04000004
	bne _020113E0
	ldrh r3, [r1]
	mov r2, #2
	tst r2, r3
	beq _020113F8
	add r1, #0x46
	ldrh r3, [r1]
	mov r2, #0x3f
	bic r3, r2
	mov r2, #0x20
	orr r3, r2
	orr r2, r3
	strh r2, [r1]
	b _020113F8
_020113E0:
	ldrh r2, [r1]
	mov r1, #2
	tst r1, r2
	beq _020113F8
	ldr r2, _02011430 ; =0x0400104A
	mov r1, #0x3f
	ldrh r3, [r2]
	bic r3, r1
	mov r1, #0x20
	orr r3, r1
	orr r1, r3
	strh r1, [r2]
_020113F8:
	ldr r1, _02011434 ; =0x00000309
	ldrb r2, [r4, r1]
	mov r1, #6
	lsl r1, r1, #6
	ldr r1, [r4, r1]
	cmp r1, #0
	ldr r1, _0201142C ; =0x04000004
	bne _0201145C
	cmp r2, #0
	bne _02011440
	ldrh r3, [r1]
	mov r2, #2
	tst r2, r3
	beq _0201149A
	add r1, #0x44
	ldrh r3, [r1]
	mov r2, #0x3f
	bic r3, r2
	mov r2, #0x3f
	orr r3, r2
	mov r2, #0x20
	orr r2, r3
	strh r2, [r1]
	b _0201149A
	.align 2, 0
_02011428: .word 0x04000006
_0201142C: .word 0x04000004
_02011430: .word 0x0400104A
_02011434: .word 0x00000309
_02011438: .word 0x04001048
_0201143C: .word 0xFFFFC0FF
_02011440:
	ldrh r2, [r1]
	mov r1, #2
	tst r1, r2
	beq _0201149A
	ldr r2, _02011638 ; =0x04001048
	mov r1, #0x3f
	ldrh r3, [r2]
	bic r3, r1
	mov r1, #0x3f
	orr r3, r1
	mov r1, #0x20
	orr r1, r3
	strh r1, [r2]
	b _0201149A
_0201145C:
	cmp r2, #0
	bne _0201147E
	ldrh r2, [r1]
	mov r3, #2
	tst r2, r3
	beq _0201149A
	add r1, #0x44
	ldrh r5, [r1]
	ldr r2, _0201163C ; =0xFFFFC0FF
	and r5, r2
	mov r2, #0x3f
	lsl r2, r2, #8
	orr r5, r2
	lsl r2, r3, #0xc
	orr r2, r5
	strh r2, [r1]
	b _0201149A
_0201147E:
	ldrh r2, [r1]
	mov r1, #2
	tst r1, r2
	beq _0201149A
	ldr r3, _02011638 ; =0x04001048
	ldr r1, _0201163C ; =0xFFFFC0FF
	ldrh r2, [r3]
	and r2, r1
	mov r1, #0x3f
	lsl r1, r1, #8
	orr r2, r1
	lsr r1, r3, #0xd
	orr r1, r2
	strh r1, [r3]
_0201149A:
	mov r1, #0x61
	lsl r1, r1, #2
	add r1, r4, r1
	add r0, r1, r0
	add r0, #0xc0
	ldrb r0, [r0]
	cmp r0, #0
	ldr r0, _02011640 ; =0x00000309
	bne _02011570
	ldrb r0, [r4, r0]
	cmp r0, #0
	ldr r0, _02011644 ; =0x04000004
	bne _020114D0
	ldrh r3, [r0]
	mov r2, #2
	tst r2, r3
	beq _020114EA
	add r0, #0x46
	ldrh r3, [r0]
	mov r2, #0x3f
	bic r3, r2
	mov r2, #0x3f
	orr r3, r2
	mov r2, #0x20
	orr r2, r3
	strh r2, [r0]
	b _020114EA
_020114D0:
	ldrh r2, [r0]
	mov r0, #2
	tst r0, r2
	beq _020114EA
	ldr r2, _02011648 ; =0x0400104A
	mov r0, #0x3f
	ldrh r3, [r2]
	bic r3, r0
	mov r0, #0x3f
	orr r3, r0
	mov r0, #0x20
	orr r0, r3
	strh r0, [r2]
_020114EA:
	ldr r0, _02011640 ; =0x00000309
	ldrb r2, [r4, r0]
	mov r0, #6
	lsl r0, r0, #6
	ldr r0, [r1, r0]
	cmp r0, #0
	bne _02011536
	cmp r2, #0
	bne _02011518
	ldr r2, _02011644 ; =0x04000004
	mov r0, #2
	ldrh r1, [r2]
	tst r0, r1
	beq _02011522
	add r2, #0x44
	ldrh r1, [r2]
	mov r0, #0x3f
	bic r1, r0
	mov r0, #0x20
	orr r1, r0
	orr r0, r1
	strh r0, [r2]
	pop {r3, r4, r5, pc}
_02011518:
	ldr r0, _02011644 ; =0x04000004
	ldrh r1, [r0]
	mov r0, #2
	tst r0, r1
	bne _02011524
_02011522:
	b _02011634
_02011524:
	ldr r1, _02011638 ; =0x04001048
	mov r0, #0x3f
	ldrh r2, [r1]
	bic r2, r0
	mov r0, #0x20
	orr r2, r0
	orr r0, r2
	strh r0, [r1]
	pop {r3, r4, r5, pc}
_02011536:
	cmp r2, #0
	ldr r0, _02011644 ; =0x04000004
	bne _02011556
	ldrh r1, [r0]
	mov r2, #2
	tst r1, r2
	beq _02011634
	add r0, #0x44
	ldrh r3, [r0]
	ldr r1, _0201163C ; =0xFFFFC0FF
	and r3, r1
	lsl r1, r2, #0xc
	orr r3, r1
	orr r1, r3
	strh r1, [r0]
	pop {r3, r4, r5, pc}
_02011556:
	ldrh r1, [r0]
	mov r0, #2
	tst r0, r1
	beq _02011634
	ldr r2, _02011638 ; =0x04001048
	ldr r0, _0201163C ; =0xFFFFC0FF
	ldrh r1, [r2]
	and r1, r0
	lsr r0, r2, #0xd
	orr r1, r0
	orr r0, r1
	strh r0, [r2]
	pop {r3, r4, r5, pc}
_02011570:
	ldrb r0, [r4, r0]
	cmp r0, #0
	ldr r0, _02011644 ; =0x04000004
	bne _02011592
	ldrh r3, [r0]
	mov r2, #2
	tst r2, r3
	beq _020115AA
	add r0, #0x46
	ldrh r3, [r0]
	mov r2, #0x3f
	bic r3, r2
	mov r2, #0x20
	orr r3, r2
	orr r2, r3
	strh r2, [r0]
	b _020115AA
_02011592:
	ldrh r2, [r0]
	mov r0, #2
	tst r0, r2
	beq _020115AA
	ldr r2, _02011648 ; =0x0400104A
	mov r0, #0x3f
	ldrh r3, [r2]
	bic r3, r0
	mov r0, #0x20
	orr r3, r0
	orr r0, r3
	strh r0, [r2]
_020115AA:
	ldr r0, _02011640 ; =0x00000309
	ldrb r2, [r4, r0]
	mov r0, #6
	lsl r0, r0, #6
	ldr r0, [r1, r0]
	cmp r0, #0
	ldr r0, _02011644 ; =0x04000004
	bne _020115F6
	cmp r2, #0
	bne _020115DA
	ldrh r2, [r0]
	mov r1, #2
	tst r1, r2
	beq _02011634
	add r0, #0x44
	ldrh r2, [r0]
	mov r1, #0x3f
	bic r2, r1
	mov r1, #0x3f
	orr r2, r1
	mov r1, #0x20
	orr r1, r2
	strh r1, [r0]
	pop {r3, r4, r5, pc}
_020115DA:
	ldrh r1, [r0]
	mov r0, #2
	tst r0, r1
	beq _02011634
	ldr r1, _02011638 ; =0x04001048
	mov r0, #0x3f
	ldrh r2, [r1]
	bic r2, r0
	mov r0, #0x3f
	orr r2, r0
	mov r0, #0x20
	orr r0, r2
	strh r0, [r1]
	pop {r3, r4, r5, pc}
_020115F6:
	cmp r2, #0
	bne _02011618
	ldrh r1, [r0]
	mov r2, #2
	tst r1, r2
	beq _02011634
	add r0, #0x44
	ldrh r3, [r0]
	ldr r1, _0201163C ; =0xFFFFC0FF
	and r3, r1
	mov r1, #0x3f
	lsl r1, r1, #8
	orr r3, r1
	lsl r1, r2, #0xc
	orr r1, r3
	strh r1, [r0]
	pop {r3, r4, r5, pc}
_02011618:
	ldrh r1, [r0]
	mov r0, #2
	tst r0, r1
	beq _02011634
	ldr r2, _02011638 ; =0x04001048
	ldr r0, _0201163C ; =0xFFFFC0FF
	ldrh r1, [r2]
	and r1, r0
	mov r0, #0x3f
	lsl r0, r0, #8
	orr r1, r0
	lsr r0, r2, #0xd
	orr r0, r1
	strh r0, [r2]
_02011634:
	pop {r3, r4, r5, pc}
	nop
_02011638: .word 0x04001048
_0201163C: .word 0xFFFFC0FF
_02011640: .word 0x00000309
_02011644: .word 0x04000004
_02011648: .word 0x0400104A
	thumb_func_end sub_02011130

	thumb_func_start sub_0201164C
sub_0201164C: ; 0x0201164C
	push {r4, r5, r6, lr}
	sub sp, #8
	add r5, r0, #0
	ldr r0, [r5, #0x20]
	add r6, r1, #0
	mov r1, #0x4c
	bl sub_0201AA8C
	str r0, [r5, #0x14]
	add r4, r0, #0
	ldr r0, [r5, #0x10]
	add r1, r6, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	add r0, r4, #0
	bl sub_020117A0
	ldrb r0, [r6, #8]
	cmp r0, #0
	ldr r0, [r5, #0x18]
	bne _02011688
	ldr r2, [r4, #0x30]
	ldr r3, [r4, #0x44]
	mov r1, #1
	bl sub_02011068
	b _02011692
_02011688:
	ldr r2, [r4, #0x30]
	ldr r3, [r4, #0x44]
	mov r1, #2
	bl sub_02011068
_02011692:
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0201164C

	thumb_func_start sub_0201169C
sub_0201169C: ; 0x0201169C
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	mov r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _020116B4
	cmp r0, #2
	beq _020116D0
	cmp r0, #3
	beq _020116E4
	b _020116E6
_020116B4:
	add r0, r4, #0
	bl sub_020117FC
	cmp r0, #1
	bne _020116E6
	ldr r0, [r4, #0x44]
	ldr r1, [r5, #0x18]
	ldr r2, [r5, #0x10]
	bl sub_02010F34
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _020116E6
_020116D0:
	add r0, r4, #0
	bl sub_0201AB0C
	add r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	mov r6, #1
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _020116E6
_020116E4:
	mov r6, #1
_020116E6:
	add r0, r6, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0201169C

	thumb_func_start sub_020116EC
sub_020116EC: ; 0x020116EC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r5, r0, #0
	ldr r0, [r5, #0x20]
	add r6, r1, #0
	mov r1, #0x98
	add r7, r2, #0
	bl sub_0201AA8C
	str r0, [r5, #0x14]
	add r4, r0, #0
	ldr r0, [r5, #0x10]
	add r1, r6, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	add r0, r4, #0
	bl sub_020117A0
	ldr r0, [r5, #0x10]
	add r1, r7, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	add r0, r4, #0
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	add r0, #0x4c
	bl sub_020117A0
	ldr r0, [r5, #0x18]
	ldr r2, [r5, #0x10]
	ldr r3, [r4, #0x44]
	mov r1, #3
	bl sub_02011068
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_020116EC

	thumb_func_start sub_02011744
sub_02011744: ; 0x02011744
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	mov r7, #0
	ldr r6, [r5, #0x14]
	cmp r0, #1
	beq _0201175C
	cmp r0, #2
	beq _02011784
	cmp r0, #3
	beq _02011798
	b _0201179A
_0201175C:
	add r0, r6, #0
	bl sub_020117FC
	add r4, r0, #0
	add r0, r6, #0
	add r0, #0x4c
	bl sub_020117FC
	add r0, r4, r0
	cmp r0, #2
	bne _0201179A
	ldr r0, [r6, #0x44]
	ldr r1, [r5, #0x18]
	ldr r2, [r5, #0x10]
	bl sub_02010F34
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _0201179A
_02011784:
	add r0, r6, #0
	bl sub_0201AB0C
	add r0, r7, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	mov r7, #1
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _0201179A
_02011798:
	mov r7, #1
_0201179A:
	add r0, r7, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02011744

	thumb_func_start sub_020117A0
sub_020117A0: ; 0x020117A0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	add r4, r1, #0
	add r1, r4, #4
	add r5, r0, #0
	add r6, r2, #0
	str r1, [sp]
	add r1, r5, #0
	add r2, r5, #0
	add r7, r3, #0
	add r1, #0x20
	add r2, #0x10
	add r3, r4, #0
	str r6, [sp, #4]
	bl sub_02010AB0
	ldr r1, [sp, #0x30]
	str r1, [r5, #0x30]
	ldrb r0, [r4, #8]
	str r0, [r5, #0x34]
	str r6, [r5, #0x38]
	str r7, [r5, #0x3c]
	mov r0, #0
	str r0, [r5, #0x40]
	ldr r0, [sp, #0x34]
	str r0, [r5, #0x48]
	ldrb r2, [r4, #0xb]
	str r2, [r5, #0x44]
	str r1, [sp]
	ldrb r1, [r4]
	str r1, [sp, #4]
	ldrb r1, [r4, #1]
	str r1, [sp, #8]
	ldrb r1, [r4, #2]
	str r1, [sp, #0xc]
	ldrb r1, [r4, #3]
	str r1, [sp, #0x10]
	ldr r1, [r5, #0x44]
	str r1, [sp, #0x14]
	ldrb r1, [r4, #9]
	ldrb r2, [r4, #0xa]
	ldrb r3, [r4, #8]
	bl sub_02010F84
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_020117A0

	thumb_func_start sub_020117FC
sub_020117FC: ; 0x020117FC
	push {r3, r4, lr}
	sub sp, #0xc
	add r4, r0, #0
	ldr r1, [r4, #0x40]
	add r2, r1, #1
	str r2, [r4, #0x40]
	ldr r1, [r4, #0x3c]
	cmp r2, r1
	blt _0201187C
	mov r1, #0
	str r1, [r4, #0x40]
	ldr r1, [r4, #0x38]
	sub r1, r1, #1
	cmp r1, #0
	ble _02011826
	str r1, [r4, #0x38]
	add r1, r4, #0
	add r1, #0x10
	bl sub_02010A8C
	b _02011844
_02011826:
	ldr r0, [r4, #0x2c]
	str r0, [sp]
	ldr r0, [r4, #0x34]
	str r0, [sp, #4]
	ldr r0, [r4, #0x30]
	str r0, [sp, #8]
	ldr r0, [r4, #0x48]
	ldr r1, [r4, #0x20]
	ldr r2, [r4, #0x24]
	ldr r3, [r4, #0x28]
	bl sub_02013488
	add sp, #0xc
	mov r0, #1
	pop {r3, r4, pc}
_02011844:
	ldr r1, [r4, #0xc]
	asr r0, r1, #6
	lsr r0, r0, #0x19
	add r0, r1, r0
	asr r0, r0, #7
	str r0, [sp]
	ldr r0, [r4, #0x34]
	str r0, [sp, #4]
	ldr r0, [r4, #0x30]
	str r0, [sp, #8]
	ldr r2, [r4]
	ldr r3, [r4, #4]
	asr r1, r2, #6
	lsr r1, r1, #0x19
	add r1, r2, r1
	ldr r0, [r4, #0x48]
	asr r2, r3, #6
	lsr r2, r2, #0x19
	add r2, r3, r2
	ldr r4, [r4, #8]
	asr r1, r1, #7
	asr r3, r4, #6
	lsr r3, r3, #0x19
	add r3, r4, r3
	asr r2, r2, #7
	asr r3, r3, #7
	bl sub_02013488
_0201187C:
	mov r0, #0
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_020117FC

	thumb_func_start sub_02011884
sub_02011884: ; 0x02011884
	push {r3, r4, r5, lr}
	sub sp, #0x10
	add r5, r0, #0
	ldr r0, [r5, #0x20]
	add r4, r1, #0
	mov r1, #0x38
	bl sub_0201AA8C
	str r0, [r5, #0x14]
	ldr r0, [r5, #0x10]
	add r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	bl sub_02011918
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02011884

	thumb_func_start sub_020118BC
sub_020118BC: ; 0x020118BC
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	mov r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _020118D4
	cmp r0, #2
	beq _020118F0
	cmp r0, #3
	beq _0201190A
	b _0201190E
_020118D4:
	add r0, r4, #0
	bl sub_020119F4
	cmp r0, #1
	bne _02011912
	ldr r0, [r4, #0x2c]
	ldr r1, [r4, #0x30]
	ldr r2, [r5, #0x10]
	bl sub_02010F34
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _02011912
_020118F0:
	add r0, r4, #0
	bl sub_02010EC8
	ldr r0, [r5, #0x14]
	bl sub_0201AB0C
	add r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	mov r6, #1
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _02011912
_0201190A:
	mov r6, #1
	b _02011912
_0201190E:
	bl GF_AssertFail
_02011912:
	add r0, r6, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_020118BC

	thumb_func_start sub_02011918
sub_02011918: ; 0x02011918
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	add r5, r0, #0
	add r4, r1, #0
	mov r0, #0
	mov r1, #2
	ldrsh r0, [r4, r0]
	ldrsh r1, [r4, r1]
	str r2, [sp, #0x18]
	str r3, [sp, #0x1c]
	ldr r6, [sp, #0x38]
	ldr r7, [sp, #0x3c]
	bl sub_02010A6C
	str r0, [sp, #0x20]
	ldrb r1, [r4, #8]
	ldr r3, [sp, #0x44]
	add r0, r5, #0
	add r2, r6, #0
	bl sub_02010E64
	mov r0, #0
	ldrsh r1, [r4, r0]
	lsl r1, r1, #7
	str r1, [r5, #0xc]
	mov r1, #4
	ldrsh r1, [r4, r1]
	str r1, [r5, #0x10]
	mov r1, #6
	ldrsh r1, [r4, r1]
	str r1, [r5, #0x14]
	ldr r1, [sp, #0x20]
	str r1, [r5, #0x18]
	ldr r1, [sp, #0x18]
	str r1, [r5, #0x1c]
	ldr r1, [sp, #0x1c]
	str r1, [r5, #0x20]
	str r0, [r5, #0x24]
	ldr r0, [sp, #0x40]
	str r7, [r5, #0x30]
	str r0, [r5, #0x34]
	ldr r0, [sp, #0x44]
	str r0, [r5, #0x28]
	ldrb r0, [r4, #0xb]
	str r0, [r5, #0x2c]
	add r0, r5, #0
	bl sub_02011AD8
	ldr r0, _020119E8 ; =sub_02010F00
	ldr r2, _020119EC ; =0x000003FF
	add r1, r5, #0
	bl sub_0200E374
	add r0, r5, #0
	mov r1, #0
	bl sub_02010EE0
	mov r1, #3
	str r6, [sp]
	lsl r1, r1, #8
	ldrsh r1, [r0, r1]
	str r1, [sp, #4]
	mov r1, #0
	str r1, [sp, #8]
	mov r1, #0x12
	lsl r1, r1, #6
	ldrsh r0, [r0, r1]
	str r0, [sp, #0xc]
	mov r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x2c]
	str r0, [sp, #0x14]
	ldrb r1, [r4, #9]
	ldrb r2, [r4, #0xa]
	ldrb r3, [r4, #8]
	add r0, r7, #0
	bl sub_02010F84
	ldrb r0, [r4, #8]
	cmp r0, #0
	bne _020119C8
	ldr r3, [r5, #0x2c]
	add r0, r7, #0
	mov r1, #1
	add r2, r6, #0
	bl sub_02011068
	b _020119D4
_020119C8:
	ldr r3, [r5, #0x2c]
	add r0, r7, #0
	mov r1, #2
	add r2, r6, #0
	bl sub_02011068
_020119D4:
	ldr r0, [sp, #0x44]
	ldr r2, _020119F0 ; =sub_02010C38
	str r0, [sp]
	ldr r0, [r5, #0x34]
	add r1, r5, #0
	add r3, r6, #0
	bl sub_0200FF88
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_020119E8: .word sub_02010F00
_020119EC: .word 0x000003FF
_020119F0: .word sub_02010C38
	thumb_func_end sub_02011918

	thumb_func_start sub_020119F4
sub_020119F4: ; 0x020119F4
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0x24]
	add r2, r1, #1
	str r2, [r4, #0x24]
	ldr r1, [r4, #0x20]
	cmp r2, r1
	blt _02011A38
	mov r1, #0
	str r1, [r4, #0x24]
	ldr r1, [r4, #0x1c]
	sub r1, r1, #1
	cmp r1, #0
	ble _02011A2A
	str r1, [r4, #0x1c]
	ldr r2, [r4, #0xc]
	ldr r1, [r4, #0x18]
	add r1, r2, r1
	str r1, [r4, #0xc]
	bl sub_02011AD8
	ldr r0, _02011A3C ; =sub_02010F00
	ldr r2, _02011A40 ; =0x000003FF
	add r1, r4, #0
	bl sub_0200E374
	b _02011A38
_02011A2A:
	ldr r0, [r4, #0x34]
	ldr r1, [r4, #8]
	ldr r2, [r4, #0x28]
	bl sub_0200FFB4
	mov r0, #1
	pop {r4, pc}
_02011A38:
	mov r0, #0
	pop {r4, pc}
	.align 2, 0
_02011A3C: .word sub_02010F00
_02011A40: .word 0x000003FF
	thumb_func_end sub_020119F4

	thumb_func_start sub_02011A44
sub_02011A44: ; 0x02011A44
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r1, [sp]
	asr r1, r0, #6
	lsr r1, r1, #0x19
	add r1, r0, r1
	asr r1, r1, #7
	ldr r5, [sp, #0x20]
	ldr r4, [sp, #0x24]
	sub r0, r3, r2
	bpl _02011A5C
	neg r0, r0
_02011A5C:
	cmp r0, r1
	blt _02011A6A
	mov r0, #0
	str r0, [r5]
	add sp, #0xc
	str r0, [r4]
	pop {r4, r5, r6, r7, pc}
_02011A6A:
	lsl r0, r0, #0xc
	str r0, [sp, #4]
	asr r7, r0, #0x1f
	lsl r0, r1, #0xc
	asr r1, r0, #0x1f
	add r2, r0, #0
	add r3, r1, #0
	bl sub_020F2948
	str r0, [sp, #8]
	ldr r0, [sp, #4]
	add r6, r1, #0
	add r1, r7, #0
	add r2, r0, #0
	add r3, r7, #0
	bl sub_020F2948
	add r2, r0, #0
	add r3, r1, #0
	mov r0, #2
	ldr r1, [sp, #8]
	mov r7, #0
	lsl r0, r0, #0xa
	add r0, r1, r0
	adc r6, r7
	lsl r1, r6, #0x14
	lsr r0, r0, #0xc
	orr r0, r1
	mov r1, #2
	lsl r1, r1, #0xa
	add r2, r2, r1
	adc r3, r7
	lsl r1, r3, #0x14
	lsr r2, r2, #0xc
	orr r2, r1
	sub r0, r0, r2
	bl sub_020CCBEC
	asr r2, r0, #0xc
	ldr r0, [sp]
	sub r0, r0, r2
	str r0, [r5]
	bpl _02011AC4
	add r0, r7, #0
	str r0, [r5]
_02011AC4:
	ldr r1, [r5]
	lsl r0, r2, #1
	add r0, r1, r0
	str r0, [r4]
	cmp r0, #0xff
	ble _02011AD4
	mov r0, #0xff
	str r0, [r4]
_02011AD4:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_02011A44

	thumb_func_start sub_02011AD8
sub_02011AD8: ; 0x02011AD8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	mov r1, #0
	add r5, r0, #0
	bl sub_02010EE0
	add r7, r0, #0
	mov r4, #0
	add r6, r7, #0
_02011AEA:
	ldr r2, [r5, #0x14]
	cmp r4, r2
	bgt _02011B04
	add r0, sp, #0xc
	str r0, [sp]
	add r0, sp, #8
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	ldr r1, [r5, #0x10]
	add r3, r4, #0
	bl sub_02011A44
	b _02011B3E
_02011B04:
	lsl r0, r2, #1
	cmp r4, r0
	bgt _02011B2C
	sub r0, r0, r4
	lsl r0, r0, #1
	add r1, r7, r0
	mov r0, #3
	lsl r0, r0, #8
	ldrsh r0, [r1, r0]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	lsl r0, r0, #1
	sub r0, r0, r4
	lsl r0, r0, #1
	add r1, r7, r0
	mov r0, #0x12
	lsl r0, r0, #6
	ldrsh r0, [r1, r0]
	str r0, [sp, #8]
	b _02011B3E
_02011B2C:
	add r0, sp, #0xc
	str r0, [sp]
	add r0, sp, #8
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	ldr r1, [r5, #0x10]
	add r3, r4, #0
	bl sub_02011A44
_02011B3E:
	mov r0, #3
	ldr r1, [sp, #0xc]
	lsl r0, r0, #8
	strh r1, [r6, r0]
	mov r0, #0x12
	ldr r1, [sp, #8]
	lsl r0, r0, #6
	strh r1, [r6, r0]
	add r4, r4, #1
	add r6, r6, #2
	cmp r4, #0xc0
	blt _02011AEA
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02011AD8

	thumb_func_start sub_02011B5C
sub_02011B5C: ; 0x02011B5C
	push {r3, r4, r5, lr}
	sub sp, #0x10
	add r5, r0, #0
	ldr r0, [r5, #0x20]
	add r4, r1, #0
	mov r1, #0x30
	bl sub_0201AA8C
	str r0, [r5, #0x14]
	ldr r0, [r5, #0x10]
	add r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	bl sub_02011BF0
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02011B5C

	thumb_func_start sub_02011B94
sub_02011B94: ; 0x02011B94
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	mov r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _02011BAC
	cmp r0, #2
	beq _02011BC8
	cmp r0, #3
	beq _02011BE2
	b _02011BE6
_02011BAC:
	add r0, r4, #0
	bl sub_02011CB8
	cmp r0, #1
	bne _02011BEA
	ldr r0, [r4, #0x20]
	ldr r1, [r4, #0x24]
	ldr r2, [r5, #0x10]
	bl sub_02010F34
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _02011BEA
_02011BC8:
	add r0, r4, #0
	bl sub_02010EC8
	ldr r0, [r5, #0x14]
	bl sub_0201AB0C
	add r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	mov r6, #1
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _02011BEA
_02011BE2:
	mov r6, #1
	b _02011BEA
_02011BE6:
	bl GF_AssertFail
_02011BEA:
	add r0, r6, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_02011B94

	thumb_func_start sub_02011BF0
sub_02011BF0: ; 0x02011BF0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	add r4, r1, #0
	add r5, r0, #0
	ldrh r0, [r4]
	ldrh r1, [r4, #2]
	str r2, [sp, #0x18]
	str r3, [sp, #0x1c]
	ldr r6, [sp, #0x38]
	ldr r7, [sp, #0x3c]
	bl sub_02010A6C
	str r0, [r5, #0x10]
	ldrb r1, [r4, #4]
	ldr r3, [sp, #0x44]
	add r0, r5, #0
	add r2, r6, #0
	bl sub_02010E64
	ldrh r0, [r4]
	lsl r0, r0, #7
	str r0, [r5, #0xc]
	ldr r0, [sp, #0x18]
	str r0, [r5, #0x14]
	ldr r0, [sp, #0x1c]
	str r0, [r5, #0x18]
	mov r0, #0
	str r0, [r5, #0x1c]
	ldr r0, [sp, #0x40]
	str r7, [r5, #0x24]
	str r0, [r5, #0x28]
	ldr r0, [sp, #0x44]
	str r0, [r5, #0x2c]
	ldrb r0, [r4, #7]
	str r0, [r5, #0x20]
	add r0, r5, #0
	bl sub_02011D08
	ldr r0, _02011CAC ; =sub_02010F00
	ldr r2, _02011CB0 ; =0x000003FF
	add r1, r5, #0
	bl sub_0200E374
	add r0, r5, #0
	mov r1, #0
	bl sub_02010EE0
	mov r1, #3
	str r6, [sp]
	lsl r1, r1, #8
	ldrsh r1, [r0, r1]
	str r1, [sp, #4]
	mov r1, #0
	str r1, [sp, #8]
	mov r1, #0x12
	lsl r1, r1, #6
	ldrsh r0, [r0, r1]
	str r0, [sp, #0xc]
	mov r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0x14]
	ldrb r1, [r4, #5]
	ldrb r2, [r4, #6]
	ldrb r3, [r4, #4]
	add r0, r7, #0
	bl sub_02010F84
	ldrb r0, [r4, #4]
	cmp r0, #0
	bne _02011C8C
	ldr r3, [r5, #0x20]
	add r0, r7, #0
	mov r1, #1
	add r2, r6, #0
	bl sub_02011068
	b _02011C98
_02011C8C:
	ldr r3, [r5, #0x20]
	add r0, r7, #0
	mov r1, #2
	add r2, r6, #0
	bl sub_02011068
_02011C98:
	ldr r0, [sp, #0x44]
	ldr r2, _02011CB4 ; =sub_02010C38
	str r0, [sp]
	ldr r0, [r5, #0x28]
	add r1, r5, #0
	add r3, r6, #0
	bl sub_0200FF88
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02011CAC: .word sub_02010F00
_02011CB0: .word 0x000003FF
_02011CB4: .word sub_02010C38
	thumb_func_end sub_02011BF0

	thumb_func_start sub_02011CB8
sub_02011CB8: ; 0x02011CB8
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0x1c]
	add r2, r1, #1
	str r2, [r4, #0x1c]
	ldr r1, [r4, #0x18]
	cmp r2, r1
	blt _02011CFC
	mov r1, #0
	str r1, [r4, #0x1c]
	ldr r1, [r4, #0x14]
	sub r1, r1, #1
	cmp r1, #0
	ble _02011CEE
	str r1, [r4, #0x14]
	ldr r2, [r4, #0xc]
	ldr r1, [r4, #0x10]
	add r1, r2, r1
	str r1, [r4, #0xc]
	bl sub_02011D08
	ldr r0, _02011D00 ; =sub_02010F00
	ldr r2, _02011D04 ; =0x000003FF
	add r1, r4, #0
	bl sub_0200E374
	b _02011CFC
_02011CEE:
	ldr r0, [r4, #0x28]
	ldr r1, [r4, #8]
	ldr r2, [r4, #0x2c]
	bl sub_0200FFB4
	mov r0, #1
	pop {r4, pc}
_02011CFC:
	mov r0, #0
	pop {r4, pc}
	.align 2, 0
_02011D00: .word sub_02010F00
_02011D04: .word 0x000003FF
	thumb_func_end sub_02011CB8

	thumb_func_start sub_02011D08
sub_02011D08: ; 0x02011D08
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x1fc
	sub sp, #0x104
	add r4, r0, #0
	mov r1, #0
	bl sub_02010EE0
	ldr r1, [r4, #0xc]
	add r5, r0, #0
	asr r0, r1, #6
	lsr r0, r0, #0x19
	add r0, r1, r0
	asr r0, r0, #7
	add r1, sp, #0
	mov r2, #0xc0
	mov r3, #0
	bl sub_02010A00
	mov r7, #0x12
	mov r6, #0
	add r4, sp, #0
	lsl r7, r7, #6
_02011D34:
	ldr r1, [r4]
	mov r0, #0x80
	neg r1, r1
	bl sub_02010A7C
	mov r1, #3
	lsl r1, r1, #8
	strh r0, [r5, r1]
	ldr r1, [r4]
	mov r0, #0x80
	bl sub_02010A7C
	strh r0, [r5, r7]
	add r6, r6, #1
	add r4, r4, #4
	add r5, r5, #2
	cmp r6, #0xc0
	blt _02011D34
	add sp, #0x1fc
	add sp, #0x104
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02011D08

	thumb_func_start sub_02011D60
sub_02011D60: ; 0x02011D60
	push {r3, r4, r5, lr}
	sub sp, #0x10
	add r5, r0, #0
	ldr r0, [r5, #0x20]
	add r4, r1, #0
	mov r1, #0x34
	bl sub_0201AA8C
	str r0, [r5, #0x14]
	ldr r0, [r5, #0x10]
	add r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	bl sub_02011DEC
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02011D60

	thumb_func_start sub_02011D98
sub_02011D98: ; 0x02011D98
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	mov r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _02011DB0
	cmp r0, #2
	beq _02011DCC
	cmp r0, #3
	beq _02011DE6
	b _02011DE8
_02011DB0:
	add r0, r4, #0
	bl sub_02011EC0
	cmp r0, #1
	bne _02011DE8
	ldr r0, [r4, #0x24]
	ldr r1, [r4, #0x28]
	ldr r2, [r5, #0x10]
	bl sub_02010F34
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _02011DE8
_02011DCC:
	add r0, r4, #0
	bl sub_02010EC8
	ldr r0, [r5, #0x14]
	bl sub_0201AB0C
	add r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	mov r6, #1
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _02011DE8
_02011DE6:
	mov r6, #1
_02011DE8:
	add r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end sub_02011D98

	thumb_func_start sub_02011DEC
sub_02011DEC: ; 0x02011DEC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	add r4, r1, #0
	add r5, r0, #0
	ldrh r1, [r4, #2]
	ldrh r0, [r4]
	str r2, [sp, #0x18]
	str r3, [sp, #0x1c]
	sub r0, r1, r0
	add r1, r2, #0
	ldr r6, [sp, #0x38]
	ldr r7, [sp, #0x3c]
	bl sub_020F2998
	str r0, [sp, #0x20]
	ldrb r1, [r4, #4]
	ldr r3, [sp, #0x44]
	add r0, r5, #0
	add r2, r6, #0
	bl sub_02010E64
	mov r0, #2
	lsl r0, r0, #0x12
	str r0, [r5, #0xc]
	ldrh r0, [r4]
	str r0, [r5, #0x10]
	ldr r0, [sp, #0x20]
	str r0, [r5, #0x14]
	ldr r0, [sp, #0x18]
	str r0, [r5, #0x18]
	ldr r0, [sp, #0x1c]
	str r0, [r5, #0x1c]
	mov r0, #0
	str r0, [r5, #0x20]
	ldr r0, [sp, #0x40]
	str r7, [r5, #0x28]
	str r0, [r5, #0x2c]
	ldr r0, [sp, #0x44]
	str r0, [r5, #0x30]
	ldrb r0, [r4, #7]
	str r0, [r5, #0x24]
	add r0, r5, #0
	bl sub_02011F10
	ldr r0, _02011EB4 ; =sub_02010F00
	ldr r2, _02011EB8 ; =0x000003FF
	add r1, r5, #0
	bl sub_0200E374
	add r0, r5, #0
	mov r1, #0
	bl sub_02010EE0
	mov r1, #0xf
	str r6, [sp]
	lsl r1, r1, #6
	ldrsh r1, [r0, r1]
	str r1, [sp, #4]
	mov r1, #0
	str r1, [sp, #8]
	mov r1, #0x15
	lsl r1, r1, #6
	ldrsh r0, [r0, r1]
	str r0, [sp, #0xc]
	mov r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x24]
	str r0, [sp, #0x14]
	ldrb r1, [r4, #5]
	ldrb r2, [r4, #6]
	ldrb r3, [r4, #4]
	add r0, r7, #0
	bl sub_02010F84
	ldrb r0, [r4, #4]
	cmp r0, #0
	bne _02011E94
	ldr r3, [r5, #0x24]
	add r0, r7, #0
	mov r1, #1
	add r2, r6, #0
	bl sub_02011068
	b _02011EA0
_02011E94:
	ldr r3, [r5, #0x24]
	add r0, r7, #0
	mov r1, #2
	add r2, r6, #0
	bl sub_02011068
_02011EA0:
	ldr r0, [sp, #0x44]
	ldr r2, _02011EBC ; =sub_02010C38
	str r0, [sp]
	ldr r0, [r5, #0x2c]
	add r1, r5, #0
	add r3, r6, #0
	bl sub_0200FF88
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02011EB4: .word sub_02010F00
_02011EB8: .word 0x000003FF
_02011EBC: .word sub_02010C38
	thumb_func_end sub_02011DEC

	thumb_func_start sub_02011EC0
sub_02011EC0: ; 0x02011EC0
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0x20]
	add r2, r1, #1
	str r2, [r4, #0x20]
	ldr r1, [r4, #0x1c]
	cmp r2, r1
	blt _02011F04
	mov r1, #0
	str r1, [r4, #0x20]
	ldr r1, [r4, #0x18]
	sub r1, r1, #1
	cmp r1, #0
	ble _02011EF6
	str r1, [r4, #0x18]
	ldr r2, [r4, #0x10]
	ldr r1, [r4, #0x14]
	add r1, r2, r1
	str r1, [r4, #0x10]
	bl sub_02011F10
	ldr r0, _02011F08 ; =sub_02010F00
	ldr r2, _02011F0C ; =0x000003FF
	add r1, r4, #0
	bl sub_0200E374
	b _02011F04
_02011EF6:
	ldr r0, [r4, #0x2c]
	ldr r1, [r4, #8]
	ldr r2, [r4, #0x30]
	bl sub_0200FFB4
	mov r0, #1
	pop {r4, pc}
_02011F04:
	mov r0, #0
	pop {r4, pc}
	.align 2, 0
_02011F08: .word sub_02010F00
_02011F0C: .word 0x000003FF
	thumb_func_end sub_02011EC0

	thumb_func_start sub_02011F10
sub_02011F10: ; 0x02011F10
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1fc
	sub sp, #0x110
	add r4, r0, #0
	mov r1, #0
	bl sub_02010EE0
	str r0, [sp]
	ldr r0, [r4, #0x10]
	ldr r2, [r4, #0xc]
	asr r0, r0, #4
	lsl r1, r0, #2
	ldr r0, _02011FF0 ; =0x021094DC
	asr r3, r2, #0x1f
	ldrsh r0, [r0, r1]
	asr r1, r0, #0x1f
	bl sub_020F2948
	mov r2, #2
	mov r3, #0
	lsl r2, r2, #0xa
	add r2, r0, r2
	adc r1, r3
	lsl r0, r1, #0x14
	lsr r1, r2, #0xc
	orr r1, r0
	asr r7, r1, #0xc
	lsl r0, r7, #1
	mov r1, #0x15
	bl sub_020F2998
	add r0, r0, #1
	lsl r0, r0, #1
	mov r1, #0xb4
	sub r2, r1, r0
	ldr r0, _02011FF4 ; =0x0000FFFF
	add r1, #0xb4
	mul r0, r2
	bl sub_020F2998
	lsr r1, r0, #0x1f
	add r1, r0, r1
	asr r4, r1, #1
	mov r1, #1
	add r0, r4, #0
	lsl r1, r1, #8
	bl sub_02010A54
	asr r0, r0, #0xc
	str r0, [sp, #4]
	cmp r0, #0xc0
	blt _02011F7C
	bl GF_AssertFail
_02011F7C:
	ldr r2, [sp, #4]
	add r0, r4, #0
	add r1, sp, #0xc
	mov r3, #0
	bl sub_02010A00
	ldr r5, [sp]
	mov r4, #0
_02011F8C:
	ldr r0, [sp, #4]
	add r1, r4, #1
	sub r0, r0, r1
	add r6, r7, #0
	cmp r0, #0
	ble _02011FA4
	lsl r1, r0, #2
	add r0, sp, #0xc
	ldr r0, [r0, r1]
	cmp r0, r7
	ble _02011FA4
	add r6, r0, #0
_02011FA4:
	mov r0, #0x80
	neg r1, r6
	bl sub_02010A7C
	str r0, [sp, #8]
	mov r0, #0x80
	add r1, r6, #0
	bl sub_02010A7C
	ldr r1, [sp, #8]
	lsl r0, r0, #0x10
	lsl r1, r1, #0x10
	asr r2, r1, #0x10
	mov r1, #3
	lsl r1, r1, #8
	strh r2, [r5, r1]
	asr r1, r0, #0x10
	mov r0, #0x12
	lsl r0, r0, #6
	strh r1, [r5, r0]
	mov r0, #0xbf
	sub r0, r0, r4
	lsl r3, r0, #1
	ldr r0, [sp]
	add r4, r4, #1
	add r0, r0, r3
	mov r3, #3
	lsl r3, r3, #8
	strh r2, [r0, r3]
	mov r2, #0x12
	lsl r2, r2, #6
	add r5, r5, #2
	strh r1, [r0, r2]
	cmp r4, #0x60
	blt _02011F8C
	add sp, #0x1fc
	add sp, #0x110
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02011FF0: .word 0x021094DC
_02011FF4: .word 0x0000FFFF
	thumb_func_end sub_02011F10

	thumb_func_start sub_02011FF8
sub_02011FF8: ; 0x02011FF8
	push {r3, r4, r5, lr}
	sub sp, #0x10
	add r5, r0, #0
	ldr r0, [r5, #0x20]
	add r4, r1, #0
	mov r1, #0x30
	bl sub_0201AA8C
	str r0, [r5, #0x14]
	ldr r0, [r5, #0x10]
	add r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	bl sub_02012090
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02011FF8

	thumb_func_start sub_02012030
sub_02012030: ; 0x02012030
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	mov r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _02012048
	cmp r0, #2
	beq _02012064
	cmp r0, #3
	beq _02012084
	b _02012088
_02012048:
	add r0, r4, #0
	bl sub_020121A4
	cmp r0, #1
	bne _0201208C
	ldr r0, [r4, #0x20]
	ldr r1, [r4, #0x24]
	ldr r2, [r5, #0x10]
	bl sub_02010F34
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _0201208C
_02012064:
	add r0, r4, #0
	bl sub_020121F4
	add r0, r4, #0
	bl sub_02010EC8
	ldr r0, [r5, #0x14]
	bl sub_0201AB0C
	add r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	mov r6, #1
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _0201208C
_02012084:
	mov r6, #1
	b _0201208C
_02012088:
	bl GF_AssertFail
_0201208C:
	add r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end sub_02012030

	thumb_func_start sub_02012090
sub_02012090: ; 0x02012090
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	add r5, r1, #0
	add r6, r0, #0
	str r2, [sp, #0x18]
	ldr r0, [sp, #0x38]
	ldrh r2, [r5, #8]
	str r0, [sp, #0x38]
	ldr r0, [sp, #0x44]
	mov r1, #0x30
	mul r1, r2
	str r3, [sp, #0x1c]
	str r0, [sp, #0x44]
	bl sub_0201AA8C
	str r0, [r6, #0xc]
	cmp r0, #0
	bne _020120B8
	bl GF_AssertFail
_020120B8:
	ldrh r0, [r5, #8]
	str r0, [r6, #0x10]
	mov r0, #0
	str r0, [sp, #0x20]
	ldrh r0, [r5, #8]
	cmp r0, #0
	ble _020120F8
	ldr r4, [sp, #0x20]
	add r7, r4, #0
_020120CA:
	ldr r0, [r5, #4]
	ldr r2, [r6, #0xc]
	add r0, r0, r4
	str r0, [sp]
	ldr r0, [sp, #0x18]
	str r0, [sp, #4]
	add r0, r2, r7
	ldr r3, [r5]
	add r1, r0, #0
	add r2, r2, r7
	add r1, #0x20
	add r2, #0x10
	add r3, r3, r4
	bl sub_02010AB0
	ldr r0, [sp, #0x20]
	ldrh r1, [r5, #8]
	add r0, r0, #1
	add r4, r4, #4
	add r7, #0x30
	str r0, [sp, #0x20]
	cmp r0, r1
	blt _020120CA
_020120F8:
	ldrh r1, [r5, #0xa]
	ldr r2, [sp, #0x38]
	ldr r3, [sp, #0x44]
	add r0, r6, #0
	bl sub_02010E64
	ldr r0, [sp, #0x18]
	str r0, [r6, #0x14]
	ldr r0, [sp, #0x1c]
	str r0, [r6, #0x18]
	mov r0, #0
	str r0, [r6, #0x1c]
	ldr r0, [sp, #0x3c]
	str r0, [r6, #0x24]
	ldr r0, [sp, #0x40]
	str r0, [r6, #0x28]
	ldr r0, [sp, #0x44]
	str r0, [r6, #0x2c]
	ldrh r0, [r5, #0xe]
	str r0, [r6, #0x20]
	add r0, r6, #0
	bl sub_02012204
	ldr r0, _02012198 ; =sub_02010F00
	ldr r2, _0201219C ; =0x000003FF
	add r1, r6, #0
	bl sub_0200E374
	add r0, r6, #0
	mov r1, #0
	bl sub_02010EE0
	ldr r1, [sp, #0x38]
	str r1, [sp]
	mov r1, #3
	lsl r1, r1, #8
	ldrsh r1, [r0, r1]
	str r1, [sp, #4]
	mov r1, #0
	str r1, [sp, #8]
	mov r1, #0x12
	lsl r1, r1, #6
	ldrsh r0, [r0, r1]
	str r0, [sp, #0xc]
	mov r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r6, #0x20]
	str r0, [sp, #0x14]
	ldrb r1, [r5, #0xc]
	ldrb r2, [r5, #0xd]
	ldrh r3, [r5, #0xa]
	ldr r0, [sp, #0x3c]
	bl sub_02010F84
	ldrh r0, [r5, #0xa]
	cmp r0, #0
	ldr r0, [r6, #0x24]
	bne _02012178
	ldr r2, [sp, #0x38]
	ldr r3, [r6, #0x20]
	mov r1, #1
	bl sub_02011068
	b _02012182
_02012178:
	ldr r2, [sp, #0x38]
	ldr r3, [r6, #0x20]
	mov r1, #2
	bl sub_02011068
_02012182:
	ldr r0, [sp, #0x44]
	ldr r2, _020121A0 ; =sub_02010C38
	str r0, [sp]
	ldr r0, [r6, #0x28]
	ldr r3, [sp, #0x38]
	add r1, r6, #0
	bl sub_0200FF88
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	nop
_02012198: .word sub_02010F00
_0201219C: .word 0x000003FF
_020121A0: .word sub_02010C38
	thumb_func_end sub_02012090

	thumb_func_start sub_020121A4
sub_020121A4: ; 0x020121A4
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0x1c]
	add r2, r1, #1
	str r2, [r4, #0x1c]
	ldr r1, [r4, #0x18]
	cmp r2, r1
	blt _020121E6
	mov r1, #0
	str r1, [r4, #0x1c]
	ldr r1, [r4, #0x14]
	sub r1, r1, #1
	cmp r1, #0
	ble _020121D8
	str r1, [r4, #0x14]
	bl sub_02012290
	add r0, r4, #0
	bl sub_02012204
	ldr r0, _020121EC ; =sub_02010F00
	ldr r2, _020121F0 ; =0x000003FF
	add r1, r4, #0
	bl sub_0200E374
	b _020121E6
_020121D8:
	ldr r0, [r4, #0x28]
	ldr r1, [r4, #8]
	ldr r2, [r4, #0x2c]
	bl sub_0200FFB4
	mov r0, #1
	pop {r4, pc}
_020121E6:
	mov r0, #0
	pop {r4, pc}
	nop
_020121EC: .word sub_02010F00
_020121F0: .word 0x000003FF
	thumb_func_end sub_020121A4

	thumb_func_start sub_020121F4
sub_020121F4: ; 0x020121F4
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0xc]
	bl sub_0201AB0C
	mov r0, #0
	str r0, [r4, #0xc]
	pop {r4, pc}
	thumb_func_end sub_020121F4

	thumb_func_start sub_02012204
sub_02012204: ; 0x02012204
	push {r4, r5, r6, lr}
	mov r1, #0
	add r6, r0, #0
	bl sub_02010EE0
	mov r2, #3
	lsl r2, r2, #8
	add r0, r0, r2
	mov r1, #0
	bl sub_020E5B44
	ldr r0, [r6, #0x10]
	sub r4, r0, #1
	bmi _02012236
	mov r0, #0x30
	add r5, r4, #0
	mul r5, r0
_02012226:
	ldr r1, [r6, #0xc]
	add r0, r6, #0
	add r1, r1, r5
	bl sub_02012238
	sub r5, #0x30
	sub r4, r4, #1
	bpl _02012226
_02012236:
	pop {r4, r5, r6, pc}
	thumb_func_end sub_02012204

	thumb_func_start sub_02012238
sub_02012238: ; 0x02012238
	push {r4, r5, r6, lr}
	add r4, r1, #0
	mov r1, #0
	bl sub_02010EE0
	ldr r2, [r4]
	ldr r3, [r4, #8]
	asr r1, r2, #6
	lsr r1, r1, #0x19
	add r1, r2, r1
	asr r2, r1, #7
	asr r1, r3, #6
	ldr r5, [r4, #0xc]
	lsr r1, r1, #0x19
	add r1, r3, r1
	asr r3, r5, #6
	lsr r3, r3, #0x19
	add r3, r5, r3
	ldr r4, [r4, #4]
	asr r5, r3, #7
	asr r3, r4, #6
	lsr r3, r3, #0x19
	add r3, r4, r3
	asr r3, r3, #7
	asr r1, r1, #7
	cmp r3, r5
	bge _0201228E
	lsl r4, r3, #1
	lsl r1, r1, #0x10
	add r4, r0, r4
	lsl r0, r2, #0x10
	asr r6, r1, #0x10
	mov r1, #3
	mov r2, #0x12
	asr r0, r0, #0x10
	lsl r1, r1, #8
	lsl r2, r2, #6
_02012282:
	strh r0, [r4, r1]
	strh r6, [r4, r2]
	add r3, r3, #1
	add r4, r4, #2
	cmp r3, r5
	blt _02012282
_0201228E:
	pop {r4, r5, r6, pc}
	thumb_func_end sub_02012238

	thumb_func_start sub_02012290
sub_02012290: ; 0x02012290
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #0x10]
	mov r6, #0
	cmp r0, #0
	ble _020122B4
	add r4, r6, #0
_0201229E:
	ldr r1, [r5, #0xc]
	add r0, r1, r4
	add r1, r1, r4
	add r1, #0x10
	bl sub_02010A8C
	ldr r0, [r5, #0x10]
	add r6, r6, #1
	add r4, #0x30
	cmp r6, r0
	blt _0201229E
_020122B4:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_02012290

	thumb_func_start sub_020122B8
sub_020122B8: ; 0x020122B8
	push {r3, r4, r5, lr}
	sub sp, #0x10
	add r5, r0, #0
	ldr r0, [r5, #0x20]
	add r4, r1, #0
	mov r1, #0x38
	bl sub_0201AA8C
	str r0, [r5, #0x14]
	mov r1, #0
	mov r2, #0x38
	bl sub_020E5B44
	ldr r0, [r5, #0x10]
	add r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	bl sub_02012358
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end sub_020122B8

	thumb_func_start sub_020122F8
sub_020122F8: ; 0x020122F8
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	mov r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _02012310
	cmp r0, #2
	beq _0201232C
	cmp r0, #3
	beq _0201234C
	b _02012350
_02012310:
	add r0, r4, #0
	bl sub_02012454
	cmp r0, #1
	bne _02012354
	ldr r0, [r4, #0x28]
	ldr r1, [r4, #0x30]
	ldr r2, [r5, #0x10]
	bl sub_02010F34
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _02012354
_0201232C:
	add r0, r4, #0
	bl sub_020124AC
	add r0, r4, #0
	bl sub_02010EC8
	ldr r0, [r5, #0x14]
	bl sub_0201AB0C
	add r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	mov r6, #1
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _02012354
_0201234C:
	mov r6, #1
	b _02012354
_02012350:
	bl GF_AssertFail
_02012354:
	add r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end sub_020122F8

	thumb_func_start sub_02012358
sub_02012358: ; 0x02012358
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	add r4, r1, #0
	add r5, r0, #0
	mov r1, #0
	str r1, [r5, #0xc]
	ldrh r1, [r4]
	str r2, [sp, #0x18]
	str r3, [sp, #0x1c]
	str r1, [r5, #0x10]
	ldrh r2, [r4, #2]
	ldrh r1, [r4]
	ldr r6, [sp, #0x40]
	ldr r3, [sp, #0x4c]
	sub r1, r2, r1
	str r1, [r5, #0x14]
	mov r1, #2
	add r2, r6, #0
	ldr r7, [sp, #0x44]
	bl sub_02010E64
	ldr r0, [sp, #0x18]
	mov r1, #0
	str r0, [r5, #0x18]
	ldr r0, [sp, #0x1c]
	str r1, [r5, #0x1c]
	str r0, [r5, #0x20]
	str r1, [r5, #0x24]
	ldr r0, [sp, #0x48]
	str r7, [r5, #0x30]
	str r0, [r5, #0x34]
	ldr r0, [sp, #0x4c]
	str r0, [r5, #0x2c]
	ldrh r0, [r4, #6]
	str r0, [r5, #0x28]
	add r0, r5, #0
	ldr r1, [r5, #0x1c]
	ldr r2, [r5, #0x18]
	add r0, #0xc
	bl sub_020125D4
	add r0, r5, #0
	bl sub_020124B0
	ldr r0, _02012448 ; =sub_02010F00
	ldr r2, _0201244C ; =0x000003FF
	add r1, r5, #0
	bl sub_0200E374
	add r0, r5, #0
	mov r1, #0
	bl sub_02010EE0
	str r0, [sp, #0x20]
	add r0, r5, #0
	mov r1, #1
	bl sub_02010EE0
	str r0, [sp, #0x24]
	mov r1, #3
	ldr r0, [sp, #0x20]
	str r6, [sp]
	lsl r1, r1, #8
	ldrsh r0, [r0, r1]
	mov r1, #0x12
	mov r3, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x20]
	str r3, [sp, #8]
	lsl r1, r1, #6
	ldrsh r0, [r0, r1]
	str r0, [sp, #0xc]
	mov r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x28]
	str r0, [sp, #0x14]
	ldrb r1, [r4, #4]
	ldrb r2, [r4, #5]
	add r0, r7, #0
	bl sub_02010F84
	mov r1, #3
	ldr r0, [sp, #0x24]
	str r6, [sp]
	lsl r1, r1, #8
	ldrsh r0, [r0, r1]
	mov r1, #0x12
	lsl r1, r1, #6
	str r0, [sp, #4]
	mov r0, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x24]
	mov r3, #1
	ldrsh r0, [r0, r1]
	str r0, [sp, #0xc]
	mov r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x28]
	str r0, [sp, #0x14]
	ldrb r1, [r4, #4]
	ldrb r2, [r4, #5]
	add r0, r7, #0
	bl sub_02010F84
	ldr r3, [r5, #0x28]
	add r0, r7, #0
	mov r1, #3
	add r2, r6, #0
	bl sub_02011068
	ldr r0, [sp, #0x4c]
	ldr r2, _02012450 ; =sub_02010C38
	str r0, [sp]
	ldr r0, [r5, #0x34]
	add r1, r5, #0
	add r3, r6, #0
	bl sub_0200FF88
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02012448: .word sub_02010F00
_0201244C: .word 0x000003FF
_02012450: .word sub_02010C38
	thumb_func_end sub_02012358

	thumb_func_start sub_02012454
sub_02012454: ; 0x02012454
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x24]
	add r1, r0, #1
	str r1, [r4, #0x24]
	ldr r0, [r4, #0x20]
	cmp r1, r0
	blt _0201249E
	mov r0, #0
	str r0, [r4, #0x24]
	ldr r0, [r4, #0x1c]
	add r1, r0, #1
	ldr r0, [r4, #0x18]
	cmp r1, r0
	bgt _02012490
	str r1, [r4, #0x1c]
	add r0, r4, #0
	ldr r2, [r4, #0x18]
	add r0, #0xc
	bl sub_020125D4
	add r0, r4, #0
	bl sub_020124B0
	ldr r0, _020124A4 ; =sub_02010F00
	ldr r2, _020124A8 ; =0x000003FF
	add r1, r4, #0
	bl sub_0200E374
	b _0201249E
_02012490:
	ldr r0, [r4, #0x34]
	ldr r1, [r4, #8]
	ldr r2, [r4, #0x2c]
	bl sub_0200FFB4
	mov r0, #1
	pop {r4, pc}
_0201249E:
	mov r0, #0
	pop {r4, pc}
	nop
_020124A4: .word sub_02010F00
_020124A8: .word 0x000003FF
	thumb_func_end sub_02012454

	thumb_func_start sub_020124AC
sub_020124AC: ; 0x020124AC
	bx lr
	.align 2, 0
	thumb_func_end sub_020124AC

	thumb_func_start sub_020124B0
sub_020124B0: ; 0x020124B0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	ldr r0, [r0, #0xc]
	ldr r1, _020125D0 ; =0x00003FFF
	bl sub_020F2998
	lsl r0, r1, #0x10
	lsr r0, r0, #0x10
	str r0, [sp, #4]
	ldr r0, [sp]
	mov r1, #0
	bl sub_02010EE0
	add r7, r0, #0
	ldr r0, [sp]
	mov r1, #1
	bl sub_02010EE0
	add r4, r0, #0
	mov r6, #0
	add r5, r4, #0
_020124DC:
	ldr r0, [sp]
	ldr r1, [r0, #0xc]
	ldr r0, _020125D0 ; =0x00003FFF
	cmp r1, r0
	bge _02012520
	mov r1, #0x60
	ldr r0, [sp, #4]
	sub r1, r1, r6
	bl sub_020109D8
	cmp r0, #0x7f
	ble _020124F6
	mov r0, #0x7f
_020124F6:
	mov r1, #0xbf
	sub r1, r1, r6
	lsl r1, r1, #1
	add r3, r7, r1
	mov r1, #0x80
	sub r2, r1, r0
	mov r1, #3
	lsl r1, r1, #8
	strh r2, [r3, r1]
	mov r1, #0x12
	mov r2, #0x80
	lsl r1, r1, #6
	strh r2, [r3, r1]
	mov r1, #3
	lsl r1, r1, #8
	strh r2, [r5, r1]
	mov r1, #0x12
	add r0, #0x80
	lsl r1, r1, #6
	strh r0, [r5, r1]
	b _02012548
_02012520:
	mov r0, #0xbf
	sub r0, r0, r6
	lsl r0, r0, #1
	mov r1, #3
	add r0, r7, r0
	mov r2, #0
	lsl r1, r1, #8
	strh r2, [r0, r1]
	mov r1, #0x12
	mov r2, #0x80
	lsl r1, r1, #6
	strh r2, [r0, r1]
	mov r0, #3
	add r1, r2, #0
	lsl r0, r0, #8
	strh r1, [r5, r0]
	mov r0, #0x12
	mov r1, #0xff
	lsl r0, r0, #6
	strh r1, [r5, r0]
_02012548:
	add r6, r6, #1
	add r5, r5, #2
	cmp r6, #0x60
	blt _020124DC
	ldr r1, _020125D0 ; =0x00003FFF
	ldr r0, [sp, #4]
	mov r5, #0x60
	add r4, #0xc0
	sub r6, r1, r0
_0201255A:
	ldr r0, [sp]
	ldr r1, [r0, #0xc]
	ldr r0, _020125D0 ; =0x00003FFF
	cmp r1, r0
	bge _0201258A
	mov r0, #0xbf
	sub r0, r0, r5
	lsl r0, r0, #1
	mov r1, #3
	add r0, r7, r0
	mov r2, #0x80
	lsl r1, r1, #8
	strh r2, [r0, r1]
	mov r1, #0x12
	lsl r1, r1, #6
	strh r2, [r0, r1]
	mov r0, #3
	add r1, r2, #0
	lsl r0, r0, #8
	strh r1, [r4, r0]
	mov r0, #0x12
	lsl r0, r0, #6
	strh r1, [r4, r0]
	b _020125C4
_0201258A:
	add r1, r5, #0
	add r0, r6, #0
	sub r1, #0x60
	bl sub_020109D8
	add r1, r0, #0
	cmp r1, #0x7f
	ble _0201259C
	mov r1, #0x7f
_0201259C:
	mov r0, #0xbf
	sub r0, r0, r5
	lsl r0, r0, #1
	mov r2, #3
	add r0, r7, r0
	mov r3, #0
	lsl r2, r2, #8
	strh r3, [r0, r2]
	mov r2, #0x80
	sub r3, r2, r1
	mov r2, #0x12
	lsl r2, r2, #6
	strh r3, [r0, r2]
	mov r0, #3
	add r1, #0x80
	lsl r0, r0, #8
	strh r1, [r4, r0]
	mov r1, #0xff
	add r0, r2, #0
	strh r1, [r4, r0]
_020125C4:
	add r5, r5, #1
	add r4, r4, #2
	cmp r5, #0xc0
	blt _0201255A
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_020125D0: .word 0x00003FFF
	thumb_func_end sub_020124B0

	thumb_func_start sub_020125D4
sub_020125D4: ; 0x020125D4
	push {r4, lr}
	add r4, r0, #0
	ldr r3, [r4, #8]
	add r0, r3, #0
	mul r0, r1
	add r1, r2, #0
	bl sub_020F2998
	ldr r1, [r4, #4]
	add r0, r0, r1
	str r0, [r4]
	pop {r4, pc}
	thumb_func_end sub_020125D4

	thumb_func_start sub_020125EC
sub_020125EC: ; 0x020125EC
	push {r3, r4, r5, lr}
	sub sp, #0x10
	add r5, r0, #0
	ldr r0, [r5, #0x20]
	add r4, r1, #0
	mov r1, #0x38
	bl sub_0201AA8C
	str r0, [r5, #0x14]
	mov r1, #0
	mov r2, #0x38
	bl sub_020E5B44
	ldr r0, [r5, #0x10]
	add r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	bl sub_0201268C
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end sub_020125EC

	thumb_func_start sub_0201262C
sub_0201262C: ; 0x0201262C
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	mov r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _02012644
	cmp r0, #2
	beq _02012660
	cmp r0, #3
	beq _02012680
	b _02012684
_02012644:
	add r0, r4, #0
	bl sub_0201275C
	cmp r0, #1
	bne _02012688
	ldr r0, [r4, #0x28]
	ldr r1, [r4, #0x30]
	ldr r2, [r5, #0x10]
	bl sub_02010F34
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _02012688
_02012660:
	add r0, r4, #0
	bl sub_020127B4
	add r0, r4, #0
	bl sub_02010EC8
	ldr r0, [r5, #0x14]
	bl sub_0201AB0C
	add r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	mov r6, #1
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _02012688
_02012680:
	mov r6, #1
	b _02012688
_02012684:
	bl GF_AssertFail
_02012688:
	add r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0201262C

	thumb_func_start sub_0201268C
sub_0201268C: ; 0x0201268C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	add r4, r1, #0
	ldrh r1, [r4]
	add r5, r0, #0
	str r3, [sp, #0x1c]
	str r1, [r5, #0xc]
	ldrh r1, [r4]
	str r2, [sp, #0x18]
	ldr r6, [sp, #0x38]
	str r1, [r5, #0x10]
	ldrh r2, [r4, #2]
	ldrh r1, [r4]
	ldr r3, [sp, #0x44]
	ldr r7, [sp, #0x3c]
	sub r1, r2, r1
	str r1, [r5, #0x14]
	mov r1, #2
	add r2, r6, #0
	bl sub_02010E64
	ldr r0, [sp, #0x18]
	mov r1, #0
	str r0, [r5, #0x18]
	ldr r0, [sp, #0x1c]
	str r1, [r5, #0x1c]
	str r0, [r5, #0x20]
	str r1, [r5, #0x24]
	ldr r0, [sp, #0x40]
	str r7, [r5, #0x30]
	str r0, [r5, #0x34]
	ldr r0, [sp, #0x44]
	str r0, [r5, #0x2c]
	ldrh r0, [r4, #6]
	str r0, [r5, #0x28]
	add r0, r5, #0
	bl sub_020127B8
	ldr r0, _02012750 ; =sub_02010F00
	ldr r2, _02012754 ; =0x000003FF
	add r1, r5, #0
	bl sub_0200E374
	add r0, r5, #0
	mov r1, #0
	bl sub_02010EE0
	add r0, r5, #0
	mov r1, #1
	bl sub_02010EE0
	str r6, [sp]
	mov r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	mov r0, #0xff
	str r0, [sp, #0xc]
	mov r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x28]
	str r0, [sp, #0x14]
	ldrb r1, [r4, #4]
	ldrb r2, [r4, #5]
	add r0, r7, #0
	bl sub_02010F84
	str r6, [sp]
	mov r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	mov r0, #0xff
	str r0, [sp, #0xc]
	mov r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x28]
	mov r3, #1
	str r0, [sp, #0x14]
	ldrb r1, [r4, #4]
	ldrb r2, [r4, #5]
	add r0, r7, #0
	bl sub_02010F84
	ldr r3, [r5, #0x28]
	add r0, r7, #0
	mov r1, #3
	add r2, r6, #0
	bl sub_02011068
	ldr r0, [sp, #0x44]
	ldr r2, _02012758 ; =sub_02010C38
	str r0, [sp]
	ldr r0, [r5, #0x34]
	add r1, r5, #0
	add r3, r6, #0
	bl sub_0200FF88
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02012750: .word sub_02010F00
_02012754: .word 0x000003FF
_02012758: .word sub_02010C38
	thumb_func_end sub_0201268C

	thumb_func_start sub_0201275C
sub_0201275C: ; 0x0201275C
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x24]
	add r1, r0, #1
	str r1, [r4, #0x24]
	ldr r0, [r4, #0x20]
	cmp r1, r0
	blt _020127A6
	mov r0, #0
	str r0, [r4, #0x24]
	ldr r0, [r4, #0x1c]
	add r1, r0, #1
	ldr r0, [r4, #0x18]
	cmp r1, r0
	bgt _02012798
	str r1, [r4, #0x1c]
	add r0, r4, #0
	ldr r2, [r4, #0x18]
	add r0, #0xc
	bl sub_02012884
	add r0, r4, #0
	bl sub_020127B8
	ldr r0, _020127AC ; =sub_02010F00
	ldr r2, _020127B0 ; =0x000003FF
	add r1, r4, #0
	bl sub_0200E374
	b _020127A6
_02012798:
	ldr r0, [r4, #0x34]
	ldr r1, [r4, #8]
	ldr r2, [r4, #0x2c]
	bl sub_0200FFB4
	mov r0, #1
	pop {r4, pc}
_020127A6:
	mov r0, #0
	pop {r4, pc}
	nop
_020127AC: .word sub_02010F00
_020127B0: .word 0x000003FF
	thumb_func_end sub_0201275C

	thumb_func_start sub_020127B4
sub_020127B4: ; 0x020127B4
	bx lr
	.align 2, 0
	thumb_func_end sub_020127B4

	thumb_func_start sub_020127B8
sub_020127B8: ; 0x020127B8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	lsl r1, r1, #0x10
	lsr r1, r1, #0x10
	str r1, [sp, #8]
	mov r1, #0
	bl sub_02010EE0
	str r0, [sp, #0x10]
	add r0, r4, #0
	mov r1, #1
	bl sub_02010EE0
	str r0, [sp, #0xc]
	add r5, r0, #0
	ldr r1, _02012880 ; =0x00003FFF
	ldr r0, [sp, #8]
	ldr r6, [sp, #0x10]
	sub r0, r1, r0
	mov r7, #0
	str r0, [sp, #4]
_020127E6:
	mov r0, #0x60
	sub r0, r0, r7
	str r0, [sp]
	ldr r0, [sp, #8]
	ldr r1, [sp]
	bl sub_020109D8
	add r4, r0, #0
	ldr r0, [sp, #4]
	ldr r1, [sp]
	bl sub_020109D8
	cmp r4, #0x7f
	ble _02012804
	mov r4, #0x7f
_02012804:
	cmp r0, #0x7f
	ble _0201280A
	mov r0, #0x7f
_0201280A:
	mov r1, #0x80
	sub r1, r1, r0
	lsl r1, r1, #0x10
	mov r2, #3
	asr r1, r1, #0x10
	lsl r2, r2, #8
	str r1, [sp, #0x14]
	strh r1, [r6, r2]
	mov r1, #0x80
	sub r1, r1, r4
	lsl r1, r1, #0x10
	asr r2, r1, #0x10
	mov r1, #0x12
	lsl r1, r1, #6
	strh r2, [r6, r1]
	mov r1, #0xbf
	sub r1, r1, r7
	mov ip, r2
	lsl r1, r1, #1
	ldr r2, [sp, #0x10]
	add r0, #0x80
	add r3, r2, r1
	str r1, [sp, #0x18]
	mov r2, #3
	ldr r1, [sp, #0x14]
	lsl r2, r2, #8
	strh r1, [r3, r2]
	mov r1, #0x12
	mov r2, ip
	lsl r1, r1, #6
	strh r2, [r3, r1]
	add r4, #0x80
	lsl r1, r4, #0x10
	asr r2, r1, #0x10
	mov r1, #3
	lsl r1, r1, #8
	lsl r0, r0, #0x10
	strh r2, [r5, r1]
	asr r1, r0, #0x10
	mov r0, #0x12
	lsl r0, r0, #6
	strh r1, [r5, r0]
	ldr r3, [sp, #0xc]
	ldr r0, [sp, #0x18]
	add r7, r7, #1
	add r0, r3, r0
	mov r3, #3
	lsl r3, r3, #8
	strh r2, [r0, r3]
	mov r2, #0x12
	lsl r2, r2, #6
	strh r1, [r0, r2]
	add r6, r6, #2
	add r5, r5, #2
	cmp r7, #0x60
	blt _020127E6
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_02012880: .word 0x00003FFF
	thumb_func_end sub_020127B8

	thumb_func_start sub_02012884
sub_02012884: ; 0x02012884
	push {r4, lr}
	add r4, r0, #0
	ldr r3, [r4, #8]
	add r0, r3, #0
	mul r0, r1
	add r1, r2, #0
	bl sub_020F2998
	ldr r1, [r4, #4]
	add r0, r0, r1
	str r0, [r4]
	pop {r4, pc}
	thumb_func_end sub_02012884

	thumb_func_start sub_0201289C
sub_0201289C: ; 0x0201289C
	push {r3, r4, r5, lr}
	sub sp, #0x10
	add r5, r0, #0
	add r4, r1, #0
	mov r1, #0xcd
	ldr r0, [r5, #0x20]
	lsl r1, r1, #2
	bl sub_0201AA8C
	mov r2, #0xcd
	str r0, [r5, #0x14]
	mov r1, #0
	lsl r2, r2, #2
	bl sub_020E5B44
	ldr r0, [r5, #0x10]
	add r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	bl sub_02012940
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0201289C

	thumb_func_start sub_020128E0
sub_020128E0: ; 0x020128E0
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	mov r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _020128F8
	cmp r0, #2
	beq _0201291A
	cmp r0, #3
	beq _02012934
	b _02012938
_020128F8:
	add r0, r4, #0
	bl sub_02012A2C
	cmp r0, #1
	bne _0201293C
	mov r1, #0xc9
	lsl r1, r1, #2
	ldr r0, [r4, r1]
	add r1, #8
	ldr r1, [r4, r1]
	ldr r2, [r5, #0x10]
	bl sub_02010F34
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _0201293C
_0201291A:
	add r0, r4, #0
	bl sub_02012A8C
	ldr r0, [r5, #0x14]
	bl sub_0201AB0C
	add r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	mov r6, #1
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _0201293C
_02012934:
	mov r6, #1
	b _0201293C
_02012938:
	bl GF_AssertFail
_0201293C:
	add r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end sub_020128E0

	thumb_func_start sub_02012940
sub_02012940: ; 0x02012940
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	ldr r7, [sp, #0x38]
	str r3, [sp, #0x1c]
	mov r3, #0
	add r4, r1, #0
	str r2, [sp, #0x18]
	str r3, [sp]
	add r1, r7, #0
	mov r2, #1
	add r5, r0, #0
	ldr r6, [sp, #0x3c]
	bl sub_02011080
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _0201297A
	add r0, r5, #0
	mov r1, #1
	mov r2, #0xc0
	bl sub_020E5B44
	add r0, r5, #0
	add r0, #0xc0
	mov r1, #1
	mov r2, #0xc0
	bl sub_020E5B44
	b _02012990
_0201297A:
	add r0, r5, #0
	mov r1, #0
	mov r2, #0xc0
	bl sub_020E5B44
	add r0, r5, #0
	add r0, #0xc0
	mov r1, #0
	mov r2, #0xc0
	bl sub_020E5B44
_02012990:
	mov r1, #0xc3
	ldr r0, [r4]
	lsl r1, r1, #2
	str r0, [r5, r1]
	ldrh r2, [r4, #4]
	add r0, r1, #4
	ldr r3, [sp, #0x44]
	str r2, [r5, r0]
	add r0, r1, #0
	ldrh r2, [r4, #6]
	add r0, #0x18
	str r2, [r5, r0]
	add r0, r1, #0
	add r0, #0x1c
	str r3, [r5, r0]
	add r2, r1, #0
	ldr r0, [sp, #0x18]
	add r2, #8
	str r0, [r5, r2]
	add r2, r1, #0
	add r2, #0xc
	mov r0, #0
	str r0, [r5, r2]
	add r2, r1, #0
	ldr r0, [sp, #0x1c]
	add r2, #0x10
	str r0, [r5, r2]
	add r2, r1, #0
	add r2, #0x14
	mov r0, #0
	str r0, [r5, r2]
	add r0, r1, #0
	add r0, #0x20
	str r6, [r5, r0]
	ldr r0, [sp, #0x40]
	add r1, #0x24
	str r0, [r5, r1]
	add r1, r5, #0
	add r2, r3, #0
	bl sub_020110DC
	ldrh r0, [r4, #6]
	cmp r0, #1
	str r7, [sp]
	bne _02012A02
	mov r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	str r3, [sp, #0xc]
	str r3, [sp, #0x10]
	str r0, [sp, #0x14]
	add r0, r6, #0
	mov r1, #0x20
	mov r2, #0x3f
	bl sub_02010F84
	b _02012A18
_02012A02:
	mov r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	str r3, [sp, #0xc]
	str r3, [sp, #0x10]
	str r0, [sp, #0x14]
	add r0, r6, #0
	mov r1, #0x3f
	mov r2, #0x20
	bl sub_02010F84
_02012A18:
	mov r3, #0xc9
	lsl r3, r3, #2
	ldr r3, [r5, r3]
	add r0, r6, #0
	mov r1, #1
	add r2, r7, #0
	bl sub_02011068
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02012940

	thumb_func_start sub_02012A2C
sub_02012A2C: ; 0x02012A2C
	push {r4, lr}
	mov r2, #0x32
	add r4, r0, #0
	lsl r2, r2, #4
	ldr r1, [r4, r2]
	add r1, r1, #1
	str r1, [r4, r2]
	sub r1, r2, #4
	ldr r3, [r4, r2]
	ldr r1, [r4, r1]
	cmp r3, r1
	blt _02012A86
	mov r1, #0
	str r1, [r4, r2]
	add r1, r2, #0
	sub r1, #8
	ldr r1, [r4, r1]
	add r3, r1, #1
	add r1, r2, #0
	sub r1, #0xc
	ldr r1, [r4, r1]
	cmp r3, r1
	bgt _02012A72
	add r1, r2, #0
	sub r1, #8
	ldr r1, [r4, r1]
	sub r2, #8
	add r1, r1, #1
	str r1, [r4, r2]
	bl sub_02012A90
	add r0, r4, #0
	bl sub_020110C4
	b _02012A86
_02012A72:
	add r0, r2, #0
	add r0, #0x10
	add r2, #8
	ldr r0, [r4, r0]
	ldr r2, [r4, r2]
	add r1, r4, #0
	bl sub_020110F4
	mov r0, #1
	pop {r4, pc}
_02012A86:
	mov r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02012A2C

	thumb_func_start sub_02012A8C
sub_02012A8C: ; 0x02012A8C
	bx lr
	.align 2, 0
	thumb_func_end sub_02012A8C

	thumb_func_start sub_02012A90
sub_02012A90: ; 0x02012A90
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	mov r0, #0x31
	lsl r0, r0, #4
	ldr r0, [r5, r0]
	mov r6, #0
	cmp r0, #0
	ble _02012ACA
	mov r7, #0x31
	add r4, r6, #0
	lsl r7, r7, #4
_02012AA6:
	mov r0, #0xc3
	lsl r0, r0, #2
	mov r2, #0xc6
	mov r3, #0xc5
	ldr r0, [r5, r0]
	lsl r2, r2, #2
	lsl r3, r3, #2
	ldr r2, [r5, r2]
	ldr r3, [r5, r3]
	add r0, r0, r4
	add r1, r5, #0
	bl sub_02012ACC
	ldr r0, [r5, r7]
	add r6, r6, #1
	add r4, r4, #4
	cmp r6, r0
	blt _02012AA6
_02012ACA:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02012A90

	thumb_func_start sub_02012ACC
sub_02012ACC: ; 0x02012ACC
	push {r3, r4, r5, r6, r7, lr}
	add r7, r0, #0
	ldrb r6, [r7]
	ldrb r4, [r7, #1]
	add r5, r1, #0
	add r1, r3, #0
	sub r0, r4, r6
	mul r0, r2
	bl sub_020F2998
	add r0, r0, r6
	cmp r6, r4
	bhi _02012AEC
	add r1, r6, #0
	ldrh r6, [r7, #2]
	b _02012AFC
_02012AEC:
	ldrh r2, [r7, #2]
	add r1, r4, #0
	add r4, r6, #0
	cmp r2, #0
	bne _02012AFA
	mov r6, #1
	b _02012AFC
_02012AFA:
	mov r6, #0
_02012AFC:
	cmp r1, r4
	bge _02012B1A
	mov r2, #0
	mov r3, #1
_02012B04:
	cmp r1, r0
	bne _02012B12
	cmp r6, #0
	bne _02012B10
	add r6, r3, #0
	b _02012B12
_02012B10:
	add r6, r2, #0
_02012B12:
	strb r6, [r5, r1]
	add r1, r1, #1
	cmp r1, r4
	blt _02012B04
_02012B1A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02012ACC

	thumb_func_start sub_02012B1C
sub_02012B1C: ; 0x02012B1C
	push {r3, r4, r5, lr}
	sub sp, #0x10
	add r5, r0, #0
	add r4, r1, #0
	mov r1, #0xe2
	ldr r0, [r5, #0x20]
	lsl r1, r1, #2
	bl sub_0201AA8C
	mov r2, #0xe2
	str r0, [r5, #0x14]
	mov r1, #0
	lsl r2, r2, #2
	bl sub_020E5B44
	ldrb r1, [r4, #0xb]
	ldr r0, [r5, #0x14]
	cmp r1, #0
	ldr r1, [r5, #0x10]
	bne _02012B5E
	str r1, [sp]
	ldr r1, [r5, #0x18]
	str r1, [sp, #4]
	ldr r1, [r5, #0x1c]
	str r1, [sp, #8]
	ldr r1, [r5, #0x20]
	str r1, [sp, #0xc]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	add r1, r4, #0
	bl sub_02012BE8
	b _02012B76
_02012B5E:
	str r1, [sp]
	ldr r1, [r5, #0x18]
	str r1, [sp, #4]
	ldr r1, [r5, #0x1c]
	str r1, [sp, #8]
	ldr r1, [r5, #0x20]
	str r1, [sp, #0xc]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	add r1, r4, #0
	bl sub_02012CDC
_02012B76:
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02012B1C

	thumb_func_start sub_02012B80
sub_02012B80: ; 0x02012B80
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r1, [r5, #0xc]
	mov r4, #0
	ldr r0, [r5, #0x14]
	cmp r1, #1
	beq _02012B98
	cmp r1, #2
	beq _02012BC4
	cmp r1, #3
	beq _02012BD6
	b _02012BDA
_02012B98:
	ldr r1, _02012BE4 ; =0x00000386
	ldrb r1, [r0, r1]
	cmp r1, #0
	bne _02012BA8
	add r1, r5, #0
	bl sub_02012C68
	b _02012BAE
_02012BA8:
	add r1, r5, #0
	bl sub_02012D4C
_02012BAE:
	cmp r0, #1
	bne _02012BDE
	ldr r0, [r5, #0x28]
	ldr r1, [r5, #0x18]
	ldr r2, [r5, #0x10]
	bl sub_02010F34
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _02012BDE
_02012BC4:
	bl sub_0201AB0C
	add r0, r4, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	mov r4, #1
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _02012BDE
_02012BD6:
	mov r4, #1
	b _02012BDE
_02012BDA:
	bl GF_AssertFail
_02012BDE:
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	nop
_02012BE4: .word 0x00000386
	thumb_func_end sub_02012B80

	thumb_func_start sub_02012BE8
sub_02012BE8: ; 0x02012BE8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r4, r1, #0
	add r6, r2, #0
	add r5, r0, #0
	lsl r0, r6, #0xc
	ldr r2, [r4, #0x14]
	add r7, r3, #0
	asr r1, r0, #0x1f
	asr r3, r2, #0x1f
	bl sub_020F2948
	add r2, r0, #0
	mov r0, #2
	mov r3, #0
	lsl r0, r0, #0xa
	add r0, r2, r0
	adc r1, r3
	lsl r1, r1, #0x14
	lsr r0, r0, #0xc
	orr r0, r1
	asr r2, r0, #0xc
	mov r0, #0xe1
	sub r1, r6, r2
	lsl r0, r0, #2
	strb r1, [r5, r0]
	sub r1, r0, #4
	str r4, [r5, r1]
	ldrb r1, [r4, #0xb]
	add r0, r0, #2
	add r3, r7, #0
	strb r1, [r5, r0]
	ldr r0, [sp, #0x20]
	add r1, r4, #0
	str r0, [sp]
	ldr r0, [sp, #0x24]
	str r0, [sp, #4]
	add r0, r5, #0
	bl sub_020117A0
	ldrb r0, [r4, #8]
	cmp r0, #0
	bne _02012C4C
	ldrb r3, [r4, #0xb]
	ldr r0, [sp, #0x24]
	ldr r2, [sp, #0x20]
	mov r1, #1
	bl sub_02011068
	b _02012C58
_02012C4C:
	ldrb r3, [r4, #0xb]
	ldr r0, [sp, #0x24]
	ldr r2, [sp, #0x20]
	mov r1, #2
	bl sub_02011068
_02012C58:
	ldr r0, _02012C64 ; =0x00000385
	mov r1, #0
	strb r1, [r5, r0]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02012C64: .word 0x00000385
	thumb_func_end sub_02012BE8

	thumb_func_start sub_02012C68
sub_02012C68: ; 0x02012C68
	push {r4, r5, r6, lr}
	sub sp, #0x10
	add r4, r1, #0
	ldr r1, _02012CD8 ; =0x00000385
	add r5, r0, #0
	ldrb r1, [r5, r1]
	mov r6, #0
	cmp r1, #0
	beq _02012C84
	cmp r1, #1
	beq _02012CBA
	cmp r1, #2
	beq _02012CD0
	b _02012CD2
_02012C84:
	bl sub_020117FC
	cmp r0, #1
	bne _02012CD2
	ldr r2, _02012CD8 ; =0x00000385
	ldrb r0, [r5, r2]
	sub r1, r2, #5
	add r0, r0, #1
	strb r0, [r5, r2]
	ldr r0, [r4, #0x10]
	sub r2, r2, #1
	str r0, [sp]
	ldr r0, [r4, #0x18]
	str r0, [sp, #4]
	ldr r0, [r4, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r4, #0x20]
	str r0, [sp, #0xc]
	ldr r1, [r5, r1]
	add r0, r5, #0
	ldrb r2, [r5, r2]
	ldr r3, [r4, #8]
	add r0, #0x4c
	add r1, #0xc
	bl sub_02012940
	b _02012CD2
_02012CBA:
	add r0, #0x4c
	bl sub_02012A2C
	cmp r0, #1
	bne _02012CD2
	ldr r0, _02012CD8 ; =0x00000385
	mov r6, #1
	ldrb r1, [r5, r0]
	add r1, r1, #1
	strb r1, [r5, r0]
	b _02012CD2
_02012CD0:
	mov r6, #1
_02012CD2:
	add r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6, pc}
	.align 2, 0
_02012CD8: .word 0x00000385
	thumb_func_end sub_02012C68

	thumb_func_start sub_02012CDC
sub_02012CDC: ; 0x02012CDC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r4, r1, #0
	add r6, r2, #0
	add r5, r0, #0
	lsl r0, r6, #0xc
	ldr r2, [r4, #0x14]
	add r7, r3, #0
	asr r1, r0, #0x1f
	asr r3, r2, #0x1f
	bl sub_020F2948
	add r2, r0, #0
	mov r0, #2
	mov r3, #0
	lsl r0, r0, #0xa
	add r0, r2, r0
	adc r1, r3
	lsl r1, r1, #0x14
	lsr r0, r0, #0xc
	orr r0, r1
	mov r1, #0xe1
	asr r0, r0, #0xc
	lsl r1, r1, #2
	strb r0, [r5, r1]
	ldrb r0, [r5, r1]
	sub r2, r6, r0
	sub r0, r1, #4
	str r4, [r5, r0]
	add r0, r1, #2
	ldrb r3, [r4, #0xb]
	sub r1, r1, #4
	strb r3, [r5, r0]
	ldr r0, [sp, #0x28]
	add r3, r7, #0
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	str r0, [sp, #4]
	ldr r0, [sp, #0x30]
	str r0, [sp, #8]
	ldr r0, [sp, #0x34]
	str r0, [sp, #0xc]
	ldr r1, [r5, r1]
	add r0, r5, #0
	add r0, #0x4c
	add r1, #0xc
	bl sub_02012940
	ldr r0, _02012D48 ; =0x00000385
	mov r1, #0
	strb r1, [r5, r0]
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02012D48: .word 0x00000385
	thumb_func_end sub_02012CDC

	thumb_func_start sub_02012D4C
sub_02012D4C: ; 0x02012D4C
	push {r4, r5, r6, lr}
	sub sp, #8
	add r4, r1, #0
	ldr r1, _02012DD4 ; =0x00000385
	add r5, r0, #0
	ldrb r1, [r5, r1]
	mov r6, #0
	cmp r1, #0
	beq _02012D68
	cmp r1, #1
	beq _02012DB8
	cmp r1, #2
	beq _02012DCC
	b _02012DCE
_02012D68:
	add r0, #0x4c
	bl sub_02012A2C
	cmp r0, #1
	bne _02012DCE
	ldr r2, _02012DD4 ; =0x00000385
	ldrb r0, [r5, r2]
	sub r1, r2, #5
	add r0, r0, #1
	strb r0, [r5, r2]
	ldr r0, [r4, #0x10]
	sub r2, r2, #1
	str r0, [sp]
	ldr r0, [r4, #0x18]
	str r0, [sp, #4]
	ldrb r2, [r5, r2]
	ldr r1, [r5, r1]
	ldr r3, [r4, #8]
	add r0, r5, #0
	bl sub_020117A0
	mov r0, #0xe
	lsl r0, r0, #6
	ldr r3, [r5, r0]
	ldrb r0, [r3, #8]
	cmp r0, #0
	ldr r0, [r4, #0x18]
	bne _02012DAC
	ldrb r3, [r3, #0xb]
	ldr r2, [r4, #0x10]
	mov r1, #1
	bl sub_02011068
	b _02012DCE
_02012DAC:
	ldrb r3, [r3, #0xb]
	ldr r2, [r4, #0x10]
	mov r1, #2
	bl sub_02011068
	b _02012DCE
_02012DB8:
	bl sub_020117FC
	cmp r0, #1
	bne _02012DCE
	ldr r0, _02012DD4 ; =0x00000385
	mov r6, #1
	ldrb r1, [r5, r0]
	add r1, r1, #1
	strb r1, [r5, r0]
	b _02012DCE
_02012DCC:
	mov r6, #1
_02012DCE:
	add r0, r6, #0
	add sp, #8
	pop {r4, r5, r6, pc}
	.align 2, 0
_02012DD4: .word 0x00000385
	thumb_func_end sub_02012D4C

	thumb_func_start sub_02012DD8
sub_02012DD8: ; 0x02012DD8
	push {r3, r4, r5, lr}
	sub sp, #0x10
	add r5, r0, #0
	ldr r0, [r5, #0x20]
	add r4, r1, #0
	mov r1, #0x4c
	bl sub_0201AA8C
	str r0, [r5, #0x14]
	ldr r0, [r5, #0x10]
	add r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	bl sub_02012E6C
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02012DD8

	thumb_func_start sub_02012E10
sub_02012E10: ; 0x02012E10
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	mov r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _02012E28
	cmp r0, #2
	beq _02012E44
	cmp r0, #3
	beq _02012E5E
	b _02012E62
_02012E28:
	add r0, r4, #0
	bl sub_02012F54
	cmp r0, #1
	bne _02012E66
	ldr r0, [r4, #0x34]
	ldr r1, [r4, #0x44]
	ldr r2, [r5, #0x10]
	bl sub_02010F34
	ldr r0, [r5, #0xc]
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _02012E66
_02012E44:
	add r0, r4, #0
	bl sub_02010EC8
	ldr r0, [r5, #0x14]
	bl sub_0201AB0C
	add r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	mov r6, #1
	add r0, r0, #1
	str r0, [r5, #0xc]
	b _02012E66
_02012E5E:
	mov r6, #1
	b _02012E66
_02012E62:
	bl GF_AssertFail
_02012E66:
	add r0, r6, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_02012E10

	thumb_func_start sub_02012E6C
sub_02012E6C: ; 0x02012E6C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	add r4, r1, #0
	ldr r6, [sp, #0x38]
	str r3, [sp, #0x1c]
	str r2, [sp, #0x18]
	ldrb r1, [r4, #8]
	ldr r3, [sp, #0x44]
	add r2, r6, #0
	add r5, r0, #0
	ldr r7, [sp, #0x3c]
	bl sub_02010E64
	ldr r0, _02012F44 ; =0x007FFF80
	mov r1, #0
	str r0, [r5, #0x14]
	ldrsh r1, [r4, r1]
	lsr r0, r0, #7
	str r1, [r5, #0xc]
	mov r1, #2
	ldrsh r1, [r4, r1]
	str r1, [r5, #0x10]
	ldr r1, [r4, #4]
	str r1, [r5, #0x18]
	ldr r1, [r4, #4]
	str r1, [r5, #0x1c]
	ldr r1, [sp, #0x18]
	bl sub_020F2998
	str r0, [r5, #0x20]
	ldr r0, [sp, #0x18]
	str r0, [r5, #0x24]
	ldr r0, [sp, #0x1c]
	str r0, [r5, #0x28]
	mov r0, #0
	str r0, [r5, #0x2c]
	ldr r0, [sp, #0x40]
	str r7, [r5, #0x44]
	str r0, [r5, #0x48]
	ldr r0, [sp, #0x44]
	str r0, [r5, #0x30]
	ldrb r0, [r4, #0xb]
	str r0, [r5, #0x34]
	ldrb r0, [r4, #8]
	str r0, [r5, #0x38]
	str r6, [r5, #0x3c]
	mov r0, #1
	str r0, [r5, #0x40]
	add r0, r5, #0
	bl sub_020131AC
	ldr r0, _02012F48 ; =sub_02010F00
	ldr r2, _02012F4C ; =0x000003FF
	add r1, r5, #0
	bl sub_0200E374
	add r0, r5, #0
	mov r1, #0
	bl sub_02010EE0
	mov r1, #3
	str r6, [sp]
	lsl r1, r1, #8
	ldrsh r1, [r0, r1]
	str r1, [sp, #4]
	mov r1, #0
	str r1, [sp, #8]
	mov r1, #0x12
	lsl r1, r1, #6
	ldrsh r0, [r0, r1]
	str r0, [sp, #0xc]
	mov r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x34]
	str r0, [sp, #0x14]
	ldrb r1, [r4, #9]
	ldrb r2, [r4, #0xa]
	ldrb r3, [r4, #8]
	add r0, r7, #0
	bl sub_02010F84
	ldrb r0, [r4, #8]
	cmp r0, #0
	bne _02012F22
	ldr r3, [r5, #0x34]
	add r0, r7, #0
	mov r1, #1
	add r2, r6, #0
	bl sub_02011068
	b _02012F2E
_02012F22:
	ldr r3, [r5, #0x34]
	add r0, r7, #0
	mov r1, #2
	add r2, r6, #0
	bl sub_02011068
_02012F2E:
	ldr r0, [sp, #0x44]
	ldr r2, _02012F50 ; =sub_02010C38
	str r0, [sp]
	ldr r0, [r5, #0x48]
	add r1, r5, #0
	add r3, r6, #0
	bl sub_0200FF88
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02012F44: .word 0x007FFF80
_02012F48: .word sub_02010F00
_02012F4C: .word 0x000003FF
_02012F50: .word sub_02010C38
	thumb_func_end sub_02012E6C

	thumb_func_start sub_02012F54
sub_02012F54: ; 0x02012F54
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x2c]
	add r1, r0, #1
	str r1, [r4, #0x2c]
	ldr r0, [r4, #0x28]
	cmp r1, r0
	blt _02012FF0
	mov r0, #0
	str r0, [r4, #0x2c]
	ldr r0, [r4, #0x24]
	sub r0, r0, #1
	cmp r0, #0
	ble _02012FE2
	ldr r2, [r4, #0x1c]
	ldr r1, [r4, #0x20]
	add r0, r4, #0
	add r1, r2, r1
	str r1, [r4, #0x1c]
	ldr r1, [r4, #0x24]
	ldr r2, _02012FF4 ; =0x0000FFFF
	sub r1, r1, #1
	str r1, [r4, #0x24]
	ldr r1, [r4, #0x1c]
	add r0, #0x1c
	cmp r1, r2
	blt _02012F98
	add r3, r2, #0
_02012F8C:
	ldr r1, [r0]
	sub r1, r1, r2
	str r1, [r0]
	ldr r1, [r4, #0x1c]
	cmp r1, r3
	bge _02012F8C
_02012F98:
	cmp r1, #0
	bge _02012FAE
	add r2, r4, #0
	ldr r0, _02012FF4 ; =0x0000FFFF
	add r2, #0x1c
_02012FA2:
	ldr r1, [r2]
	add r1, r1, r0
	str r1, [r2]
	ldr r1, [r4, #0x1c]
	cmp r1, #0
	blt _02012FA2
_02012FAE:
	ldr r0, _02012FF8 ; =0x00007FFF
	cmp r1, r0
	blt _02012FD0
	ldr r0, [r4, #0x18]
	cmp r1, r0
	bge _02012FD0
	ldr r0, [r4, #0x40]
	cmp r0, #1
	bne _02012FD0
	ldr r0, [r4, #0x44]
	ldr r1, [r4, #0x38]
	ldr r2, [r4, #0x3c]
	ldr r3, [r4, #0x34]
	bl sub_02010FEC
	mov r0, #0
	str r0, [r4, #0x40]
_02012FD0:
	add r0, r4, #0
	bl sub_020131AC
	ldr r0, _02012FFC ; =sub_02010F00
	ldr r2, _02013000 ; =0x000003FF
	add r1, r4, #0
	bl sub_0200E374
	b _02012FF0
_02012FE2:
	ldr r0, [r4, #0x48]
	ldr r1, [r4, #8]
	ldr r2, [r4, #0x30]
	bl sub_0200FFB4
	mov r0, #1
	pop {r4, pc}
_02012FF0:
	mov r0, #0
	pop {r4, pc}
	.align 2, 0
_02012FF4: .word 0x0000FFFF
_02012FF8: .word 0x00007FFF
_02012FFC: .word sub_02010F00
_02013000: .word 0x000003FF
	thumb_func_end sub_02012F54

	thumb_func_start sub_02013004
sub_02013004: ; 0x02013004
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	ldr r0, [sp, #0x28]
	add r5, r3, #0
	str r0, [sp, #0x10]
	asr r0, r0, #4
	add r4, r2, #0
	lsl r2, r0, #1
	add r0, r2, #1
	str r1, [sp]
	lsl r1, r0, #1
	ldr r0, _020131A4 ; =0x021094DC
	ldr r3, [sp, #0x2c]
	ldrsh r1, [r0, r1]
	ldr r0, _020131A8 ; =0x0000FFFF
	ldr r6, [sp, #0x30]
	mul r0, r1
	asr r1, r0, #0xc
	ldr r0, [sp]
	ldr r7, [sp, #0x34]
	add r0, r0, r1
	str r0, [sp, #0xc]
	ldr r0, _020131A4 ; =0x021094DC
	lsl r1, r2, #1
	ldrsh r1, [r0, r1]
	ldr r0, _020131A8 ; =0x0000FFFF
	mul r0, r1
	asr r0, r0, #0xc
	add r1, r4, r0
	asr r0, r3, #4
	lsl r0, r0, #1
	mov ip, r0
	add r0, r0, #1
	lsl r2, r0, #1
	ldr r0, _020131A4 ; =0x021094DC
	ldrsh r2, [r0, r2]
	ldr r0, _020131A8 ; =0x0000FFFF
	mul r0, r2
	asr r2, r0, #0xc
	ldr r0, [sp]
	add r0, r0, r2
	str r0, [sp, #8]
	mov r0, ip
	lsl r2, r0, #1
	ldr r0, _020131A4 ; =0x021094DC
	ldrsh r2, [r0, r2]
	ldr r0, _020131A8 ; =0x0000FFFF
	mul r0, r2
	asr r0, r0, #0xc
	add r0, r4, r0
	str r0, [sp, #4]
	ldr r0, [sp, #0x10]
	sub r2, r3, r0
	ldr r0, _020131A8 ; =0x0000FFFF
	lsr r0, r0, #1
	cmp r2, r0
	bne _0201308C
	cmp r5, #0
	blt _0201307E
	cmp r5, r4
	blt _02013080
_0201307E:
	b _020131A0
_02013080:
	mov r0, #0
	str r0, [r6]
	mov r0, #0xff
	add sp, #0x14
	str r0, [r7]
	pop {r4, r5, r6, r7, pc}
_0201308C:
	cmp r3, #0
	blt _02013100
	ldr r0, _020131A8 ; =0x0000FFFF
	lsr r0, r0, #1
	cmp r3, r0
	bge _02013100
	cmp r1, r4
	bge _020130A0
	add r0, r1, #0
	b _020130A2
_020130A0:
	add r0, r4, #0
_020130A2:
	cmp r1, r4
	ble _020130AA
	add r2, r1, #0
	b _020130AC
_020130AA:
	add r2, r4, #0
_020130AC:
	cmp r0, r5
	bgt _020130CC
	cmp r5, r2
	bgt _020130CC
	ldr r2, [sp, #0xc]
	ldr r0, [sp]
	sub r2, r2, r0
	sub r0, r5, r1
	mul r0, r2
	sub r1, r1, r4
	bl sub_020F2998
	ldr r1, [sp, #0xc]
	add r0, r1, r0
	str r0, [r6]
	b _020130E6
_020130CC:
	ldr r1, [sp, #8]
	ldr r0, [sp]
	sub r1, r1, r0
	ldr r0, [sp, #4]
	sub r0, r5, r0
	mul r0, r1
	ldr r1, [sp, #4]
	sub r1, r1, r4
	bl sub_020F2998
	ldr r1, [sp, #8]
	add r0, r1, r0
	str r0, [r6]
_020130E6:
	ldr r0, [r6]
	cmp r0, #0xff
	ble _020130F0
	mov r0, #0xff
	b _020130F6
_020130F0:
	cmp r0, #0
	bge _020130F6
	mov r0, #0
_020130F6:
	str r0, [r6]
	mov r0, #0xff
	add sp, #0x14
	str r0, [r7]
	pop {r4, r5, r6, r7, pc}
_02013100:
	cmp r1, r4
	bge _02013108
	add r0, r1, #0
	b _0201310A
_02013108:
	add r0, r4, #0
_0201310A:
	cmp r1, r4
	ble _02013112
	add r2, r1, #0
	b _02013114
_02013112:
	add r2, r4, #0
_02013114:
	cmp r0, r5
	bgt _02013144
	cmp r5, r2
	bgt _02013144
	ldr r2, [sp, #0xc]
	ldr r0, [sp]
	sub r2, r2, r0
	sub r0, r5, r1
	mul r0, r2
	sub r1, r1, r4
	bl sub_020F2998
	ldr r1, [sp, #0xc]
	add r0, r1, r0
	str r0, [r6]
	cmp r0, #0xff
	ble _0201313A
	mov r0, #0xff
	b _02013140
_0201313A:
	cmp r0, #0
	bge _02013140
	mov r0, #0
_02013140:
	str r0, [r6]
	b _02013148
_02013144:
	mov r0, #0
	str r0, [r6]
_02013148:
	ldr r0, [sp, #4]
	cmp r0, r4
	bge _02013152
	add r1, r0, #0
	b _02013154
_02013152:
	add r1, r4, #0
_02013154:
	ldr r0, [sp, #4]
	cmp r0, r4
	bgt _0201315C
	add r0, r4, #0
_0201315C:
	cmp r1, r5
	bgt _02013190
	cmp r5, r0
	bgt _02013190
	ldr r1, [sp, #8]
	ldr r0, [sp]
	sub r1, r1, r0
	ldr r0, [sp, #4]
	sub r0, r5, r0
	mul r0, r1
	ldr r1, [sp, #4]
	sub r1, r1, r4
	bl sub_020F2998
	ldr r1, [sp, #8]
	add r0, r1, r0
	str r0, [r7]
	cmp r0, #0xff
	ble _02013186
	mov r0, #0xff
	b _0201318C
_02013186:
	cmp r0, #0
	bge _0201318C
	mov r0, #0
_0201318C:
	str r0, [r7]
	b _02013194
_02013190:
	ldr r0, [r6]
	str r0, [r7]
_02013194:
	ldr r1, [r7]
	ldr r0, [r6]
	cmp r0, r1
	ble _020131A0
	str r1, [r6]
	str r0, [r7]
_020131A0:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_020131A4: .word 0x021094DC
_020131A8: .word 0x0000FFFF
	thumb_func_end sub_02013004

	thumb_func_start sub_020131AC
sub_020131AC: ; 0x020131AC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	mov r1, #0
	add r5, r0, #0
	bl sub_02010EE0
	add r4, r0, #0
	mov r6, #0
	add r7, sp, #0x14
_020131BE:
	ldr r0, [r5, #0x18]
	add r3, r6, #0
	str r0, [sp]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #4]
	str r7, [sp, #8]
	add r0, sp, #0x10
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, [r5, #0xc]
	ldr r2, [r5, #0x10]
	bl sub_02013004
	mov r0, #3
	ldr r1, [sp, #0x14]
	lsl r0, r0, #8
	strh r1, [r4, r0]
	mov r0, #0x12
	ldr r1, [sp, #0x10]
	lsl r0, r0, #6
	strh r1, [r4, r0]
	add r6, r6, #1
	add r4, r4, #2
	cmp r6, #0xc0
	blt _020131BE
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_020131AC

	thumb_func_start sub_020131F4
sub_020131F4: ; 0x020131F4
	cmp r1, #0
	ldr r1, _02013218 ; =0xFFFF1FFF
	bne _0201320A
	mov r3, #1
	lsl r3, r3, #0x1a
	ldr r2, [r3]
	lsl r0, r0, #0xd
	and r1, r2
	orr r0, r1
	str r0, [r3]
	bx lr
_0201320A:
	ldr r3, _0201321C ; =0x04001000
	lsl r0, r0, #0xd
	ldr r2, [r3]
	and r1, r2
	orr r0, r1
	str r0, [r3]
	bx lr
	.align 2, 0
_02013218: .word 0xFFFF1FFF
_0201321C: .word 0x04001000
	thumb_func_end sub_020131F4

	thumb_func_start sub_02013220
sub_02013220: ; 0x02013220
	push {r3, r4}
	cmp r2, #0
	bne _02013262
	cmp r3, #0
	bne _02013246
	ldr r2, _0201329C ; =0x04000048
	ldrh r3, [r2]
	mov r2, #0x3f
	bic r3, r2
	add r2, r3, #0
	orr r2, r0
	cmp r1, #0
	beq _0201323E
	mov r0, #0x20
	orr r2, r0
_0201323E:
	ldr r0, _0201329C ; =0x04000048
	strh r2, [r0]
	pop {r3, r4}
	bx lr
_02013246:
	ldr r2, _020132A0 ; =0x04001048
	ldrh r3, [r2]
	mov r2, #0x3f
	bic r3, r2
	add r2, r3, #0
	orr r2, r0
	cmp r1, #0
	beq _0201325A
	mov r0, #0x20
	orr r2, r0
_0201325A:
	ldr r0, _020132A0 ; =0x04001048
	strh r2, [r0]
	pop {r3, r4}
	bx lr
_02013262:
	cmp r3, #0
	ldr r2, _020132A4 ; =0xFFFFC0FF
	bne _02013282
	ldr r4, _0201329C ; =0x04000048
	lsl r0, r0, #8
	ldrh r3, [r4]
	and r2, r3
	orr r2, r0
	cmp r1, #0
	beq _0201327A
	lsr r0, r4, #0xd
	orr r2, r0
_0201327A:
	ldr r0, _0201329C ; =0x04000048
	strh r2, [r0]
	pop {r3, r4}
	bx lr
_02013282:
	ldr r4, _020132A0 ; =0x04001048
	lsl r0, r0, #8
	ldrh r3, [r4]
	and r2, r3
	orr r2, r0
	cmp r1, #0
	beq _02013294
	lsr r0, r4, #0xd
	orr r2, r0
_02013294:
	ldr r0, _020132A0 ; =0x04001048
	strh r2, [r0]
	pop {r3, r4}
	bx lr
	.align 2, 0
_0201329C: .word 0x04000048
_020132A0: .word 0x04001048
_020132A4: .word 0xFFFFC0FF
	thumb_func_end sub_02013220

	thumb_func_start sub_020132A8
sub_020132A8: ; 0x020132A8
	cmp r2, #0
	bne _020132C6
	ldr r2, _020132E0 ; =0x0400004A
	ldrh r3, [r2]
	mov r2, #0x3f
	bic r3, r2
	add r2, r3, #0
	orr r2, r0
	cmp r1, #0
	beq _020132C0
	mov r0, #0x20
	orr r2, r0
_020132C0:
	ldr r0, _020132E0 ; =0x0400004A
	strh r2, [r0]
	bx lr
_020132C6:
	ldr r2, _020132E4 ; =0x0400104A
	ldrh r3, [r2]
	mov r2, #0x3f
	bic r3, r2
	add r2, r3, #0
	orr r2, r0
	cmp r1, #0
	beq _020132DA
	mov r0, #0x20
	orr r2, r0
_020132DA:
	ldr r0, _020132E4 ; =0x0400104A
	strh r2, [r0]
	bx lr
	.align 2, 0
_020132E0: .word 0x0400004A
_020132E4: .word 0x0400104A
	thumb_func_end sub_020132A8

	thumb_func_start sub_020132E8
sub_020132E8: ; 0x020132E8
	push {r3}
	sub sp, #4
	cmp r0, #0
	bne _02013308
	cmp r1, #0
	bne _020132FE
	ldr r0, _0201332C ; =0x04000048
	ldrb r1, [r0]
	add r0, sp, #0
	strb r1, [r0]
	b _0201331E
_020132FE:
	ldr r0, _02013330 ; =0x04001048
	ldrb r1, [r0]
	add r0, sp, #0
	strb r1, [r0]
	b _0201331E
_02013308:
	cmp r1, #0
	bne _02013316
	ldr r0, _02013334 ; =0x04000049
	ldrb r1, [r0]
	add r0, sp, #0
	strb r1, [r0]
	b _0201331E
_02013316:
	ldr r0, _02013338 ; =0x04001049
	ldrb r1, [r0]
	add r0, sp, #0
	strb r1, [r0]
_0201331E:
	add r1, sp, #0
	mov r0, #0
	ldrsb r0, [r1, r0]
	add sp, #4
	pop {r3}
	bx lr
	nop
_0201332C: .word 0x04000048
_02013330: .word 0x04001048
_02013334: .word 0x04000049
_02013338: .word 0x04001049
	thumb_func_end sub_020132E8

	thumb_func_start sub_0201333C
sub_0201333C: ; 0x0201333C
	push {r3}
	sub sp, #4
	cmp r0, #0
	bne _02013348
	ldr r0, _0201335C ; =0x0400004A
	b _0201334A
_02013348:
	ldr r0, _02013360 ; =0x0400104A
_0201334A:
	ldrb r1, [r0]
	add r0, sp, #0
	strb r1, [r0]
	add r1, sp, #0
	mov r0, #0
	ldrsb r0, [r1, r0]
	add sp, #4
	pop {r3}
	bx lr
	.align 2, 0
_0201335C: .word 0x0400004A
_02013360: .word 0x0400104A
	thumb_func_end sub_0201333C

	thumb_func_start sub_02013364
sub_02013364: ; 0x02013364
	push {r4, r5}
	add r4, r2, #0
	add r2, r3, #0
	ldr r3, [sp, #8]
	cmp r3, #0
	bne _020133C2
	ldr r3, [sp, #0xc]
	cmp r3, #0
	bne _0201339C
	lsl r0, r0, #8
	mov r3, #0xff
	add r5, r0, #0
	lsl r3, r3, #8
	lsl r0, r4, #0x18
	and r5, r3
	lsl r1, r1, #8
	and r3, r1
	lsl r1, r2, #0x18
	lsr r1, r1, #0x18
	lsr r0, r0, #0x18
	add r4, r5, #0
	orr r4, r0
	ldr r0, _02013414 ; =0x04000040
	orr r1, r3
	strh r4, [r0]
	strh r1, [r0, #4]
	pop {r4, r5}
	bx lr
_0201339C:
	lsl r0, r0, #8
	mov r3, #0xff
	add r5, r0, #0
	lsl r3, r3, #8
	lsl r0, r4, #0x18
	and r5, r3
	lsl r1, r1, #8
	and r3, r1
	lsl r1, r2, #0x18
	lsr r1, r1, #0x18
	lsr r0, r0, #0x18
	add r4, r5, #0
	orr r4, r0
	ldr r0, _02013418 ; =0x04001040
	orr r1, r3
	strh r4, [r0]
	strh r1, [r0, #4]
	pop {r4, r5}
	bx lr
_020133C2:
	ldr r3, [sp, #0xc]
	cmp r3, #0
	bne _020133EE
	lsl r0, r0, #8
	mov r3, #0xff
	add r5, r0, #0
	lsl r3, r3, #8
	lsl r0, r4, #0x18
	and r5, r3
	lsl r1, r1, #8
	and r3, r1
	lsl r1, r2, #0x18
	lsr r1, r1, #0x18
	lsr r0, r0, #0x18
	add r4, r5, #0
	orr r4, r0
	ldr r0, _0201341C ; =0x04000042
	orr r1, r3
	strh r4, [r0]
	strh r1, [r0, #4]
	pop {r4, r5}
	bx lr
_020133EE:
	lsl r0, r0, #8
	mov r3, #0xff
	add r5, r0, #0
	lsl r3, r3, #8
	lsl r0, r4, #0x18
	and r5, r3
	lsl r1, r1, #8
	and r3, r1
	lsl r1, r2, #0x18
	lsr r1, r1, #0x18
	lsr r0, r0, #0x18
	add r4, r5, #0
	orr r4, r0
	ldr r0, _02013420 ; =0x04001042
	orr r1, r3
	strh r4, [r0]
	strh r1, [r0, #4]
	pop {r4, r5}
	bx lr
	.align 2, 0
_02013414: .word 0x04000040
_02013418: .word 0x04001040
_0201341C: .word 0x04000042
_02013420: .word 0x04001042
	thumb_func_end sub_02013364

	thumb_func_start sub_02013424
sub_02013424: ; 0x02013424
	push {r4, lr}
	lsl r3, r2, #3
	add r4, r0, r3
	str r1, [r0, r3]
	str r2, [r4, #4]
	ldr r0, _0201343C ; =sub_020134BC
	add r1, r4, #0
	mov r2, #1
	bl sub_0200E374
	pop {r4, pc}
	nop
_0201343C: .word sub_020134BC
	thumb_func_end sub_02013424

	thumb_func_start sub_02013440
sub_02013440: ; 0x02013440
	push {r4, r5, r6, lr}
	ldr r5, [sp, #0x10]
	add r0, #0x10
	lsl r4, r5, #5
	add r6, r0, r4
	lsl r0, r3, #4
	add r4, r6, r0
	str r1, [r6, r0]
	str r2, [r4, #4]
	str r3, [r4, #8]
	ldr r0, _02013464 ; =sub_020134D0
	add r1, r4, #0
	mov r2, #1
	str r5, [r4, #0xc]
	bl sub_0200E374
	pop {r4, r5, r6, pc}
	nop
_02013464: .word sub_020134D0
	thumb_func_end sub_02013440

	thumb_func_start sub_02013468
sub_02013468: ; 0x02013468
	push {r3, r4, r5, lr}
	mov r4, #0xc
	add r0, #0x68
	mul r4, r3
	add r5, r0, r4
	str r1, [r0, r4]
	str r2, [r5, #4]
	ldr r0, _02013484 ; =sub_020134EC
	add r1, r5, #0
	mov r2, #1
	str r3, [r5, #8]
	bl sub_0200E374
	pop {r3, r4, r5, pc}
	.align 2, 0
_02013484: .word sub_020134EC
	thumb_func_end sub_02013468

	thumb_func_start sub_02013488
sub_02013488: ; 0x02013488
	push {r3, r4, r5, r6, r7, lr}
	ldr r5, [sp, #0x20]
	add r7, r1, #0
	add r0, #0x80
	lsl r1, r5, #5
	add r6, r0, r1
	add r4, r2, #0
	ldr r0, [sp, #0x1c]
	add r2, r3, #0
	lsl r3, r0, #4
	add r1, r6, r3
	strh r7, [r6, r3]
	strh r4, [r1, #2]
	strh r2, [r1, #4]
	ldr r2, [sp, #0x18]
	strh r2, [r1, #6]
	str r0, [r1, #8]
	ldr r0, _020134B8 ; =sub_02013504
	mov r2, #1
	str r5, [r1, #0xc]
	bl sub_0200E374
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020134B8: .word sub_02013504
	thumb_func_end sub_02013488

	thumb_func_start sub_020134BC
sub_020134BC: ; 0x020134BC
	push {r4, lr}
	add r4, r0, #0
	ldmia r1!, {r0, r1}
	bl sub_020131F4
	add r0, r4, #0
	bl sub_0200E390
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020134BC

	thumb_func_start sub_020134D0
sub_020134D0: ; 0x020134D0
	push {r4, lr}
	add r3, r1, #0
	add r4, r0, #0
	ldr r0, [r3]
	ldr r1, [r3, #4]
	ldr r2, [r3, #8]
	ldr r3, [r3, #0xc]
	bl sub_02013220
	add r0, r4, #0
	bl sub_0200E390
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020134D0

	thumb_func_start sub_020134EC
sub_020134EC: ; 0x020134EC
	push {r4, lr}
	add r2, r1, #0
	add r4, r0, #0
	ldr r0, [r2]
	ldr r1, [r2, #4]
	ldr r2, [r2, #8]
	bl sub_020132A8
	add r0, r4, #0
	bl sub_0200E390
	pop {r4, pc}
	thumb_func_end sub_020134EC

	thumb_func_start sub_02013504
sub_02013504: ; 0x02013504
	push {r3, r4, r5, lr}
	sub sp, #8
	add r3, r1, #0
	add r4, r0, #0
	ldr r0, [r3, #8]
	mov r1, #2
	str r0, [sp]
	ldr r0, [r3, #0xc]
	mov r2, #4
	str r0, [sp, #4]
	mov r0, #0
	mov r5, #6
	ldrsh r0, [r3, r0]
	ldrsh r1, [r3, r1]
	ldrsh r2, [r3, r2]
	ldrsh r3, [r3, r5]
	bl sub_02013364
	add r0, r4, #0
	bl sub_0200E390
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02013504

	thumb_func_start sub_02013534
sub_02013534: ; 0x02013534
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r7, r1, #0
	str r0, [sp, #4]
	add r0, r7, #0
	mov r1, #0x68
	bl sub_0201AA8C
	str r0, [sp, #8]
	cmp r0, #0
	bne _0201354E
	bl GF_AssertFail
_0201354E:
	ldr r4, [sp, #8]
	ldr r5, [sp, #8]
	mov r6, #0
	add r4, #0x30
_02013556:
	mov r0, #0x23
	add r1, r6, #0
	mov r2, #0
	add r3, r4, #0
	str r7, [sp]
	bl sub_02007A0C
	str r0, [r5]
	cmp r0, #0
	bne _0201356E
	bl GF_AssertFail
_0201356E:
	add r6, r6, #1
	add r4, r4, #4
	add r5, r5, #4
	cmp r6, #0xc
	blt _02013556
	ldr r0, [sp, #4]
	mov r1, #0x14
	add r4, r0, #0
	mul r4, r1
	add r0, r7, #0
	add r1, r4, #0
	bl sub_0201AA8C
	ldr r1, [sp, #8]
	cmp r0, #0
	str r0, [r1, #0x60]
	bne _02013594
	bl GF_AssertFail
_02013594:
	ldr r1, [sp, #4]
	ldr r0, [sp, #8]
	add r2, r4, #0
	str r1, [r0, #0x64]
	ldr r0, [r0, #0x60]
	mov r1, #0
	bl sub_020E5B44
	ldr r0, [sp, #8]
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02013534

	thumb_func_start sub_020135AC
sub_020135AC: ; 0x020135AC
	push {r4, r5, r6, lr}
	add r6, r0, #0
	bne _020135B6
	bl GF_AssertFail
_020135B6:
	mov r4, #0
	add r5, r6, #0
_020135BA:
	ldr r0, [r5]
	bl sub_0201AB0C
	add r4, r4, #1
	add r5, r5, #4
	cmp r4, #0xc
	blt _020135BA
	ldr r0, [r6, #0x60]
	bl sub_0201AB0C
	add r0, r6, #0
	bl sub_0201AB0C
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_020135AC

	thumb_func_start sub_020135D8
sub_020135D8: ; 0x020135D8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	add r5, r0, #0
	bne _020135E4
	bl GF_AssertFail
_020135E4:
	ldr r0, [r5]
	bl sub_02013AD0
	add r4, r0, #0
	bne _020135F2
	bl GF_AssertFail
_020135F2:
	ldr r0, [r5, #0x10]
	add r3, sp, #8
	str r0, [r4, #8]
	ldr r0, [r5, #0x18]
	str r0, [r4, #0xc]
	ldr r0, [r5, #0x1c]
	str r0, [r4, #0x10]
	str r3, [sp, #0x14]
	str r3, [sp, #0x18]
	ldr r1, [r5, #4]
	ldr r2, [r5, #0x2c]
	ldrb r0, [r1, #7]
	ldrb r1, [r1, #8]
	bl sub_02013BD4
	add r6, r0, #0
	mov r1, #0x24
	ldr r0, [r5, #0x2c]
	mul r1, r6
	bl sub_0201AACC
	add r7, r0, #0
	mov r1, #0xc
	ldr r0, [r5, #0x2c]
	mul r1, r6
	bl sub_0201AA8C
	str r0, [r4]
	str r6, [r4, #4]
	ldr r0, [r5, #0x28]
	add r1, sp, #8
	str r0, [sp]
	ldr r0, [r5, #0x2c]
	add r2, r7, #0
	str r0, [sp, #4]
	ldr r0, [r5, #4]
	ldr r3, [r5, #0x14]
	bl sub_02013C5C
	add r0, r5, #0
	add r1, sp, #8
	add r2, r7, #0
	add r3, r4, #0
	bl sub_02013E78
	add r0, r7, #0
	bl sub_0201AB0C
	add r0, sp, #8
	bl sub_02013FA8
	add r0, r4, #0
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_020135D8

	thumb_func_start sub_02013660
sub_02013660: ; 0x02013660
	push {r4, lr}
	add r4, r0, #0
	bne _0201366A
	bl GF_AssertFail
_0201366A:
	ldr r0, [r4]
	cmp r0, #0
	bne _02013674
	bl GF_AssertFail
_02013674:
	add r0, r4, #0
	bl sub_02013ECC
	ldr r0, [r4]
	bl sub_0201AB0C
	add r0, r4, #0
	bl sub_02013AC0
	pop {r4, pc}
	thumb_func_end sub_02013660

	thumb_func_start sub_02013688
sub_02013688: ; 0x02013688
	push {r4, r5, lr}
	sub sp, #0x14
	add r3, sp, #0
	add r5, r0, #0
	str r3, [sp, #0xc]
	str r3, [sp, #0x10]
	add r4, r1, #0
	ldrb r0, [r5, #7]
	ldrb r1, [r5, #8]
	bl sub_02013BD4
	add r0, sp, #0
	add r1, r4, #0
	bl sub_02013E24
	add r4, r0, #0
	add r0, sp, #0
	bl sub_02013FA8
	add r0, r4, #0
	add sp, #0x14
	pop {r4, r5, pc}
	thumb_func_end sub_02013688

	thumb_func_start sub_020136B4
sub_020136B4: ; 0x020136B4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r5, r0, #0
	add r7, r2, #0
	str r1, [sp]
	cmp r5, #0
	bne _020136C6
	bl GF_AssertFail
_020136C6:
	ldr r0, [sp]
	str r0, [r5, #0xc]
	str r7, [r5, #0x10]
	lsl r0, r0, #0xc
	str r0, [sp]
	ldr r0, [r5, #8]
	lsl r7, r7, #0xc
	cmp r0, #0
	beq _020136E8
	bl sub_020248AC
	ldr r2, [r0]
	ldr r1, [sp]
	ldr r0, [r0, #4]
	add r1, r1, r2
	str r1, [sp]
	add r7, r7, r0
_020136E8:
	mov r6, #0
	str r6, [sp, #0xc]
	ldr r0, [r5, #4]
	cmp r0, #0
	ble _02013722
	add r4, r6, #0
_020136F4:
	ldr r0, [r5]
	add r0, r0, r4
	ldr r0, [r0, #4]
	lsl r1, r0, #0xc
	ldr r0, [sp]
	add r0, r0, r1
	str r0, [sp, #4]
	ldr r0, [r5]
	add r1, sp, #4
	add r0, r0, r4
	ldr r0, [r0, #8]
	lsl r0, r0, #0xc
	add r0, r7, r0
	str r0, [sp, #8]
	ldr r0, [r5]
	ldr r0, [r0, r4]
	bl sub_020247D4
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, #0xc
	cmp r6, r0
	blt _020136F4
_02013722:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_020136B4

	thumb_func_start sub_02013728
sub_02013728: ; 0x02013728
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r5, r0, #0
	bne _02013734
	bl GF_AssertFail
_02013734:
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _0201378E
	ldr r1, [r5, #0xc]
	lsl r1, r1, #0xc
	str r1, [sp]
	ldr r1, [r5, #0x10]
	lsl r7, r1, #0xc
	bl sub_020248AC
	ldr r2, [r0]
	ldr r0, [r0, #4]
	mov r6, #0
	ldr r1, [sp]
	str r6, [sp, #0xc]
	add r7, r7, r0
	add r1, r1, r2
	ldr r0, [r5, #4]
	str r1, [sp]
	cmp r0, #0
	ble _0201378E
	add r4, r6, #0
_02013760:
	ldr r0, [r5]
	add r0, r0, r4
	ldr r0, [r0, #4]
	lsl r1, r0, #0xc
	ldr r0, [sp]
	add r0, r0, r1
	str r0, [sp, #4]
	ldr r0, [r5]
	add r1, sp, #4
	add r0, r0, r4
	ldr r0, [r0, #8]
	lsl r0, r0, #0xc
	add r0, r7, r0
	str r0, [sp, #8]
	ldr r0, [r5]
	ldr r0, [r0, r4]
	bl sub_020247D4
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, #0xc
	cmp r6, r0
	blt _02013760
_0201378E:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02013728

	thumb_func_start sub_02013794
sub_02013794: ; 0x02013794
	push {r4, r5, r6, lr}
	add r5, r0, #0
	add r4, r1, #0
	add r6, r2, #0
	cmp r5, #0
	bne _020137A4
	bl GF_AssertFail
_020137A4:
	cmp r4, #0
	bne _020137AC
	bl GF_AssertFail
_020137AC:
	cmp r6, #0
	bne _020137B4
	bl GF_AssertFail
_020137B4:
	ldr r0, [r5, #0xc]
	str r0, [r4]
	ldr r0, [r5, #0x10]
	str r0, [r6]
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_02013794

	thumb_func_start sub_020137C0
sub_020137C0: ; 0x020137C0
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r7, r1, #0
	cmp r5, #0
	bne _020137CE
	bl GF_AssertFail
_020137CE:
	ldr r0, [r5, #4]
	mov r6, #0
	cmp r0, #0
	ble _020137EC
	add r4, r6, #0
_020137D8:
	ldr r0, [r5]
	add r1, r7, #0
	ldr r0, [r0, r4]
	bl sub_02024830
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, #0xc
	cmp r6, r0
	blt _020137D8
_020137EC:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_020137C0

	thumb_func_start sub_020137F0
sub_020137F0: ; 0x020137F0
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r7, r1, #0
	cmp r5, #0
	bne _020137FE
	bl GF_AssertFail
_020137FE:
	ldr r0, [r5, #4]
	mov r6, #0
	cmp r0, #0
	ble _0201381C
	add r4, r6, #0
_02013808:
	ldr r0, [r5]
	add r1, r7, #0
	ldr r0, [r0, r4]
	bl sub_02024A04
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, #0xc
	cmp r6, r0
	blt _02013808
_0201381C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_020137F0

	thumb_func_start sub_02013820
sub_02013820: ; 0x02013820
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r7, r1, #0
	cmp r5, #0
	bne _0201382E
	bl GF_AssertFail
_0201382E:
	ldr r0, [r5, #4]
	mov r6, #0
	cmp r0, #0
	ble _0201384C
	add r4, r6, #0
_02013838:
	ldr r0, [r5]
	add r1, r7, #0
	ldr r0, [r0, r4]
	bl sub_02024ADC
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, #0xc
	cmp r6, r0
	blt _02013838
_0201384C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02013820

	thumb_func_start sub_02013850
sub_02013850: ; 0x02013850
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r7, r1, #0
	cmp r5, #0
	bne _0201385E
	bl GF_AssertFail
_0201385E:
	ldr r0, [r5, #4]
	mov r6, #0
	cmp r0, #0
	ble _0201387C
	add r4, r6, #0
_02013868:
	ldr r0, [r5]
	add r1, r7, #0
	ldr r0, [r0, r4]
	bl sub_02024A14
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, #0xc
	cmp r6, r0
	blt _02013868
_0201387C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02013850

	thumb_func_start sub_02013880
sub_02013880: ; 0x02013880
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r7, r1, #0
	cmp r5, #0
	bne _0201388E
	bl GF_AssertFail
_0201388E:
	ldr r0, [r5, #4]
	mov r6, #0
	cmp r0, #0
	ble _020138AC
	add r4, r6, #0
_02013898:
	ldr r0, [r5]
	add r1, r7, #0
	ldr r0, [r0, r4]
	bl sub_02024A48
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, #0xc
	cmp r6, r0
	blt _02013898
_020138AC:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02013880

	thumb_func_start sub_020138B0
sub_020138B0: ; 0x020138B0
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r7, r1, #0
	cmp r5, #0
	bne _020138BE
	bl GF_AssertFail
_020138BE:
	ldr r0, [r5, #4]
	mov r6, #0
	cmp r0, #0
	ble _020138DC
	add r4, r6, #0
_020138C8:
	ldr r0, [r5]
	add r1, r7, #0
	ldr r0, [r0, r4]
	bl sub_02024A74
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, #0xc
	cmp r6, r0
	blt _020138C8
_020138DC:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_020138B0

	thumb_func_start sub_020138E0
sub_020138E0: ; 0x020138E0
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r7, r1, #0
	cmp r5, #0
	bne _020138EE
	bl GF_AssertFail
_020138EE:
	ldr r0, [r5, #4]
	mov r6, #0
	cmp r0, #0
	ble _0201390C
	add r4, r6, #0
_020138F8:
	ldr r0, [r5]
	add r1, r7, #0
	ldr r0, [r0, r4]
	bl sub_02024AA8
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, #0xc
	cmp r6, r0
	blt _020138F8
_0201390C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_020138E0

	thumb_func_start sub_02013910
sub_02013910: ; 0x02013910
	push {r4, r5, r6, lr}
	add r6, r1, #0
	add r5, r0, #0
	add r0, r6, #0
	mov r1, #0x18
	bl sub_0201AA8C
	add r4, r0, #0
	str r4, [r4, #0xc]
	str r4, [r4, #0x10]
	ldrb r0, [r5, #7]
	ldrb r1, [r5, #8]
	add r2, r6, #0
	add r3, r4, #0
	bl sub_02013BD4
	str r0, [r4, #0x14]
	add r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_02013910

	thumb_func_start sub_02013938
sub_02013938: ; 0x02013938
	push {r4, lr}
	add r4, r0, #0
	bl sub_02013FA8
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	thumb_func_end sub_02013938

	thumb_func_start sub_02013948
sub_02013948: ; 0x02013948
	ldr r3, _0201394C ; =sub_02013E24
	bx r3
	.align 2, 0
_0201394C: .word sub_02013E24
	thumb_func_end sub_02013948

	thumb_func_start sub_02013950
sub_02013950: ; 0x02013950
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r5, r0, #0
	add r6, r1, #0
	cmp r5, #0
	bne _02013960
	bl GF_AssertFail
_02013960:
	ldr r0, [r5]
	bl sub_02013AD0
	add r4, r0, #0
	bne _0201396E
	bl GF_AssertFail
_0201396E:
	ldr r0, [r5, #0x10]
	mov r1, #0x24
	str r0, [r4, #8]
	ldr r0, [r5, #0x18]
	str r0, [r4, #0xc]
	ldr r0, [r5, #0x1c]
	str r0, [r4, #0x10]
	ldr r2, [r6, #0x14]
	ldr r0, [r5, #0x2c]
	mul r1, r2
	bl sub_0201AACC
	add r7, r0, #0
	ldr r2, [r6, #0x14]
	mov r1, #0xc
	ldr r0, [r5, #0x2c]
	mul r1, r2
	bl sub_0201AA8C
	str r0, [r4]
	ldr r0, [r6, #0x14]
	add r1, r6, #0
	str r0, [r4, #4]
	ldr r0, [r5, #0x28]
	add r2, r7, #0
	str r0, [sp]
	ldr r0, [r5, #0x2c]
	str r0, [sp, #4]
	ldr r0, [r5, #4]
	ldr r3, [r5, #0x14]
	bl sub_02013C5C
	add r0, r5, #0
	add r1, r6, #0
	add r2, r7, #0
	add r3, r4, #0
	bl sub_02013E78
	add r0, r7, #0
	bl sub_0201AB0C
	add r0, r4, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02013950

	thumb_func_start sub_020139C8
sub_020139C8: ; 0x020139C8
	ldr r3, _020139CC ; =sub_02013660
	bx r3
	.align 2, 0
_020139CC: .word sub_02013660
	thumb_func_end sub_020139C8

	thumb_func_start sub_020139D0
sub_020139D0: ; 0x020139D0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	ldr r0, [r0]
	add r7, r1, #0
	ldr r0, [r0]
	str r2, [sp, #4]
	add r5, r3, #0
	str r0, [sp, #8]
	bl sub_02024B60
	str r0, [sp, #0xc]
	ldr r1, [sp, #0xc]
	add r0, r7, #0
	bl sub_02013948
	add r6, r0, #0
	add r0, r5, #0
	add r1, r6, #0
	bl sub_0201AACC
	mov r1, #0
	add r2, r6, #0
	add r4, r0, #0
	bl sub_020E5B44
	ldr r0, [sp, #4]
	ldr r3, [sp, #0xc]
	add r1, r4, #0
	add r2, r7, #0
	str r5, [sp]
	bl sub_02013D88
	add r0, r4, #0
	add r1, r6, #0
	bl DC_FlushRange
	ldr r0, [sp, #8]
	bl sub_02024B1C
	ldr r1, [sp, #0xc]
	cmp r1, #1
	bne _02013A36
	mov r1, #1
	bl sub_020B802C
	add r1, r0, #0
	add r0, r4, #0
	add r2, r6, #0
	bl sub_020CFE74
	b _02013A46
_02013A36:
	mov r1, #2
	bl sub_020B802C
	add r1, r0, #0
	add r0, r4, #0
	add r2, r6, #0
	bl sub_020CFECC
_02013A46:
	add r0, r4, #0
	bl sub_0201AB0C
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_020139D0

	thumb_func_start sub_02013A50
sub_02013A50: ; 0x02013A50
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r6, r0, #0
	ldr r0, [sp, #0x20]
	add r7, r1, #0
	str r0, [sp, #0x20]
	ldr r0, [sp, #0x24]
	ldrb r1, [r6, #7]
	str r0, [sp, #0x24]
	add r0, r3, #0
	add r0, r7, r0
	str r2, [sp]
	str r3, [sp, #4]
	cmp r1, r0
	bge _02013A72
	bl GF_AssertFail
_02013A72:
	ldrb r2, [r6, #8]
	ldr r1, [sp]
	ldr r0, [sp, #0x20]
	add r0, r1, r0
	cmp r2, r0
	bge _02013A82
	bl GF_AssertFail
_02013A82:
	ldr r0, [sp]
	mov r4, #0
	cmp r0, #0
	ble _02013ABA
	lsl r0, r7, #5
	add r5, r4, #0
	str r0, [sp, #8]
_02013A90:
	ldrb r1, [r6, #7]
	ldr r0, [sp, #0x20]
	add r2, r1, #0
	add r0, r4, r0
	mul r2, r0
	ldr r0, [sp, #4]
	lsl r1, r5, #5
	add r2, r2, r0
	ldr r0, [sp, #0x24]
	lsl r2, r2, #5
	add r0, r0, r1
	ldr r1, [r6, #0xc]
	add r1, r1, r2
	ldr r2, [sp, #8]
	bl sub_020E5AD8
	ldr r0, [sp]
	add r4, r4, #1
	add r5, r5, r7
	cmp r4, r0
	blt _02013A90
_02013ABA:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02013A50

	thumb_func_start sub_02013AC0
sub_02013AC0: ; 0x02013AC0
	mov r2, #0x14
	mov r1, #0
_02013AC4:
	strb r1, [r0]
	add r0, r0, #1
	sub r2, r2, #1
	bne _02013AC4
	bx lr
	.align 2, 0
	thumb_func_end sub_02013AC0

	thumb_func_start sub_02013AD0
sub_02013AD0: ; 0x02013AD0
	ldr r1, [r0, #0x64]
	mov r2, #0
	cmp r1, #0
	ble _02013AF4
	ldr r3, [r0, #0x60]
_02013ADA:
	ldr r1, [r3]
	cmp r1, #0
	bne _02013AEA
	ldr r1, [r0, #0x60]
	mov r0, #0x14
	mul r0, r2
	add r0, r1, r0
	bx lr
_02013AEA:
	ldr r1, [r0, #0x64]
	add r2, r2, #1
	add r3, #0x14
	cmp r2, r1
	blt _02013ADA
_02013AF4:
	mov r0, #0
	bx lr
	thumb_func_end sub_02013AD0

	thumb_func_start sub_02013AF8
sub_02013AF8: ; 0x02013AF8
	push {r3, r4}
	ldr r4, _02013B20 ; =0x020F5F2C
	mov r3, #0
_02013AFE:
	ldrb r2, [r4]
	cmp r2, r0
	bgt _02013B10
	ldrb r2, [r4, #1]
	cmp r2, r1
	bgt _02013B10
	add r0, r3, #0
	pop {r3, r4}
	bx lr
_02013B10:
	add r3, r3, #1
	add r4, r4, #2
	cmp r3, #0xc
	blt _02013AFE
	mov r0, #0xc
	pop {r3, r4}
	bx lr
	nop
_02013B20: .word 0x020F5F2C
	thumb_func_end sub_02013AF8

	thumb_func_start sub_02013B24
sub_02013B24: ; 0x02013B24
	push {r4, r5, r6, lr}
	add r5, r0, #0
	add r6, r1, #0
	add r0, r2, #0
	bl sub_02013F78
	ldr r1, [r6, #0x10]
	add r4, r0, #0
	bl sub_02013FC0
	ldr r0, [r5, #8]
	ldr r1, [r5, #0xc]
	bl sub_02013AF8
	str r0, [r4, #8]
	ldr r0, [r5, #4]
	ldr r1, _02013BCC ; =0x020F5F2C
	str r0, [r4]
	ldr r0, [r5]
	ldr r6, _02013BD0 ; =0x020F5F2D
	str r0, [r4, #4]
	ldr r0, [r4, #8]
	ldr r2, [r5, #8]
	lsl r3, r0, #1
	ldrb r0, [r1, r3]
	ldrb r3, [r6, r3]
	sub r2, r2, r0
	ldr r0, [r5, #0xc]
	sub r6, r0, r3
	cmp r2, #0
	ble _02013B8C
	str r0, [r5, #0x1c]
	str r2, [r5, #0x18]
	ldr r0, [r5]
	str r0, [r5, #0x10]
	ldr r2, [r4, #8]
	ldr r0, [r5, #4]
	lsl r2, r2, #1
	ldrb r1, [r1, r2]
	add r0, r0, r1
	str r0, [r5, #0x14]
	add r0, r5, #0
	add r0, #0x20
	ldrb r0, [r0]
	cmp r0, #1
	bne _02013B84
	bl GF_AssertFail
_02013B84:
	add r0, r5, #0
	mov r1, #1
	add r0, #0x20
	strb r1, [r0]
_02013B8C:
	cmp r6, #0
	ble _02013BA2
	ldr r0, [r4, #8]
	ldr r2, [r5]
	lsl r1, r0, #1
	ldr r0, _02013BD0 ; =0x020F5F2D
	ldrb r0, [r0, r1]
	add r0, r2, r0
	str r0, [r5]
	str r6, [r5, #0xc]
	b _02013BC6
_02013BA2:
	add r0, r5, #0
	add r0, #0x20
	ldrb r0, [r0]
	cmp r0, #1
	bne _02013BC2
	add r3, r5, #0
	add r3, #0x10
	add r2, r5, #0
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	mov r0, #0
	add r5, #0x20
	strb r0, [r5]
	b _02013BC6
_02013BC2:
	mov r0, #1
	pop {r4, r5, r6, pc}
_02013BC6:
	mov r0, #0
	pop {r4, r5, r6, pc}
	nop
_02013BCC: .word 0x020F5F2C
_02013BD0: .word 0x020F5F2D
	thumb_func_end sub_02013B24

	thumb_func_start sub_02013BD4
sub_02013BD4: ; 0x02013BD4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x38
	add r7, r0, #0
	str r1, [sp]
	add r5, r2, #0
	add r6, r3, #0
	cmp r7, #0
	bne _02013BE8
	bl GF_AssertFail
_02013BE8:
	ldr r0, [sp]
	cmp r0, #0
	bne _02013BF2
	bl GF_AssertFail
_02013BF2:
	ldr r0, [sp]
	mov r4, #0
	str r0, [sp, #0x10]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r7, [sp, #0xc]
	add r0, sp, #0x24
	strb r4, [r0]
	ldr r0, [sp]
	str r4, [sp, #0x2c]
	str r7, [sp, #0x30]
	cmp r0, #0
	beq _02013C50
	add r7, sp, #4
_02013C0E:
	ldr r0, [sp, #0xc]
	ldr r1, [sp]
	bl sub_02013AF8
	lsl r1, r0, #1
	ldr r0, _02013C58 ; =0x020F5F2C
	add r0, r0, r1
	ldrb r0, [r0, #1]
	ldr r1, [sp, #4]
	add r1, r1, r0
	str r1, [sp, #0x28]
	ldr r1, [sp, #0x10]
	sub r1, r1, r0
	str r1, [sp, #0x34]
	str r0, [sp, #0x10]
_02013C2C:
	add r0, r7, #0
	add r1, r6, #0
	add r2, r5, #0
	add r4, r4, #1
	bl sub_02013B24
	cmp r0, #0
	beq _02013C2C
	add r2, sp, #0x28
	add r3, sp, #4
	ldmia r2!, {r0, r1}
	stmia r3!, {r0, r1}
	ldmia r2!, {r0, r1}
	stmia r3!, {r0, r1}
	ldr r0, [sp, #0x10]
	str r0, [sp]
	cmp r0, #0
	bne _02013C0E
_02013C50:
	add r0, r4, #0
	add sp, #0x38
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02013C58: .word 0x020F5F2C
	thumb_func_end sub_02013BD4

	thumb_func_start sub_02013C5C
sub_02013C5C: ; 0x02013C5C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x30]
	str r1, [sp, #0x14]
	str r0, [sp, #0x30]
	ldr r0, [sp, #0x34]
	add r5, r2, #0
	str r0, [sp, #0x34]
	ldr r0, [sp, #0x30]
	add r6, r3, #0
	cmp r0, #1
	bne _02013C7E
	mov r0, #1
	lsl r0, r0, #0x1a
	ldr r1, [r0]
	b _02013C82
_02013C7E:
	ldr r0, _02013CC8 ; =0x04001000
	ldr r1, [r0]
_02013C82:
	ldr r0, _02013CCC ; =0x00300010
	add r7, r1, #0
	and r7, r0
	add r0, r7, #0
	bl sub_02022448
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x14]
	ldr r4, [r0, #0xc]
	cmp r4, r0
	beq _02013CC2
_02013C98:
	add r0, r5, #0
	bl sub_020B8008
	str r7, [sp]
	ldr r0, [sp, #0x30]
	str r6, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [sp, #0x34]
	ldr r3, [sp, #0x18]
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x10]
	add r1, r4, #0
	add r2, r5, #0
	bl sub_02013CD0
	add r6, r0, #0
	ldr r4, [r4, #0xc]
	ldr r0, [sp, #0x14]
	add r5, #0x24
	cmp r4, r0
	bne _02013C98
_02013CC2:
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_02013CC8: .word 0x04001000
_02013CCC: .word 0x00300010
	thumb_func_end sub_02013C5C

	thumb_func_start sub_02013CD0
sub_02013CD0: ; 0x02013CD0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	add r6, r1, #0
	str r0, [sp, #8]
	ldr r0, [r6, #8]
	add r5, r2, #0
	lsl r1, r0, #1
	ldr r0, _02013D74 ; =0x020F5F2C
	ldrb r0, [r0, r1]
	str r0, [sp, #0x10]
	ldr r0, _02013D78 ; =0x020F5F2D
	ldrb r0, [r0, r1]
	ldr r1, [sp, #0x10]
	add r4, r1, #0
	mul r4, r0
	str r0, [sp, #0xc]
	cmp r4, r3
	bge _02013CF6
	add r4, r3, #0
_02013CF6:
	lsl r4, r4, #5
	ldr r0, [sp, #0x34]
	add r1, r4, #0
	bl sub_0201AACC
	add r7, r0, #0
	ldr r0, [r6, #4]
	ldr r1, [sp, #0x10]
	str r0, [sp]
	str r7, [sp, #4]
	ldr r0, [sp, #8]
	ldr r2, [sp, #0xc]
	ldr r3, [r6]
	bl sub_02013A50
	add r0, r7, #0
	add r1, r4, #0
	bl DC_FlushRange
	ldr r0, [sp, #0x30]
	cmp r0, #1
	bne _02013D38
	ldr r6, [sp, #0x2c]
	add r0, r7, #0
	add r1, r6, #0
	add r2, r4, #0
	bl sub_020CFE74
	mov r0, #1
	str r6, [r5, #4]
	lsl r0, r0, #0x1a
	ldr r1, [r0]
	b _02013D4A
_02013D38:
	ldr r6, [sp, #0x2c]
	add r0, r7, #0
	add r1, r6, #0
	add r2, r4, #0
	bl sub_020CFECC
	ldr r0, _02013D7C ; =0x04001000
	str r6, [r5, #8]
	ldr r1, [r0]
_02013D4A:
	ldr r0, _02013D80 ; =0x00300010
	and r0, r1
	str r0, [r5, #0x20]
	ldr r0, _02013D84 ; =0x0000FFFF
	str r0, [r5, #0xc]
	str r0, [r5, #0x10]
	mov r0, #3
	str r0, [r5, #0x14]
	mov r0, #0
	str r0, [r5, #0x18]
	mov r0, #1
	str r0, [r5, #0x1c]
	ldr r0, [sp, #0x28]
	str r0, [r5, #0x20]
	add r0, r7, #0
	bl sub_0201AB0C
	ldr r0, [sp, #0x2c]
	add r0, r0, r4
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02013D74: .word 0x020F5F2C
_02013D78: .word 0x020F5F2D
_02013D7C: .word 0x04001000
_02013D80: .word 0x00300010
_02013D84: .word 0x0000FFFF
	thumb_func_end sub_02013CD0

	thumb_func_start sub_02013D88
sub_02013D88: ; 0x02013D88
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	add r6, r2, #0
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	ldr r7, [sp, #0x30]
	cmp r3, #1
	bne _02013DA0
	mov r0, #1
	lsl r0, r0, #0x1a
	ldr r1, [r0]
	b _02013DA4
_02013DA0:
	ldr r0, _02013DD8 ; =0x04001000
	ldr r1, [r0]
_02013DA4:
	ldr r0, _02013DDC ; =0x00300010
	add r5, r1, #0
	and r5, r0
	add r0, r5, #0
	bl sub_02022448
	ldr r4, [r6, #0xc]
	str r0, [sp, #0x14]
	mov r3, #0
	cmp r4, r6
	beq _02013DD4
_02013DBA:
	ldr r0, [sp, #0x14]
	ldr r2, [sp, #0x10]
	str r0, [sp]
	str r5, [sp, #4]
	ldr r0, [sp, #0xc]
	str r7, [sp, #8]
	add r1, r4, #0
	bl sub_02013DE0
	ldr r4, [r4, #0xc]
	add r3, r0, #0
	cmp r4, r6
	bne _02013DBA
_02013DD4:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02013DD8: .word 0x04001000
_02013DDC: .word 0x00300010
	thumb_func_end sub_02013D88

	thumb_func_start sub_02013DE0
sub_02013DE0: ; 0x02013DE0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r6, r1, #0
	ldr r1, [r6, #8]
	add r7, r0, #0
	add r0, r2, #0
	lsl r2, r1, #1
	ldr r1, _02013E1C ; =0x020F5F2C
	add r5, r3, #0
	ldrb r1, [r1, r2]
	ldr r3, _02013E20 ; =0x020F5F2D
	ldrb r2, [r3, r2]
	add r4, r1, #0
	ldr r3, [sp, #0x20]
	mul r4, r2
	cmp r4, r3
	bge _02013E04
	add r4, r3, #0
_02013E04:
	ldr r3, [r6, #4]
	add r0, r0, r5
	str r3, [sp]
	str r0, [sp, #4]
	ldr r3, [r6]
	add r0, r7, #0
	bl sub_02013A50
	lsl r0, r4, #5
	add r0, r5, r0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02013E1C: .word 0x020F5F2C
_02013E20: .word 0x020F5F2D
	thumb_func_end sub_02013DE0

	thumb_func_start sub_02013E24
sub_02013E24: ; 0x02013E24
	push {r3, r4, r5, r6, r7, lr}
	add r4, r0, #0
	cmp r1, #1
	bne _02013E34
	mov r0, #1
	lsl r0, r0, #0x1a
	ldr r1, [r0]
	b _02013E38
_02013E34:
	ldr r0, _02013E6C ; =0x04001000
	ldr r1, [r0]
_02013E38:
	ldr r0, _02013E70 ; =0x00300010
	and r0, r1
	bl sub_02022448
	ldr r2, [r4, #0xc]
	mov r3, #0
	cmp r2, r4
	beq _02013E66
	ldr r1, _02013E74 ; =0x020F5F2C
_02013E4A:
	ldr r5, [r2, #8]
	lsl r5, r5, #1
	add r7, r1, r5
	ldrb r6, [r1, r5]
	ldrb r5, [r7, #1]
	mul r5, r6
	cmp r5, r0
	bge _02013E5C
	add r5, r0, #0
_02013E5C:
	ldr r2, [r2, #0xc]
	lsl r5, r5, #5
	add r3, r3, r5
	cmp r2, r4
	bne _02013E4A
_02013E66:
	add r0, r3, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02013E6C: .word 0x04001000
_02013E70: .word 0x00300010
_02013E74: .word 0x020F5F2C
	thumb_func_end sub_02013E24

	thumb_func_start sub_02013E78
sub_02013E78: ; 0x02013E78
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	add r0, r1, #0
	ldr r4, [r0, #0xc]
	str r1, [sp, #4]
	add r7, r2, #0
	add r6, r3, #0
	cmp r4, r0
	beq _02013EC8
	mov r5, #0
_02013E8E:
	ldr r0, [sp]
	add r1, r4, #0
	add r2, r7, #0
	bl sub_02013EF0
	ldr r1, [r6]
	str r0, [r1, r5]
	ldr r0, [r6]
	ldr r0, [r0, r5]
	cmp r0, #0
	bne _02013EA8
	bl GF_AssertFail
_02013EA8:
	ldr r0, [r4]
	add r7, #0x24
	lsl r1, r0, #3
	ldr r0, [r6]
	add r0, r0, r5
	str r1, [r0, #4]
	ldr r0, [r4, #4]
	lsl r1, r0, #3
	ldr r0, [r6]
	add r0, r0, r5
	str r1, [r0, #8]
	ldr r4, [r4, #0xc]
	ldr r0, [sp, #4]
	add r5, #0xc
	cmp r4, r0
	bne _02013E8E
_02013EC8:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02013E78

	thumb_func_start sub_02013ECC
sub_02013ECC: ; 0x02013ECC
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #4]
	mov r6, #0
	cmp r0, #0
	ble _02013EEC
	add r4, r6, #0
_02013EDA:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	bl sub_02024758
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, #0xc
	cmp r6, r0
	blt _02013EDA
_02013EEC:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_02013ECC

	thumb_func_start sub_02013EF0
sub_02013EF0: ; 0x02013EF0
	push {r4, r5, lr}
	sub sp, #0x44
	add r5, r0, #0
	mov r0, #0
	str r2, [sp]
	str r0, [sp, #4]
	add r4, r1, #0
	ldr r1, [r5, #0xc]
	str r1, [sp, #8]
	ldr r1, [r4, #8]
	ldr r2, [r5]
	lsl r1, r1, #2
	add r1, r2, r1
	ldr r1, [r1, #0x30]
	str r1, [sp, #0xc]
	str r0, [sp, #0x10]
	str r0, [sp, #0x14]
	str r0, [sp, #0x18]
	str r0, [sp, #0x1c]
	ldr r2, [r5, #0x20]
	add r1, sp, #0x20
	strb r2, [r1]
	ldr r1, [r5, #8]
	str r1, [sp, #0x24]
	add r1, sp, #0
	str r1, [sp, #0x28]
	ldr r1, [r5, #0x24]
	str r1, [sp, #0x38]
	ldr r1, [r5, #0x28]
	str r1, [sp, #0x3c]
	ldr r1, [r5, #0x2c]
	str r1, [sp, #0x40]
	str r0, [sp, #0x2c]
	str r0, [sp, #0x30]
	str r0, [sp, #0x34]
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _02013F4C
	bl sub_020248AC
	add r3, r0, #0
	ldmia r3!, {r0, r1}
	add r2, sp, #0x2c
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
_02013F4C:
	ldr r1, [r4]
	ldr r2, [r5, #0x18]
	lsl r1, r1, #3
	add r1, r2, r1
	ldr r0, [sp, #0x2c]
	lsl r1, r1, #0xc
	add r0, r0, r1
	str r0, [sp, #0x2c]
	ldr r1, [r4, #4]
	ldr r2, [r5, #0x1c]
	lsl r1, r1, #3
	add r1, r2, r1
	ldr r0, [sp, #0x30]
	lsl r1, r1, #0xc
	add r0, r0, r1
	str r0, [sp, #0x30]
	add r0, sp, #0x24
	bl sub_02024714
	add sp, #0x44
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02013EF0

	thumb_func_start sub_02013F78
sub_02013F78: ; 0x02013F78
	push {r4, lr}
	mov r1, #0x14
	bl sub_0201AACC
	add r4, r0, #0
	bne _02013F88
	bl GF_AssertFail
_02013F88:
	mov r0, #0
	str r0, [r4, #0xc]
	str r0, [r4, #0x10]
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02013F78

	thumb_func_start sub_02013F94
sub_02013F94: ; 0x02013F94
	push {r4, lr}
	add r4, r0, #0
	bne _02013F9E
	bl GF_AssertFail
_02013F9E:
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02013F94

	thumb_func_start sub_02013FA8
sub_02013FA8: ; 0x02013FA8
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	cmp r0, r5
	beq _02013FBE
_02013FB2:
	ldr r4, [r0, #0xc]
	bl sub_02013F94
	add r0, r4, #0
	cmp r4, r5
	bne _02013FB2
_02013FBE:
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02013FA8

	thumb_func_start sub_02013FC0
sub_02013FC0: ; 0x02013FC0
	ldr r2, [r1, #0xc]
	str r2, [r0, #0xc]
	str r1, [r0, #0x10]
	ldr r2, [r1, #0xc]
	str r0, [r2, #0x10]
	str r0, [r1, #0xc]
	bx lr
	.align 2, 0
	thumb_func_end sub_02013FC0

	thumb_func_start sub_02013FD0
sub_02013FD0: ; 0x02013FD0
	ldr r3, _02013FD8 ; =sub_02013728
	str r1, [r0, #8]
	bx r3
	nop
_02013FD8: .word sub_02013728
	thumb_func_end sub_02013FD0

	thumb_func_start sub_02013FDC
sub_02013FDC: ; 0x02013FDC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	ldr r0, [sp, #0x24]
	ldr r6, [sp, #0x20]
	str r1, [sp, #4]
	add r5, r2, #0
	add r4, r3, #0
	str r0, [sp, #0x24]
	mov r7, #0
_02013FF0:
	ldr r1, [r4]
	ldr r0, [sp, #4]
	ldr r2, [r5]
	add r0, r0, r1
	ldr r1, [sp]
	add r1, r1, r2
	add r2, r6, #0
	bl sub_020E5AD8
	ldr r1, [r5]
	ldr r0, [sp, #0x24]
	add r7, r7, #1
	add r0, r1, r0
	str r0, [r5]
	ldr r0, [r4]
	add r0, r0, r6
	str r0, [r4]
	cmp r7, #8
	blt _02013FF0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02013FDC

	thumb_func_start sub_0201401C
sub_0201401C: ; 0x0201401C
	push {r4, r5, r6, lr}
	add r5, r3, #0
	bl sub_02007524
	add r4, r0, #0
	bne _0201402C
	bl GF_AssertFail
_0201402C:
	add r0, r4, #0
	add r1, r5, #0
	bl sub_020B70A8
	add r6, r0, #0
	cmp r5, #0
	bne _0201403E
	bl GF_AssertFail
_0201403E:
	cmp r6, #0
	bne _02014046
	bl GF_AssertFail
_02014046:
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0201401C

	thumb_func_start sub_02014050
sub_02014050: ; 0x02014050
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	ldr r4, [sp, #0x40]
	str r0, [sp, #8]
	add r6, r0, r2
	ldrh r0, [r4, #2]
	str r1, [sp, #0xc]
	add r5, r3, #0
	cmp r0, r6
	bge _02014068
	bl GF_AssertFail
_02014068:
	ldr r0, [sp, #0xc]
	ldrh r1, [r4]
	add r0, r0, r5
	str r0, [sp, #0x14]
	cmp r1, r0
	bge _02014078
	bl GF_AssertFail
_02014078:
	ldr r0, [r4, #0x14]
	str r0, [sp, #0x20]
	ldr r0, [sp, #0x44]
	str r0, [sp, #0x1c]
	ldrh r0, [r4, #2]
	lsl r7, r0, #2
	ldr r0, [sp, #0xc]
	add r1, r0, #0
	mul r1, r7
	ldr r0, [sp, #8]
	str r1, [sp, #0x18]
	lsl r1, r0, #2
	ldr r0, [sp, #0x18]
	str r1, [sp, #0x10]
	add r0, r1, r0
	str r0, [sp, #0x28]
	mov r0, #0
	str r0, [sp, #0x24]
	ldr r1, [sp, #0xc]
	ldr r0, [sp, #0x14]
	cmp r1, r0
	bge _020140E2
_020140A4:
	ldr r4, [sp, #8]
	add r0, r4, #0
	cmp r0, r6
	bge _020140D0
	ldr r0, [sp, #0x18]
	lsl r1, r0, #3
	ldr r0, [sp, #0x10]
	add r5, r0, r1
_020140B4:
	str r5, [sp, #0x28]
	mov r0, #4
	str r0, [sp]
	ldr r0, [sp, #0x20]
	ldr r1, [sp, #0x1c]
	add r2, sp, #0x28
	add r3, sp, #0x24
	str r7, [sp, #4]
	bl sub_02013FDC
	add r4, r4, #1
	add r5, r5, #4
	cmp r4, r6
	blt _020140B4
_020140D0:
	ldr r0, [sp, #0x18]
	add r0, r0, r7
	str r0, [sp, #0x18]
	ldr r0, [sp, #0xc]
	add r1, r0, #1
	ldr r0, [sp, #0x14]
	str r1, [sp, #0xc]
	cmp r1, r0
	blt _020140A4
_020140E2:
	add sp, #0x2c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02014050

	thumb_func_start sub_020140E8
sub_020140E8: ; 0x020140E8
	push {r4, r5}
	sub sp, #8
	ldr r2, _02014120 ; =0x020F5F44
	add r1, sp, #0
	ldr r3, [r2]
	ldr r2, [r2, #4]
	str r3, [sp]
	str r2, [sp, #4]
	ldr r2, _02014124 ; =0x000001EF
	mov r5, #0
	add r3, r2, #0
_020140FE:
	ldr r4, [r1]
	cmp r4, r3
	beq _02014118
	cmp r4, r0
	bne _02014110
	add sp, #8
	mov r0, #1
	pop {r4, r5}
	bx lr
_02014110:
	add r5, r5, #1
	add r1, r1, #4
	cmp r5, r2
	blt _020140FE
_02014118:
	mov r0, #0
	add sp, #8
	pop {r4, r5}
	bx lr
	.align 2, 0
_02014120: .word 0x020F5F44
_02014124: .word 0x000001EF
	thumb_func_end sub_020140E8

	thumb_func_start sub_02014128
sub_02014128: ; 0x02014128
	push {r4, r5, lr}
	sub sp, #0xc
	add r4, r3, #0
	mov r3, #0
	str r3, [sp, #8]
	add r3, sp, #8
	add r5, r0, #0
	bl sub_0201401C
	ldr r0, [sp, #8]
	add r1, r5, #0
	ldr r0, [r0, #0x14]
	bl sub_02009D28
	ldr r0, [sp, #0x34]
	bl sub_020140E8
	ldr r1, [sp, #0x30]
	cmp r1, #2
	bne _02014160
	cmp r0, #1
	bne _02014160
	ldr r0, [sp, #8]
	ldr r1, [sp, #0x28]
	ldr r0, [r0, #0x14]
	ldr r2, [sp, #0x2c]
	bl sub_02009B60
_02014160:
	ldr r0, [sp, #8]
	ldr r1, [sp, #0x18]
	str r0, [sp]
	ldr r0, [sp, #0x24]
	ldr r2, [sp, #0x1c]
	str r0, [sp, #4]
	ldr r3, [sp, #0x20]
	add r0, r4, #0
	bl sub_02014050
	add sp, #0xc
	pop {r4, r5, pc}
	thumb_func_end sub_02014128

	thumb_func_start sub_02014178
sub_02014178: ; 0x02014178
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	add r7, r1, #0
	add r5, r2, #0
	ldr r2, [sp, #0x3c]
	ldr r1, [sp, #0x40]
	add r6, r0, #0
	mul r1, r2
	add r0, r5, #0
	lsl r1, r1, #5
	str r3, [sp, #0x20]
	bl sub_0201AA8C
	add r4, r0, #0
	ldr r0, [sp, #0x38]
	ldr r3, [sp, #0x20]
	str r0, [sp]
	ldr r0, [sp, #0x3c]
	add r1, r7, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x40]
	add r2, r5, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x44]
	str r4, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x4c]
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x50]
	str r0, [sp, #0x1c]
	add r0, r6, #0
	bl sub_02014128
	add r0, r4, #0
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_02014178

	thumb_func_start sub_020141C4
sub_020141C4: ; 0x020141C4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x30
	str r3, [sp, #8]
	ldr r3, [sp, #0x48]
	add r4, r0, #0
	str r3, [sp, #0x48]
	mov r3, #0
	str r3, [sp, #0x2c]
	bl sub_02007524
	str r0, [sp, #0x20]
	cmp r0, #0
	bne _020141E2
	bl GF_AssertFail
_020141E2:
	ldr r0, [sp, #0x20]
	add r1, sp, #0x2c
	bl sub_020B70A8
	cmp r0, #0
	bne _020141F2
	bl GF_AssertFail
_020141F2:
	ldr r1, [sp, #0x4c]
	ldr r0, [sp, #8]
	add r6, r0, r1
	ldr r0, [sp, #0x2c]
	ldrh r0, [r0, #2]
	cmp r0, r6
	bge _02014204
	bl GF_AssertFail
_02014204:
	ldr r1, [sp, #0x50]
	ldr r0, [sp, #0x48]
	add r0, r0, r1
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x2c]
	ldrh r1, [r0]
	ldr r0, [sp, #0x10]
	cmp r1, r0
	bge _0201421A
	bl GF_AssertFail
_0201421A:
	ldr r0, [sp, #0x2c]
	add r1, r4, #0
	ldr r0, [r0, #0x14]
	str r0, [sp, #0x1c]
	bl sub_02009D28
	ldr r0, [sp, #0x54]
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x2c]
	ldrh r0, [r0, #2]
	lsl r7, r0, #2
	ldr r0, [sp, #0x48]
	add r1, r0, #0
	mul r1, r7
	ldr r0, [sp, #8]
	str r1, [sp, #0x14]
	lsl r1, r0, #2
	ldr r0, [sp, #0x14]
	str r1, [sp, #0xc]
	add r0, r1, r0
	str r0, [sp, #0x28]
	mov r0, #0
	str r0, [sp, #0x24]
	ldr r1, [sp, #0x48]
	ldr r0, [sp, #0x10]
	cmp r1, r0
	bge _0201428E
_02014250:
	ldr r4, [sp, #8]
	add r0, r4, #0
	cmp r0, r6
	bge _0201427C
	ldr r0, [sp, #0x14]
	lsl r1, r0, #3
	ldr r0, [sp, #0xc]
	add r5, r0, r1
_02014260:
	str r5, [sp, #0x28]
	mov r0, #4
	str r0, [sp]
	ldr r0, [sp, #0x1c]
	ldr r1, [sp, #0x18]
	add r2, sp, #0x28
	add r3, sp, #0x24
	str r7, [sp, #4]
	bl sub_02013FDC
	add r4, r4, #1
	add r5, r5, #4
	cmp r4, r6
	blt _02014260
_0201427C:
	ldr r0, [sp, #0x14]
	add r0, r0, r7
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x48]
	add r1, r0, #1
	ldr r0, [sp, #0x10]
	str r1, [sp, #0x48]
	cmp r1, r0
	blt _02014250
_0201428E:
	ldr r0, [sp, #0x20]
	bl sub_0201AB0C
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_020141C4

	thumb_func_start sub_02014298
sub_02014298: ; 0x02014298
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	add r7, r1, #0
	add r5, r2, #0
	ldr r2, [sp, #0x2c]
	ldr r1, [sp, #0x30]
	add r6, r0, #0
	mul r1, r2
	add r0, r5, #0
	lsl r1, r1, #5
	str r3, [sp, #0x10]
	bl sub_0201AA8C
	add r4, r0, #0
	ldr r0, [sp, #0x28]
	ldr r3, [sp, #0x10]
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	add r1, r7, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x30]
	add r2, r5, #0
	str r0, [sp, #8]
	add r0, r6, #0
	str r4, [sp, #0xc]
	bl sub_020141C4
	add r0, r4, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_02014298

	thumb_func_start sub_020142D4
sub_020142D4: ; 0x020142D4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	str r0, [sp]
	ldr r0, [sp, #0x44]
	ldr r1, [sp, #0x38]
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x48]
	str r2, [sp, #4]
	str r0, [sp, #0x14]
	add r0, r2, #0
	add r7, r0, r1
	ldr r1, [sp, #0x3c]
	add r0, r3, #0
	add r0, r0, r1
	add r1, r3, #0
	str r3, [sp, #8]
	ldr r5, [sp, #0x40]
	str r0, [sp, #0x10]
	cmp r1, r0
	bge _0201434C
	add r0, r3, #0
	lsl r0, r0, #5
	str r0, [sp, #0xc]
	add r0, r2, #0
	lsl r0, r0, #5
	str r0, [sp, #0x1c]
_02014308:
	ldr r6, [sp, #4]
	add r0, r6, #0
	cmp r0, r7
	bge _0201433A
	ldr r1, [sp]
	ldr r0, [sp, #0xc]
	add r2, r1, #0
	mul r2, r0
	ldr r0, [sp, #0x1c]
	add r4, r0, r2
_0201431C:
	ldr r1, [r5]
	ldr r0, [sp, #0x14]
	mov r2, #0x20
	add r0, r0, r1
	ldr r1, [sp, #0x18]
	add r1, r1, r4
	bl sub_020E5AD8
	ldr r0, [r5]
	add r6, r6, #1
	add r0, #0x20
	str r0, [r5]
	add r4, #0x20
	cmp r6, r7
	blt _0201431C
_0201433A:
	ldr r0, [sp, #0xc]
	add r0, #0x20
	str r0, [sp, #0xc]
	ldr r0, [sp, #8]
	add r1, r0, #1
	ldr r0, [sp, #0x10]
	str r1, [sp, #8]
	cmp r1, r0
	blt _02014308
_0201434C:
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_020142D4

	thumb_func_start sub_02014350
sub_02014350: ; 0x02014350
	push {r3, r4, lr}
	sub sp, #0x14
	add r4, r2, #0
	ldr r2, [r4, #8]
	str r2, [sp]
	ldr r2, [r4, #0xc]
	str r2, [sp, #4]
	ldr r2, [sp, #0x20]
	str r3, [sp, #8]
	str r2, [sp, #0xc]
	ldr r2, [sp, #0x24]
	str r2, [sp, #0x10]
	ldr r2, [r4]
	ldr r3, [r4, #4]
	bl sub_020142D4
	add sp, #0x14
	pop {r3, r4, pc}
	thumb_func_end sub_02014350

	thumb_func_start sub_02014374
sub_02014374: ; 0x02014374
	push {r4, r5, r6, r7, lr}
	sub sp, #0x7c
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x9c]
	mov ip, r3
	add r5, r2, #0
	ldr r6, [sp, #0x94]
	ldr r7, [sp, #0x98]
	ldr r3, _020143DC ; =0x020F5F6C
	str r1, [sp, #0x10]
	str r0, [sp, #0x9c]
	add r2, sp, #0x1c
	mov r4, #0xc
_0201438E:
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	sub r4, r4, #1
	bne _0201438E
	mov r0, #0
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x90]
	ldr r1, [sp, #0x10]
	str r0, [sp]
	str r6, [sp, #4]
	ldr r0, [sp, #0xc]
	add r2, r5, #0
	mov r3, ip
	str r7, [sp, #8]
	bl sub_02014298
	str r0, [sp, #0x14]
	mov r4, #0
	add r5, sp, #0x1c
_020143B4:
	ldr r0, [sp, #0x14]
	add r1, r7, #0
	str r0, [sp]
	ldr r0, [sp, #0x9c]
	add r2, r5, #0
	str r0, [sp, #4]
	add r0, r6, #0
	add r3, sp, #0x18
	bl sub_02014350
	add r4, r4, #1
	add r5, #0x10
	cmp r4, #6
	blt _020143B4
	ldr r0, [sp, #0x14]
	bl sub_0201AB0C
	add sp, #0x7c
	pop {r4, r5, r6, r7, pc}
	nop
_020143DC: .word 0x020F5F6C
	thumb_func_end sub_02014374

	thumb_func_start sub_020143E0
sub_020143E0: ; 0x020143E0
	push {r4, lr}
	sub sp, #0x10
	ldr r4, [r3, #4]
	str r4, [sp]
	ldr r4, [r3, #8]
	str r4, [sp, #4]
	ldr r4, [r3, #0xc]
	str r4, [sp, #8]
	ldr r4, [sp, #0x18]
	str r4, [sp, #0xc]
	ldr r3, [r3]
	bl sub_02014374
	add sp, #0x10
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020143E0

	thumb_func_start sub_02014400
sub_02014400: ; 0x02014400
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	ldr r4, _02014428 ; =0x020F5F4C
	add r5, r3, #0
	add r3, sp, #4
	add r7, r0, #0
	mov ip, r1
	add r6, r3, #0
	ldmia r4!, {r0, r1}
	stmia r3!, {r0, r1}
	ldmia r4!, {r0, r1}
	stmia r3!, {r0, r1}
	add r0, r7, #0
	mov r1, ip
	add r3, r6, #0
	str r5, [sp]
	bl sub_020143E0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02014428: .word 0x020F5F4C
	thumb_func_end sub_02014400

	thumb_func_start sub_0201442C
sub_0201442C: ; 0x0201442C
	push {r3, r4, r5, r6, r7, lr}
	add r6, r1, #0
	mov r1, #0x32
	add r7, r2, #0
	add r5, r0, #0
	add r0, r7, #0
	lsl r1, r1, #6
	bl sub_0201AA8C
	add r4, r0, #0
	add r0, r5, #0
	add r1, r6, #0
	add r2, r7, #0
	add r3, r4, #0
	bl sub_02014400
	add r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0201442C

	thumb_func_start sub_02014450
sub_02014450: ; 0x02014450
	push {r3, r4, r5, r6, r7, lr}
	add r7, r2, #0
	add r5, r0, #0
	add r6, r1, #0
	add r0, r7, #0
	mov r1, #0x20
	bl sub_0201AA8C
	add r4, r0, #0
	add r0, r5, #0
	add r1, r6, #0
	add r2, r7, #0
	bl sub_02007524
	add r1, sp, #0
	add r5, r0, #0
	bl sub_020B7140
	cmp r0, #1
	beq _0201447C
	bl GF_AssertFail
_0201447C:
	ldr r0, [sp]
	add r1, r4, #0
	ldr r0, [r0, #0xc]
	mov r2, #0x20
	bl sub_020D47B8
	add r0, r5, #0
	bl sub_0201AB0C
	add r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02014450

	thumb_func_start sub_02014494
sub_02014494: ; 0x02014494
	push {r4, r5, r6, r7, lr}
	sub sp, #0x8c
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0xac]
	mov ip, r3
	add r5, r2, #0
	ldr r6, [sp, #0xa4]
	ldr r7, [sp, #0xa8]
	ldr r3, _0201450C ; =0x020F5FCC
	str r1, [sp, #0x20]
	str r0, [sp, #0xac]
	add r2, sp, #0x2c
	mov r4, #0xc
_020144AE:
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	sub r4, r4, #1
	bne _020144AE
	mov r0, #0
	str r0, [sp, #0x28]
	ldr r0, [sp, #0xa0]
	ldr r1, [sp, #0x20]
	str r0, [sp]
	str r6, [sp, #4]
	ldr r0, [sp, #0xb0]
	str r7, [sp, #8]
	str r0, [sp, #0xc]
	ldr r0, [sp, #0xb4]
	add r2, r5, #0
	str r0, [sp, #0x10]
	ldr r0, [sp, #0xb8]
	mov r3, ip
	str r0, [sp, #0x14]
	ldr r0, [sp, #0xbc]
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x1c]
	bl sub_02014178
	str r0, [sp, #0x24]
	mov r4, #0
	add r5, sp, #0x2c
_020144E4:
	ldr r0, [sp, #0x24]
	add r1, r7, #0
	str r0, [sp]
	ldr r0, [sp, #0xac]
	add r2, r5, #0
	str r0, [sp, #4]
	add r0, r6, #0
	add r3, sp, #0x28
	bl sub_02014350
	add r4, r4, #1
	add r5, #0x10
	cmp r4, #6
	blt _020144E4
	ldr r0, [sp, #0x24]
	bl sub_0201AB0C
	add sp, #0x8c
	pop {r4, r5, r6, r7, pc}
	nop
_0201450C: .word 0x020F5FCC
	thumb_func_end sub_02014494

	thumb_func_start sub_02014510
sub_02014510: ; 0x02014510
	push {r4, lr}
	sub sp, #0x20
	ldr r4, [r3, #4]
	str r4, [sp]
	ldr r4, [r3, #8]
	str r4, [sp, #4]
	ldr r4, [r3, #0xc]
	str r4, [sp, #8]
	ldr r4, [sp, #0x28]
	str r4, [sp, #0xc]
	ldr r4, [sp, #0x2c]
	str r4, [sp, #0x10]
	ldr r4, [sp, #0x30]
	str r4, [sp, #0x14]
	ldr r4, [sp, #0x34]
	str r4, [sp, #0x18]
	ldr r4, [sp, #0x38]
	str r4, [sp, #0x1c]
	ldr r3, [r3]
	bl sub_02014494
	add sp, #0x20
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02014510

	thumb_func_start sub_02014540
sub_02014540: ; 0x02014540
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	ldr r4, _02014578 ; =0x020F5F5C
	add r5, r3, #0
	add r3, sp, #0x14
	add r7, r0, #0
	mov ip, r1
	add r6, r3, #0
	ldmia r4!, {r0, r1}
	stmia r3!, {r0, r1}
	ldmia r4!, {r0, r1}
	stmia r3!, {r0, r1}
	ldr r0, [sp, #0x38]
	str r5, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x3c]
	mov r1, ip
	str r0, [sp, #8]
	ldr r0, [sp, #0x40]
	add r3, r6, #0
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x44]
	str r0, [sp, #0x10]
	add r0, r7, #0
	bl sub_02014510
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02014578: .word 0x020F5F5C
	thumb_func_end sub_02014540

	thumb_func_start sub_0201457C
sub_0201457C: ; 0x0201457C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r1, [sp, #0x10]
	mov r1, #0x32
	add r5, r2, #0
	add r7, r0, #0
	add r0, r5, #0
	lsl r1, r1, #6
	add r4, r3, #0
	bl sub_0201AA8C
	add r6, r0, #0
	ldr r0, [sp, #0x28]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x2c]
	ldr r1, [sp, #0x10]
	str r0, [sp, #8]
	ldr r0, [sp, #0x30]
	add r2, r5, #0
	str r0, [sp, #0xc]
	add r0, r7, #0
	add r3, r6, #0
	bl sub_02014540
	add r0, r6, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0201457C

	thumb_func_start sub_020145B4
sub_020145B4: ; 0x020145B4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	str r0, [sp, #8]
	ldr r0, [sp, #0x48]
	lsl r7, r1, #2
	str r0, [sp, #0x20]
	add r0, r3, #0
	add r1, r0, #0
	mul r1, r7
	str r1, [sp, #0x1c]
	add r0, r2, #0
	lsl r1, r0, #2
	ldr r0, [sp, #0x1c]
	str r1, [sp, #0x14]
	add r0, r1, r0
	str r0, [sp, #0x28]
	mov r0, #0
	str r0, [sp, #0x24]
	ldr r1, [sp, #0x44]
	add r0, r3, #0
	add r0, r0, r1
	add r1, r3, #0
	str r2, [sp, #0xc]
	str r3, [sp, #0x10]
	str r0, [sp, #0x18]
	cmp r1, r0
	bge _0201462E
	ldr r1, [sp, #0x40]
	add r0, r2, #0
	add r6, r0, r1
_020145F0:
	ldr r4, [sp, #0xc]
	add r0, r4, #0
	cmp r0, r6
	bge _0201461C
	ldr r0, [sp, #0x1c]
	lsl r1, r0, #3
	ldr r0, [sp, #0x14]
	add r5, r0, r1
_02014600:
	str r5, [sp, #0x28]
	mov r0, #4
	str r0, [sp]
	ldr r0, [sp, #8]
	ldr r1, [sp, #0x20]
	add r2, sp, #0x28
	add r3, sp, #0x24
	str r7, [sp, #4]
	bl sub_02013FDC
	add r4, r4, #1
	add r5, r5, #4
	cmp r4, r6
	blt _02014600
_0201461C:
	ldr r0, [sp, #0x1c]
	add r0, r0, r7
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0x10]
	add r1, r0, #1
	ldr r0, [sp, #0x18]
	str r1, [sp, #0x10]
	cmp r1, r0
	blt _020145F0
_0201462E:
	add sp, #0x2c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_020145B4

	thumb_func_start sub_02014634
sub_02014634: ; 0x02014634
	push {r3, lr}
	bl sub_020DB9C0
	mov r0, #0
	ldr r3, _02014664 ; =0x021D1048
	add r1, r0, #0
	mov r2, #5
_02014642:
	stmia r3!, {r0, r1}
	stmia r3!, {r0, r1}
	sub r2, r2, #1
	bne _02014642
	stmia r3!, {r0, r1}
	ldr r0, _02014668 ; =0x021D1048
	mov r1, #0
	str r1, [r0]
	str r1, [r0, #4]
	str r1, [r0, #8]
	ldr r0, _02014664 ; =0x021D1048
	bl sub_020146CC
	ldr r0, _02014664 ; =0x021D1048
	bl sub_02014700
	pop {r3, pc}
	.align 2, 0
_02014664: .word 0x021D1048
_02014668: .word 0x021D1048
	thumb_func_end sub_02014634

	thumb_func_start sub_0201466C
sub_0201466C: ; 0x0201466C
	push {r3, lr}
	ldr r0, _0201468C ; =0x021D1048
	ldr r1, [r0, #4]
	cmp r1, #0
	bne _0201468A
	ldr r1, [r0, #8]
	add r1, r1, #1
	str r1, [r0, #8]
	cmp r1, #0xa
	ble _0201468A
	mov r1, #0
	str r1, [r0, #8]
	ldr r0, _02014690 ; =0x021D1048
	bl sub_020146CC
_0201468A:
	pop {r3, pc}
	.align 2, 0
_0201468C: .word 0x021D1048
_02014690: .word 0x021D1048
	thumb_func_end sub_0201466C

	thumb_func_start sub_02014694
sub_02014694: ; 0x02014694
	push {r4, lr}
	add r4, r1, #0
	str r0, [r4, #0xc]
	cmp r0, #0
	beq _020146A2
	bl GF_AssertFail
_020146A2:
	add r3, r4, #0
	mov r0, #1
	add r2, r4, #0
	add r3, #0x2c
	str r0, [r4]
	ldmia r3!, {r0, r1}
	add r2, #0x10
	stmia r2!, {r0, r1}
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	add r3, r4, #0
	add r3, #0x3c
	add r2, r4, #0
	ldmia r3!, {r0, r1}
	add r2, #0x20
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	mov r0, #0
	str r0, [r4, #4]
	pop {r4, pc}
	thumb_func_end sub_02014694

	thumb_func_start sub_020146CC
sub_020146CC: ; 0x020146CC
	push {r4, lr}
	add r4, r0, #0
	mov r0, #1
	str r0, [r4, #4]
	add r0, r4, #0
	add r1, r4, #0
	ldr r2, _020146F0 ; =sub_02014694
	add r0, #0x2c
	add r1, #0x3c
	add r3, r4, #0
	bl sub_020DBB80
	str r0, [r4, #0xc]
	cmp r0, #0
	beq _020146EE
	bl GF_AssertFail
_020146EE:
	pop {r4, pc}
	.align 2, 0
_020146F0: .word sub_02014694
	thumb_func_end sub_020146CC

	thumb_func_start sub_020146F4
sub_020146F4: ; 0x020146F4
	mov r3, #3
	str r3, [r0, #0x48]
	str r1, [r0, #0x4c]
	str r2, [r0, #0x50]
	bx lr
	.align 2, 0
	thumb_func_end sub_020146F4

	thumb_func_start sub_02014700
sub_02014700: ; 0x02014700
	mov r1, #0
	str r1, [r0, #0x48]
	bx lr
	.align 2, 0
	thumb_func_end sub_02014700

	thumb_func_start GF_RTC_CopyDateTime
GF_RTC_CopyDateTime: ; 0x02014708
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, _0201473C ; =0x021D1048
	add r4, r1, #0
	ldr r0, [r0]
	cmp r0, #1
	beq _0201471A
	bl GF_AssertFail
_0201471A:
	ldr r2, _02014740 ; =0x021D1058
	ldmia r2!, {r0, r1}
	stmia r5!, {r0, r1}
	ldmia r2!, {r0, r1}
	stmia r5!, {r0, r1}
	ldr r0, _0201473C ; =0x021D1048
	ldr r0, [r0, #0x48]
	cmp r0, #3
	bne _02014730
	ldr r2, _02014744 ; =0x021D1094
	b _02014732
_02014730:
	ldr r2, _02014748 ; =0x021D1068
_02014732:
	ldmia r2!, {r0, r1}
	stmia r4!, {r0, r1}
	ldr r0, [r2]
	str r0, [r4]
	pop {r3, r4, r5, pc}
	.align 2, 0
_0201473C: .word 0x021D1048
_02014740: .word 0x021D1058
_02014744: .word 0x021D1094
_02014748: .word 0x021D1068
	thumb_func_end GF_RTC_CopyDateTime

	thumb_func_start sub_0201474C
sub_0201474C: ; 0x0201474C
	push {r4, lr}
	add r4, r0, #0
	ldr r0, _02014774 ; =0x021D1048
	ldr r0, [r0]
	cmp r0, #1
	beq _0201475C
	bl GF_AssertFail
_0201475C:
	ldr r0, _02014774 ; =0x021D1048
	ldr r0, [r0, #0x48]
	cmp r0, #3
	bne _02014768
	ldr r2, _02014778 ; =0x021D1094
	b _0201476A
_02014768:
	ldr r2, _0201477C ; =0x021D1068
_0201476A:
	ldmia r2!, {r0, r1}
	stmia r4!, {r0, r1}
	ldr r0, [r2]
	str r0, [r4]
	pop {r4, pc}
	.align 2, 0
_02014774: .word 0x021D1048
_02014778: .word 0x021D1094
_0201477C: .word 0x021D1068
	thumb_func_end sub_0201474C

	thumb_func_start sub_02014780
sub_02014780: ; 0x02014780
	push {r4, lr}
	add r4, r0, #0
	ldr r0, _0201479C ; =0x021D1048
	ldr r0, [r0]
	cmp r0, #1
	beq _02014790
	bl GF_AssertFail
_02014790:
	ldr r2, _020147A0 ; =0x021D1058
	ldmia r2!, {r0, r1}
	stmia r4!, {r0, r1}
	ldmia r2!, {r0, r1}
	stmia r4!, {r0, r1}
	pop {r4, pc}
	.align 2, 0
_0201479C: .word 0x021D1048
_020147A0: .word 0x021D1058
	thumb_func_end sub_02014780

	thumb_func_start sub_020147A4
sub_020147A4: ; 0x020147A4
	push {r3, r4}
	ldr r0, _020147D0 ; =0x021D1048
	ldr r0, [r0, #0x48]
	cmp r0, #3
	bne _020147B2
	ldr r4, _020147D4 ; =0x021D1094
	b _020147B4
_020147B2:
	ldr r4, _020147D8 ; =0x021D1068
_020147B4:
	ldr r1, [r4, #4]
	mov r0, #0x3c
	add r2, r1, #0
	mul r2, r0
	mov r0, #0xe1
	ldr r1, [r4]
	lsl r0, r0, #4
	mul r0, r1
	ldr r3, [r4, #8]
	add r0, r2, r0
	add r0, r3, r0
	pop {r3, r4}
	bx lr
	nop
_020147D0: .word 0x021D1048
_020147D4: .word 0x021D1094
_020147D8: .word 0x021D1068
	thumb_func_end sub_020147A4

	thumb_func_start sub_020147DC
sub_020147DC: ; 0x020147DC
	ldr r0, _020147F0 ; =0x021D1048
	ldr r0, [r0, #0x48]
	cmp r0, #3
	bne _020147E8
	ldr r1, _020147F4 ; =0x021D1094
	b _020147EA
_020147E8:
	ldr r1, _020147F8 ; =0x021D1068
_020147EA:
	ldr r3, _020147FC ; =sub_020DC330
	ldr r0, _02014800 ; =0x021D1058
	bx r3
	.align 2, 0
_020147F0: .word 0x021D1048
_020147F4: .word 0x021D1094
_020147F8: .word 0x021D1068
_020147FC: .word sub_020DC330
_02014800: .word 0x021D1058
	thumb_func_end sub_020147DC

	thumb_func_start sub_02014804
sub_02014804: ; 0x02014804
	push {r3, lr}
	bl sub_0201481C
	cmp r0, #3
	beq _02014812
	cmp r0, #4
	bne _02014816
_02014812:
	mov r0, #1
	pop {r3, pc}
_02014816:
	mov r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_02014804

	thumb_func_start sub_0201481C
sub_0201481C: ; 0x0201481C
	push {lr}
	sub sp, #0xc
	add r0, sp, #0
	bl sub_0201474C
	ldr r0, [sp]
	bl sub_02014844
	add sp, #0xc
	pop {pc}
	thumb_func_end sub_0201481C

	thumb_func_start sub_02014830
sub_02014830: ; 0x02014830
	push {lr}
	sub sp, #0xc
	add r0, sp, #0
	bl sub_0201474C
	ldr r0, [sp]
	bl sub_0201485C
	add sp, #0xc
	pop {pc}
	thumb_func_end sub_02014830

	thumb_func_start sub_02014844
sub_02014844: ; 0x02014844
	push {r4, lr}
	add r4, r0, #0
	bmi _0201484E
	cmp r4, #0x18
	blt _02014852
_0201484E:
	bl GF_AssertFail
_02014852:
	ldr r0, _02014858 ; =0x020F6060
	ldrb r0, [r0, r4]
	pop {r4, pc}
	.align 2, 0
_02014858: .word 0x020F6060
	thumb_func_end sub_02014844

	thumb_func_start sub_0201485C
sub_0201485C: ; 0x0201485C
	push {r3, lr}
	bl sub_02014844
	cmp r0, #0
	beq _02014870
	cmp r0, #1
	beq _02014874
	cmp r0, #2
	beq _02014874
	b _02014878
_02014870:
	mov r0, #0
	pop {r3, pc}
_02014874:
	mov r0, #1
	pop {r3, pc}
_02014878:
	mov r0, #2
	pop {r3, pc}
	thumb_func_end sub_0201485C

	thumb_func_start sub_0201487C
sub_0201487C: ; 0x0201487C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	add r6, r3, #0
	ldr r3, _020148E8 ; =0x020F6038
	add r4, r0, #0
	add r7, r1, #0
	add r5, r2, #0
	add r2, sp, #0x14
	ldmia r3!, {r0, r1}
	str r2, [sp]
	stmia r2!, {r0, r1}
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	ldr r3, _020148EC ; =0x020F602C
	add r2, sp, #8
	ldmia r3!, {r0, r1}
	str r2, [sp, #4]
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	ldr r1, [sp, #4]
	str r0, [r2]
	ldr r0, [sp]
	bl sub_020DC330
	add r2, r1, #0
	add r3, r0, #0
	mov r1, #0
	ldr r0, _020148F0 ; =0xBC19137F
	eor r1, r2
	eor r0, r3
	orr r0, r1
	beq _020148C0
	bl GF_AssertFail
_020148C0:
	sub r0, r4, r5
	mov ip, r7
	mov r0, ip
	sbc r0, r6
	bge _020148D4
	sub r0, r5, r4
	sbc r6, r7
	add sp, #0x24
	add r1, r6, #0
	pop {r4, r5, r6, r7, pc}
_020148D4:
	ldr r0, _020148F0 ; =0xBC19137F
	mov r1, #0
	sub r0, r0, r4
	sbc r1, r7
	add r0, r5, r0
	adc r6, r1
	add r1, r6, #0
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	nop
_020148E8: .word 0x020F6038
_020148EC: .word 0x020F602C
_020148F0: .word 0xBC19137F
	thumb_func_end sub_0201487C

	thumb_func_start sub_020148F4
sub_020148F4: ; 0x020148F4
	ldr r3, _020148FC ; =sub_02014700
	ldr r0, _02014900 ; =0x021D1048
	bx r3
	nop
_020148FC: .word sub_02014700
_02014900: .word 0x021D1048
	thumb_func_end sub_020148F4

	thumb_func_start sub_02014904
sub_02014904: ; 0x02014904
	add r3, r0, #0
	add r2, r1, #0
	add r1, r3, #0
	ldr r3, _02014910 ; =sub_020146F4
	ldr r0, _02014914 ; =0x021D1048
	bx r3
	.align 2, 0
_02014910: .word sub_020146F4
_02014914: .word 0x021D1048
	thumb_func_end sub_02014904

	thumb_func_start sub_02014918
sub_02014918: ; 0x02014918
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	add r1, r5, #1
	add r0, r4, #0
	lsl r1, r1, #3
	bl sub_0201AA8C
	cmp r0, #0
	beq _0201494E
	mov r2, #0
	cmp r5, #0
	bls _02014942
	add r3, r0, #0
	add r1, r2, #0
_02014936:
	str r1, [r3]
	str r1, [r3, #4]
	add r2, r2, #1
	add r3, #8
	cmp r2, r5
	blo _02014936
_02014942:
	mov r1, #0
	lsl r2, r2, #3
	mvn r1, r1
	str r1, [r0, r2]
	add r1, r0, r2
	str r4, [r1, #4]
_0201494E:
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02014918

	thumb_func_start sub_02014950
sub_02014950: ; 0x02014950
	push {r4, lr}
	add r4, r0, #0
	bl sub_020149E0
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	thumb_func_end sub_02014950

	thumb_func_start sub_02014960
sub_02014960: ; 0x02014960
	push {r3, r4, r5, r6, r7, lr}
	add r6, r1, #0
	add r1, sp, #0
	add r7, r2, #0
	add r5, r3, #0
	bl sub_020149A4
	add r4, r0, #0
	beq _0201497E
	add r0, r6, #0
	add r1, r7, #0
	bl sub_0200BBA0
	str r0, [r4]
	str r5, [r4, #4]
_0201497E:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02014960

	thumb_func_start sub_02014980
sub_02014980: ; 0x02014980
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	add r6, r1, #0
	add r1, sp, #0
	add r5, r2, #0
	bl sub_020149A4
	add r4, r0, #0
	beq _0201499E
	ldr r1, [sp]
	add r0, r6, #0
	bl sub_0202642C
	str r0, [r4]
	str r5, [r4, #4]
_0201499E:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_02014980

	thumb_func_start sub_020149A4
sub_020149A4: ; 0x020149A4
	push {r4, lr}
	ldr r3, [r0]
	cmp r3, #0
	beq _020149C4
	mov r2, #0
	mvn r2, r2
_020149B0:
	cmp r3, r2
	bne _020149BC
	bl GF_AssertFail
	mov r0, #0
	pop {r4, pc}
_020149BC:
	add r0, #8
	ldr r3, [r0]
	cmp r3, #0
	bne _020149B0
_020149C4:
	mov r2, #0
	mvn r2, r2
	add r4, r0, #0
	cmp r3, r2
	beq _020149D6
_020149CE:
	add r0, #8
	ldr r3, [r0]
	cmp r3, r2
	bne _020149CE
_020149D6:
	ldr r0, [r0, #4]
	str r0, [r1]
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020149A4

	thumb_func_start sub_020149E0
sub_020149E0: ; 0x020149E0
	push {r4, r5, r6, lr}
	add r5, r0, #0
	mov r0, #0
	ldr r1, [r5]
	mvn r0, r0
	cmp r1, r0
	beq _02014A06
	mov r4, #0
	add r6, r0, #0
_020149F2:
	ldr r0, [r5]
	cmp r0, #0
	beq _02014A06
	bl sub_02026380
	str r4, [r5]
	add r5, #8
	ldr r0, [r5]
	cmp r0, r6
	bne _020149F2
_02014A06:
	pop {r4, r5, r6, pc}
	thumb_func_end sub_020149E0

	thumb_func_start sub_02014A08
sub_02014A08: ; 0x02014A08
	push {r3, r4, r5, lr}
	add r5, r1, #0
	mov r1, #0xc
	add r4, r2, #0
	bl sub_0201AA8C
	mov r1, #0
	strb r1, [r0]
	strb r1, [r0, #1]
	strb r1, [r0, #2]
	strb r1, [r0, #3]
	strb r1, [r0, #4]
	strb r1, [r0, #5]
	strb r1, [r0, #6]
	strb r1, [r0, #7]
	strb r1, [r0, #8]
	strb r1, [r0, #9]
	strb r1, [r0, #0xa]
	strb r1, [r0, #0xb]
	mov r1, #1
	strb r1, [r0, #9]
	str r5, [r0]
	str r4, [r0, #4]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02014A08

	thumb_func_start sub_02014A38
sub_02014A38: ; 0x02014A38
	push {r4, lr}
	add r4, r0, #0
	bne _02014A42
	bl GF_AssertFail
_02014A42:
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02014A38

	thumb_func_start sub_02014A4C
sub_02014A4C: ; 0x02014A4C
	push {r4, lr}
	add r4, r0, #0
	bne _02014A56
	bl GF_AssertFail
_02014A56:
	ldrb r0, [r4, #8]
	lsl r0, r0, #2
	ldr r0, [r4, r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02014A4C

	thumb_func_start sub_02014A60
sub_02014A60: ; 0x02014A60
	push {r4, lr}
	add r4, r0, #0
	bne _02014A6A
	bl GF_AssertFail
_02014A6A:
	ldrb r1, [r4, #8]
	mov r0, #1
	eor r0, r1
	lsl r0, r0, #2
	ldr r0, [r4, r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02014A60

	thumb_func_start sub_02014A78
sub_02014A78: ; 0x02014A78
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _02014A86
	bl GF_AssertFail
_02014A86:
	strb r4, [r5, #9]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02014A78

	thumb_func_start sub_02014A8C
sub_02014A8C: ; 0x02014A8C
	cmp r0, #0
	beq _02014A9E
	ldrb r1, [r0, #9]
	cmp r1, #0
	beq _02014A9E
	ldrb r2, [r0, #8]
	mov r1, #1
	eor r1, r2
	strb r1, [r0, #8]
_02014A9E:
	bx lr
	thumb_func_end sub_02014A8C

	thumb_func_start sub_02014AA0
sub_02014AA0: ; 0x02014AA0
	push {r3, lr}
	mov r0, #0
	bl sub_020D4294
	mov r0, #0
	bl sub_020D422C
	pop {r3, pc}
	thumb_func_end sub_02014AA0

	thumb_func_start sub_02014AB0
sub_02014AB0: ; 0x02014AB0
	push {r4, r5, r6, lr}
	add r6, r0, #0
	add r5, r1, #0
	add r4, r2, #0
	cmp r3, #1
	bne _02014ACA
	mov r0, #0
	add r1, r6, #0
	add r2, r5, #0
	add r3, r4, #0
	bl sub_020D43E8
	pop {r4, r5, r6, pc}
_02014ACA:
	mov r0, #0
	add r1, r6, #0
	add r2, r5, #0
	add r3, r4, #0
	bl sub_020D4448
	pop {r4, r5, r6, pc}
	thumb_func_end sub_02014AB0

	thumb_func_start sub_02014AD8
sub_02014AD8: ; 0x02014AD8
	push {r3, r4, r5, lr}
	ldr r1, _02014B04 ; =0x0000079C
	add r5, r0, #0
	bl sub_0201AA8C
	ldr r2, _02014B04 ; =0x0000079C
	mov r1, #0
	add r4, r0, #0
	bl sub_020E5B44
	mov r2, #3
	lsl r2, r2, #8
	add r0, r5, #0
	add r1, r4, #0
	add r2, r4, r2
	bl sub_02014A08
	mov r1, #6
	lsl r1, r1, #8
	str r0, [r4, r1]
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_02014B04: .word 0x0000079C
	thumb_func_end sub_02014AD8

	thumb_func_start sub_02014B08
sub_02014B08: ; 0x02014B08
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r4, r1, #0
	add r6, r2, #0
	add r7, r3, #0
	cmp r5, #0
	bne _02014B1A
	bl GF_AssertFail
_02014B1A:
	ldr r0, _02014B88 ; =0x00000604
	ldr r0, [r5, r0]
	cmp r0, #0
	beq _02014B26
	bl GF_AssertFail
_02014B26:
	ldr r0, _02014B8C ; =0x0000078C
	mov r2, #0
	strb r4, [r5, r0]
	add r1, r0, #1
	strb r6, [r5, r1]
	add r1, r0, #0
	add r1, #0xc
	strh r2, [r5, r1]
	add r2, sp, #8
	mov r1, #0x14
	ldrsh r2, [r2, r1]
	add r1, r0, #0
	add r1, #0xe
	strh r2, [r5, r1]
	add r1, r0, #4
	ldr r2, [sp, #0x20]
	add r0, #8
	str r2, [r5, r1]
	ldr r1, [sp, #0x24]
	ldr r3, [sp, #0x18]
	str r1, [r5, r0]
	ldr r0, _02014B90 ; =0x0000060C
	mov r1, #0xc0
	add r0, r5, r0
	add r2, r7, #0
	bl sub_02014C60
	ldr r0, _02014B94 ; =sub_02014CBC
	ldr r2, [sp, #0x28]
	add r1, r5, #0
	bl sub_0200E320
	ldr r1, _02014B88 ; =0x00000604
	mov r2, #3
	str r0, [r5, r1]
	ldr r0, _02014B98 ; =0x00000794
	add r1, r5, #0
	ldr r0, [r5, r0]
	lsl r2, r2, #8
	bl sub_020D47EC
	ldr r0, _02014B98 ; =0x00000794
	mov r2, #3
	lsl r2, r2, #8
	ldr r0, [r5, r0]
	add r1, r5, r2
	bl sub_020D47EC
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02014B88: .word 0x00000604
_02014B8C: .word 0x0000078C
_02014B90: .word 0x0000060C
_02014B94: .word sub_02014CBC
_02014B98: .word 0x00000794
	thumb_func_end sub_02014B08

	thumb_func_start sub_02014B9C
sub_02014B9C: ; 0x02014B9C
	push {r4, lr}
	add r4, r0, #0
	bne _02014BA6
	bl GF_AssertFail
_02014BA6:
	ldr r0, _02014BD0 ; =0x00000604
	ldr r0, [r4, r0]
	cmp r0, #0
	beq _02014BCC
	bl sub_0200E390
	ldr r0, _02014BD0 ; =0x00000604
	mov r1, #0
	str r1, [r4, r0]
	sub r0, r0, #4
	ldr r0, [r4, r0]
	bl sub_02014A4C
	ldr r1, _02014BD4 ; =0x00000794
	mov r2, #3
	ldr r1, [r4, r1]
	lsl r2, r2, #8
	bl sub_020E5B44
_02014BCC:
	pop {r4, pc}
	nop
_02014BD0: .word 0x00000604
_02014BD4: .word 0x00000794
	thumb_func_end sub_02014B9C

	thumb_func_start sub_02014BD8
sub_02014BD8: ; 0x02014BD8
	push {r4, lr}
	add r4, r0, #0
	bl sub_02014B9C
	bl sub_02014D68
	mov r0, #6
	lsl r0, r0, #8
	ldr r0, [r4, r0]
	bl sub_02014A38
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02014BD8

	thumb_func_start sub_02014BF8
sub_02014BF8: ; 0x02014BF8
	mov r1, #6
	lsl r1, r1, #8
	ldr r3, _02014C04 ; =sub_02014A4C
	ldr r0, [r0, r1]
	bx r3
	nop
_02014C04: .word sub_02014A4C
	thumb_func_end sub_02014BF8

	thumb_func_start sub_02014C08
sub_02014C08: ; 0x02014C08
	push {r4, lr}
	add r4, r0, #0
	beq _02014C36
	ldr r0, _02014C38 ; =0x00000604
	ldr r1, [r4, r0]
	cmp r1, #0
	beq _02014C36
	sub r0, r0, #4
	ldr r0, [r4, r0]
	bl sub_02014A8C
	mov r0, #6
	lsl r0, r0, #8
	ldr r0, [r4, r0]
	bl sub_02014A4C
	add r1, r0, #0
	ldr r0, _02014C3C ; =0x00000794
	mov r2, #3
	ldr r0, [r4, r0]
	lsl r2, r2, #8
	bl sub_020D47EC
_02014C36:
	pop {r4, pc}
	.align 2, 0
_02014C38: .word 0x00000604
_02014C3C: .word 0x00000794
	thumb_func_end sub_02014C08

	thumb_func_start sub_02014C40
sub_02014C40: ; 0x02014C40
	push {r4, lr}
	add r4, r0, #0
	beq _02014C58
	ldr r0, _02014C5C ; =0x00000604
	ldr r0, [r4, r0]
	cmp r0, #0
	beq _02014C58
	bl sub_02014D68
	add r0, r4, #0
	bl sub_02014D70
_02014C58:
	pop {r4, pc}
	nop
_02014C5C: .word 0x00000604
	thumb_func_end sub_02014C40

	thumb_func_start sub_02014C60
sub_02014C60: ; 0x02014C60
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	mov r4, #0
	add r7, r1, #0
	add r5, r0, #0
	add r6, r4, #0
	str r2, [sp]
	cmp r7, #0
	bls _02014CAE
	asr r0, r3, #0x1f
	str r3, [sp, #4]
	str r0, [sp, #8]
_02014C78:
	asr r0, r4, #4
	lsl r1, r0, #2
	ldr r0, _02014CB4 ; =0x021094DC
	ldr r2, [sp, #4]
	ldrsh r0, [r0, r1]
	ldr r3, [sp, #8]
	asr r1, r0, #0x1f
	bl sub_020F2948
	mov r2, #2
	lsl r2, r2, #0xa
	add r0, r0, r2
	ldr r2, _02014CB8 ; =0x00000000
	adc r1, r2
	lsl r1, r1, #0x14
	lsr r0, r0, #0xc
	orr r0, r1
	asr r0, r0, #0xc
	strh r0, [r5]
	ldr r0, [sp]
	add r6, r6, #1
	add r0, r4, r0
	lsl r0, r0, #0x10
	lsr r4, r0, #0x10
	add r5, r5, #2
	cmp r6, r7
	blo _02014C78
_02014CAE:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_02014CB4: .word 0x021094DC
_02014CB8: .word 0x00000000
	thumb_func_end sub_02014C60

	thumb_func_start sub_02014CBC
sub_02014CBC: ; 0x02014CBC
	push {r3, r4, r5, r6, r7, lr}
	mov r0, #6
	add r6, r1, #0
	lsl r0, r0, #8
	ldr r0, [r6, r0]
	bl sub_02014A4C
	add r5, r0, #0
	ldr r0, _02014D58 ; =0x00000798
	mov r1, #0x64
	ldrsh r0, [r6, r0]
	bl sub_020F2998
	lsl r0, r0, #0x18
	lsr r3, r0, #0x18
	ldr r0, _02014D5C ; =0x0000078C
	ldrb r4, [r6, r0]
	add r0, r0, #1
	ldrb r0, [r6, r0]
	cmp r4, r0
	bgt _02014D24
	lsl r0, r4, #2
	add r5, r5, r0
_02014CEA:
	ldr r2, [r5]
	lsl r0, r2, #0x10
	asr r7, r0, #0x10
	lsl r0, r3, #1
	add r1, r6, r0
	ldr r0, _02014D60 ; =0x0000060C
	ldrsh r0, [r1, r0]
	add r0, r7, r0
	lsl r0, r0, #0x10
	asr r1, r0, #0x10
	lsr r0, r2, #0x10
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	lsl r1, r1, #0x10
	lsl r0, r0, #0x10
	lsr r1, r1, #0x10
	orr r0, r1
	stmia r5!, {r0}
	add r0, r3, #1
	mov r1, #0xc0
	bl sub_020F2998
	lsl r0, r1, #0x18
	lsr r3, r0, #0x18
	ldr r0, _02014D64 ; =0x0000078D
	add r4, r4, #1
	ldrb r0, [r6, r0]
	cmp r4, r0
	ble _02014CEA
_02014D24:
	ldr r1, _02014D58 ; =0x00000798
	add r0, r1, #2
	ldrsh r2, [r6, r1]
	ldrsh r0, [r6, r0]
	add r4, r6, r1
	add r0, r2, r0
	strh r0, [r4]
	ldrsh r0, [r6, r1]
	mov r1, #0x4b
	lsl r1, r1, #8
	cmp r0, r1
	blt _02014D48
	mov r0, #0
	ldrsh r0, [r4, r0]
	bl sub_020F2998
	strh r1, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_02014D48:
	cmp r0, #0
	bge _02014D54
	mov r0, #0
	ldrsh r0, [r4, r0]
	add r0, r0, r1
	strh r0, [r4]
_02014D54:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02014D58: .word 0x00000798
_02014D5C: .word 0x0000078C
_02014D60: .word 0x0000060C
_02014D64: .word 0x0000078D
	thumb_func_end sub_02014CBC

	thumb_func_start sub_02014D68
sub_02014D68: ; 0x02014D68
	ldr r3, _02014D6C ; =sub_02014AA0
	bx r3
	.align 2, 0
_02014D6C: .word sub_02014AA0
	thumb_func_end sub_02014D68

	thumb_func_start sub_02014D70
sub_02014D70: ; 0x02014D70
	push {r3, r4, r5, lr}
	add r4, r0, #0
	bne _02014D7A
	bl GF_AssertFail
_02014D7A:
	mov r0, #6
	lsl r0, r0, #8
	ldr r0, [r4, r0]
	bl sub_02014A60
	mov r1, #3
	lsl r1, r1, #8
	add r5, r0, #0
	bl DC_FlushRange
	mov r1, #0x79
	lsl r1, r1, #4
	ldr r1, [r4, r1]
	add r0, r5, #0
	mov r2, #4
	mov r3, #1
	bl sub_02014AB0
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02014D70

	thumb_func_start sub_02014DA0
sub_02014DA0: ; 0x02014DA0
	mov r1, #0
	ldr r2, _02014DB0 ; =0x021D10A8
	add r0, r1, #0
_02014DA6:
	add r1, r1, #1
	stmia r2!, {r0}
	cmp r1, #0x10
	blt _02014DA6
	bx lr
	.align 2, 0
_02014DB0: .word 0x021D10A8
	thumb_func_end sub_02014DA0

	thumb_func_start sub_02014DB4
sub_02014DB4: ; 0x02014DB4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	str r1, [sp, #8]
	ldr r1, _02014EA8 ; =0x021D10A8
	add r7, r0, #0
	add r6, r2, #0
	str r3, [sp, #0xc]
	mov r5, #0
_02014DC4:
	ldr r0, [r1]
	cmp r0, #0
	beq _02014DD2
	add r5, r5, #1
	add r1, r1, #4
	cmp r5, #0x10
	blt _02014DC4
_02014DD2:
	cmp r5, #0x10
	blt _02014DDC
	add sp, #0x10
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02014DDC:
	ldr r0, [sp, #0x2c]
	mov r1, #0xdc
	bl sub_0201AA8C
	add r4, r0, #0
	bne _02014DEC
	bl GF_AssertFail
_02014DEC:
	add r0, r4, #0
	mov r1, #0
	mov r2, #0xdc
	bl sub_020E5B44
	add r2, r4, #0
	ldr r0, [sp, #8]
	str r7, [r4, #0x18]
	ldr r3, _02014EAC ; =0x020F6090
	str r0, [r4, #0x1c]
	ldmia r3!, {r0, r1}
	add r2, #0x34
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	ldr r3, _02014EB0 ; =0x020F6078
	str r0, [r2]
	add r2, r4, #0
	ldmia r3!, {r0, r1}
	add r2, #0x40
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	ldr r3, _02014EB4 ; =0x020F6084
	str r0, [r2]
	add r2, r4, #0
	ldmia r3!, {r0, r1}
	add r2, #0x4c
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	mov r1, #0
	str r0, [r2]
	ldr r2, [sp, #0xc]
	add r0, r6, #0
	bl sub_020E5B44
	ldr r0, [sp, #0xc]
	str r6, [r4, #0xc]
	str r6, [r4, #0x10]
	add r0, r6, r0
	str r0, [r4, #0x14]
	add r0, r4, #0
	add r0, #0xda
	strb r5, [r0]
	ldr r0, _02014EA8 ; =0x021D10A8
	lsl r5, r5, #2
	str r4, [r0, r5]
	ldr r0, [sp, #0x28]
	cmp r0, #1
	bne _02014E80
	ldr r0, [sp, #0x2c]
	bl sub_02023114
	str r0, [r4, #0x20]
	mov r3, #0
	str r3, [r4, #0x24]
	str r3, [r4, #0x28]
	mov r0, #2
	str r3, [r4, #0x2c]
	lsl r0, r0, #0xc
	strh r0, [r4, #0x30]
	str r3, [sp]
	ldr r0, [r4, #0x20]
	ldr r1, _02014EAC ; =0x020F6090
	str r0, [sp, #4]
	ldrh r2, [r4, #0x30]
	ldr r0, _02014EB4 ; =0x020F6084
	bl sub_02023308
	add r0, r4, #0
	mov r1, #0
	add r0, #0xdb
	strb r1, [r0]
	ldr r0, [r4, #0x20]
	bl sub_0202313C
_02014E80:
	mov r0, #6
	str r0, [sp]
	mov r0, #0x3f
	str r0, [sp, #4]
	ldr r0, _02014EB8 ; =0x020F609C
	mov r1, #0x14
	ldr r0, [r0, r5]
	mov r2, #0xc8
	mov r3, #5
	bl sub_020988F4
	str r0, [r4]
	ldr r1, _02014EB0 ; =0x020F6078
	add r0, r4, #0
	bl sub_020154E4
	add r0, r4, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02014EA8: .word 0x021D10A8
_02014EAC: .word 0x020F6090
_02014EB0: .word 0x020F6078
_02014EB4: .word 0x020F6084
_02014EB8: .word 0x020F609C
	thumb_func_end sub_02014DB4

	thumb_func_start sub_02014EBC
sub_02014EBC: ; 0x02014EBC
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	bl sub_020154B8
	add r0, r5, #0
	add r0, #0xd8
	ldrb r1, [r0]
	mov r0, #1
	tst r0, r1
	beq _02014EDA
	add r0, r5, #0
	add r0, #0x58
	bl sub_020B5CD8
	b _02014EFA
_02014EDA:
	mov r0, #2
	tst r0, r1
	beq _02014EFA
	mov r6, #0
	add r4, r5, #0
	add r7, r6, #0
_02014EE6:
	ldr r0, [r4, #0x58]
	cmp r0, #0
	beq _02014EF2
	bl sub_020B68A4
	str r7, [r4, #0x58]
_02014EF2:
	add r6, r6, #1
	add r4, r4, #4
	cmp r6, #0x10
	blt _02014EE6
_02014EFA:
	add r0, r5, #0
	add r0, #0xd8
	ldrb r1, [r0]
	mov r0, #4
	tst r0, r1
	beq _02014F10
	add r0, r5, #0
	add r0, #0x98
	bl sub_020B5EC4
	b _02014F38
_02014F10:
	mov r0, #8
	tst r0, r1
	beq _02014F38
	mov r6, #0
	add r4, r5, #0
	add r7, r6, #0
_02014F1C:
	add r0, r4, #0
	add r0, #0x98
	ldr r0, [r0]
	cmp r0, #0
	beq _02014F30
	bl sub_020B6C3C
	add r0, r4, #0
	add r0, #0x98
	str r7, [r0]
_02014F30:
	add r6, r6, #1
	add r4, r4, #4
	cmp r6, #0x10
	blt _02014F1C
_02014F38:
	add r0, r5, #0
	mov r1, #0
	add r0, #0xd8
	strb r1, [r0]
	str r1, [r5, #8]
	ldr r0, [r5, #4]
	cmp r0, #0
	beq _02014F50
	bl sub_0201AB0C
	mov r0, #0
	str r0, [r5, #4]
_02014F50:
	ldr r2, _02014F80 ; =0x021D10A8
	mov r1, #0
_02014F54:
	ldr r0, [r2]
	cmp r0, r5
	bne _02014F64
	ldr r0, _02014F80 ; =0x021D10A8
	mov r2, #0
	lsl r1, r1, #2
	str r2, [r0, r1]
	b _02014F6C
_02014F64:
	add r1, r1, #1
	add r2, r2, #4
	cmp r1, #0x10
	blt _02014F54
_02014F6C:
	ldr r0, [r5, #0x20]
	cmp r0, #0
	beq _02014F76
	bl sub_02023120
_02014F76:
	add r0, r5, #0
	bl sub_0201AB0C
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02014F80: .word 0x021D10A8
	thumb_func_end sub_02014EBC

	thumb_func_start sub_02014F84
sub_02014F84: ; 0x02014F84
	push {r3, r4, r5, lr}
	ldr r5, _02014FA0 ; =0x021D10A8
	mov r4, #0
_02014F8A:
	ldr r0, [r5]
	cmp r0, #0
	beq _02014F94
	bl sub_02014EBC
_02014F94:
	add r4, r4, #1
	add r5, r5, #4
	cmp r4, #0x10
	blt _02014F8A
	pop {r3, r4, r5, pc}
	nop
_02014FA0: .word 0x021D10A8
	thumb_func_end sub_02014F84

	thumb_func_start sub_02014FA4
sub_02014FA4: ; 0x02014FA4
	push {r4, lr}
	ldr r1, _02014FCC ; =0x021D10A0
	mov r2, #3
	ldr r1, [r1, #8]
	ldr r4, [r1, #0x10]
	add r0, r4, r0
	add r3, r0, #0
	and r3, r2
	beq _02014FBC
	mov r2, #4
	sub r2, r2, r3
	add r0, r0, r2
_02014FBC:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02014FC8
	bl GF_AssertFail
_02014FC8:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02014FCC: .word 0x021D10A0
	thumb_func_end sub_02014FA4

	thumb_func_start sub_02014FD0
sub_02014FD0: ; 0x02014FD0
	push {r4, lr}
	ldr r1, _02014FF8 ; =0x021D10A0
	mov r2, #3
	ldr r1, [r1, #0xc]
	ldr r4, [r1, #0x10]
	add r0, r4, r0
	add r3, r0, #0
	and r3, r2
	beq _02014FE8
	mov r2, #4
	sub r2, r2, r3
	add r0, r0, r2
_02014FE8:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02014FF4
	bl GF_AssertFail
_02014FF4:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02014FF8: .word 0x021D10A0
	thumb_func_end sub_02014FD0

	thumb_func_start sub_02014FFC
sub_02014FFC: ; 0x02014FFC
	push {r4, lr}
	ldr r1, _02015024 ; =0x021D10A0
	mov r2, #3
	ldr r1, [r1, #0x10]
	ldr r4, [r1, #0x10]
	add r0, r4, r0
	add r3, r0, #0
	and r3, r2
	beq _02015014
	mov r2, #4
	sub r2, r2, r3
	add r0, r0, r2
_02015014:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02015020
	bl GF_AssertFail
_02015020:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02015024: .word 0x021D10A0
	thumb_func_end sub_02014FFC

	thumb_func_start sub_02015028
sub_02015028: ; 0x02015028
	push {r4, lr}
	ldr r1, _02015050 ; =0x021D10A0
	mov r2, #3
	ldr r1, [r1, #0x14]
	ldr r4, [r1, #0x10]
	add r0, r4, r0
	add r3, r0, #0
	and r3, r2
	beq _02015040
	mov r2, #4
	sub r2, r2, r3
	add r0, r0, r2
_02015040:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _0201504C
	bl GF_AssertFail
_0201504C:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02015050: .word 0x021D10A0
	thumb_func_end sub_02015028

	thumb_func_start sub_02015054
sub_02015054: ; 0x02015054
	push {r4, lr}
	ldr r1, _0201507C ; =0x021D10A0
	mov r2, #3
	ldr r1, [r1, #0x18]
	ldr r4, [r1, #0x10]
	add r0, r4, r0
	add r3, r0, #0
	and r3, r2
	beq _0201506C
	mov r2, #4
	sub r2, r2, r3
	add r0, r0, r2
_0201506C:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02015078
	bl GF_AssertFail
_02015078:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_0201507C: .word 0x021D10A0
	thumb_func_end sub_02015054

	thumb_func_start sub_02015080
sub_02015080: ; 0x02015080
	push {r4, lr}
	ldr r1, _020150A8 ; =0x021D10A0
	mov r2, #3
	ldr r1, [r1, #0x1c]
	ldr r4, [r1, #0x10]
	add r0, r4, r0
	add r3, r0, #0
	and r3, r2
	beq _02015098
	mov r2, #4
	sub r2, r2, r3
	add r0, r0, r2
_02015098:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _020150A4
	bl GF_AssertFail
_020150A4:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_020150A8: .word 0x021D10A0
	thumb_func_end sub_02015080

	thumb_func_start sub_020150AC
sub_020150AC: ; 0x020150AC
	push {r4, lr}
	ldr r1, _020150D4 ; =0x021D10A0
	mov r2, #3
	ldr r1, [r1, #0x20]
	ldr r4, [r1, #0x10]
	add r0, r4, r0
	add r3, r0, #0
	and r3, r2
	beq _020150C4
	mov r2, #4
	sub r2, r2, r3
	add r0, r0, r2
_020150C4:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _020150D0
	bl GF_AssertFail
_020150D0:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_020150D4: .word 0x021D10A0
	thumb_func_end sub_020150AC

	thumb_func_start sub_020150D8
sub_020150D8: ; 0x020150D8
	push {r4, lr}
	ldr r1, _02015100 ; =0x021D10A0
	mov r2, #3
	ldr r1, [r1, #0x24]
	ldr r4, [r1, #0x10]
	add r0, r4, r0
	add r3, r0, #0
	and r3, r2
	beq _020150F0
	mov r2, #4
	sub r2, r2, r3
	add r0, r0, r2
_020150F0:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _020150FC
	bl GF_AssertFail
_020150FC:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02015100: .word 0x021D10A0
	thumb_func_end sub_020150D8

	thumb_func_start sub_02015104
sub_02015104: ; 0x02015104
	push {r4, lr}
	ldr r1, _0201512C ; =0x021D10A0
	mov r2, #3
	ldr r1, [r1, #0x28]
	ldr r4, [r1, #0x10]
	add r0, r4, r0
	add r3, r0, #0
	and r3, r2
	beq _0201511C
	mov r2, #4
	sub r2, r2, r3
	add r0, r0, r2
_0201511C:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02015128
	bl GF_AssertFail
_02015128:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_0201512C: .word 0x021D10A0
	thumb_func_end sub_02015104

	thumb_func_start sub_02015130
sub_02015130: ; 0x02015130
	push {r4, lr}
	ldr r1, _02015158 ; =0x021D10A0
	mov r2, #3
	ldr r1, [r1, #0x2c]
	ldr r4, [r1, #0x10]
	add r0, r4, r0
	add r3, r0, #0
	and r3, r2
	beq _02015148
	mov r2, #4
	sub r2, r2, r3
	add r0, r0, r2
_02015148:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02015154
	bl GF_AssertFail
_02015154:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02015158: .word 0x021D10A0
	thumb_func_end sub_02015130

	thumb_func_start sub_0201515C
sub_0201515C: ; 0x0201515C
	push {r4, lr}
	ldr r1, _02015184 ; =0x021D10A0
	mov r2, #3
	ldr r1, [r1, #0x30]
	ldr r4, [r1, #0x10]
	add r0, r4, r0
	add r3, r0, #0
	and r3, r2
	beq _02015174
	mov r2, #4
	sub r2, r2, r3
	add r0, r0, r2
_02015174:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02015180
	bl GF_AssertFail
_02015180:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02015184: .word 0x021D10A0
	thumb_func_end sub_0201515C

	thumb_func_start sub_02015188
sub_02015188: ; 0x02015188
	push {r4, lr}
	ldr r1, _020151B0 ; =0x021D10A0
	mov r2, #3
	ldr r1, [r1, #0x34]
	ldr r4, [r1, #0x10]
	add r0, r4, r0
	add r3, r0, #0
	and r3, r2
	beq _020151A0
	mov r2, #4
	sub r2, r2, r3
	add r0, r0, r2
_020151A0:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _020151AC
	bl GF_AssertFail
_020151AC:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_020151B0: .word 0x021D10A0
	thumb_func_end sub_02015188

	thumb_func_start sub_020151B4
sub_020151B4: ; 0x020151B4
	push {r4, lr}
	ldr r1, _020151DC ; =0x021D10A0
	mov r2, #3
	ldr r1, [r1, #0x38]
	ldr r4, [r1, #0x10]
	add r0, r4, r0
	add r3, r0, #0
	and r3, r2
	beq _020151CC
	mov r2, #4
	sub r2, r2, r3
	add r0, r0, r2
_020151CC:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _020151D8
	bl GF_AssertFail
_020151D8:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_020151DC: .word 0x021D10A0
	thumb_func_end sub_020151B4

	thumb_func_start sub_020151E0
sub_020151E0: ; 0x020151E0
	push {r4, lr}
	ldr r1, _02015208 ; =0x021D10A0
	mov r2, #3
	ldr r1, [r1, #0x3c]
	ldr r4, [r1, #0x10]
	add r0, r4, r0
	add r3, r0, #0
	and r3, r2
	beq _020151F8
	mov r2, #4
	sub r2, r2, r3
	add r0, r0, r2
_020151F8:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02015204
	bl GF_AssertFail
_02015204:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02015208: .word 0x021D10A0
	thumb_func_end sub_020151E0

	thumb_func_start sub_0201520C
sub_0201520C: ; 0x0201520C
	push {r4, lr}
	ldr r1, _02015234 ; =0x021D10A0
	mov r2, #3
	ldr r1, [r1, #0x40]
	ldr r4, [r1, #0x10]
	add r0, r4, r0
	add r3, r0, #0
	and r3, r2
	beq _02015224
	mov r2, #4
	sub r2, r2, r3
	add r0, r0, r2
_02015224:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02015230
	bl GF_AssertFail
_02015230:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02015234: .word 0x021D10A0
	thumb_func_end sub_0201520C

	thumb_func_start sub_02015238
sub_02015238: ; 0x02015238
	push {r4, lr}
	ldr r1, _02015260 ; =0x021D10A0
	mov r2, #3
	ldr r1, [r1, #0x44]
	ldr r4, [r1, #0x10]
	add r0, r4, r0
	add r3, r0, #0
	and r3, r2
	beq _02015250
	mov r2, #4
	sub r2, r2, r3
	add r0, r0, r2
_02015250:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _0201525C
	bl GF_AssertFail
_0201525C:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02015260: .word 0x021D10A0
	thumb_func_end sub_02015238

	thumb_func_start sub_02015264
sub_02015264: ; 0x02015264
	ldr r3, _02015268 ; =sub_02007524
	bx r3
	.align 2, 0
_02015268: .word sub_02007524
	thumb_func_end sub_02015264

	thumb_func_start sub_0201526C
sub_0201526C: ; 0x0201526C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r0, [r5]
	add r6, r1, #0
	add r4, r2, #0
	add r7, r3, #0
	cmp r0, #0
	bne _02015280
	bl GF_AssertFail
_02015280:
	ldr r0, [r5, #4]
	cmp r0, #0
	beq _0201528A
	bl GF_AssertFail
_0201528A:
	add r0, r5, #0
	add r0, #0xd8
	strb r4, [r0]
	mov r0, #1
	tst r0, r4
	beq _020152A0
	add r0, r5, #0
	add r0, #0x58
	bl sub_020B5C98
	b _020152B6
_020152A0:
	mov r0, #2
	tst r0, r4
	beq _020152B6
	mov r1, #0
	add r2, r5, #0
	add r0, r1, #0
_020152AC:
	add r1, r1, #1
	str r0, [r2, #0x58]
	add r2, r2, #4
	cmp r1, #0x10
	blt _020152AC
_020152B6:
	mov r0, #4
	tst r0, r4
	beq _020152C6
	add r0, r5, #0
	add r0, #0x98
	bl sub_020B5EA8
	b _020152E0
_020152C6:
	mov r0, #8
	tst r0, r4
	beq _020152E0
	mov r2, #0
	add r3, r5, #0
	add r1, r2, #0
_020152D2:
	add r0, r3, #0
	add r0, #0x98
	add r2, r2, #1
	add r3, r3, #4
	str r1, [r0]
	cmp r2, #0x10
	blt _020152D2
_020152E0:
	str r6, [r5, #4]
	cmp r7, #1
	bne _020152EE
	add r0, r5, #0
	bl sub_02015300
	pop {r3, r4, r5, r6, r7, pc}
_020152EE:
	ldr r0, _020152FC ; =sub_02015340
	add r1, r5, #0
	mov r2, #5
	bl sub_0200E374
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020152FC: .word sub_02015340
	thumb_func_end sub_0201526C

	thumb_func_start sub_02015300
sub_02015300: ; 0x02015300
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r4, #4]
	bl sub_0209857C
	ldr r0, _0201533C ; =0x021D10A0
	str r4, [r0]
	ldr r1, [r4, #0x18]
	ldr r0, [r4]
	cmp r1, #0
	bne _0201531E
	bl sub_020983E8
	b _02015322
_0201531E:
	bl sub_020984B0
_02015322:
	ldr r1, [r4, #0x1c]
	ldr r0, [r4]
	cmp r1, #0
	bne _02015330
	bl sub_020983D4
	b _02015334
_02015330:
	bl sub_020983FC
_02015334:
	ldr r0, _0201533C ; =0x021D10A0
	mov r1, #0
	str r1, [r0]
	pop {r4, pc}
	.align 2, 0
_0201533C: .word 0x021D10A0
	thumb_func_end sub_02015300

	thumb_func_start sub_02015340
sub_02015340: ; 0x02015340
	push {r4, lr}
	add r4, r0, #0
	add r0, r1, #0
	bl sub_02015300
	add r0, r4, #0
	bl sub_0200E390
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02015340

	thumb_func_start sub_02015354
sub_02015354: ; 0x02015354
	push {r4, lr}
	add r4, r0, #0
	bne _0201535E
	bl GF_AssertFail
_0201535E:
	ldr r0, _02015390 ; =0x021D10A0
	ldr r0, [r0]
	cmp r0, #0
	bne _0201536A
	bl GF_AssertFail
_0201536A:
	ldr r0, _02015390 ; =0x021D10A0
	mov r1, #0
	ldr r3, [r0]
	add r2, r3, #0
_02015372:
	ldr r0, [r2, #0x58]
	cmp r0, #0
	bne _02015380
	lsl r0, r1, #2
	add r0, r3, r0
	str r4, [r0, #0x58]
	pop {r4, pc}
_02015380:
	add r1, r1, #1
	add r2, r2, #4
	cmp r1, #0x10
	blt _02015372
	bl GF_AssertFail
	pop {r4, pc}
	nop
_02015390: .word 0x021D10A0
	thumb_func_end sub_02015354

	thumb_func_start sub_02015394
sub_02015394: ; 0x02015394
	push {r4, lr}
	add r4, r0, #0
	bne _0201539E
	bl GF_AssertFail
_0201539E:
	ldr r0, _020153D4 ; =0x021D10A0
	ldr r0, [r0]
	cmp r0, #0
	bne _020153AA
	bl GF_AssertFail
_020153AA:
	ldr r0, _020153D4 ; =0x021D10A0
	mov r1, #0
	ldr r3, [r0]
	add r2, r3, #0
_020153B2:
	add r0, r2, #0
	add r0, #0x98
	ldr r0, [r0]
	cmp r0, #0
	bne _020153C6
	lsl r0, r1, #2
	add r0, r3, r0
	add r0, #0x98
	str r4, [r0]
	pop {r4, pc}
_020153C6:
	add r1, r1, #1
	add r2, r2, #4
	cmp r1, #0x10
	blt _020153B2
	bl GF_AssertFail
	pop {r4, pc}
	.align 2, 0
_020153D4: .word 0x021D10A0
	thumb_func_end sub_02015394

	thumb_func_start sub_020153D8
sub_020153D8: ; 0x020153D8
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0x20]
	cmp r1, #0
	beq _020153F4
	add r0, #0xdb
	ldrb r0, [r0]
	bl sub_020233D8
	ldr r0, [r4, #0x20]
	bl sub_0202313C
	bl sub_02023154
_020153F4:
	bl sub_020BEF98
	ldr r0, [r4]
	ldr r1, _02015410 ; =0x021DA4E8
	bl sub_020981D4
	ldr r0, [r4, #0x20]
	cmp r0, #0
	beq _0201540A
	bl sub_02023148
_0201540A:
	bl sub_020BEF98
	pop {r4, pc}
	.align 2, 0
_02015410: .word 0x021DA4E8
	thumb_func_end sub_020153D8

	thumb_func_start sub_02015414
sub_02015414: ; 0x02015414
	ldr r3, _0201541C ; =sub_0209829C
	ldr r0, [r0]
	bx r3
	nop
_0201541C: .word sub_0209829C
	thumb_func_end sub_02015414

	thumb_func_start sub_02015420
sub_02015420: ; 0x02015420
	mov r0, #0
	ldr r3, _02015438 ; =0x021D10A8
	add r2, r0, #0
_02015426:
	ldr r1, [r3]
	cmp r1, #0
	beq _0201542E
	add r0, r0, #1
_0201542E:
	add r2, r2, #1
	add r3, r3, #4
	cmp r2, #0x10
	blt _02015426
	bx lr
	.align 2, 0
_02015438: .word 0x021D10A8
	thumb_func_end sub_02015420

	thumb_func_start sub_0201543C
sub_0201543C: ; 0x0201543C
	push {r4, r5, r6, lr}
	mov r4, #0
	ldr r5, _0201545C ; =0x021D10A8
	add r6, r4, #0
_02015444:
	ldr r0, [r5]
	cmp r0, #0
	beq _02015450
	bl sub_020153D8
	add r4, r4, #1
_02015450:
	add r6, r6, #1
	add r5, r5, #4
	cmp r6, #0x10
	blt _02015444
	add r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_0201545C: .word 0x021D10A8
	thumb_func_end sub_0201543C

	thumb_func_start sub_02015460
sub_02015460: ; 0x02015460
	push {r4, r5, r6, lr}
	mov r4, #0
	ldr r5, _02015480 ; =0x021D10A8
	add r6, r4, #0
_02015468:
	ldr r0, [r5]
	cmp r0, #0
	beq _02015474
	bl sub_02015414
	add r4, r4, #1
_02015474:
	add r6, r6, #1
	add r5, r5, #4
	cmp r6, #0x10
	blt _02015468
	add r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_02015480: .word 0x021D10A8
	thumb_func_end sub_02015460

	thumb_func_start sub_02015484
sub_02015484: ; 0x02015484
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4]
	bl sub_02098160
	str r0, [r4, #8]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02015484

	thumb_func_start sub_02015494
sub_02015494: ; 0x02015494
	push {r4, lr}
	add r4, r0, #0
	ldr r0, _020154AC ; =0x021D10A0
	str r3, [r0, #4]
	ldr r0, [r4]
	bl sub_020980CC
	ldr r1, _020154AC ; =0x021D10A0
	mov r2, #0
	str r2, [r1, #4]
	str r0, [r4, #8]
	pop {r4, pc}
	.align 2, 0
_020154AC: .word 0x021D10A0
	thumb_func_end sub_02015494

	thumb_func_start sub_020154B0
sub_020154B0: ; 0x020154B0
	ldr r0, [r0]
	ldr r0, [r0, #8]
	bx lr
	.align 2, 0
	thumb_func_end sub_020154B0

	thumb_func_start sub_020154B8
sub_020154B8: ; 0x020154B8
	ldr r3, _020154C0 ; =sub_02097FF4
	ldr r0, [r0]
	bx r3
	nop
_020154C0: .word sub_02097FF4
	thumb_func_end sub_020154B8

	thumb_func_start sub_020154C4
sub_020154C4: ; 0x020154C4
	ldr r3, _020154CC ; =sub_02098038
	ldr r0, [r0]
	bx r3
	nop
_020154CC: .word sub_02098038
	thumb_func_end sub_020154C4

	thumb_func_start sub_020154D0
sub_020154D0: ; 0x020154D0
	ldr r0, [r0, #0xc]
	bx lr
	thumb_func_end sub_020154D0

	thumb_func_start sub_020154D4
sub_020154D4: ; 0x020154D4
	add r2, r0, #0
	add r2, #0x40
	add r3, r1, #0
	ldmia r2!, {r0, r1}
	stmia r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
	bx lr
	thumb_func_end sub_020154D4

	thumb_func_start sub_020154E4
sub_020154E4: ; 0x020154E4
	push {r3, r4, r5, lr}
	add r4, r1, #0
	add r5, r0, #0
	add r3, r4, #0
	add r2, r5, #0
	ldmia r3!, {r0, r1}
	add r2, #0x40
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	ldr r1, [r5, #0x20]
	add r0, r4, #0
	bl sub_02023204
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_020154E4

	thumb_func_start sub_02015504
sub_02015504: ; 0x02015504
	ldr r0, _0201550C ; =0x021D10A0
	ldr r0, [r0, #4]
	bx lr
	nop
_0201550C: .word 0x021D10A0
	thumb_func_end sub_02015504

	thumb_func_start sub_02015510
sub_02015510: ; 0x02015510
	ldr r2, _02015520 ; =0x020F6078
	add r3, r0, #0
	ldmia r2!, {r0, r1}
	stmia r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
	bx lr
	nop
_02015520: .word 0x020F6078
	thumb_func_end sub_02015510

	thumb_func_start sub_02015524
sub_02015524: ; 0x02015524
	ldr r0, [r0, #0x20]
	bx lr
	thumb_func_end sub_02015524

	thumb_func_start sub_02015528
sub_02015528: ; 0x02015528
	add r0, #0xdb
	strb r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_02015528

	thumb_func_start sub_02015530
sub_02015530: ; 0x02015530
	add r0, #0xdb
	ldrb r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_02015530

	thumb_func_start sub_02015538
sub_02015538: ; 0x02015538
	add r2, r0, #0
	add r2, #0x50
	ldrh r2, [r2]
	strh r2, [r1]
	add r2, r0, #0
	add r2, #0x52
	ldrh r2, [r2]
	add r0, #0x54
	strh r2, [r1, #2]
	ldrh r0, [r0]
	strh r0, [r1, #4]
	bx lr
	thumb_func_end sub_02015538

	thumb_func_start sub_02015550
sub_02015550: ; 0x02015550
	push {r4, r5, r6, r7}
	ldr r0, [r0, #0x20]
	add r4, r1, #0
	ldrh r2, [r0, #0x1c]
	cmp r2, #0
	bne _02015562
	mov r0, #0
	pop {r4, r5, r6, r7}
	bx lr
_02015562:
	mov r1, #0
	cmp r2, #0
	ble _020155EC
	ldr r3, [r0, #0x18]
	ldr r7, _020155F4 ; =sub_0209DD30
	ldr r0, _020155F8 ; =sub_0209DDF8
_0201556E:
	cmp r3, #0
	beq _020155E4
	cmp r4, #5
	bhi _020155DE
	add r5, r4, r4
	add r5, pc
	ldrh r5, [r5, #6]
	lsl r5, r5, #0x10
	asr r5, r5, #0x10
	add pc, r5
_02015582: ; jump table
	.short _0201558E - _02015582 - 2 ; case 0
	.short _0201559A - _02015582 - 2 ; case 1
	.short _020155A6 - _02015582 - 2 ; case 2
	.short _020155B4 - _02015582 - 2 ; case 3
	.short _020155C2 - _02015582 - 2 ; case 4
	.short _020155D0 - _02015582 - 2 ; case 5
_0201558E:
	ldr r5, [r3]
	cmp r5, r0
	bne _020155E4
	ldr r0, [r3, #4]
	pop {r4, r5, r6, r7}
	bx lr
_0201559A:
	ldr r5, [r3]
	cmp r5, r7
	bne _020155E4
	ldr r0, [r3, #4]
	pop {r4, r5, r6, r7}
	bx lr
_020155A6:
	ldr r6, [r3]
	ldr r5, _020155FC ; =sub_0209DCAC
	cmp r6, r5
	bne _020155E4
	ldr r0, [r3, #4]
	pop {r4, r5, r6, r7}
	bx lr
_020155B4:
	ldr r6, [r3]
	ldr r5, _02015600 ; =sub_0209DBD4
	cmp r6, r5
	bne _020155E4
	ldr r0, [r3, #4]
	pop {r4, r5, r6, r7}
	bx lr
_020155C2:
	ldr r6, [r3]
	ldr r5, _02015604 ; =sub_0209DAB8
	cmp r6, r5
	bne _020155E4
	ldr r0, [r3, #4]
	pop {r4, r5, r6, r7}
	bx lr
_020155D0:
	ldr r6, [r3]
	ldr r5, _02015608 ; =sub_0209DA24
	cmp r6, r5
	bne _020155E4
	ldr r0, [r3, #4]
	pop {r4, r5, r6, r7}
	bx lr
_020155DE:
	mov r0, #0
	pop {r4, r5, r6, r7}
	bx lr
_020155E4:
	add r1, r1, #1
	add r3, #8
	cmp r1, r2
	blt _0201556E
_020155EC:
	mov r0, #0
	pop {r4, r5, r6, r7}
	bx lr
	nop
_020155F4: .word sub_0209DD30
_020155F8: .word sub_0209DDF8
_020155FC: .word sub_0209DCAC
_02015600: .word sub_0209DBD4
_02015604: .word sub_0209DAB8
_02015608: .word sub_0209DA24
	thumb_func_end sub_02015550

	thumb_func_start sub_0201560C
sub_0201560C: ; 0x0201560C
	push {r4, lr}
	add r4, r1, #0
	mov r1, #0
	bl sub_02015550
	cmp r0, #0
	beq _02015626
	ldrh r1, [r4]
	strh r1, [r0]
	ldrh r1, [r4, #2]
	strh r1, [r0, #2]
	ldrh r1, [r4, #4]
	strh r1, [r0, #4]
_02015626:
	pop {r4, pc}
	thumb_func_end sub_0201560C

	thumb_func_start sub_02015628
sub_02015628: ; 0x02015628
	push {r4, lr}
	add r4, r1, #0
	mov r1, #2
	bl sub_02015550
	add r2, r0, #0
	beq _0201563E
	ldmia r4!, {r0, r1}
	stmia r2!, {r0, r1}
	ldr r0, [r4]
	str r0, [r2]
_0201563E:
	pop {r4, pc}
	thumb_func_end sub_02015628

	thumb_func_start sub_02015640
sub_02015640: ; 0x02015640
	push {r3, r4, lr}
	sub sp, #0xc
	add r4, r1, #0
	mov r1, #2
	bl sub_02015550
	add r2, r0, #0
	bne _02015666
	add r2, sp, #0
	mov r0, #0
	str r0, [r2]
	str r0, [r2, #4]
	str r0, [r2, #8]
	ldmia r2!, {r0, r1}
	stmia r4!, {r0, r1}
	ldr r0, [r2]
	add sp, #0xc
	str r0, [r4]
	pop {r3, r4, pc}
_02015666:
	ldmia r2!, {r0, r1}
	stmia r4!, {r0, r1}
	ldr r0, [r2]
	str r0, [r4]
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_02015640

	thumb_func_start sub_02015674
sub_02015674: ; 0x02015674
	push {r4, lr}
	add r4, r1, #0
	mov r1, #2
	bl sub_02015550
	cmp r0, #0
	beq _02015688
	mov r1, #0
	ldrsh r1, [r4, r1]
	strh r1, [r0, #0xc]
_02015688:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02015674

	thumb_func_start sub_0201568C
sub_0201568C: ; 0x0201568C
	push {r4, lr}
	add r4, r1, #0
	mov r1, #2
	bl sub_02015550
	cmp r0, #0
	bne _020156A0
	mov r0, #0
	strh r0, [r4]
	pop {r4, pc}
_020156A0:
	mov r1, #0xc
	ldrsh r0, [r0, r1]
	strh r0, [r4]
	pop {r4, pc}
	thumb_func_end sub_0201568C

	thumb_func_start sub_020156A8
sub_020156A8: ; 0x020156A8
	push {r4, lr}
	add r4, r1, #0
	mov r1, #3
	bl sub_02015550
	cmp r0, #0
	beq _020156BA
	ldrh r1, [r4]
	strh r1, [r0]
_020156BA:
	pop {r4, pc}
	thumb_func_end sub_020156A8

	thumb_func_start sub_020156BC
sub_020156BC: ; 0x020156BC
	push {r4, lr}
	add r4, r1, #0
	mov r1, #3
	bl sub_02015550
	cmp r0, #0
	bne _020156D0
	mov r0, #0
	strh r0, [r4]
	pop {r4, pc}
_020156D0:
	ldrh r0, [r0]
	strh r0, [r4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020156BC

	thumb_func_start sub_020156D8
sub_020156D8: ; 0x020156D8
	push {r4, lr}
	add r4, r1, #0
	mov r1, #3
	bl sub_02015550
	cmp r0, #0
	beq _020156EA
	ldrh r1, [r4]
	strh r1, [r0, #2]
_020156EA:
	pop {r4, pc}
	thumb_func_end sub_020156D8

	thumb_func_start sub_020156EC
sub_020156EC: ; 0x020156EC
	push {r4, lr}
	add r4, r1, #0
	mov r1, #3
	bl sub_02015550
	cmp r0, #0
	bne _02015700
	mov r0, #0
	strh r0, [r4]
	pop {r4, pc}
_02015700:
	ldrh r0, [r0, #2]
	strh r0, [r4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020156EC

	thumb_func_start sub_02015708
sub_02015708: ; 0x02015708
	push {r4, lr}
	add r4, r1, #0
	mov r1, #5
	bl sub_02015550
	add r2, r0, #0
	beq _0201571E
	ldmia r4!, {r0, r1}
	stmia r2!, {r0, r1}
	ldr r0, [r4]
	str r0, [r2]
_0201571E:
	pop {r4, pc}
	thumb_func_end sub_02015708

	thumb_func_start sub_02015720
sub_02015720: ; 0x02015720
	push {r3, r4, lr}
	sub sp, #0xc
	add r4, r1, #0
	mov r1, #5
	bl sub_02015550
	add r2, r0, #0
	bne _02015746
	add r2, sp, #0
	mov r0, #0
	str r0, [r2]
	str r0, [r2, #4]
	str r0, [r2, #8]
	ldmia r2!, {r0, r1}
	stmia r4!, {r0, r1}
	ldr r0, [r2]
	add sp, #0xc
	str r0, [r4]
	pop {r3, r4, pc}
_02015746:
	ldmia r2!, {r0, r1}
	stmia r4!, {r0, r1}
	ldr r0, [r2]
	str r0, [r4]
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_02015720

	thumb_func_start sub_02015754
sub_02015754: ; 0x02015754
	push {r4, lr}
	add r4, r1, #0
	mov r1, #5
	bl sub_02015550
	cmp r0, #0
	beq _02015768
	mov r1, #0
	ldrsh r1, [r4, r1]
	strh r1, [r0, #0xc]
_02015768:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02015754

	thumb_func_start sub_0201576C
sub_0201576C: ; 0x0201576C
	push {r4, lr}
	add r4, r1, #0
	mov r1, #5
	bl sub_02015550
	cmp r0, #0
	bne _02015780
	mov r0, #0
	strh r0, [r4]
	pop {r4, pc}
_02015780:
	mov r1, #0xc
	ldrsh r0, [r0, r1]
	strh r0, [r4]
	pop {r4, pc}
	thumb_func_end sub_0201576C

	thumb_func_start sub_02015788
sub_02015788: ; 0x02015788
	push {r3, r4, r5, lr}
	mov r1, #8
	add r5, r0, #0
	bl sub_0201AA8C
	add r4, r0, #0
	beq _020157AA
	ldr r0, _020157B0 ; =0x0001020F
	add r1, r5, #0
	str r0, [r4]
	mov r0, #4
	bl sub_02026354
	ldr r1, _020157B4 ; =0x020F60DC
	str r0, [r4, #4]
	bl sub_020269A0
_020157AA:
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	nop
_020157B0: .word 0x0001020F
_020157B4: .word 0x020F60DC
	thumb_func_end sub_02015788

	thumb_func_start sub_020157B8
sub_020157B8: ; 0x020157B8
	push {r4, lr}
	add r4, r0, #0
	bne _020157C2
	bl GF_AssertFail
_020157C2:
	cmp r4, #0
	beq _020157D6
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _020157D0
	bl sub_02026380
_020157D0:
	add r0, r4, #0
	bl sub_0201AB0C
_020157D6:
	pop {r4, pc}
	thumb_func_end sub_020157B8

	thumb_func_start sub_020157D8
sub_020157D8: ; 0x020157D8
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _020157E6
	bl GF_AssertFail
_020157E6:
	cmp r5, #0
	beq _020157EC
	str r4, [r5]
_020157EC:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_020157D8

	thumb_func_start sub_020157F0
sub_020157F0: ; 0x020157F0
	push {r4, r5, r6, lr}
	sub sp, #0x10
	add r6, r0, #0
	str r3, [sp]
	mov r0, #0xff
	str r0, [sp, #4]
	ldr r0, [r6]
	add r5, r1, #0
	str r0, [sp, #8]
	mov r1, #0
	add r4, r2, #0
	str r1, [sp, #0xc]
	ldr r2, [r6, #4]
	add r0, r5, #0
	add r3, r4, #0
	bl sub_020200FC
	add r0, r5, #0
	bl sub_0201D8A0
	add sp, #0x10
	pop {r4, r5, r6, pc}
	thumb_func_end sub_020157F0

	thumb_func_start sub_0201581C
sub_0201581C: ; 0x0201581C
	ldr r1, _02015830 ; =0x0000FFFF
	mov r2, #0
	strh r1, [r0]
_02015822:
	add r2, r2, #1
	strh r1, [r0, #4]
	add r0, r0, #2
	cmp r2, #2
	blt _02015822
	bx lr
	nop
_02015830: .word 0x0000FFFF
	thumb_func_end sub_0201581C

	thumb_func_start sub_02015834
sub_02015834: ; 0x02015834
	strh r1, [r0]
	mov r2, #0
	ldr r1, _02015848 ; =0x0000FFFF
	strh r2, [r0, #2]
_0201583C:
	add r2, r2, #1
	strh r1, [r0, #4]
	add r0, r0, #2
	cmp r2, #2
	blt _0201583C
	bx lr
	.align 2, 0
_02015848: .word 0x0000FFFF
	thumb_func_end sub_02015834

	thumb_func_start sub_0201584C
sub_0201584C: ; 0x0201584C
	push {r4, lr}
	mov r1, #4
	add r4, r0, #0
	bl sub_02015834
	mov r0, #5
	strh r0, [r4, #2]
	pop {r4, pc}
	thumb_func_end sub_0201584C

	thumb_func_start sub_0201585C
sub_0201585C: ; 0x0201585C
	push {r3, r4, r5, lr}
	add r4, r1, #0
	ldrb r1, [r4]
	add r5, r0, #0
	bl sub_02015834
	ldrb r0, [r4, #1]
	strh r0, [r5, #2]
	mov r0, #2
	ldrsb r0, [r4, r0]
	cmp r0, #0
	ble _02015880
	bl sub_02015DC8
	ldrh r1, [r4, #4]
	bl sub_02015B60
	strh r0, [r5, #4]
_02015880:
	mov r0, #3
	ldrsb r0, [r4, r0]
	cmp r0, #0
	ble _02015894
	bl sub_02015DC8
	ldrh r1, [r4, #6]
	bl sub_02015B60
	strh r0, [r5, #6]
_02015894:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0201585C

	thumb_func_start sub_02015898
sub_02015898: ; 0x02015898
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	add r0, r1, #0
	str r1, [sp, #4]
	bl sub_0200BD08
	ldr r5, [sp]
	ldr r7, _020158FC ; =0x0000FFFF
	add r6, r0, #0
	mov r4, #0
_020158AE:
	ldrh r2, [r5, #4]
	cmp r2, r7
	beq _020158C4
	add r0, r6, #0
	add r1, r4, #0
	bl sub_0200C528
	add r4, r4, #1
	add r5, r5, #2
	cmp r4, #2
	blt _020158AE
_020158C4:
	ldr r2, [sp]
	mov r0, #1
	ldrh r2, [r2]
	mov r1, #0x1b
	lsl r3, r2, #1
	ldr r2, _02015900 ; =0x020F60E0
	ldrh r2, [r2, r3]
	ldr r3, [sp, #4]
	bl sub_0200BAF8
	add r5, r0, #0
	ldr r2, [sp]
	ldr r3, [sp, #4]
	ldrh r2, [r2, #2]
	add r0, r6, #0
	add r1, r5, #0
	bl sub_0200BC4C
	add r4, r0, #0
	add r0, r5, #0
	bl sub_0200BB44
	add r0, r6, #0
	bl sub_0200BDA0
	add r0, r4, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_020158FC: .word 0x0000FFFF
_02015900: .word 0x020F60E0
	thumb_func_end sub_02015898

	thumb_func_start sub_02015904
sub_02015904: ; 0x02015904
	push {r4, lr}
	add r4, r0, #0
	add r3, r1, #0
	ldrh r1, [r4]
	mov r0, #0x1b
	lsl r2, r1, #1
	ldr r1, _0201591C ; =0x020F60E0
	ldrh r1, [r1, r2]
	ldrh r2, [r4, #2]
	bl sub_0200B9C4
	pop {r4, pc}
	.align 2, 0
_0201591C: .word 0x020F60E0
	thumb_func_end sub_02015904

	thumb_func_start sub_02015920
sub_02015920: ; 0x02015920
	ldrh r1, [r0]
	ldr r0, _02015930 ; =0x0000FFFF
	cmp r1, r0
	beq _0201592C
	mov r0, #1
	bx lr
_0201592C:
	mov r0, #0
	bx lr
	.align 2, 0
_02015930: .word 0x0000FFFF
	thumb_func_end sub_02015920

	thumb_func_start sub_02015934
sub_02015934: ; 0x02015934
	push {r4, lr}
	add r4, r0, #0
	ldrh r0, [r4]
	ldrh r1, [r4, #2]
	bl sub_02015964
	mov r3, #0
	cmp r0, #0
	bls _0201595A
	ldr r1, _02015960 ; =0x0000FFFF
_02015948:
	ldrh r2, [r4, #4]
	cmp r2, r1
	bne _02015952
	mov r0, #0
	pop {r4, pc}
_02015952:
	add r3, r3, #1
	add r4, r4, #2
	cmp r3, r0
	blo _02015948
_0201595A:
	mov r0, #1
	pop {r4, pc}
	nop
_02015960: .word 0x0000FFFF
	thumb_func_end sub_02015934

	thumb_func_start sub_02015964
sub_02015964: ; 0x02015964
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #5
	blo _02015972
	bl GF_AssertFail
_02015972:
	add r0, r5, #0
	bl sub_02015A38
	cmp r4, r0
	blo _02015980
	bl GF_AssertFail
_02015980:
	ldr r1, _020159D4 ; =0x020F60E0
	lsl r2, r5, #1
	ldrh r1, [r1, r2]
	mov r0, #0x1b
	add r2, r4, #0
	mov r3, #0
	bl sub_0200B9C4
	str r0, [sp]
	bl sub_02026AA4
	add r4, r0, #0
	ldrh r1, [r4]
	ldr r0, _020159D8 ; =0x0000FFFF
	mov r5, #0
	cmp r1, r0
	beq _020159C8
	add r7, r0, #0
	sub r6, r0, #1
_020159A6:
	cmp r1, r6
	bne _020159C0
	add r0, r4, #0
	bl sub_0201FB5C
	cmp r0, #0
	beq _020159B6
	add r5, r5, #1
_020159B6:
	add r0, r4, #0
	bl sub_0201FB1C
	add r4, r0, #0
	b _020159C2
_020159C0:
	add r4, r4, #2
_020159C2:
	ldrh r1, [r4]
	cmp r1, r7
	bne _020159A6
_020159C8:
	ldr r0, [sp]
	bl sub_02026380
	add r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020159D4: .word 0x020F60E0
_020159D8: .word 0x0000FFFF
	thumb_func_end sub_02015964

	thumb_func_start sub_020159DC
sub_020159DC: ; 0x020159DC
	lsl r1, r1, #1
	add r0, r0, r1
	ldrh r0, [r0, #4]
	bx lr
	thumb_func_end sub_020159DC

	thumb_func_start sub_020159E4
sub_020159E4: ; 0x020159E4
	ldrh r0, [r0]
	bx lr
	thumb_func_end sub_020159E4

	thumb_func_start sub_020159E8
sub_020159E8: ; 0x020159E8
	ldrh r0, [r0, #2]
	bx lr
	thumb_func_end sub_020159E8

	thumb_func_start sub_020159EC
sub_020159EC: ; 0x020159EC
	push {r3, r4}
	ldrh r3, [r0]
	ldrh r2, [r1]
	cmp r3, r2
	bne _020159FE
	ldrh r3, [r0, #2]
	ldrh r2, [r1, #2]
	cmp r3, r2
	beq _02015A04
_020159FE:
	mov r0, #0
	pop {r3, r4}
	bx lr
_02015A04:
	mov r4, #0
_02015A06:
	ldrh r3, [r0, #4]
	ldrh r2, [r1, #4]
	cmp r3, r2
	beq _02015A14
	mov r0, #0
	pop {r3, r4}
	bx lr
_02015A14:
	add r4, r4, #1
	add r1, r1, #2
	add r0, r0, #2
	cmp r4, #2
	blt _02015A06
	mov r0, #1
	pop {r3, r4}
	bx lr
	thumb_func_end sub_020159EC

	thumb_func_start sub_02015A24
sub_02015A24: ; 0x02015A24
	ldrh r2, [r1]
	strh r2, [r0]
	ldrh r2, [r1, #2]
	strh r2, [r0, #2]
	ldrh r2, [r1, #4]
	strh r2, [r0, #4]
	ldrh r1, [r1, #6]
	strh r1, [r0, #6]
	bx lr
	.align 2, 0
	thumb_func_end sub_02015A24

	thumb_func_start sub_02015A38
sub_02015A38: ; 0x02015A38
	cmp r0, #5
	bhs _02015A40
	mov r0, #0x14
	bx lr
_02015A40:
	mov r0, #0
	bx lr
	thumb_func_end sub_02015A38

	thumb_func_start sub_02015A44
sub_02015A44: ; 0x02015A44
	push {r4, r5, r6, lr}
	add r4, r1, #0
	add r5, r0, #0
	add r6, r2, #0
	cmp r4, #5
	blo _02015A54
	bl GF_AssertFail
_02015A54:
	strh r4, [r5]
	strh r6, [r5, #2]
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_02015A44

	thumb_func_start sub_02015A5C
sub_02015A5C: ; 0x02015A5C
	push {r4, r5, r6, lr}
	add r4, r1, #0
	add r5, r0, #0
	add r6, r2, #0
	cmp r4, #2
	blo _02015A6C
	bl GF_AssertFail
_02015A6C:
	lsl r0, r4, #1
	add r0, r5, r0
	strh r6, [r0, #4]
	pop {r4, r5, r6, pc}
	thumb_func_end sub_02015A5C

	thumb_func_start sub_02015A74
sub_02015A74: ; 0x02015A74
	push {r4, lr}
	add r4, r0, #0
	ldrh r0, [r4]
	ldrh r1, [r4, #2]
	bl sub_02015964
	cmp r0, #2
	bhs _02015A94
	lsl r1, r0, #1
	add r2, r4, r1
	ldr r1, _02015A98 ; =0x0000FFFF
_02015A8A:
	add r0, r0, #1
	strh r1, [r2, #4]
	add r2, r2, #2
	cmp r0, #2
	blo _02015A8A
_02015A94:
	pop {r4, pc}
	nop
_02015A98: .word 0x0000FFFF
	thumb_func_end sub_02015A74

	thumb_func_start sub_02015A9C
sub_02015A9C: ; 0x02015A9C
	push {r3, r4, r5, r6, r7, lr}
	mov r1, #0x30
	add r6, r0, #0
	bl sub_0201AA8C
	ldr r4, _02015AD0 ; =0x020F612C
	str r0, [sp]
	mov r7, #0
	add r5, r0, #0
_02015AAE:
	ldr r0, [sp]
	mov r1, #0x1b
	str r6, [r0]
	ldrh r2, [r4]
	mov r0, #1
	add r3, r6, #0
	bl sub_0200BAF8
	str r0, [r5, #4]
	add r7, r7, #1
	add r4, r4, #2
	add r5, r5, #4
	cmp r7, #0xb
	blt _02015AAE
	ldr r0, [sp]
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02015AD0: .word 0x020F612C
	thumb_func_end sub_02015A9C

	thumb_func_start sub_02015AD4
sub_02015AD4: ; 0x02015AD4
	push {r4, r5, r6, lr}
	add r6, r0, #0
	mov r4, #0
	add r5, r6, #0
_02015ADC:
	ldr r0, [r5, #4]
	bl sub_0200BB44
	add r4, r4, #1
	add r5, r5, #4
	cmp r4, #0xb
	blt _02015ADC
	add r0, r6, #0
	bl sub_0201AB0C
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_02015AD4

	thumb_func_start sub_02015AF4
sub_02015AF4: ; 0x02015AF4
	push {r3, r4, r5, lr}
	sub sp, #8
	add r5, r0, #0
	add r4, r2, #0
	add r0, r1, #0
	add r1, sp, #4
	add r2, sp, #0
	bl sub_02015BB0
	ldr r0, [sp, #4]
	ldr r1, [sp]
	lsl r0, r0, #2
	add r0, r5, r0
	ldr r0, [r0, #4]
	add r2, r4, #0
	bl sub_0200BB6C
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02015AF4

	thumb_func_start sub_02015B1C
sub_02015B1C: ; 0x02015B1C
	push {r3, r4, lr}
	sub sp, #0xc
	add r4, r1, #0
	ldr r1, _02015B58 ; =0x0000FFFF
	cmp r0, r1
	beq _02015B4C
	add r1, sp, #8
	add r2, sp, #4
	bl sub_02015BB0
	ldr r0, [sp, #8]
	mov r3, #0
	lsl r1, r0, #1
	ldr r0, _02015B5C ; =0x020F612C
	ldrh r0, [r0, r1]
	str r0, [sp, #8]
	str r4, [sp]
	ldr r1, [sp, #8]
	ldr r2, [sp, #4]
	mov r0, #0x1b
	bl sub_0200B8D4
	add sp, #0xc
	pop {r3, r4, pc}
_02015B4C:
	add r0, r4, #0
	bl sub_020263AC
	add sp, #0xc
	pop {r3, r4, pc}
	nop
_02015B58: .word 0x0000FFFF
_02015B5C: .word 0x020F612C
	thumb_func_end sub_02015B1C

	thumb_func_start sub_02015B60
sub_02015B60: ; 0x02015B60
	push {r4, r5}
	ldr r4, _02015BA4 ; =0x020F612C
	mov r2, #0
_02015B66:
	ldrh r3, [r4]
	cmp r0, r3
	bne _02015B94
	mov r4, #0
	add r3, r4, #0
	cmp r2, #0
	bls _02015B8A
	ldr r0, _02015BA8 ; =0x020F6142
_02015B76:
	lsl r5, r4, #1
	ldrh r5, [r0, r5]
	add r4, r4, #1
	lsl r4, r4, #0x10
	add r3, r3, r5
	lsl r3, r3, #0x10
	lsr r4, r4, #0x10
	lsr r3, r3, #0x10
	cmp r4, r2
	blo _02015B76
_02015B8A:
	add r0, r3, r1
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	pop {r4, r5}
	bx lr
_02015B94:
	add r2, r2, #1
	add r4, r4, #2
	cmp r2, #0xb
	blo _02015B66
	ldr r0, _02015BAC ; =0x0000FFFF
	pop {r4, r5}
	bx lr
	nop
_02015BA4: .word 0x020F612C
_02015BA8: .word 0x020F6142
_02015BAC: .word 0x0000FFFF
	thumb_func_end sub_02015B60

	thumb_func_start sub_02015BB0
sub_02015BB0: ; 0x02015BB0
	push {r3, r4, r5, r6}
	ldr r3, _02015BE8 ; =0x00000FFF
	ldr r6, _02015BEC ; =0x020F6142
	and r3, r0
	mov r0, #0
	add r5, r0, #0
_02015BBC:
	ldrh r4, [r6]
	add r0, r0, r4
	cmp r3, r0
	bhs _02015BD8
	str r5, [r1]
	ldr r1, _02015BEC ; =0x020F6142
	lsl r4, r5, #1
	ldrh r1, [r1, r4]
	sub r0, r0, r1
	sub r0, r3, r0
	str r0, [r2]
	mov r0, #1
	pop {r3, r4, r5, r6}
	bx lr
_02015BD8:
	add r5, r5, #1
	add r6, r6, #2
	cmp r5, #0xb
	blo _02015BBC
	mov r0, #0
	pop {r3, r4, r5, r6}
	bx lr
	nop
_02015BE8: .word 0x00000FFF
_02015BEC: .word 0x020F6142
	thumb_func_end sub_02015BB0

	thumb_func_start sub_02015BF0
sub_02015BF0: ; 0x02015BF0
	mov r0, #8
	bx lr
	thumb_func_end sub_02015BF0

	thumb_func_start sub_02015BF4
sub_02015BF4: ; 0x02015BF4
	push {r3, lr}
	mov r2, #0
	str r2, [r0]
	ldr r3, _02015C20 ; =0x020F6120
	str r2, [r0, #4]
_02015BFE:
	ldrb r1, [r3]
	cmp r1, #2
	bne _02015C10
	ldr r1, _02015C24 ; =0x020F6121
	lsl r2, r2, #1
	ldrb r1, [r1, r2]
	bl sub_02015CFC
	b _02015C18
_02015C10:
	add r2, r2, #1
	add r3, r3, #2
	cmp r2, #6
	blo _02015BFE
_02015C18:
	mov r0, #0x1e
	bl sub_0202893C
	pop {r3, pc}
	.align 2, 0
_02015C20: .word 0x020F6120
_02015C24: .word 0x020F6121
	thumb_func_end sub_02015BF4

	thumb_func_start sub_02015C28
sub_02015C28: ; 0x02015C28
	push {r4, lr}
	add r4, r0, #0
	mov r0, #0x1e
	bl sub_02028900
	add r0, r4, #0
	mov r1, #0x1e
	bl sub_020272C8
	pop {r4, pc}
	thumb_func_end sub_02015C28

	thumb_func_start sub_02015C3C
sub_02015C3C: ; 0x02015C3C
	ldr r0, [r0, #4]
	add r2, r0, #0
	lsr r2, r1
	mov r0, #1
	and r0, r2
	bx lr
	thumb_func_end sub_02015C3C

	thumb_func_start sub_02015C48
sub_02015C48: ; 0x02015C48
	push {r3, r4, r5, lr}
	add r4, r0, #0
	mov r2, #0
	ldr r3, [r4, #4]
	add r5, r2, #0
	mov r0, #1
_02015C54:
	add r1, r3, #0
	lsr r1, r2
	tst r1, r0
	bne _02015C5E
	add r5, r5, #1
_02015C5E:
	add r2, r2, #1
	cmp r2, #0x20
	blo _02015C54
	cmp r5, #0
	beq _02015CA0
	bl sub_0201FD44
	add r1, r5, #0
	bl sub_020F2BA4
	ldr r3, [r4, #4]
	mov r5, #0
	mov r0, #1
_02015C78:
	add r2, r3, #0
	lsr r2, r5
	tst r2, r0
	bne _02015C9A
	cmp r1, #0
	bne _02015C98
	mov r0, #1
	ldr r1, [r4, #4]
	lsl r0, r5
	orr r0, r1
	str r0, [r4, #4]
	mov r0, #0x1e
	bl sub_0202893C
	add r0, r5, #0
	pop {r3, r4, r5, pc}
_02015C98:
	sub r1, r1, #1
_02015C9A:
	add r5, r5, #1
	cmp r5, #0x20
	blo _02015C78
_02015CA0:
	mov r0, #0x1e
	bl sub_0202893C
	mov r0, #0x20
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02015C48

	thumb_func_start sub_02015CAC
sub_02015CAC: ; 0x02015CAC
	ldr r3, [r0, #4]
	mov r2, #0
	mov r0, #1
_02015CB2:
	add r1, r3, #0
	lsr r1, r2
	tst r1, r0
	bne _02015CBE
	mov r0, #0
	bx lr
_02015CBE:
	add r2, r2, #1
	cmp r2, #0x20
	blo _02015CB2
	mov r0, #1
	bx lr
	thumb_func_end sub_02015CAC

	thumb_func_start sub_02015CC8
sub_02015CC8: ; 0x02015CC8
	push {r3, r4}
	mov r3, #0
	ldr r4, _02015CEC ; =0x020F6142
	add r2, r3, #0
_02015CD0:
	ldrh r1, [r4]
	add r2, r2, #1
	add r4, r4, #2
	add r1, r3, r1
	lsl r1, r1, #0x10
	lsr r3, r1, #0x10
	cmp r2, #9
	blt _02015CD0
	add r0, r3, r0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	pop {r3, r4}
	bx lr
	nop
_02015CEC: .word 0x020F6142
	thumb_func_end sub_02015CC8

	thumb_func_start sub_02015CF0
sub_02015CF0: ; 0x02015CF0
	ldr r0, [r0]
	add r2, r0, #0
	lsr r2, r1
	mov r0, #1
	and r0, r2
	bx lr
	thumb_func_end sub_02015CF0

	thumb_func_start sub_02015CFC
sub_02015CFC: ; 0x02015CFC
	mov r2, #1
	ldr r3, [r0]
	lsl r2, r1
	add r1, r3, #0
	orr r1, r2
	str r1, [r0]
	ldr r3, _02015D10 ; =sub_0202893C
	mov r0, #0x1e
	bx r3
	nop
_02015D10: .word sub_0202893C
	thumb_func_end sub_02015CFC

	thumb_func_start sub_02015D14
sub_02015D14: ; 0x02015D14
	push {r4, r5, lr}
	sub sp, #0xc
	mov r1, #8
	add r5, r0, #0
	bl sub_0201AA8C
	add r4, r0, #0
	mov r1, #0
	strb r1, [r4]
	strb r1, [r4, #1]
	strb r1, [r4, #2]
	strb r1, [r4, #3]
	strb r1, [r4, #4]
	strb r1, [r4, #5]
	strb r1, [r4, #6]
	strb r1, [r4, #7]
	str r1, [sp]
	add r0, sp, #8
	str r0, [sp, #4]
	mov r0, #0xd6
	add r2, r1, #0
	add r3, r5, #0
	bl sub_02007AC4
	str r0, [r4, #4]
	ldr r0, [sp, #8]
	lsr r0, r0, #2
	str r0, [r4]
	add r0, r4, #0
	add sp, #0xc
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02015D14

	thumb_func_start sub_02015D54
sub_02015D54: ; 0x02015D54
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #4]
	bl sub_0201AB0C
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02015D54

	thumb_func_start sub_02015D68
sub_02015D68: ; 0x02015D68
	ldr r0, [r0]
	bx lr
	thumb_func_end sub_02015D68

	thumb_func_start sub_02015D6C
sub_02015D6C: ; 0x02015D6C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _02015D7A
	bl GF_AssertFail
_02015D7A:
	ldr r0, [r5]
	cmp r0, r4
	bhi _02015D84
	ldr r0, _02015D90 ; =0x0000FFFF
	pop {r3, r4, r5, pc}
_02015D84:
	ldr r1, [r5, #4]
	lsl r0, r4, #2
	ldr r0, [r1, r0]
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	pop {r3, r4, r5, pc}
	.align 2, 0
_02015D90: .word 0x0000FFFF
	thumb_func_end sub_02015D6C

	thumb_func_start sub_02015D94
sub_02015D94: ; 0x02015D94
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _02015DA2
	bl GF_AssertFail
_02015DA2:
	ldr r3, [r5]
	mov r1, #0
	cmp r3, #0
	bls _02015DC0
	ldr r2, [r5, #4]
_02015DAC:
	ldr r0, [r2]
	cmp r4, r0
	bne _02015DB8
	lsl r0, r1, #0x10
	asr r0, r0, #0x10
	pop {r3, r4, r5, pc}
_02015DB8:
	add r1, r1, #1
	add r2, r2, #4
	cmp r1, r3
	blo _02015DAC
_02015DC0:
	mov r0, #0
	mvn r0, r0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02015D94

	thumb_func_start sub_02015DC8
sub_02015DC8: ; 0x02015DC8
	cmp r0, #0xb
	blt _02015DCE
	mov r0, #0
_02015DCE:
	lsl r1, r0, #1
	ldr r0, _02015DD8 ; =0x020F612C
	ldrh r0, [r0, r1]
	bx lr
	nop
_02015DD8: .word 0x020F612C
	thumb_func_end sub_02015DC8

	thumb_func_start sub_02015DDC
sub_02015DDC: ; 0x02015DDC
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	mov r1, #0x18
	bl sub_0201AA8C
	add r4, r0, #0
	bne _02015DF0
	bl GF_AssertFail
_02015DF0:
	ldr r0, [r5]
	ldr r1, [r5, #0xc]
	bl sub_0201605C
	str r0, [r4]
	ldr r0, [r5]
	str r0, [r4, #4]
	ldr r0, [r5, #4]
	ldr r1, [r5, #0xc]
	bl sub_0201608C
	str r0, [r4, #8]
	ldr r0, [r5, #4]
	str r0, [r4, #0xc]
	ldr r0, [r5, #8]
	ldr r1, [r5, #0xc]
	bl sub_020160BC
	str r0, [r4, #0x10]
	ldr r0, [r5, #8]
	str r0, [r4, #0x14]
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02015DDC

	thumb_func_start sub_02015E20
sub_02015E20: ; 0x02015E20
	push {r4, lr}
	add r4, r0, #0
	bne _02015E2A
	bl GF_AssertFail
_02015E2A:
	ldr r0, [r4]
	cmp r0, #0
	bne _02015E34
	bl GF_AssertFail
_02015E34:
	ldr r0, [r4, #8]
	cmp r0, #0
	bne _02015E3E
	bl GF_AssertFail
_02015E3E:
	ldr r0, [r4, #0x10]
	cmp r0, #0
	bne _02015E48
	bl GF_AssertFail
_02015E48:
	ldr r0, [r4]
	bl sub_0201AB0C
	ldr r0, [r4, #8]
	bl sub_0201AB0C
	ldr r0, [r4, #0x10]
	bl sub_0201AB0C
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02015E20

	thumb_func_start sub_02015E64
sub_02015E64: ; 0x02015E64
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, _02015E98 ; =0x04000444
	mov r6, #0
	str r6, [r0]
	ldr r0, [r5, #4]
	cmp r0, #0
	ble _02015E8E
	add r4, r6, #0
_02015E76:
	ldr r0, [r5]
	add r0, r0, r4
	ldr r1, [r0, #0x20]
	cmp r1, #0
	beq _02015E84
	bl sub_020161CC
_02015E84:
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, #0x40
	cmp r6, r0
	blt _02015E76
_02015E8E:
	ldr r0, _02015E9C ; =0x04000448
	mov r1, #1
	str r1, [r0]
	pop {r4, r5, r6, pc}
	nop
_02015E98: .word 0x04000444
_02015E9C: .word 0x04000448
	thumb_func_end sub_02015E64

	thumb_func_start sub_02015EA0
sub_02015EA0: ; 0x02015EA0
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [r5]
	bl sub_02016118
	add r4, r0, #0
	bne _02015EB2
	bl GF_AssertFail
_02015EB2:
	ldr r0, [r5, #4]
	ldr r0, [r0, #8]
	cmp r0, #0
	beq _02015EBE
	bl GF_AssertFail
_02015EBE:
	ldr r0, [r5, #4]
	bl sub_02016170
	str r0, [r4]
	cmp r0, #0
	bne _02015ECE
	bl GF_AssertFail
_02015ECE:
	ldr r0, [r5, #4]
	ldr r1, [r4]
	add r2, r4, #4
	bl sub_02016198
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02015EA0

	thumb_func_start sub_02015EDC
sub_02015EDC: ; 0x02015EDC
	push {r4, lr}
	ldr r1, _02015EF0 ; =0x02110928
	add r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r1]
	blx r1
	add r0, r4, #0
	bl sub_02016044
	pop {r4, pc}
	.align 2, 0
_02015EF0: .word 0x02110928
	thumb_func_end sub_02015EDC

	thumb_func_start sub_02015EF4
sub_02015EF4: ; 0x02015EF4
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	mov r6, #0
	cmp r0, #0
	ble _02015F1A
	add r4, r6, #0
_02015F02:
	ldr r1, [r5, #8]
	ldr r0, [r1, r4]
	cmp r0, #0
	beq _02015F10
	add r0, r1, r4
	bl sub_02015EDC
_02015F10:
	ldr r0, [r5, #0xc]
	add r6, r6, #1
	add r4, #0x28
	cmp r6, r0
	blt _02015F02
_02015F1A:
	pop {r4, r5, r6, pc}
	thumb_func_end sub_02015EF4

	thumb_func_start sub_02015F1C
sub_02015F1C: ; 0x02015F1C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [r5]
	bl sub_02016144
	add r4, r0, #0
	bne _02015F2E
	bl GF_AssertFail
_02015F2E:
	ldr r0, [r5, #8]
	bl sub_02016184
	str r0, [r4]
	cmp r0, #0
	bne _02015F3E
	bl GF_AssertFail
_02015F3E:
	ldr r0, [r5, #4]
	ldr r1, [r4]
	add r2, r4, #4
	bl sub_020161A8
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02015F1C

	thumb_func_start sub_02015F4C
sub_02015F4C: ; 0x02015F4C
	push {r4, lr}
	ldr r1, _02015F60 ; =0x02110930
	add r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r1]
	blx r1
	add r0, r4, #0
	bl sub_02016050
	pop {r4, pc}
	.align 2, 0
_02015F60: .word 0x02110930
	thumb_func_end sub_02015F4C

	thumb_func_start sub_02015F64
sub_02015F64: ; 0x02015F64
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #0x14]
	mov r6, #0
	cmp r0, #0
	ble _02015F8A
	add r4, r6, #0
_02015F72:
	ldr r1, [r5, #0x10]
	ldr r0, [r1, r4]
	cmp r0, #0
	beq _02015F80
	add r0, r1, r4
	bl sub_02015F4C
_02015F80:
	ldr r0, [r5, #0x14]
	add r6, r6, #1
	add r4, #0x18
	cmp r6, r0
	blt _02015F72
_02015F8A:
	pop {r4, r5, r6, pc}
	thumb_func_end sub_02015F64

	thumb_func_start sub_02015F8C
sub_02015F8C: ; 0x02015F8C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [r5]
	bl sub_020160EC
	add r4, r0, #0
	bne _02015F9E
	bl GF_AssertFail
_02015F9E:
	add r0, r4, #0
	add r1, r5, #0
	bl sub_0201630C
	mov r0, #1
	str r0, [r4, #0x1c]
	str r0, [r4, #0x20]
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02015F8C

	thumb_func_start sub_02015FB0
sub_02015FB0: ; 0x02015FB0
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _02015FBE
	bl GF_AssertFail
_02015FBE:
	str r4, [r5, #0x20]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02015FB0

	thumb_func_start sub_02015FC4
sub_02015FC4: ; 0x02015FC4
	strh r1, [r0]
	strh r2, [r0, #2]
	bx lr
	.align 2, 0
	thumb_func_end sub_02015FC4

	thumb_func_start sub_02015FCC
sub_02015FCC: ; 0x02015FCC
	ldrh r1, [r0, #2]
	ldrh r0, [r0]
	lsl r1, r1, #0x10
	orr r0, r1
	bx lr
	.align 2, 0
	thumb_func_end sub_02015FCC

	thumb_func_start sub_02015FD8
sub_02015FD8: ; 0x02015FD8
	strh r1, [r0, #4]
	strh r2, [r0, #6]
	bx lr
	.align 2, 0
	thumb_func_end sub_02015FD8

	thumb_func_start sub_02015FE0
sub_02015FE0: ; 0x02015FE0
	strh r1, [r0, #8]
	strh r2, [r0, #0xa]
	bx lr
	.align 2, 0
	thumb_func_end sub_02015FE0

	thumb_func_start sub_02015FE8
sub_02015FE8: ; 0x02015FE8
	ldrh r1, [r0, #0xa]
	ldrh r0, [r0, #8]
	lsl r1, r1, #0x10
	orr r0, r1
	bx lr
	.align 2, 0
	thumb_func_end sub_02015FE8

	thumb_func_start sub_02015FF4
sub_02015FF4: ; 0x02015FF4
	str r1, [r0, #0x14]
	bx lr
	thumb_func_end sub_02015FF4

	thumb_func_start sub_02015FF8
sub_02015FF8: ; 0x02015FF8
	ldr r0, [r0, #0x14]
	bx lr
	thumb_func_end sub_02015FF8

	thumb_func_start sub_02015FFC
sub_02015FFC: ; 0x02015FFC
	add r0, #0x3e
	strb r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_02015FFC

	thumb_func_start sub_02016004
sub_02016004: ; 0x02016004
	str r1, [r0, #0x24]
	bx lr
	thumb_func_end sub_02016004

	thumb_func_start sub_02016008
sub_02016008: ; 0x02016008
	str r1, [r0, #0x28]
	bx lr
	thumb_func_end sub_02016008

	thumb_func_start sub_0201600C
sub_0201600C: ; 0x0201600C
	str r1, [r0, #0x2c]
	bx lr
	thumb_func_end sub_0201600C

	thumb_func_start sub_02016010
sub_02016010: ; 0x02016010
	str r1, [r0, #0x30]
	bx lr
	thumb_func_end sub_02016010

	thumb_func_start sub_02016014
sub_02016014: ; 0x02016014
	cmp r1, #0
	bne _0201601C
	str r2, [r0, #0x34]
	bx lr
_0201601C:
	str r2, [r0, #0x38]
	bx lr
	thumb_func_end sub_02016014

	thumb_func_start sub_02016020
sub_02016020: ; 0x02016020
	str r1, [r0, #0x18]
	bx lr
	thumb_func_end sub_02016020

	thumb_func_start sub_02016024
sub_02016024: ; 0x02016024
	push {r4, lr}
	add r4, r0, #0
	mov r1, #0
	mov r2, #0x40
	bl sub_020E5B44
	add r0, r4, #0
	mov r1, #0x1f
	add r0, #0x3e
	strb r1, [r0]
	ldr r0, _02016040 ; =0x00007FFF
	strh r0, [r4, #0x3c]
	pop {r4, pc}
	nop
_02016040: .word 0x00007FFF
	thumb_func_end sub_02016024

	thumb_func_start sub_02016044
sub_02016044: ; 0x02016044
	ldr r3, _0201604C ; =sub_020B8008
	mov r1, #0
	stmia r0!, {r1}
	bx r3
	.align 2, 0
_0201604C: .word sub_020B8008
	thumb_func_end sub_02016044

	thumb_func_start sub_02016050
sub_02016050: ; 0x02016050
	ldr r3, _02016058 ; =sub_020B804C
	mov r1, #0
	stmia r0!, {r1}
	bx r3
	.align 2, 0
_02016058: .word sub_020B804C
	thumb_func_end sub_02016050

	thumb_func_start sub_0201605C
sub_0201605C: ; 0x0201605C
	push {r3, r4, r5, r6, r7, lr}
	add r6, r0, #0
	add r0, r1, #0
	lsl r1, r6, #6
	bl sub_0201AA8C
	add r7, r0, #0
	bne _02016070
	bl GF_AssertFail
_02016070:
	mov r4, #0
	cmp r6, #0
	ble _02016086
	add r5, r7, #0
_02016078:
	add r0, r5, #0
	bl sub_02016024
	add r4, r4, #1
	add r5, #0x40
	cmp r4, r6
	blt _02016078
_02016086:
	add r0, r7, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0201605C

	thumb_func_start sub_0201608C
sub_0201608C: ; 0x0201608C
	push {r3, r4, r5, r6, r7, lr}
	add r6, r0, #0
	add r0, r1, #0
	mov r1, #0x28
	mul r1, r6
	bl sub_0201AA8C
	add r7, r0, #0
	bne _020160A2
	bl GF_AssertFail
_020160A2:
	mov r4, #0
	cmp r6, #0
	ble _020160B8
	add r5, r7, #0
_020160AA:
	add r0, r5, #0
	bl sub_02016044
	add r4, r4, #1
	add r5, #0x28
	cmp r4, r6
	blt _020160AA
_020160B8:
	add r0, r7, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0201608C

	thumb_func_start sub_020160BC
sub_020160BC: ; 0x020160BC
	push {r3, r4, r5, r6, r7, lr}
	add r6, r0, #0
	add r0, r1, #0
	mov r1, #0x18
	mul r1, r6
	bl sub_0201AA8C
	add r7, r0, #0
	bne _020160D2
	bl GF_AssertFail
_020160D2:
	mov r4, #0
	cmp r6, #0
	ble _020160E8
	add r5, r7, #0
_020160DA:
	add r0, r5, #0
	bl sub_02016050
	add r4, r4, #1
	add r5, #0x18
	cmp r4, r6
	blt _020160DA
_020160E8:
	add r0, r7, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_020160BC

	thumb_func_start sub_020160EC
sub_020160EC: ; 0x020160EC
	push {r3, r4}
	ldr r4, [r0, #4]
	mov r1, #0
	cmp r4, #0
	ble _02016110
	ldr r3, [r0]
	add r2, r3, #0
_020160FA:
	ldr r0, [r2, #0x1c]
	cmp r0, #0
	bne _02016108
	lsl r0, r1, #6
	add r0, r3, r0
	pop {r3, r4}
	bx lr
_02016108:
	add r1, r1, #1
	add r2, #0x40
	cmp r1, r4
	blt _020160FA
_02016110:
	mov r0, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end sub_020160EC

	thumb_func_start sub_02016118
sub_02016118: ; 0x02016118
	push {r3, r4}
	ldr r4, [r0, #4]
	mov r1, #0
	cmp r4, #0
	ble _0201613E
	ldr r3, [r0, #8]
	add r2, r3, #0
_02016126:
	ldr r0, [r2]
	cmp r0, #0
	bne _02016136
	mov r0, #0x28
	mul r0, r1
	add r0, r3, r0
	pop {r3, r4}
	bx lr
_02016136:
	add r1, r1, #1
	add r2, #0x28
	cmp r1, r4
	blt _02016126
_0201613E:
	mov r0, #0
	pop {r3, r4}
	bx lr
	thumb_func_end sub_02016118

	thumb_func_start sub_02016144
sub_02016144: ; 0x02016144
	push {r3, r4}
	ldr r4, [r0, #4]
	mov r1, #0
	cmp r4, #0
	ble _0201616A
	ldr r3, [r0, #0x10]
	add r2, r3, #0
_02016152:
	ldr r0, [r2]
	cmp r0, #0
	bne _02016162
	mov r0, #0x18
	mul r0, r1
	add r0, r3, r0
	pop {r3, r4}
	bx lr
_02016162:
	add r1, r1, #1
	add r2, #0x18
	cmp r1, r4
	blt _02016152
_0201616A:
	mov r0, #0
	pop {r3, r4}
	bx lr
	thumb_func_end sub_02016144

	thumb_func_start sub_02016170
sub_02016170: ; 0x02016170
	push {r3, lr}
	ldr r3, _02016180 ; =0x02110924
	mov r1, #0
	ldr r0, [r0, #0x10]
	ldr r3, [r3]
	add r2, r1, #0
	blx r3
	pop {r3, pc}
	.align 2, 0
_02016180: .word 0x02110924
	thumb_func_end sub_02016170

	thumb_func_start sub_02016184
sub_02016184: ; 0x02016184
	push {r3, lr}
	ldr r3, _02016194 ; =0x0211092C
	mov r1, #0
	ldr r3, [r3]
	lsl r0, r0, #5
	add r2, r1, #0
	blx r3
	pop {r3, pc}
	.align 2, 0
_02016194: .word 0x0211092C
	thumb_func_end sub_02016184

	thumb_func_start sub_02016198
sub_02016198: ; 0x02016198
	push {r3, lr}
	lsl r1, r1, #0x10
	add r3, r2, #0
	lsr r1, r1, #0xd
	mov r2, #0
	bl sub_020B82CC
	pop {r3, pc}
	thumb_func_end sub_02016198

	thumb_func_start sub_020161A8
sub_020161A8: ; 0x020161A8
	push {r3, r4, r5, lr}
	add r3, r2, #0
	ldr r2, _020161C8 ; =0xFFFF0000
	add r5, r0, #0
	and r2, r1
	lsr r2, r2, #0x10
	lsl r1, r1, #0x10
	ldr r4, [r5, #8]
	lsl r2, r2, #3
	str r2, [r5, #8]
	lsr r1, r1, #0xd
	mov r2, #0
	bl sub_020B86CC
	str r4, [r5, #8]
	pop {r3, r4, r5, pc}
	.align 2, 0
_020161C8: .word 0xFFFF0000
	thumb_func_end sub_020161A8

	thumb_func_start sub_020161CC
sub_020161CC: ; 0x020161CC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	ldr r7, _020162EC ; =0x04000444
	mov r6, #0
	add r5, r0, #0
	str r6, [r7]
	ldrh r1, [r5, #0x3c]
	ldr r0, _020162F0 ; =0x7FFF8000
	orr r0, r1
	str r0, [r7, #0x7c]
	add r0, r7, #0
	ldr r1, _020162F4 ; =0x00004210
	add r0, #0x80
	str r1, [r0]
	ldr r3, [r5, #0x24]
	ldr r4, [r3, #8]
	ldr r2, [r3, #0x10]
	ldr r1, [r3, #4]
	ldr r0, [r3]
	lsl r3, r2, #0x1d
	lsl r2, r1, #0x17
	lsl r1, r0, #0x14
	ldr r0, [r5, #0x28]
	lsl r4, r4, #0x1a
	lsr r0, r0, #3
	orr r4, r0
	mov r0, #1
	lsl r0, r0, #0x1e
	orr r0, r4
	orr r0, r1
	orr r0, r2
	orr r0, r3
	str r0, [r7, #0x64]
	ldr r0, [r5, #0x24]
	ldr r0, [r0, #8]
	cmp r0, #2
	bne _02016218
	mov r6, #1
_02016218:
	ldr r0, [r5, #0x30]
	ldr r1, [r5, #0x2c]
	lsl r0, r0, #5
	add r1, r1, r0
	mov r0, #4
	sub r0, r0, r6
	lsr r1, r0
	ldr r2, _020162F8 ; =0x040004AC
	add r0, r5, #0
	str r1, [r2]
	add r0, #0x3e
	ldrb r0, [r0]
	sub r2, #8
	lsl r1, r0, #0x10
	mov r0, #0xc0
	orr r0, r1
	str r0, [r2]
	ldr r0, [r5, #0x34]
	cmp r0, #0
	beq _0201624A
	mov r0, #8
	ldrsh r0, [r5, r0]
	mov r7, #0
	str r0, [sp, #0x14]
	b _02016252
_0201624A:
	mov r0, #8
	ldrsh r7, [r5, r0]
	mov r0, #0
	str r0, [sp, #0x14]
_02016252:
	ldr r0, [r5, #0x38]
	cmp r0, #0
	beq _02016260
	mov r0, #0xa
	ldrsh r6, [r5, r0]
	mov r4, #0
	b _02016266
_02016260:
	mov r0, #0xa
	ldrsh r4, [r5, r0]
	mov r6, #0
_02016266:
	ldr r0, [r5, #0x14]
	mov r1, #6
	lsl r2, r0, #0xc
	mov r0, #2
	ldrsh r0, [r5, r0]
	ldrsh r1, [r5, r1]
	mov r3, #4
	ldrsh r3, [r5, r3]
	add r0, r0, r1
	lsl r1, r0, #0xc
	mov r0, #0
	ldrsh r0, [r5, r0]
	add r0, r0, r3
	ldr r3, _020162FC ; =0x04000470
	lsl r0, r0, #0xc
	str r0, [r3]
	str r1, [r3]
	str r2, [r3]
	ldr r0, [r5, #0x18]
	ldr r1, _02016300 ; =0x021094DC
	asr r0, r0, #4
	lsl r2, r0, #1
	lsl r0, r2, #1
	add r2, r2, #1
	lsl r2, r2, #1
	ldrsh r0, [r1, r0]
	ldrsh r1, [r1, r2]
	bl sub_020CFC30
	ldr r2, [r5, #0x10]
	ldr r0, [r5, #0xc]
	ldr r1, _02016304 ; =0x0400046C
	mov r3, #8
	str r0, [r1]
	str r2, [r1]
	lsr r0, r1, #0xe
	str r0, [r1]
	mov r2, #4
	mov r0, #6
	ldrsh r2, [r5, r2]
	ldrsh r0, [r5, r0]
	neg r2, r2
	neg r0, r0
	lsl r2, r2, #0xc
	lsl r0, r0, #0xc
	str r2, [r1, #4]
	str r0, [r1, #4]
	mov r0, #0
	str r0, [r1, #4]
	mov r1, #0xa
	ldrsh r1, [r5, r1]
	add r2, r0, #0
	str r1, [sp]
	ldr r1, [sp, #0x14]
	str r1, [sp, #4]
	str r6, [sp, #8]
	str r7, [sp, #0xc]
	str r4, [sp, #0x10]
	ldrsh r3, [r5, r3]
	add r1, r0, #0
	bl sub_020B7418
	ldr r0, _02016308 ; =0x04000448
	mov r1, #1
	str r1, [r0]
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_020162EC: .word 0x04000444
_020162F0: .word 0x7FFF8000
_020162F4: .word 0x00004210
_020162F8: .word 0x040004AC
_020162FC: .word 0x04000470
_02016300: .word 0x021094DC
_02016304: .word 0x0400046C
_02016308: .word 0x04000448
	thumb_func_end sub_020161CC

	thumb_func_start sub_0201630C
sub_0201630C: ; 0x0201630C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r1, #0
	ldr r1, [r5, #4]
	add r7, r0, #0
	ldr r2, [r1, #0x10]
	mov r6, #8
	mov r0, #0
	cmp r2, #0
	ble _0201632A
_0201631E:
	ldr r2, [r5, #4]
	add r0, r0, #1
	ldr r2, [r2, #0x10]
	lsl r6, r6, #1
	cmp r0, r2
	blt _0201631E
_0201632A:
	ldr r1, [r1, #0x14]
	mov r4, #8
	mov r0, #0
	cmp r1, #0
	ble _02016340
_02016334:
	ldr r1, [r5, #4]
	add r0, r0, #1
	ldr r1, [r1, #0x14]
	lsl r4, r4, #1
	cmp r0, r1
	blt _02016334
_02016340:
	mov r1, #0xc
	mov r2, #0xe
	ldrsh r1, [r5, r1]
	ldrsh r2, [r5, r2]
	add r0, r7, #0
	bl sub_02015FC4
	lsr r1, r6, #0x1f
	lsr r2, r4, #0x1f
	add r1, r6, r1
	add r2, r4, r2
	lsl r1, r1, #0xf
	lsl r2, r2, #0xf
	add r0, r7, #0
	asr r1, r1, #0x10
	asr r2, r2, #0x10
	bl sub_02015FD8
	mov r0, #1
	lsl r0, r0, #0xc
	str r0, [r7, #0xc]
	str r0, [r7, #0x10]
	add r0, r7, #0
	add r1, r6, #0
	add r2, r4, #0
	bl sub_02015FE0
	ldr r1, [r5, #0x18]
	add r0, r7, #0
	bl sub_02015FF4
	ldr r1, [r5, #0x14]
	add r0, r7, #0
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	bl sub_02015FFC
	ldr r1, [r5, #4]
	add r0, r7, #0
	add r1, #0x10
	bl sub_02016004
	ldr r0, [r5, #4]
	mov r1, #0
	add r0, r0, #4
	bl sub_020B802C
	add r1, r0, #0
	add r0, r7, #0
	bl sub_02016008
	ldr r0, [r5, #8]
	mov r1, #0
	add r0, r0, #4
	bl sub_020B8078
	add r1, r0, #0
	add r0, r7, #0
	bl sub_0201600C
	ldrh r1, [r5, #0x1c]
	add r0, r7, #0
	bl sub_02016010
	mov r1, #0
	add r0, r7, #0
	add r2, r1, #0
	bl sub_02016014
	add r0, r7, #0
	mov r1, #1
	mov r2, #0
	bl sub_02016014
	ldrh r1, [r5, #0x10]
	add r0, r7, #0
	bl sub_02016020
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0201630C

	thumb_func_start sub_020163E0
sub_020163E0: ; 0x020163E0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r5, r0, #0
	add r6, r1, #0
	add r7, r2, #0
	ldr r0, _02016488 ; =sub_020164D0
	mov r1, #0x50
	mov r2, #0
	bl sub_02007200
	str r0, [sp, #4]
	bl sub_0201F988
	add r4, r0, #0
	cmp r5, #0
	beq _02016424
	cmp r6, #0
	bne _02016414
	add r0, r5, #0
	mov r1, #0
	bl sub_0200335C
	str r0, [sp]
	ldr r0, _0201648C ; =sub_020165D4
	str r0, [r4, #4]
	b _0201643E
_02016414:
	add r0, r5, #0
	mov r1, #1
	bl sub_0200335C
	str r0, [sp]
	ldr r0, _02016490 ; =sub_020165F0
	str r0, [r4, #4]
	b _0201643E
_02016424:
	cmp r6, #0
	bne _02016434
	bl sub_02026E84
	str r0, [sp]
	ldr r0, _02016494 ; =sub_020165A4
	str r0, [r4, #4]
	b _0201643E
_02016434:
	bl sub_02026E94
	str r0, [sp]
	ldr r0, _02016498 ; =sub_020165BC
	str r0, [r4, #4]
_0201643E:
	ldr r1, [sp]
	lsl r0, r7, #5
	str r0, [sp, #8]
	add r0, r1, r0
	add r1, r4, #0
	add r1, #0xc
	mov r2, #0x20
	bl sub_020D47B8
	ldr r1, [sp]
	ldr r0, [sp, #8]
	mov r2, #0x20
	add r0, r1, r0
	add r1, r4, #0
	add r1, #0x2c
	bl sub_020D47B8
	ldr r0, [sp, #4]
	mov r1, #1
	str r0, [r4]
	add r0, r4, #0
	str r5, [r4, #8]
	add r0, #0x4c
	strb r6, [r0]
	add r0, r4, #0
	add r0, #0x4d
	strb r7, [r0]
	add r0, r4, #0
	add r0, #0x4e
	strb r1, [r0]
	add r0, r4, #0
	mov r1, #0
	add r0, #0x4f
	strb r1, [r0]
	add r0, r4, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02016488: .word sub_020164D0
_0201648C: .word sub_020165D4
_02016490: .word sub_020165F0
_02016494: .word sub_020165A4
_02016498: .word sub_020165BC
	thumb_func_end sub_020163E0

	thumb_func_start sub_0201649C
sub_0201649C: ; 0x0201649C
	cmp r1, #0
	beq _020164AA
	cmp r1, #1
	beq _020164B2
	cmp r1, #2
	beq _020164BA
	bx lr
_020164AA:
	mov r1, #0
	add r0, #0x4e
	strb r1, [r0]
	bx lr
_020164B2:
	mov r1, #2
	add r0, #0x4e
	strb r1, [r0]
	bx lr
_020164BA:
	mov r1, #3
	add r0, #0x4e
	strb r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_0201649C

	thumb_func_start sub_020164C4
sub_020164C4: ; 0x020164C4
	ldr r3, _020164CC ; =sub_02007234
	ldr r0, [r0]
	bx r3
	nop
_020164CC: .word sub_02007234
	thumb_func_end sub_020164C4

	thumb_func_start sub_020164D0
sub_020164D0: ; 0x020164D0
	push {r3, r4, r5, lr}
	add r4, r1, #0
	add r5, r0, #0
	add r0, r4, #0
	add r0, #0x4e
	ldrb r0, [r0]
	cmp r0, #3
	bhi _02016546
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_020164EC: ; jump table
	.short _020164F4 - _020164EC - 2 ; case 0
	.short _02016504 - _020164EC - 2 ; case 1
	.short _02016546 - _020164EC - 2 ; case 2
	.short _02016538 - _020164EC - 2 ; case 3
_020164F4:
	add r0, r4, #0
	mov r1, #0
	add r0, #0x4f
	strb r1, [r0]
	mov r0, #1
	add r4, #0x4e
	strb r0, [r4]
	pop {r3, r4, r5, pc}
_02016504:
	add r0, r4, #0
	bl sub_02016548
	cmp r0, #1
	bne _02016518
	add r1, r4, #0
	ldr r2, [r4, #4]
	add r0, r4, #0
	add r1, #0x2c
	blx r2
_02016518:
	add r0, r4, #0
	add r0, #0x4f
	ldrb r0, [r0]
	add r1, r0, #1
	add r0, r4, #0
	add r0, #0x4f
	strb r1, [r0]
	add r0, r4, #0
	add r0, #0x4f
	ldrb r0, [r0]
	cmp r0, #0x20
	bne _02016546
	mov r0, #0
	add r4, #0x4f
	strb r0, [r4]
	pop {r3, r4, r5, pc}
_02016538:
	ldr r2, [r4, #4]
	add r0, r4, #0
	add r1, #0xc
	blx r2
	add r0, r5, #0
	bl sub_02007234
_02016546:
	pop {r3, r4, r5, pc}
	thumb_func_end sub_020164D0

	thumb_func_start sub_02016548
sub_02016548: ; 0x02016548
	push {r4, r5}
	add r1, r0, #0
	add r1, #0x4f
	ldrb r1, [r1]
	cmp r1, #0
	bne _02016576
	mov r1, #0x1e
	mov r4, #0
	mov r3, #1
	lsl r1, r1, #0xa
_0201655C:
	add r2, r3, #0
	lsl r2, r4
	tst r2, r1
	beq _02016568
	ldrh r2, [r0, #0xc]
	strh r2, [r0, #0x2c]
_02016568:
	add r4, r4, #1
	add r0, r0, #2
	cmp r4, #0x10
	blo _0201655C
	mov r0, #1
	pop {r4, r5}
	bx lr
_02016576:
	cmp r1, #0x18
	bne _0201659E
	mov r1, #0x1e
	mov r5, #0
	add r4, r0, #0
	mov r3, #1
	lsl r1, r1, #0xa
_02016584:
	add r2, r3, #0
	lsl r2, r5
	tst r2, r1
	beq _02016590
	ldrh r2, [r0, #0x2a]
	strh r2, [r4, #0x2c]
_02016590:
	add r5, r5, #1
	add r4, r4, #2
	cmp r5, #0x10
	blo _02016584
	mov r0, #1
	pop {r4, r5}
	bx lr
_0201659E:
	mov r0, #0
	pop {r4, r5}
	bx lr
	thumb_func_end sub_02016548

	thumb_func_start sub_020165A4
sub_020165A4: ; 0x020165A4
	push {r3, lr}
	add r3, r0, #0
	add r3, #0x4d
	ldrb r3, [r3]
	mov r0, #0
	mov r2, #0x20
	lsl r3, r3, #0x15
	lsr r3, r3, #0x10
	bl sub_0201C260
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_020165A4

	thumb_func_start sub_020165BC
sub_020165BC: ; 0x020165BC
	push {r3, lr}
	add r3, r0, #0
	add r3, #0x4d
	ldrb r3, [r3]
	mov r0, #4
	mov r2, #0x20
	lsl r3, r3, #0x15
	lsr r3, r3, #0x10
	bl sub_0201C260
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_020165BC

	thumb_func_start sub_020165D4
sub_020165D4: ; 0x020165D4
	push {r3, lr}
	add r3, r0, #0
	mov r0, #0x20
	str r0, [sp]
	ldr r0, [r3, #8]
	add r3, #0x4d
	ldrb r3, [r3]
	mov r2, #0
	lsl r3, r3, #0x14
	lsr r3, r3, #0x10
	bl sub_0200316C
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_020165D4

	thumb_func_start sub_020165F0
sub_020165F0: ; 0x020165F0
	push {r3, lr}
	add r3, r0, #0
	mov r0, #0x20
	str r0, [sp]
	ldr r0, [r3, #8]
	add r3, #0x4d
	ldrb r3, [r3]
	mov r2, #1
	lsl r3, r3, #0x14
	lsr r3, r3, #0x10
	bl sub_0200316C
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_020165F0

	thumb_func_start sub_0201660C
sub_0201660C: ; 0x0201660C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	mov r1, #0x78
	bl sub_0201AA8C
	add r1, r5, #0
	add r4, r0, #0
	bl sub_02016A1C
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0201660C

	thumb_func_start sub_02016624
sub_02016624: ; 0x02016624
	push {r4, lr}
	add r4, r0, #0
	add r1, r4, #0
	add r1, #0x77
	ldrb r1, [r1]
	lsl r1, r1, #0x1c
	lsr r1, r1, #0x1c
	cmp r1, #1
	bne _0201663A
	bl sub_020169CC
_0201663A:
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02016624

	thumb_func_start sub_02016644
sub_02016644: ; 0x02016644
	push {r3, r4, r5, lr}
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4]
	str r0, [r5, #0x5c]
	ldr r0, [r4, #4]
	str r0, [r5, #0x60]
	add r0, r5, #0
	ldrb r1, [r4, #0x10]
	add r0, #0x70
	strb r1, [r0]
	add r0, r5, #0
	ldrb r1, [r4, #0x11]
	add r0, #0x71
	strb r1, [r0]
	add r0, r5, #0
	add r0, #0x74
	ldrb r1, [r0]
	mov r0, #1
	bic r1, r0
	add r0, r5, #0
	add r0, #0x74
	strb r1, [r0]
	ldrb r0, [r4, #0x12]
	lsl r0, r0, #0x18
	lsr r1, r0, #0x1c
	cmp r1, #2
	bhs _0201667E
	b _02016680
_0201667E:
	mov r1, #0
_02016680:
	add r0, r5, #0
	add r0, #0x75
	strb r1, [r0]
	ldrb r0, [r4, #0x13]
	lsl r1, r0, #1
	ldr r0, _020166F4 ; =0x020F61B8
	ldrb r1, [r0, r1]
	add r0, r5, #0
	add r0, #0x72
	strb r1, [r0]
	ldrb r0, [r4, #0x13]
	lsl r1, r0, #1
	ldr r0, _020166F8 ; =0x020F61B9
	ldrb r1, [r0, r1]
	add r0, r5, #0
	add r0, #0x73
	strb r1, [r0]
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02016A64
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02016A84
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02016AB0
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02016B4C
	add r0, r5, #0
	add r0, #0x77
	ldrb r1, [r0]
	mov r0, #0xf
	bic r1, r0
	mov r0, #1
	orr r1, r0
	add r0, r5, #0
	add r0, #0x77
	strb r1, [r0]
	add r0, r5, #0
	add r0, #0x77
	ldrb r1, [r0]
	mov r0, #0xf0
	bic r1, r0
	mov r0, #0x80
	orr r1, r0
	add r0, r5, #0
	add r0, #0x77
	strb r1, [r0]
	add r0, r5, #0
	bl sub_020167C4
	pop {r3, r4, r5, pc}
	nop
_020166F4: .word 0x020F61B8
_020166F8: .word 0x020F61B9
	thumb_func_end sub_02016644

	thumb_func_start sub_020166FC
sub_020166FC: ; 0x020166FC
	ldr r3, _02016700 ; =sub_02016644
	bx r3
	.align 2, 0
_02016700: .word sub_02016644
	thumb_func_end sub_020166FC

	thumb_func_start sub_02016704
sub_02016704: ; 0x02016704
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r5, r0, #0
	add r6, r1, #0
	add r4, r2, #0
	bl sub_02016644
	cmp r4, #0
	beq _02016742
	ldr r3, [r5, #0x64]
	mov r0, #0x98
	mov r1, #0
	add r2, sp, #4
	bl sub_020079F4
	add r7, r0, #0
	mov r0, #0x40
	str r0, [sp]
	ldr r1, [sp, #4]
	ldr r3, [r6, #0xc]
	ldr r2, [r5, #0x60]
	lsl r3, r3, #0x14
	ldr r1, [r1, #0xc]
	add r0, r4, #0
	lsr r2, r2, #2
	lsr r3, r3, #0x10
	bl sub_0200316C
	add r0, r7, #0
	bl sub_0201AB0C
_02016742:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02016704

	thumb_func_start sub_02016748
sub_02016748: ; 0x02016748
	push {r4, lr}
	add r4, r0, #0
	add r1, r4, #0
	add r1, #0x77
	ldrb r2, [r1]
	mov r1, #0xf0
	bic r2, r1
	mov r1, #0x80
	orr r2, r1
	add r1, r4, #0
	add r1, #0x77
	strb r2, [r1]
	bl sub_020168F4
	cmp r0, #0
	bne _02016784
	add r1, r4, #0
	add r1, #0x77
	ldrb r1, [r1]
	lsl r1, r1, #0x18
	lsr r1, r1, #0x1c
	bne _02016784
	add r4, #0x76
	ldrb r0, [r4]
	lsl r0, r0, #0x1c
	lsr r0, r0, #0x1c
	bne _02016782
	mov r0, #3
	pop {r4, pc}
_02016782:
	mov r0, #4
_02016784:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02016748

	thumb_func_start sub_02016788
sub_02016788: ; 0x02016788
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	add r4, r0, #0
	mov r0, #0x28
	add r6, r1, #0
	add r4, #0xc
	mul r6, r0
	add r5, r4, r6
	add r0, r5, #0
	add r0, #0x25
	ldrb r0, [r0]
	add r3, r5, #0
	lsl r2, r2, #2
	str r0, [sp]
	add r3, #0x24
	add r2, r5, r2
	ldrb r3, [r3]
	ldr r0, [r4, r6]
	ldr r1, [r5, #4]
	ldr r2, [r2, #0x10]
	bl sub_02016E40
	ldr r1, [r5, #4]
	ldr r0, [r4, r6]
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	bl sub_0201EFBC
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end sub_02016788

	thumb_func_start sub_020167C4
sub_020167C4: ; 0x020167C4
	push {r4, lr}
	add r4, r0, #0
	add r1, r4, #0
	add r1, #0x74
	ldrb r1, [r1]
	lsl r1, r1, #0x1f
	lsr r1, r1, #0x1f
	bne _020167F6
	add r1, r4, #0
	add r1, #0x75
	ldrb r1, [r1]
	mov r2, #1
	bl sub_02016788
	add r0, r4, #0
	add r4, #0x75
	ldrb r2, [r4]
	mov r1, #1
	eor r1, r2
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	mov r2, #0
	bl sub_02016788
	pop {r4, pc}
_020167F6:
	add r4, #0x75
	ldrb r1, [r4]
	mov r2, #0
	bl sub_02016788
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020167C4

	thumb_func_start sub_02016804
sub_02016804: ; 0x02016804
	push {r3, lr}
	mov r2, #1
	add r3, r1, #0
	tst r3, r2
	beq _02016832
	add r1, r0, #0
	add r1, #0x76
	ldrb r3, [r1]
	mov r1, #0xf
	bic r3, r1
	add r1, r0, #0
	add r1, #0x75
	ldrb r2, [r1]
	mov r1, #0xf
	add r0, #0x76
	and r1, r2
	orr r1, r3
	strb r1, [r0]
	ldr r0, _0201687C ; =0x000005E4
	bl sub_0200604C
	mov r0, #1
	pop {r3, pc}
_02016832:
	mov r3, #2
	tst r3, r1
	beq _02016854
	add r1, r0, #0
	add r1, #0x76
	ldrb r3, [r1]
	mov r1, #0xf
	add r0, #0x76
	bic r3, r1
	add r1, r3, #0
	orr r1, r2
	strb r1, [r0]
	ldr r0, _0201687C ; =0x000005E4
	bl sub_0200604C
	mov r0, #1
	pop {r3, pc}
_02016854:
	mov r3, #0xc0
	tst r1, r3
	beq _02016876
	add r1, r0, #0
	add r1, #0x75
	ldrb r1, [r1]
	eor r2, r1
	add r1, r0, #0
	add r1, #0x75
	strb r2, [r1]
	bl sub_020167C4
	ldr r0, _02016880 ; =0x000005DC
	bl sub_0200604C
	mov r0, #0
	pop {r3, pc}
_02016876:
	mov r0, #0
	pop {r3, pc}
	nop
_0201687C: .word 0x000005E4
_02016880: .word 0x000005DC
	thumb_func_end sub_02016804

	thumb_func_start sub_02016884
sub_02016884: ; 0x02016884
	push {r4, lr}
	add r4, r0, #0
	add r0, #0x76
	ldrb r0, [r0]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x1c
	bne _020168B0
	ldr r0, [r4]
	bl sub_02026CC4
	cmp r0, #0
	beq _020168B0
	add r0, r4, #0
	add r0, #0x74
	ldrb r1, [r0]
	mov r0, #1
	add r4, #0x74
	bic r1, r0
	mov r0, #1
	orr r1, r0
	strb r1, [r4]
	pop {r4, pc}
_020168B0:
	add r0, r4, #0
	add r0, #0x74
	ldrb r0, [r0]
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x1f
	cmp r0, #1
	bne _020168E2
	ldr r0, _020168F0 ; =0x021D110C
	ldr r1, [r0, #0x48]
	mov r0, #0xc3
	tst r0, r1
	beq _020168E2
	add r0, r4, #0
	add r0, #0x74
	ldrb r1, [r0]
	mov r0, #1
	bic r1, r0
	add r0, r4, #0
	add r0, #0x74
	strb r1, [r0]
	add r0, r4, #0
	bl sub_020167C4
	mov r0, #0
	pop {r4, pc}
_020168E2:
	ldr r1, _020168F0 ; =0x021D110C
	add r0, r4, #0
	ldr r1, [r1, #0x48]
	bl sub_02016804
	pop {r4, pc}
	nop
_020168F0: .word 0x021D110C
	thumb_func_end sub_02016884

	thumb_func_start sub_020168F4
sub_020168F4: ; 0x020168F4
	push {r3, r4, r5, lr}
	add r4, r0, #0
	add r0, #0x77
	ldrb r0, [r0]
	lsl r0, r0, #0x1c
	lsr r0, r0, #0x1c
	cmp r0, #1
	beq _02016908
	bl GF_AssertFail
_02016908:
	add r0, r4, #0
	add r0, #0x76
	ldrb r0, [r0]
	lsl r0, r0, #0x1c
	lsr r1, r0, #0x1c
	cmp r1, #3
	bne _02016952
	add r0, r4, #0
	bl sub_02016884
	cmp r0, #0
	bne _02016924
	mov r0, #0
	pop {r3, r4, r5, pc}
_02016924:
	add r1, r4, #0
	add r1, #0x76
	ldrb r1, [r1]
	add r0, r4, #0
	mov r2, #1
	lsl r1, r1, #0x1c
	lsr r1, r1, #0x1c
	bl sub_02016788
	add r0, r4, #0
	add r4, #0x76
	ldrb r1, [r4]
	lsl r1, r1, #0x1c
	lsr r2, r1, #0x1c
	mov r1, #1
	eor r1, r2
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	mov r2, #0
	bl sub_02016788
	mov r0, #0
	pop {r3, r4, r5, pc}
_02016952:
	add r0, r4, #0
	add r0, #0x74
	ldrb r0, [r0]
	lsl r0, r0, #0x18
	lsr r5, r0, #0x1a
	cmp r5, #8
	bne _0201696C
	cmp r1, #0
	bne _02016968
	mov r0, #1
	pop {r3, r4, r5, pc}
_02016968:
	mov r0, #2
	pop {r3, r4, r5, pc}
_0201696C:
	lsr r2, r5, #0x1f
	lsl r0, r5, #0x1f
	sub r0, r0, r2
	mov r3, #0x1f
	ror r0, r3
	add r0, r2, r0
	bne _0201699A
	lsr r0, r5, #1
	lsr r2, r0, #0x1f
	lsl r0, r0, #0x1f
	sub r0, r0, r2
	ror r0, r3
	add r0, r2, r0
	bne _02016992
	add r0, r4, #0
	mov r2, #1
	bl sub_02016788
	b _0201699A
_02016992:
	add r0, r4, #0
	mov r2, #0
	bl sub_02016788
_0201699A:
	add r0, r4, #0
	add r0, #0x74
	ldrb r2, [r0]
	mov r1, #0xfc
	add r4, #0x74
	add r0, r2, #0
	bic r0, r1
	lsl r1, r2, #0x18
	lsr r1, r1, #0x1a
	add r1, r1, #1
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	lsl r1, r1, #0x1a
	lsr r1, r1, #0x18
	orr r0, r1
	strb r0, [r4]
	mov r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_020168F4

	thumb_func_start sub_020169C0
sub_020169C0: ; 0x020169C0
	add r0, #0x74
	ldrb r0, [r0]
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x1f
	bx lr
	.align 2, 0
	thumb_func_end sub_020169C0

	thumb_func_start sub_020169CC
sub_020169CC: ; 0x020169CC
	push {r4, r5, r6, lr}
	add r6, r0, #0
	ldr r0, [r6]
	bl sub_02026CAC
	add r5, r6, #0
	mov r4, #0
	add r5, #0xc
_020169DC:
	add r0, r5, #0
	bl sub_02016CC4
	add r4, r4, #1
	add r5, #0x28
	cmp r4, #2
	blt _020169DC
	ldr r1, [r6, #0x64]
	add r0, r6, #0
	bl sub_02016A1C
	pop {r4, r5, r6, pc}
	thumb_func_end sub_020169CC

	thumb_func_start sub_020169F4
sub_020169F4: ; 0x020169F4
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _02016A02
	bl GF_AssertFail
_02016A02:
	add r0, r5, #0
	add r0, #0x76
	ldrb r1, [r0]
	mov r0, #0xf0
	add r5, #0x76
	bic r1, r0
	lsl r0, r4, #0x18
	lsr r0, r0, #0x18
	lsl r0, r0, #0x1c
	lsr r0, r0, #0x18
	orr r0, r1
	strb r0, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_020169F4

	thumb_func_start sub_02016A1C
sub_02016A1C: ; 0x02016A1C
	push {r3, r4, r5, lr}
	add r4, r1, #0
	add r5, r0, #0
	mov r1, #0
	mov r2, #0x78
	bl sub_020E5B44
	add r0, r5, #0
	add r0, #0x77
	ldrb r2, [r0]
	mov r1, #0xf
	add r0, r5, #0
	bic r2, r1
	add r0, #0x77
	strb r2, [r0]
	add r0, r5, #0
	str r4, [r5, #0x64]
	add r0, #0x76
	ldrb r2, [r0]
	mov r0, #3
	bic r2, r1
	add r1, r2, #0
	orr r1, r0
	add r0, r5, #0
	add r0, #0x76
	strb r1, [r0]
	add r0, r5, #0
	add r0, #0x77
	ldrb r1, [r0]
	mov r0, #0xf0
	add r5, #0x77
	bic r1, r0
	mov r0, #0x80
	orr r0, r1
	strb r0, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02016A1C

	thumb_func_start sub_02016A64
sub_02016A64: ; 0x02016A64
	push {r3, lr}
	sub sp, #8
	add r3, r0, #0
	ldr r0, [r1, #8]
	mov r1, #1
	str r0, [sp]
	ldr r0, [r3, #0x64]
	str r0, [sp, #4]
	ldr r2, [r3, #0x5c]
	ldr r3, [r3, #0x60]
	mov r0, #0x98
	bl sub_02016D24
	add sp, #8
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_02016A64

	thumb_func_start sub_02016A84
sub_02016A84: ; 0x02016A84
	push {r3, lr}
	sub sp, #8
	add r3, r1, #0
	ldr r1, [r0, #0x60]
	cmp r1, #4
	bhs _02016A94
	mov r2, #0
	b _02016A96
_02016A94:
	mov r2, #4
_02016A96:
	mov r1, #0x40
	str r1, [sp]
	ldr r0, [r0, #0x64]
	mov r1, #0
	str r0, [sp, #4]
	ldr r3, [r3, #0xc]
	mov r0, #0x98
	lsl r3, r3, #5
	bl sub_02016D74
	add sp, #8
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_02016A84

	thumb_func_start sub_02016AB0
sub_02016AB0: ; 0x02016AB0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	add r7, r0, #0
	mov r2, #0
	add r3, r7, #0
_02016ABA:
	add r2, r2, #1
	lsl r0, r2, #0xc
	str r0, [r3, #0x68]
	add r3, r3, #4
	cmp r2, #2
	blt _02016ABA
	ldr r0, [r7, #0x5c]
	add r2, sp, #4
	str r0, [sp, #4]
	ldr r0, [r7, #0x60]
	mov r5, #2
	strb r0, [r2, #0x12]
	mov r0, #0x98
	strh r0, [r2, #8]
	ldr r0, [r1, #8]
	strh r0, [r2, #0xe]
	ldr r0, [r1, #0xc]
	strh r0, [r2, #0x10]
	add r0, r7, #0
	add r0, #0x68
	str r0, [sp, #8]
	add r0, r7, #0
	strb r5, [r2, #0x13]
	add r0, #0x70
	ldrb r0, [r0]
	strb r0, [r2, #0x14]
	ldrb r0, [r1, #0x13]
	cmp r0, #0
	beq _02016AF6
	mov r5, #6
_02016AF6:
	add r0, r7, #0
	mov r6, #0
	str r0, [sp]
	add r0, #0xc
	add r4, r6, #0
	str r0, [sp]
_02016B02:
	mov r0, #0
	add r1, sp, #4
_02016B06:
	add r2, r5, r0
	add r2, r2, r4
	strh r2, [r1, #0xa]
	add r0, r0, #1
	add r1, r1, #2
	cmp r0, #2
	blt _02016B06
	add r1, r7, #0
	add r0, r7, #0
	add r1, #0x73
	add r0, #0x71
	ldrb r1, [r1]
	ldrb r0, [r0]
	mul r1, r6
	add r1, r0, r1
	add r0, sp, #4
	strb r1, [r0, #0x15]
	ldrh r0, [r0, #0x10]
	add r1, r0, r6
	add r0, sp, #4
	strh r1, [r0, #0x10]
	ldr r0, [sp]
	ldr r2, [r7, #0x64]
	add r1, sp, #4
	bl sub_02016C28
	ldr r0, [sp]
	add r6, r6, #1
	add r0, #0x28
	add r4, r4, #2
	str r0, [sp]
	cmp r6, #2
	blt _02016B02
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_02016AB0

	thumb_func_start sub_02016B4C
sub_02016B4C: ; 0x02016B4C
	push {r3, r4, lr}
	sub sp, #4
	add r4, r0, #0
	mov r0, #0
	add r1, r4, #0
_02016B56:
	add r2, r4, #0
	add r2, #0x71
	ldrb r3, [r2]
	add r2, r4, #0
	add r2, #0x73
	ldrb r2, [r2]
	mul r2, r0
	add r2, r3, r2
	lsl r2, r2, #3
	strb r2, [r1, #4]
	add r2, r4, #0
	add r2, #0x70
	ldrb r2, [r2]
	add r0, r0, #1
	lsl r2, r2, #3
	strb r2, [r1, #6]
	add r2, r4, #0
	add r2, #0x73
	ldrb r2, [r2]
	add r3, r2, #0
	add r2, r4, #0
	add r2, #0x71
	ldrb r2, [r2]
	mul r3, r0
	add r2, r3, r2
	lsl r2, r2, #3
	strb r2, [r1, #5]
	add r2, r4, #0
	add r2, #0x70
	ldrb r3, [r2]
	add r2, r4, #0
	add r2, #0x72
	ldrb r2, [r2]
	add r2, r3, r2
	lsl r2, r2, #3
	strb r2, [r1, #7]
	add r1, r1, #4
	cmp r0, #2
	blt _02016B56
	ldr r0, [r4, #0x64]
	ldr r2, _02016BBC ; =sub_02016BC0
	str r0, [sp]
	add r0, r4, #4
	mov r1, #2
	add r3, r4, #0
	bl sub_02026C44
	str r0, [r4]
	add sp, #4
	pop {r3, r4, pc}
	nop
_02016BBC: .word sub_02016BC0
	thumb_func_end sub_02016B4C

	thumb_func_start sub_02016BC0
sub_02016BC0: ; 0x02016BC0
	push {r3, r4, lr}
	sub sp, #4
	add r3, r2, #0
	add r3, #0x77
	ldrb r3, [r3]
	mov r4, #0xf0
	bic r3, r4
	lsl r4, r1, #0x18
	lsr r4, r4, #0x18
	lsl r4, r4, #0x1c
	lsr r4, r4, #0x18
	orr r4, r3
	add r3, r2, #0
	add r3, #0x77
	strb r4, [r3]
	cmp r1, #0
	bne _02016C20
	add r1, r2, #0
	add r1, #0x76
	ldrb r1, [r1]
	mov r3, #0xf
	bic r1, r3
	lsl r3, r0, #0x18
	lsr r4, r3, #0x18
	mov r3, #0xf
	and r3, r4
	orr r3, r1
	add r1, r2, #0
	add r1, #0x76
	strb r3, [r1]
	mov r1, #0x28
	add r2, #0xc
	mul r1, r0
	add r3, r2, r1
	add r0, r3, #0
	add r0, #0x25
	ldrb r0, [r0]
	str r0, [sp]
	ldr r0, [r2, r1]
	ldr r1, [r3, #4]
	ldr r2, [r3, #0x14]
	add r3, #0x24
	ldrb r3, [r3]
	bl sub_02016E40
	ldr r0, _02016C24 ; =0x000005E4
	bl sub_0200604C
_02016C20:
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
_02016C24: .word 0x000005E4
	thumb_func_end sub_02016BC0

	thumb_func_start sub_02016C28
sub_02016C28: ; 0x02016C28
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r5, r1, #0
	ldr r1, [r5, #4]
	str r0, [sp, #4]
	str r2, [sp, #8]
	add r2, r0, #0
	str r1, [r0, #0x18]
	ldrb r0, [r5, #0x13]
	add r2, #0x18
	ldr r6, [sp, #4]
	str r0, [r2, #4]
	mov r0, #0
	str r0, [r2, #8]
	str r0, [sp, #0xc]
	ldr r1, [r5]
	ldr r0, [sp, #4]
	ldr r4, [sp, #4]
	str r1, [r0]
	ldrb r1, [r5, #0x12]
	add r6, #0x10
	add r7, r5, #0
	str r1, [r0, #4]
	ldrb r1, [r5, #0x14]
	add r0, #0x24
	strb r1, [r0]
	ldr r0, [sp, #4]
	ldrb r1, [r5, #0x15]
	add r0, #0x25
	strb r1, [r0]
_02016C64:
	ldr r0, [sp, #8]
	mov r2, #1
	str r0, [sp]
	ldrh r0, [r5, #8]
	ldrh r1, [r7, #0xa]
	add r3, r6, #0
	bl sub_020079D8
	str r0, [r4, #8]
	ldrh r1, [r5, #0xe]
	ldr r0, [r4, #0x10]
	bl sub_02016E8C
	ldrh r1, [r5, #0x10]
	ldr r0, [r4, #0x10]
	bl sub_02016EAC
	ldr r0, [sp, #0xc]
	add r6, r6, #4
	add r0, r0, #1
	add r7, r7, #2
	add r4, r4, #4
	str r0, [sp, #0xc]
	cmp r0, #2
	blt _02016C64
	ldr r0, [sp, #4]
	ldr r3, [sp, #4]
	add r0, #0x25
	ldrb r0, [r0]
	ldr r1, [sp, #4]
	ldr r2, [sp, #4]
	str r0, [sp]
	ldr r0, [sp, #4]
	add r3, #0x24
	ldrb r3, [r3]
	ldr r0, [r0]
	ldr r1, [r1, #4]
	ldr r2, [r2, #0x10]
	bl sub_02016E40
	ldr r0, [sp, #4]
	mov r1, #0
	add r0, #0x26
	str r0, [sp, #4]
	strb r1, [r0]
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02016C28

	thumb_func_start sub_02016CC4
sub_02016CC4: ; 0x02016CC4
	push {r4, r5, r6, lr}
	sub sp, #0x10
	add r6, r0, #0
	add r0, #0x25
	ldrb r0, [r0]
	ldr r1, [r6, #0x10]
	add r3, r6, #0
	str r0, [sp]
	ldrh r0, [r1]
	mov r2, #0
	add r3, #0x24
	lsl r0, r0, #0x15
	lsr r0, r0, #0x18
	str r0, [sp, #4]
	ldrh r0, [r1, #2]
	lsl r0, r0, #0x15
	lsr r0, r0, #0x18
	str r0, [sp, #8]
	str r2, [sp, #0xc]
	ldr r1, [r6, #4]
	ldrb r3, [r3]
	lsl r1, r1, #0x18
	ldr r0, [r6]
	lsr r1, r1, #0x18
	bl sub_0201C8C4
	ldr r1, [r6, #4]
	ldr r0, [r6]
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	bl sub_0201EFBC
	mov r4, #0
	add r5, r6, #0
_02016D08:
	ldr r0, [r5, #8]
	bl sub_0201AB0C
	add r4, r4, #1
	add r5, r5, #4
	cmp r4, #2
	blt _02016D08
	add r0, r6, #0
	mov r1, #0
	mov r2, #0x28
	bl sub_020E5B44
	add sp, #0x10
	pop {r4, r5, r6, pc}
	thumb_func_end sub_02016CC4

	thumb_func_start sub_02016D24
sub_02016D24: ; 0x02016D24
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r7, r0, #0
	str r1, [sp, #4]
	ldr r0, [sp, #0x24]
	mov r1, #0x10
	add r5, r2, #0
	add r6, r3, #0
	bl sub_0201AA8C
	add r4, r0, #0
	add r2, r4, #0
	mov r1, #0x10
	mov r0, #0
_02016D40:
	strb r0, [r2]
	add r2, r2, #1
	sub r1, r1, #1
	bne _02016D40
	ldr r0, [sp, #0x24]
	ldr r1, [sp, #4]
	str r0, [sp]
	add r0, r7, #0
	mov r2, #1
	add r3, r4, #4
	bl sub_020079BC
	str r0, [r4, #8]
	str r5, [r4]
	ldr r0, [sp, #0x20]
	strh r6, [r4, #0xc]
	strh r0, [r4, #0xe]
	ldr r0, _02016D70 ; =sub_02016DBC
	add r1, r4, #0
	mov r2, #0x80
	bl sub_0200E374
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02016D70: .word sub_02016DBC
	thumb_func_end sub_02016D24

	thumb_func_start sub_02016D74
sub_02016D74: ; 0x02016D74
	push {r3, r4, r5, r6, r7, lr}
	add r7, r0, #0
	str r1, [sp]
	ldr r0, [sp, #0x1c]
	mov r1, #0x10
	add r5, r2, #0
	add r6, r3, #0
	bl sub_0201AA8C
	add r4, r0, #0
	add r2, r4, #0
	mov r1, #0x10
	mov r0, #0
_02016D8E:
	strb r0, [r2]
	add r2, r2, #1
	sub r1, r1, #1
	bne _02016D8E
	ldr r1, [sp]
	ldr r3, [sp, #0x1c]
	add r0, r7, #0
	add r2, r4, #0
	bl sub_020079F4
	str r0, [r4, #4]
	strh r5, [r4, #8]
	ldr r0, [sp, #0x18]
	strh r6, [r4, #0xa]
	strh r0, [r4, #0xc]
	ldr r0, _02016DB8 ; =sub_02016DF8
	add r1, r4, #0
	mov r2, #0x80
	bl sub_0200E374
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02016DB8: .word sub_02016DF8
	thumb_func_end sub_02016D74

	thumb_func_start sub_02016DBC
sub_02016DBC: ; 0x02016DBC
	push {r3, r4, r5, lr}
	add r4, r1, #0
	ldr r1, [r4, #4]
	add r5, r0, #0
	ldr r0, [r1, #0x14]
	ldr r1, [r1, #0x10]
	bl DC_FlushRange
	ldrh r0, [r4, #0xe]
	ldr r3, [r4, #4]
	str r0, [sp]
	ldrh r1, [r4, #0xc]
	ldr r2, [r3, #0x14]
	ldr r0, [r4]
	lsl r1, r1, #0x18
	ldr r3, [r3, #0x10]
	lsr r1, r1, #0x18
	bl sub_0201C0C0
	add r0, r5, #0
	bl sub_0200E390
	ldr r0, [r4, #8]
	bl sub_0201AB0C
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02016DBC

	thumb_func_start sub_02016DF8
sub_02016DF8: ; 0x02016DF8
	push {r3, r4, r5, lr}
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4]
	ldrh r1, [r4, #0xc]
	ldr r0, [r0, #0xc]
	bl DC_FlushRange
	ldrh r0, [r4, #8]
	cmp r0, #0
	bne _02016E1C
	ldr r0, [r4]
	ldrh r1, [r4, #0xa]
	ldrh r2, [r4, #0xc]
	ldr r0, [r0, #0xc]
	bl sub_020CFC6C
	b _02016E2C
_02016E1C:
	cmp r0, #4
	bne _02016E2C
	ldr r0, [r4]
	ldrh r1, [r4, #0xa]
	ldrh r2, [r4, #0xc]
	ldr r0, [r0, #0xc]
	bl sub_020CFCC0
_02016E2C:
	add r0, r5, #0
	bl sub_0200E390
	ldr r0, [r4, #4]
	bl sub_0201AB0C
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02016DF8

	thumb_func_start sub_02016E40
sub_02016E40: ; 0x02016E40
	push {r3, r4, r5, r6, lr}
	sub sp, #0x1c
	add r4, r1, #0
	add r1, r2, #0
	add r2, r3, #0
	ldrh r6, [r1]
	ldrh r3, [r1, #2]
	lsl r2, r2, #0x18
	lsl r6, r6, #0x15
	lsr r6, r6, #0x18
	lsl r3, r3, #0x15
	str r6, [sp]
	lsr r3, r3, #0x18
	str r3, [sp, #4]
	add r1, #0xc
	str r1, [sp, #8]
	mov r1, #0
	str r1, [sp, #0xc]
	str r1, [sp, #0x10]
	str r6, [sp, #0x14]
	str r3, [sp, #0x18]
	ldr r3, [sp, #0x30]
	lsl r1, r4, #0x18
	lsl r3, r3, #0x18
	lsr r1, r1, #0x18
	lsr r2, r2, #0x18
	lsr r3, r3, #0x18
	add r5, r0, #0
	bl sub_0201C4EC
	lsl r1, r4, #0x18
	add r0, r5, #0
	lsr r1, r1, #0x18
	bl sub_0201EFBC
	add sp, #0x1c
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_02016E40

	thumb_func_start sub_02016E8C
sub_02016E8C: ; 0x02016E8C
	push {r3, r4}
	ldr r2, [r0, #8]
	add r0, #0xc
	lsr r4, r2, #1
	mov r3, #0
	cmp r4, #0
	ble _02016EA8
_02016E9A:
	ldrh r2, [r0]
	add r3, r3, #1
	add r2, r2, r1
	strh r2, [r0]
	add r0, r0, #2
	cmp r3, r4
	blt _02016E9A
_02016EA8:
	pop {r3, r4}
	bx lr
	thumb_func_end sub_02016E8C

	thumb_func_start sub_02016EAC
sub_02016EAC: ; 0x02016EAC
	push {r4, r5}
	ldr r2, [r0, #8]
	add r0, #0xc
	lsr r3, r2, #1
	mov r2, #0
	cmp r3, #0
	ble _02016ED2
	ldr r4, _02016ED8 ; =0x00000FFF
	lsl r1, r1, #0xc
_02016EBE:
	ldrh r5, [r0]
	add r2, r2, #1
	and r5, r4
	strh r5, [r0]
	ldrh r5, [r0]
	orr r5, r1
	strh r5, [r0]
	add r0, r0, #2
	cmp r2, r3
	blt _02016EBE
_02016ED2:
	pop {r4, r5}
	bx lr
	nop
_02016ED8: .word 0x00000FFF
	thumb_func_end sub_02016EAC

	thumb_func_start sub_02016EDC
sub_02016EDC: ; 0x02016EDC
	push {r3, r4, r5, r6, r7, lr}
	add r5, r1, #0
	mov r1, #0xc
	add r6, r0, #0
	add r7, r2, #0
	bl sub_0201AA8C
	add r4, r0, #0
	strb r7, [r4, #8]
	mov r0, #0x1d
	strb r5, [r4, #9]
	lsl r0, r0, #4
	add r7, r5, #0
	mul r7, r0
	add r0, r6, #0
	add r1, r7, #0
	str r6, [r4, #4]
	bl sub_0201AA8C
	mov r1, #0
	add r2, r7, #0
	str r0, [r4]
	bl sub_020D4994
	mov r3, #0
	cmp r5, #0
	ble _02016F28
	mov r0, #0x1d
	add r6, r3, #0
	mov r2, #1
	lsl r0, r0, #4
_02016F1A:
	ldr r1, [r4]
	add r3, r3, #1
	add r1, r1, r6
	str r2, [r1, #0x20]
	add r6, r6, r0
	cmp r3, r5
	blt _02016F1A
_02016F28:
	add r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02016EDC

	thumb_func_start sub_02016F2C
sub_02016F2C: ; 0x02016F2C
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4]
	bl sub_0201AB0C
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02016F2C

	thumb_func_start sub_02016F40
sub_02016F40: ; 0x02016F40
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r5, r0, #0
	str r3, [sp, #4]
	add r0, r2, #0
	ldrh r6, [r0]
	ldrh r0, [r0, #2]
	add r7, r1, #0
	ldrb r1, [r5, #9]
	str r0, [sp, #8]
	ldr r0, [sp, #4]
	str r2, [sp]
	cmp r0, r1
	blo _02016F60
	bl GF_AssertFail
_02016F60:
	ldr r0, [sp, #4]
	mov r1, #0x1d
	add r4, r0, #0
	lsl r1, r1, #4
	ldr r0, [r5]
	mul r4, r1
	add r0, r0, r4
	ldr r0, [r0, #0x10]
	cmp r0, #0
	beq _02016F78
	bl GF_AssertFail
_02016F78:
	ldr r0, [r5]
	mov r2, #0x1d
	add r0, r0, r4
	mov r1, #0
	lsl r2, r2, #4
	bl sub_020D4994
	ldr r0, [r5]
	mov r1, #1
	add r0, r0, r4
	str r1, [r0, #0x10]
	ldr r0, [r5]
	cmp r6, #0x8f
	str r7, [r0, r4]
	blt _02016F9A
	mov r6, #0
	str r6, [sp, #8]
_02016F9A:
	ldr r0, [r5]
	add r0, r0, r4
	str r6, [r0, #0x14]
	ldrb r0, [r5, #8]
	cmp r0, #0
	beq _02016FAC
	ldr r0, [sp]
	ldrb r2, [r0, #4]
	b _02016FAE
_02016FAC:
	mov r2, #0
_02016FAE:
	ldr r0, [r5]
	add r1, r0, r4
	mov r0, #0x73
	lsl r0, r0, #2
	strb r2, [r1, r0]
	ldr r1, [r5]
	ldr r2, [r5, #4]
	add r1, r1, r4
	ldr r1, [r1, #0x14]
	mov r0, #0x5a
	bl sub_02007540
	ldr r1, [r5]
	mov r2, #0
	add r1, r1, r4
	str r0, [r1, #8]
	ldr r0, [r5]
	mov r6, #0x1c
	add r1, r0, r4
	ldr r0, [r1, #8]
	str r0, [r1, #0xc]
	ldr r0, [r5]
	add r0, r0, r4
	str r2, [r0, #0x1c]
	ldr r0, [r5]
	add r0, r0, r4
	str r2, [r0, #0x20]
	ldr r0, [r5]
	add r1, r0, r4
	ldr r0, _02017060 ; =0x000001CD
	strb r2, [r1, r0]
	ldr r1, [r5]
	add r3, r1, r4
	add r1, r0, #1
	strb r6, [r3, r1]
	ldr r1, [r5]
	add r0, r0, #2
	add r1, r1, r4
	strb r2, [r1, r0]
	ldr r1, [r5]
	ldr r0, _02017064 ; =sub_020170C4
	add r1, r1, r4
	bl sub_0200E320
	ldr r1, [r5]
	add r1, r1, r4
	str r0, [r1, #4]
	ldr r0, [r5]
	add r1, r0, r4
	ldr r0, [sp, #8]
	str r0, [r1, #0x54]
	add r0, r7, #0
	mov r1, #0
	bl sub_02008A78
	ldr r1, [r5]
	add r1, r1, r4
	str r0, [r1, #0x58]
	add r0, r7, #0
	mov r1, #1
	bl sub_02008A78
	ldr r1, [r5]
	add r1, r1, r4
	str r0, [r1, #0x5c]
	ldr r1, [r5]
	mov r0, #0
	add r1, r1, r4
	str r0, [r1, #0x60]
	ldr r1, [r5]
	add r1, r1, r4
	str r0, [r1, #0x64]
	ldr r1, [r5]
	add r1, r1, r4
	str r0, [r1, #0x68]
	ldr r1, [r5]
	add r1, r1, r4
	str r0, [r1, #0x6c]
	ldr r1, [r5]
	add r1, r1, r4
	str r0, [r1, #0x70]
	ldr r1, [r5]
	add r1, r1, r4
	str r0, [r1, #0x74]
	ldr r1, [r5]
	add r1, r1, r4
	str r0, [r1, #0x78]
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02017060: .word 0x000001CD
_02017064: .word sub_020170C4
	thumb_func_end sub_02016F40

	thumb_func_start sub_02017068
sub_02017068: ; 0x02017068
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldrb r0, [r5, #9]
	add r4, r1, #0
	cmp r4, r0
	blo _02017078
	bl GF_AssertFail
_02017078:
	mov r0, #0x1d
	lsl r0, r0, #4
	ldr r1, [r5]
	mul r0, r4
	add r0, r1, r0
	ldr r0, [r0, #0x20]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02017068

	thumb_func_start sub_02017088
sub_02017088: ; 0x02017088
	push {r3, r4, r5, lr}
	add r5, r0, #0
	mov r0, #0x1d
	lsl r0, r0, #4
	add r4, r1, #0
	mul r4, r0
	ldr r0, [r5]
	add r0, r0, r4
	ldr r0, [r0, #4]
	cmp r0, #0
	beq _020170C2
	bl sub_0200E390
	ldr r1, [r5]
	mov r0, #0
	add r1, r1, r4
	str r0, [r1, #4]
	ldr r1, [r5]
	mov r2, #1
	add r1, r1, r4
	str r2, [r1, #0x20]
	ldr r1, [r5]
	add r1, r1, r4
	str r0, [r1, #0x10]
	ldr r0, [r5]
	add r0, r0, r4
	ldr r0, [r0, #8]
	bl sub_0201AB0C
_020170C2:
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02017088

	thumb_func_start sub_020170C4
sub_020170C4: ; 0x020170C4
	push {r3, r4, r5, lr}
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4, #0x54]
	cmp r0, #0
	bne _020170D8
	add r0, r4, #0
	bl sub_020170FC
	b _020170DC
_020170D8:
	sub r0, r0, #1
	str r0, [r4, #0x54]
_020170DC:
	ldr r0, [r4, #0x1c]
	cmp r0, #0
	beq _020170FA
	mov r0, #1
	str r0, [r4, #0x20]
	mov r0, #0
	str r0, [r4, #0x10]
	add r0, r5, #0
	bl sub_0200E390
	mov r0, #0
	str r0, [r4, #4]
	ldr r0, [r4, #8]
	bl sub_0201AB0C
_020170FA:
	pop {r3, r4, r5, pc}
	thumb_func_end sub_020170C4

	thumb_func_start sub_020170FC
sub_020170FC: ; 0x020170FC
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	mov r6, #0
	str r6, [r5, #0x18]
	add r7, r5, #0
	str r6, [r5, #0x44]
	add r4, r6, #0
	add r7, #0x7c
_0201710C:
	mov r0, #0x54
	add r1, r4, #0
	mul r1, r0
	add r0, r7, r1
	ldr r1, [r7, r1]
	cmp r1, #0
	beq _0201713A
	add r1, r0, #0
	add r1, #0x2d
	ldrb r1, [r1]
	cmp r1, #0
	bne _0201712C
	ldr r2, [r0, #0x50]
	add r1, r5, #0
	blx r2
	b _02017140
_0201712C:
	add r1, r0, #0
	add r1, #0x2d
	ldrb r1, [r1]
	add r0, #0x2d
	sub r1, r1, #1
	strb r1, [r0]
	b _02017140
_0201713A:
	add r0, r6, #1
	lsl r0, r0, #0x18
	lsr r6, r0, #0x18
_02017140:
	add r0, r4, #1
	lsl r0, r0, #0x18
	lsr r4, r0, #0x18
	cmp r4, #4
	blo _0201710C
	cmp r6, #4
	bne _02017154
	ldr r0, _020171E8 ; =0x000001CD
	mov r1, #0
	strb r1, [r5, r0]
_02017154:
	ldr r0, _020171E8 ; =0x000001CD
	ldrb r1, [r5, r0]
	cmp r1, #0
	beq _0201716A
	add r0, r5, #0
	bl sub_020179D4
	add r0, r5, #0
	bl sub_02017A1C
	pop {r3, r4, r5, r6, r7, pc}
_0201716A:
	add r0, r0, #2
	ldrb r0, [r5, r0]
	cmp r0, #0
	beq _02017182
	ldr r0, [r5]
	bl sub_02009138
	cmp r0, #0
	bne _020171E4
	ldr r0, _020171EC ; =0x000001CF
	mov r1, #0
	strb r1, [r5, r0]
_02017182:
	add r6, r5, #0
	add r4, r5, #0
	ldr r7, _020171F0 ; =0x020F61F8
	add r6, #0xc
	add r4, #0x44
_0201718C:
	ldr r0, [r4]
	add r0, r0, #1
	str r0, [r4]
	ldr r0, [r5, #0xc]
	ldr r0, [r0]
	cmp r0, #0x22
	blo _0201719E
	bl GF_AssertFail
_0201719E:
	ldr r1, [r5, #0xc]
	add r0, r5, #0
	ldr r1, [r1]
	lsl r1, r1, #2
	ldr r1, [r7, r1]
	blx r1
	ldr r0, [r5, #0x1c]
	cmp r0, #0
	bne _020171E4
	ldr r0, [r6]
	add r0, r0, #4
	str r0, [r6]
	ldr r0, [r5, #0x18]
	cmp r0, #0
	bne _020171E4
	ldr r0, _020171E8 ; =0x000001CD
	ldrb r0, [r5, r0]
	cmp r0, #0
	beq _020171D2
	add r0, r5, #0
	bl sub_020179D4
	add r0, r5, #0
	bl sub_02017A1C
	pop {r3, r4, r5, r6, r7, pc}
_020171D2:
	mov r0, #1
	ldr r1, [r5, #0x44]
	lsl r0, r0, #8
	cmp r1, r0
	blt _0201718C
	bl GF_AssertFail
	mov r0, #1
	str r0, [r5, #0x1c]
_020171E4:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020171E8: .word 0x000001CD
_020171EC: .word 0x000001CF
_020171F0: .word 0x020F61F8
	thumb_func_end sub_020170FC

	thumb_func_start sub_020171F4
sub_020171F4: ; 0x020171F4
	push {r4, lr}
	lsl r1, r1, #2
	ldr r4, [r0, r1]
	cmp r2, #1
	beq _02017202
	bl GF_AssertFail
_02017202:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020171F4

	thumb_func_start sub_02017208
sub_02017208: ; 0x02017208
	ldr r3, _02017210 ; =sub_020171F4
	add r2, r1, #0
	mov r1, #0
	bx r3
	.align 2, 0
_02017210: .word sub_020171F4
	thumb_func_end sub_02017208

	thumb_func_start sub_02017214
sub_02017214: ; 0x02017214
	ldr r3, _0201721C ; =sub_02017208
	mov r1, #1
	bx r3
	nop
_0201721C: .word sub_02017208
	thumb_func_end sub_02017214

	thumb_func_start sub_02017220
sub_02017220: ; 0x02017220
	push {r3, r4, r5, lr}
	add r5, r1, #0
	mov r3, #0
	add r0, #0x7c
	mov r2, #0x54
_0201722A:
	add r1, r3, #0
	mul r1, r2
	add r4, r0, r1
	ldr r1, [r0, r1]
	cmp r1, #0
	bne _02017254
	add r0, r4, #0
	mov r1, #0
	mov r2, #0x54
	bl sub_020D4994
	mov r0, #1
	str r0, [r4]
	mov r0, #0xc
	add r1, r5, #0
	mul r1, r0
	ldr r0, _02017268 ; =0x020F61BC
	ldr r0, [r0, r1]
	str r0, [r4, #0x50]
	add r0, r4, #0
	pop {r3, r4, r5, pc}
_02017254:
	add r1, r3, #1
	lsl r1, r1, #0x18
	lsr r3, r1, #0x18
	cmp r3, #4
	blo _0201722A
	bl GF_AssertFail
	mov r0, #0
	pop {r3, r4, r5, pc}
	nop
_02017268: .word 0x020F61BC
	thumb_func_end sub_02017220

	thumb_func_start sub_0201726C
sub_0201726C: ; 0x0201726C
	push {r4, lr}
	add r4, r1, #0
	ldr r1, [r0, #0xc]
	add r1, r1, #4
	str r1, [r0, #0xc]
	add r0, r1, #0
	bl sub_02017214
	str r0, [r4]
	pop {r4, pc}
	thumb_func_end sub_0201726C

	thumb_func_start sub_02017280
sub_02017280: ; 0x02017280
	push {r4, lr}
	add r4, r1, #0
	ldr r1, [r0, #0xc]
	add r1, r1, #4
	str r1, [r0, #0xc]
	add r0, r1, #0
	bl sub_02017214
	strb r0, [r4]
	pop {r4, pc}
	thumb_func_end sub_02017280

	thumb_func_start sub_02017294
sub_02017294: ; 0x02017294
	push {r4, lr}
	add r4, r1, #0
	ldr r1, [r0, #0xc]
	add r1, r1, #4
	str r1, [r0, #0xc]
	add r0, r1, #0
	bl sub_02017214
	strb r0, [r4]
	ldrb r0, [r4]
	cmp r0, #8
	blo _020172B0
	bl GF_AssertFail
_020172B0:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02017294

	thumb_func_start sub_020172B4
sub_020172B4: ; 0x020172B4
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r2, #0
	bl sub_02017294
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02017294
	pop {r3, r4, r5, pc}
	thumb_func_end sub_020172B4

	thumb_func_start sub_020172C8
sub_020172C8: ; 0x020172C8
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	add r5, r0, #0
	add r4, r2, #0
	add r6, r3, #0
	bl sub_02017294
	add r0, r5, #0
	add r1, sp, #0
	bl sub_02017280
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0x12
	bne _02017308
	add r1, sp, #0
	add r0, r5, #0
	add r1, #2
	bl sub_02017294
	add r0, sp, #0
	ldrb r0, [r0, #2]
	add r1, r6, #0
	lsl r0, r0, #2
	add r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [r4]
	add r0, r5, #0
	bl sub_0201726C
	add sp, #4
	pop {r3, r4, r5, r6, pc}
_02017308:
	cmp r0, #0x13
	bne _02017334
	add r1, sp, #0
	add r2, sp, #0
	add r0, r5, #0
	add r1, #2
	add r2, #1
	bl sub_020172B4
	add r0, sp, #0
	ldrb r1, [r0, #2]
	add sp, #4
	lsl r1, r1, #2
	add r1, r5, r1
	ldr r1, [r1, #0x24]
	str r1, [r4]
	ldrb r0, [r0, #1]
	lsl r0, r0, #2
	add r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [r6]
	pop {r3, r4, r5, r6, pc}
_02017334:
	bl GF_AssertFail
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end sub_020172C8

	thumb_func_start sub_0201733C
sub_0201733C: ; 0x0201733C
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	add r5, r0, #0
	add r4, r2, #0
	add r6, r3, #0
	bl sub_02017294
	add r1, sp, #0
	add r0, r5, #0
	add r1, #1
	bl sub_02017280
	add r0, r5, #0
	add r1, sp, #0
	bl sub_02017280
	add r0, sp, #0
	ldrb r0, [r0, #1]
	cmp r0, #0x12
	bne _0201736E
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0201726C
	b _0201738E
_0201736E:
	cmp r0, #0x13
	bne _0201738A
	add r1, sp, #0
	add r0, r5, #0
	add r1, #3
	bl sub_02017294
	add r0, sp, #0
	ldrb r0, [r0, #3]
	lsl r0, r0, #2
	add r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [r4]
	b _0201738E
_0201738A:
	bl GF_AssertFail
_0201738E:
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0x12
	bne _020173A2
	add r0, r5, #0
	add r1, r6, #0
	bl sub_0201726C
	add sp, #4
	pop {r3, r4, r5, r6, pc}
_020173A2:
	cmp r0, #0x13
	bne _020173C0
	add r1, sp, #0
	add r0, r5, #0
	add r1, #2
	bl sub_02017294
	add r0, sp, #0
	ldrb r0, [r0, #2]
	add sp, #4
	lsl r0, r0, #2
	add r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [r6]
	pop {r3, r4, r5, r6, pc}
_020173C0:
	bl GF_AssertFail
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end sub_0201733C

	thumb_func_start sub_020173C8
sub_020173C8: ; 0x020173C8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r4, r2, #0
	add r2, sp, #0
	add r2, #3
	add r5, r0, #0
	add r6, r3, #0
	bl sub_020172B4
	add r0, sp, #0
	ldrb r0, [r0, #3]
	add r1, sp, #0
	lsl r0, r0, #2
	add r0, r5, r0
	ldr r7, [r0, #0x24]
	add r0, r5, #0
	bl sub_02017280
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0x14
	bne _020173FE
	add r0, r5, #0
	add r1, r6, #0
	bl sub_0201726C
	b _0201741E
_020173FE:
	cmp r0, #0x15
	bne _0201741A
	add r1, sp, #0
	add r0, r5, #0
	add r1, #2
	bl sub_02017294
	add r0, sp, #0
	ldrb r0, [r0, #2]
	lsl r0, r0, #2
	add r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [r6]
	b _0201741E
_0201741A:
	bl GF_AssertFail
_0201741E:
	add r0, r5, #0
	add r1, sp, #0
	bl sub_02017280
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0x14
	bne _02017438
	add r0, r5, #0
	add r1, sp, #4
	bl sub_0201726C
	b _02017458
_02017438:
	cmp r0, #0x15
	bne _02017454
	add r1, sp, #0
	add r0, r5, #0
	add r1, #1
	bl sub_02017294
	add r0, sp, #0
	ldrb r0, [r0, #1]
	lsl r0, r0, #2
	add r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [sp, #4]
	b _02017458
_02017454:
	bl GF_AssertFail
_02017458:
	ldr r0, [sp, #4]
	add r0, r7, r0
	lsr r2, r0, #0x1f
	lsl r1, r0, #0x10
	sub r1, r1, r2
	mov r0, #0x10
	ror r1, r0
	add r0, r2, r1
	str r0, [r4]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_020173C8

	thumb_func_start sub_02017470
sub_02017470: ; 0x02017470
	ldr r2, [r0]
	ldr r0, [r1]
	sub r0, r2, r0
	bpl _0201747C
	mov r0, #0xf
	bx lr
_0201747C:
	cmp r0, #0
	ble _02017484
	mov r0, #0x10
	bx lr
_02017484:
	mov r0, #0x11
	bx lr
	thumb_func_end sub_02017470

	thumb_func_start sub_02017488
sub_02017488: ; 0x02017488
	add r2, r0, #0
	ldr r0, [r2]
	ldr r2, [r2, #0x74]
	mov r1, #1
	neg r3, r2
	asr r2, r3, #2
	lsr r2, r2, #0x1d
	add r2, r3, r2
	ldr r3, _020174A0 ; =sub_02008C2C
	asr r2, r2, #3
	bx r3
	nop
_020174A0: .word sub_02008C2C
	thumb_func_end sub_02017488

	thumb_func_start sub_020174A4
sub_020174A4: ; 0x020174A4
	push {r4, lr}
	add r4, r0, #0
	bl sub_020174BC
	mov r0, #1
	str r0, [r4, #0x18]
	str r0, [r4, #0x1c]
	pop {r4, pc}
	thumb_func_end sub_020174A4

	thumb_func_start sub_020174B4
sub_020174B4: ; 0x020174B4
	mov r1, #1
	str r1, [r0, #0x18]
	bx lr
	.align 2, 0
	thumb_func_end sub_020174B4

	thumb_func_start sub_020174BC
sub_020174BC: ; 0x020174BC
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4]
	ldr r2, [r4, #0x58]
	mov r1, #0
	bl sub_020087A4
	ldr r0, [r4]
	ldr r2, [r4, #0x5c]
	mov r1, #1
	bl sub_020087A4
	ldr r0, [r4]
	mov r1, #9
	mov r2, #0
	bl sub_020087A4
	ldr r0, [r4]
	mov r1, #0xa
	mov r2, #0
	bl sub_020087A4
	mov r1, #0xc
	add r2, r1, #0
	ldr r0, [r4]
	add r2, #0xf4
	bl sub_020087A4
	mov r1, #0xd
	add r2, r1, #0
	ldr r0, [r4]
	add r2, #0xf3
	bl sub_020087A4
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020174BC

	thumb_func_start sub_02017504
sub_02017504: ; 0x02017504
	push {r3, r4, lr}
	sub sp, #4
	add r1, sp, #0
	add r1, #1
	add r2, sp, #0
	add r4, r0, #0
	bl sub_020172B4
	add r0, sp, #0
	ldrb r1, [r0]
	ldrb r0, [r0, #1]
	lsl r1, r1, #2
	add r1, r4, r1
	lsl r0, r0, #2
	ldr r1, [r1, #0x24]
	add r0, r4, r0
	str r1, [r0, #0x24]
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_02017504

	thumb_func_start sub_0201752C
sub_0201752C: ; 0x0201752C
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #0
	add r2, sp, #8
	add r3, sp, #4
	add r4, r0, #0
	bl sub_020172C8
	ldr r1, [sp, #8]
	ldr r0, [sp, #4]
	add r1, r1, r0
	add r0, sp, #0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r4, r0
	str r1, [r0, #0x24]
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end sub_0201752C

	thumb_func_start sub_02017550
sub_02017550: ; 0x02017550
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #0
	add r2, sp, #8
	add r3, sp, #4
	add r4, r0, #0
	bl sub_020172C8
	ldr r1, [sp, #8]
	ldr r0, [sp, #4]
	add r2, r1, #0
	mul r2, r0
	add r0, sp, #0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r4, r0
	str r2, [r0, #0x24]
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_02017550

	thumb_func_start sub_02017578
sub_02017578: ; 0x02017578
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #0
	add r2, sp, #8
	add r3, sp, #4
	add r4, r0, #0
	bl sub_0201733C
	ldr r1, [sp, #8]
	ldr r0, [sp, #4]
	sub r1, r1, r0
	add r0, sp, #0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r4, r0
	str r1, [r0, #0x24]
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end sub_02017578

	thumb_func_start sub_0201759C
sub_0201759C: ; 0x0201759C
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #0
	add r2, sp, #8
	add r3, sp, #4
	add r4, r0, #0
	bl sub_0201733C
	ldr r0, [sp, #8]
	ldr r1, [sp, #4]
	bl sub_020F2998
	add r1, sp, #0
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r4, r1
	str r0, [r1, #0x24]
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_0201759C

	thumb_func_start sub_020175C4
sub_020175C4: ; 0x020175C4
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #0
	add r2, sp, #8
	add r3, sp, #4
	add r4, r0, #0
	bl sub_0201733C
	ldr r0, [sp, #8]
	ldr r1, [sp, #4]
	bl sub_020F2998
	add r0, sp, #0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r4, r0
	str r1, [r0, #0x24]
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_020175C4

	thumb_func_start sub_020175EC
sub_020175EC: ; 0x020175EC
	push {r3, r4, r5, lr}
	sub sp, #0x10
	add r1, sp, #0
	add r5, r0, #0
	bl sub_02017280
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0x14
	bne _02017620
	add r1, sp, #0
	add r0, r5, #0
	add r1, #3
	bl sub_02017294
	add r0, sp, #0
	ldrb r0, [r0, #3]
	add r1, sp, #8
	lsl r0, r0, #2
	add r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [sp, #0xc]
	add r0, r5, #0
	bl sub_0201726C
	b _0201764E
_02017620:
	cmp r0, #0x15
	bne _0201764A
	add r1, sp, #0
	add r2, sp, #0
	add r0, r5, #0
	add r1, #3
	add r2, #2
	bl sub_020172B4
	add r0, sp, #0
	ldrb r1, [r0, #3]
	lsl r1, r1, #2
	add r1, r5, r1
	ldr r1, [r1, #0x24]
	str r1, [sp, #0xc]
	ldrb r0, [r0, #2]
	lsl r0, r0, #2
	add r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [sp, #8]
	b _0201764E
_0201764A:
	bl GF_AssertFail
_0201764E:
	add r1, sp, #0
	add r0, r5, #0
	add r1, #1
	bl sub_02017280
	add r0, sp, #0
	ldrb r0, [r0, #1]
	cmp r0, #0x11
	bls _02017664
	bl GF_AssertFail
_02017664:
	add r0, sp, #0xc
	add r1, sp, #8
	bl sub_02017470
	add r4, r0, #0
	add r0, r5, #0
	add r1, sp, #0
	bl sub_02017280
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0x14
	bne _02017692
	add r1, sp, #0
	add r0, r5, #0
	add r1, #3
	bl sub_02017294
	add r0, r5, #0
	add r1, sp, #4
	bl sub_0201726C
	b _020176B6
_02017692:
	cmp r0, #0x15
	bne _020176B2
	add r1, sp, #0
	add r2, sp, #0
	add r0, r5, #0
	add r1, #3
	add r2, #2
	bl sub_020172B4
	add r0, sp, #0
	ldrb r0, [r0, #2]
	lsl r0, r0, #2
	add r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [sp, #4]
	b _020176B6
_020176B2:
	bl GF_AssertFail
_020176B6:
	add r0, sp, #0
	ldrb r1, [r0, #1]
	cmp r1, r4
	bne _020176C8
	ldrb r0, [r0, #3]
	ldr r1, [sp, #4]
	lsl r0, r0, #2
	add r0, r5, r0
	str r1, [r0, #0x24]
_020176C8:
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end sub_020175EC

	thumb_func_start sub_020176CC
sub_020176CC: ; 0x020176CC
	push {r3, r4, lr}
	sub sp, #4
	add r4, r0, #0
	add r1, sp, #0
	bl sub_02017294
	ldr r0, [r4, #0xc]
	add r0, r0, #4
	str r0, [r4, #0xc]
	bl sub_02017214
	add r1, sp, #0
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r4, r1
	str r0, [r1, #0x24]
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end sub_020176CC

	thumb_func_start sub_020176F0
sub_020176F0: ; 0x020176F0
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x50]
	cmp r0, #0
	beq _020176FE
	bl GF_AssertFail
_020176FE:
	ldr r0, [r4, #0xc]
	add r0, r0, #4
	str r0, [r4, #0xc]
	str r0, [r4, #0x50]
	ldr r0, [r4, #0xc]
	bl sub_02017214
	str r0, [r4, #0x48]
	mov r0, #0
	str r0, [r4, #0x4c]
	pop {r4, pc}
	thumb_func_end sub_020176F0

	thumb_func_start sub_02017714
sub_02017714: ; 0x02017714
	ldr r1, [r0, #0x4c]
	add r2, r1, #1
	str r2, [r0, #0x4c]
	ldr r1, [r0, #0x48]
	cmp r2, r1
	blt _0201772A
	mov r1, #0
	str r1, [r0, #0x50]
	str r1, [r0, #0x4c]
	str r1, [r0, #0x48]
	bx lr
_0201772A:
	ldr r1, [r0, #0x50]
	str r1, [r0, #0xc]
	bx lr
	thumb_func_end sub_02017714

	thumb_func_start sub_02017730
sub_02017730: ; 0x02017730
	push {r4, lr}
	sub sp, #8
	add r4, r0, #0
	add r1, sp, #4
	bl sub_0201726C
	add r0, r4, #0
	add r1, sp, #0
	bl sub_02017294
	add r2, sp, #0
	ldrb r2, [r2]
	ldr r0, [r4]
	ldr r1, [sp, #4]
	lsl r2, r2, #2
	add r2, r4, r2
	ldr r2, [r2, #0x24]
	bl sub_020087A4
	add sp, #8
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02017730

	thumb_func_start sub_0201775C
sub_0201775C: ; 0x0201775C
	push {r4, lr}
	sub sp, #8
	add r4, r0, #0
	add r1, sp, #4
	bl sub_0201726C
	add r0, r4, #0
	add r1, sp, #0
	bl sub_02017294
	add r2, sp, #0
	ldrb r2, [r2]
	ldr r0, [r4]
	ldr r1, [sp, #4]
	lsl r2, r2, #2
	add r2, r4, r2
	ldr r2, [r2, #0x24]
	bl sub_02008C2C
	add sp, #8
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0201775C

	thumb_func_start sub_02017788
sub_02017788: ; 0x02017788
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #8
	add r4, r0, #0
	bl sub_0201726C
	add r1, sp, #0
	add r0, r4, #0
	add r1, #1
	bl sub_02017280
	add r0, sp, #0
	ldrb r0, [r0, #1]
	cmp r0, #0x14
	bne _020177B0
	add r0, r4, #0
	add r1, sp, #4
	bl sub_0201726C
	b _020177D0
_020177B0:
	cmp r0, #0x15
	bne _020177CC
	add r1, sp, #0
	add r0, r4, #0
	add r1, #2
	bl sub_02017294
	add r0, sp, #0
	ldrb r0, [r0, #2]
	lsl r0, r0, #2
	add r0, r4, r0
	ldr r0, [r0, #0x24]
	str r0, [sp, #4]
	b _020177D0
_020177CC:
	bl GF_AssertFail
_020177D0:
	add r0, r4, #0
	add r1, sp, #0
	bl sub_02017280
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0x16
	bne _020177EE
	ldr r0, [r4]
	ldr r1, [sp, #8]
	ldr r2, [sp, #4]
	bl sub_020087A4
	add sp, #0xc
	pop {r3, r4, pc}
_020177EE:
	cmp r0, #0x17
	bne _02017800
	ldr r0, [r4]
	ldr r1, [sp, #8]
	ldr r2, [sp, #4]
	bl sub_02008C2C
	add sp, #0xc
	pop {r3, r4, pc}
_02017800:
	bl GF_AssertFail
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end sub_02017788

	thumb_func_start sub_02017808
sub_02017808: ; 0x02017808
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #0
	add r2, sp, #8
	add r3, sp, #4
	add r4, r0, #0
	bl sub_020173C8
	ldr r0, [sp, #8]
	ldr r2, [sp, #4]
	asr r0, r0, #4
	lsl r1, r0, #2
	ldr r0, _02017838 ; =0x021094DC
	ldrsh r0, [r0, r1]
	mul r0, r2
	asr r1, r0, #0xc
	add r0, sp, #0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r4, r0
	str r1, [r0, #0x24]
	add sp, #0xc
	pop {r3, r4, pc}
	nop
_02017838: .word 0x021094DC
	thumb_func_end sub_02017808

	thumb_func_start sub_0201783C
sub_0201783C: ; 0x0201783C
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #0
	add r2, sp, #8
	add r3, sp, #4
	add r4, r0, #0
	bl sub_020173C8
	ldr r1, [sp, #8]
	ldr r0, [sp, #4]
	asr r1, r1, #4
	lsl r1, r1, #1
	add r1, r1, #1
	lsl r2, r1, #1
	ldr r1, _02017870 ; =0x021094DC
	ldrsh r1, [r1, r2]
	mul r1, r0
	add r0, sp, #0
	ldrb r0, [r0]
	asr r1, r1, #0xc
	lsl r0, r0, #2
	add r0, r4, r0
	str r1, [r0, #0x24]
	add sp, #0xc
	pop {r3, r4, pc}
	nop
_02017870: .word 0x021094DC
	thumb_func_end sub_0201783C

	thumb_func_start sub_02017874
sub_02017874: ; 0x02017874
	push {r3, r4, lr}
	sub sp, #4
	add r1, sp, #0
	add r4, r0, #0
	add r1, #1
	bl sub_02017294
	add r0, r4, #0
	add r1, sp, #0
	bl sub_02017280
	add r0, sp, #0
	ldrb r1, [r0]
	cmp r1, #8
	bne _020178A0
	ldrb r0, [r0, #1]
	add sp, #4
	lsl r0, r0, #2
	add r0, r4, r0
	ldr r0, [r0, #0x24]
	str r0, [r4, #0x60]
	pop {r3, r4, pc}
_020178A0:
	cmp r1, #9
	bne _020178B2
	ldrb r0, [r0, #1]
	add sp, #4
	lsl r0, r0, #2
	add r0, r4, r0
	ldr r0, [r0, #0x24]
	str r0, [r4, #0x64]
	pop {r3, r4, pc}
_020178B2:
	bl GF_AssertFail
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_02017874

	thumb_func_start sub_020178BC
sub_020178BC: ; 0x020178BC
	push {r3, r4, lr}
	sub sp, #4
	add r1, sp, #0
	add r4, r0, #0
	add r1, #1
	bl sub_02017294
	add r0, r4, #0
	add r1, sp, #0
	bl sub_02017280
	add r0, sp, #0
	ldrb r1, [r0]
	cmp r1, #8
	bne _020178EC
	ldrb r0, [r0, #1]
	ldr r1, [r4, #0x60]
	add sp, #4
	lsl r0, r0, #2
	add r0, r4, r0
	ldr r0, [r0, #0x24]
	add r0, r1, r0
	str r0, [r4, #0x60]
	pop {r3, r4, pc}
_020178EC:
	cmp r1, #9
	bne _02017902
	ldrb r0, [r0, #1]
	ldr r1, [r4, #0x64]
	add sp, #4
	lsl r0, r0, #2
	add r0, r4, r0
	ldr r0, [r0, #0x24]
	add r0, r1, r0
	str r0, [r4, #0x64]
	pop {r3, r4, pc}
_02017902:
	bl GF_AssertFail
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_020178BC

	thumb_func_start sub_0201790C
sub_0201790C: ; 0x0201790C
	push {r3, r4, r5, lr}
	sub sp, #8
	add r1, sp, #0
	add r1, #3
	add r5, r0, #0
	bl sub_02017280
	add r0, sp, #0
	ldrb r0, [r0, #3]
	cmp r0, #8
	bne _02017928
	add r4, r5, #0
	add r4, #0x60
	b _02017968
_02017928:
	cmp r0, #9
	bne _02017932
	add r4, r5, #0
	add r4, #0x64
	b _02017968
_02017932:
	cmp r0, #0xa
	bne _0201793C
	add r4, r5, #0
	add r4, #0x68
	b _02017968
_0201793C:
	cmp r0, #0xb
	bne _02017946
	add r4, r5, #0
	add r4, #0x6c
	b _02017968
_02017946:
	cmp r0, #0xc
	bne _02017950
	add r4, r5, #0
	add r4, #0x70
	b _02017968
_02017950:
	cmp r0, #0xd
	bne _0201795A
	add r4, r5, #0
	add r4, #0x74
	b _02017968
_0201795A:
	cmp r0, #0xe
	bne _02017964
	add r4, r5, #0
	add r4, #0x78
	b _02017968
_02017964:
	bl GF_AssertFail
_02017968:
	add r1, sp, #0
	add r0, r5, #0
	add r1, #1
	bl sub_02017280
	add r0, sp, #0
	ldrb r0, [r0, #1]
	cmp r0, #0x14
	bne _02017984
	add r0, r5, #0
	add r1, sp, #4
	bl sub_0201726C
	b _020179A4
_02017984:
	cmp r0, #0x15
	bne _020179A0
	add r1, sp, #0
	add r0, r5, #0
	add r1, #2
	bl sub_02017294
	add r0, sp, #0
	ldrb r0, [r0, #2]
	lsl r0, r0, #2
	add r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [sp, #4]
	b _020179A4
_020179A0:
	bl GF_AssertFail
_020179A4:
	add r0, r5, #0
	add r1, sp, #0
	bl sub_02017280
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0x16
	bne _020179BC
	ldr r0, [sp, #4]
	add sp, #8
	str r0, [r4]
	pop {r3, r4, r5, pc}
_020179BC:
	cmp r0, #0x17
	bne _020179CC
	ldr r0, [sp, #4]
	ldr r1, [r4]
	add sp, #8
	add r0, r1, r0
	str r0, [r4]
	pop {r3, r4, r5, pc}
_020179CC:
	bl GF_AssertFail
	add sp, #8
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0201790C

	thumb_func_start sub_020179D4
sub_020179D4: ; 0x020179D4
	push {r3, r4, r5, lr}
	add r4, r0, #0
	mov r0, #0x73
	lsl r0, r0, #2
	ldrb r0, [r4, r0]
	cmp r0, #0
	ldr r0, [r4]
	beq _020179F6
	ldr r3, [r4, #0x60]
	ldr r2, [r4, #0x68]
	ldr r5, [r4, #0x58]
	add r2, r3, r2
	mov r1, #0
	sub r2, r5, r2
	bl sub_020087A4
	b _02017A06
_020179F6:
	ldr r3, [r4, #0x58]
	ldr r2, [r4, #0x60]
	ldr r5, [r4, #0x68]
	add r2, r3, r2
	mov r1, #0
	add r2, r5, r2
	bl sub_020087A4
_02017A06:
	ldr r3, [r4, #0x5c]
	ldr r2, [r4, #0x64]
	ldr r5, [r4, #0x6c]
	add r2, r3, r2
	ldr r0, [r4]
	mov r1, #1
	add r2, r5, r2
	bl sub_020087A4
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_020179D4

	thumb_func_start sub_02017A1C
sub_02017A1C: ; 0x02017A1C
	push {r4, lr}
	add r4, r0, #0
	mov r1, #0xc
	add r2, r1, #0
	ldr r3, [r4, #0x70]
	add r2, #0xf4
	ldr r0, [r4]
	add r2, r3, r2
	bl sub_020087A4
	mov r1, #0xd
	add r2, r1, #0
	ldr r3, [r4, #0x74]
	add r2, #0xf3
	ldr r0, [r4]
	add r2, r3, r2
	bl sub_020087A4
	ldr r2, [r4, #0x78]
	ldr r0, [r4]
	lsl r2, r2, #0x10
	mov r1, #9
	lsr r2, r2, #0x10
	bl sub_020087A4
	ldr r0, _02017A80 ; =0x000001CE
	ldrb r0, [r4, r0]
	cmp r0, #0x1b
	bne _02017A64
	ldr r0, [r4, #0x74]
	cmp r0, #0
	bge _02017A7E
	add r0, r4, #0
	bl sub_02017488
	pop {r4, pc}
_02017A64:
	cmp r0, #0x1d
	bne _02017A76
	ldr r0, [r4, #0x74]
	cmp r0, #0
	beq _02017A7E
	add r0, r4, #0
	bl sub_02017488
	pop {r4, pc}
_02017A76:
	cmp r0, #0x1c
	beq _02017A7E
	bl GF_AssertFail
_02017A7E:
	pop {r4, pc}
	.align 2, 0
_02017A80: .word 0x000001CE
	thumb_func_end sub_02017A1C

	thumb_func_start sub_02017A84
sub_02017A84: ; 0x02017A84
	push {r3, r4, lr}
	sub sp, #4
	add r4, r0, #0
	add r1, sp, #0
	bl sub_02017294
	ldr r0, [r4, #0xc]
	add r0, r0, #4
	str r0, [r4, #0xc]
	bl sub_02017214
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	cmp r0, #8
	beq _02017AA6
	cmp r0, #0xa
	bne _02017AB6
_02017AA6:
	add r0, sp, #0
	ldrb r0, [r0]
	add sp, #4
	lsl r0, r0, #2
	add r0, r4, r0
	ldr r0, [r0, #0x24]
	str r0, [r4, #0x68]
	pop {r3, r4, pc}
_02017AB6:
	cmp r0, #9
	beq _02017ABE
	cmp r0, #0xb
	bne _02017ACE
_02017ABE:
	add r0, sp, #0
	ldrb r0, [r0]
	add sp, #4
	lsl r0, r0, #2
	add r0, r4, r0
	ldr r0, [r0, #0x24]
	str r0, [r4, #0x6c]
	pop {r3, r4, pc}
_02017ACE:
	bl GF_AssertFail
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_02017A84

	thumb_func_start sub_02017AD8
sub_02017AD8: ; 0x02017AD8
	push {r4, lr}
	add r4, r0, #0
	add r1, r4, #0
	add r1, #0x54
	bl sub_0201726C
	mov r0, #1
	str r0, [r4, #0x18]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02017AD8

	thumb_func_start sub_02017AEC
sub_02017AEC: ; 0x02017AEC
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #4
	add r1, #2
	add r4, r0, #0
	bl sub_02017280
	add r1, sp, #4
	add r0, r4, #0
	add r1, #1
	bl sub_02017280
	add r0, r4, #0
	add r1, sp, #4
	bl sub_02017280
	add r0, r4, #0
	add r1, sp, #8
	bl sub_0201726C
	ldr r0, [sp, #8]
	add r3, sp, #4
	str r0, [sp]
	ldrb r1, [r3, #2]
	ldrb r2, [r3, #1]
	ldrb r3, [r3]
	ldr r0, [r4]
	bl sub_020090B4
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_02017AEC

	thumb_func_start sub_02017B2C
sub_02017B2C: ; 0x02017B2C
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4]
	bl sub_02009138
	cmp r0, #0
	beq _02017B42
	ldr r0, _02017B44 ; =0x000001CF
	mov r1, #1
	strb r1, [r4, r0]
	str r1, [r4, #0x18]
_02017B42:
	pop {r4, pc}
	.align 2, 0
_02017B44: .word 0x000001CF
	thumb_func_end sub_02017B2C

	thumb_func_start sub_02017B48
sub_02017B48: ; 0x02017B48
	ldr r1, _02017B50 ; =0x000001CD
	mov r2, #1
	strb r2, [r0, r1]
	bx lr
	.align 2, 0
_02017B50: .word 0x000001CD
	thumb_func_end sub_02017B48

	thumb_func_start sub_02017B54
sub_02017B54: ; 0x02017B54
	push {r4, lr}
	ldr r1, _02017B88 ; =0x000001CE
	add r4, r0, #0
	add r1, r4, r1
	bl sub_02017280
	ldr r0, _02017B88 ; =0x000001CE
	mov r1, #1
	ldrb r0, [r4, r0]
	add r2, r1, #0
	cmp r0, #0x1b
	beq _02017B72
	cmp r0, #0x1d
	beq _02017B72
	mov r2, #0
_02017B72:
	cmp r2, #0
	bne _02017B7C
	cmp r0, #0x1c
	beq _02017B7C
	mov r1, #0
_02017B7C:
	cmp r1, #0
	bne _02017B84
	bl GF_AssertFail
_02017B84:
	pop {r4, pc}
	nop
_02017B88: .word 0x000001CE
	thumb_func_end sub_02017B54

	thumb_func_start sub_02017B8C
sub_02017B8C: ; 0x02017B8C
	ldr r3, _02017B94 ; =sub_02017C78
	mov r1, #0
	bx r3
	nop
_02017B94: .word sub_02017C78
	thumb_func_end sub_02017B8C

	thumb_func_start sub_02017B98
sub_02017B98: ; 0x02017B98
	ldr r3, _02017BA0 ; =sub_02017C78
	mov r1, #1
	bx r3
	nop
_02017BA0: .word sub_02017C78
	thumb_func_end sub_02017B98

	thumb_func_start sub_02017BA4
sub_02017BA4: ; 0x02017BA4
	ldr r3, _02017BAC ; =sub_02017C78
	mov r1, #2
	bx r3
	nop
_02017BAC: .word sub_02017C78
	thumb_func_end sub_02017BA4

	thumb_func_start sub_02017BB0
sub_02017BB0: ; 0x02017BB0
	ldr r3, _02017BB8 ; =sub_02017C78
	mov r1, #3
	bx r3
	nop
_02017BB8: .word sub_02017C78
	thumb_func_end sub_02017BB0

	thumb_func_start sub_02017BBC
sub_02017BBC: ; 0x02017BBC
	ldr r3, _02017BC4 ; =sub_02017C78
	mov r1, #4
	bx r3
	nop
_02017BC4: .word sub_02017C78
	thumb_func_end sub_02017BBC

	thumb_func_start sub_02017BC8
sub_02017BC8: ; 0x02017BC8
	push {r3, lr}
	cmp r0, #0x18
	bne _02017BD4
	ldr r0, [r2]
	str r0, [r3]
	pop {r3, pc}
_02017BD4:
	cmp r0, #0x19
	bne _02017BE2
	ldr r1, [r1]
	ldr r0, [r2]
	add r0, r1, r0
	str r0, [r3]
	pop {r3, pc}
_02017BE2:
	cmp r0, #0x1a
	bne _02017BF0
	ldr r1, [r3]
	ldr r0, [r2]
	add r0, r1, r0
	str r0, [r3]
	pop {r3, pc}
_02017BF0:
	bl GF_AssertFail
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_02017BC8

	thumb_func_start sub_02017BF8
sub_02017BF8: ; 0x02017BF8
	push {r3, lr}
	sub r0, #0x23
	cmp r0, #4
	bhi _02017C70
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_02017C0C: ; jump table
	.short _02017C16 - _02017C0C - 2 ; case 0
	.short _02017C28 - _02017C0C - 2 ; case 1
	.short _02017C3A - _02017C0C - 2 ; case 2
	.short _02017C4C - _02017C0C - 2 ; case 3
	.short _02017C5E - _02017C0C - 2 ; case 4
_02017C16:
	add r0, r1, #0
	add r0, #0x3c
	str r0, [r1, #0x24]
	add r0, r2, #0
	add r0, #0x68
	str r0, [r1, #0x28]
	ldr r0, [r2, #0x68]
	str r0, [r1, #0x30]
	pop {r3, pc}
_02017C28:
	add r0, r1, #0
	add r0, #0x40
	str r0, [r1, #0x24]
	add r0, r2, #0
	add r0, #0x6c
	str r0, [r1, #0x28]
	ldr r0, [r2, #0x6c]
	str r0, [r1, #0x30]
	pop {r3, pc}
_02017C3A:
	add r0, r1, #0
	add r0, #0x44
	str r0, [r1, #0x24]
	add r0, r2, #0
	add r0, #0x70
	str r0, [r1, #0x28]
	ldr r0, [r2, #0x70]
	str r0, [r1, #0x30]
	pop {r3, pc}
_02017C4C:
	add r0, r1, #0
	add r0, #0x48
	str r0, [r1, #0x24]
	add r0, r2, #0
	add r0, #0x74
	str r0, [r1, #0x28]
	ldr r0, [r2, #0x74]
	str r0, [r1, #0x30]
	pop {r3, pc}
_02017C5E:
	add r0, r1, #0
	add r0, #0x4c
	str r0, [r1, #0x24]
	add r0, r2, #0
	add r0, #0x78
	str r0, [r1, #0x28]
	ldr r0, [r2, #0x78]
	str r0, [r1, #0x30]
	pop {r3, pc}
_02017C70:
	bl GF_AssertFail
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_02017BF8

	thumb_func_start sub_02017C78
sub_02017C78: ; 0x02017C78
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r6, r1, #0
	lsl r1, r6, #0x18
	lsr r1, r1, #0x18
	add r5, r0, #0
	bl sub_02017220
	str r0, [sp, #4]
	ldr r1, [sp, #4]
	add r0, r5, #0
	add r1, #0x2c
	bl sub_02017280
	ldr r1, [sp, #4]
	add r0, r5, #0
	add r1, #0x2d
	bl sub_02017280
	mov r0, #0xc
	mul r0, r6
	ldr r1, _02017D14 ; =0x020F61C0
	str r0, [sp]
	ldr r0, [r1, r0]
	mov r4, #0
	cmp r0, #0
	ble _02017CCE
	ldr r1, _02017D18 ; =0x020F61BC
	ldr r0, [sp]
	add r6, r1, r0
	ldr r0, [sp, #4]
	add r7, r0, #4
_02017CB8:
	lsl r1, r4, #2
	add r0, r5, #0
	add r1, r7, r1
	bl sub_0201726C
	add r0, r4, #1
	lsl r0, r0, #0x18
	lsr r4, r0, #0x18
	ldr r0, [r6, #4]
	cmp r4, r0
	blt _02017CB8
_02017CCE:
	ldr r1, _02017D1C ; =0x020F61C4
	ldr r0, [sp]
	add r2, r5, #0
	ldr r0, [r1, r0]
	lsl r1, r0, #2
	ldr r0, [sp, #4]
	add r0, r0, r1
	ldr r0, [r0, #4]
	ldr r1, [sp, #4]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bl sub_02017BF8
	ldr r0, [sp, #4]
	add r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #0
	bne _02017D00
	ldr r0, [sp, #4]
	add r1, r5, #0
	add r2, r0, #0
	ldr r2, [r2, #0x50]
	blx r2
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_02017D00:
	ldr r0, [sp, #4]
	add r0, #0x2d
	ldrb r0, [r0]
	sub r1, r0, #1
	ldr r0, [sp, #4]
	add r0, #0x2d
	str r0, [sp, #4]
	strb r1, [r0]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02017D14: .word 0x020F61C0
_02017D18: .word 0x020F61BC
_02017D1C: .word 0x020F61C4
	thumb_func_end sub_02017C78

	thumb_func_start sub_02017D20
sub_02017D20: ; 0x02017D20
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x1c]
	ldr r1, [r4, #0x10]
	add r0, r0, #1
	ldr r2, [r4, #0x14]
	mul r0, r1
	add r0, r2, r0
	lsl r0, r0, #0x10
	lsr r1, r0, #0x10
	ldr r0, [r4, #4]
	sub r0, #0x1e
	cmp r0, #3
	bhi _02017DAC
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_02017D48: ; jump table
	.short _02017D50 - _02017D48 - 2 ; case 0
	.short _02017D64 - _02017D48 - 2 ; case 1
	.short _02017D7C - _02017D48 - 2 ; case 2
	.short _02017D92 - _02017D48 - 2 ; case 3
_02017D50:
	asr r0, r1, #4
	lsl r1, r0, #2
	ldr r0, _02017DD4 ; =0x021094DC
	ldr r2, [r4, #0xc]
	ldrsh r0, [r0, r1]
	mul r0, r2
	asr r1, r0, #0xc
	ldr r0, [r4, #0x24]
	str r1, [r0]
	b _02017DB0
_02017D64:
	asr r1, r1, #4
	lsl r1, r1, #1
	add r1, r1, #1
	lsl r2, r1, #1
	ldr r1, _02017DD4 ; =0x021094DC
	ldr r0, [r4, #0xc]
	ldrsh r1, [r1, r2]
	mul r1, r0
	ldr r0, [r4, #0x24]
	asr r1, r1, #0xc
	str r1, [r0]
	b _02017DB0
_02017D7C:
	asr r0, r1, #4
	lsl r1, r0, #2
	ldr r0, _02017DD4 ; =0x021094DC
	ldr r2, [r4, #0xc]
	ldrsh r0, [r0, r1]
	mul r0, r2
	asr r0, r0, #0xc
	neg r1, r0
	ldr r0, [r4, #0x24]
	str r1, [r0]
	b _02017DB0
_02017D92:
	asr r1, r1, #4
	lsl r1, r1, #1
	add r1, r1, #1
	lsl r2, r1, #1
	ldr r1, _02017DD4 ; =0x021094DC
	ldr r0, [r4, #0xc]
	ldrsh r1, [r1, r2]
	mul r1, r0
	asr r0, r1, #0xc
	neg r1, r0
	ldr r0, [r4, #0x24]
	str r1, [r0]
	b _02017DB0
_02017DAC:
	bl GF_AssertFail
_02017DB0:
	add r0, r4, #0
	add r0, #0x2c
	ldrb r0, [r0]
	add r1, r4, #0
	ldr r2, [r4, #0x24]
	ldr r3, [r4, #0x28]
	add r1, #0x30
	bl sub_02017BC8
	ldr r0, [r4, #0x1c]
	add r1, r0, #1
	str r1, [r4, #0x1c]
	ldr r0, [r4, #0x18]
	cmp r1, r0
	blt _02017DD2
	mov r0, #0
	str r0, [r4]
_02017DD2:
	pop {r4, pc}
	.align 2, 0
_02017DD4: .word 0x021094DC
	thumb_func_end sub_02017D20

	thumb_func_start sub_02017DD8
sub_02017DD8: ; 0x02017DD8
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x1c]
	ldr r1, [r4, #0x10]
	add r0, r0, #1
	mul r0, r1
	ldr r1, [r4, #0x18]
	bl sub_020F2998
	ldr r1, [r4, #0x14]
	add r0, r1, r0
	lsl r0, r0, #0x10
	lsr r1, r0, #0x10
	ldr r0, [r4, #4]
	sub r0, #0x1e
	cmp r0, #3
	bhi _02017E6A
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_02017E06: ; jump table
	.short _02017E0E - _02017E06 - 2 ; case 0
	.short _02017E22 - _02017E06 - 2 ; case 1
	.short _02017E3A - _02017E06 - 2 ; case 2
	.short _02017E50 - _02017E06 - 2 ; case 3
_02017E0E:
	asr r0, r1, #4
	lsl r1, r0, #2
	ldr r0, _02017E94 ; =0x021094DC
	ldr r2, [r4, #0xc]
	ldrsh r0, [r0, r1]
	mul r0, r2
	asr r1, r0, #0xc
	ldr r0, [r4, #0x24]
	str r1, [r0]
	b _02017E6E
_02017E22:
	asr r1, r1, #4
	lsl r1, r1, #1
	add r1, r1, #1
	lsl r2, r1, #1
	ldr r1, _02017E94 ; =0x021094DC
	ldr r0, [r4, #0xc]
	ldrsh r1, [r1, r2]
	mul r1, r0
	ldr r0, [r4, #0x24]
	asr r1, r1, #0xc
	str r1, [r0]
	b _02017E6E
_02017E3A:
	asr r0, r1, #4
	lsl r1, r0, #2
	ldr r0, _02017E94 ; =0x021094DC
	ldr r2, [r4, #0xc]
	ldrsh r0, [r0, r1]
	mul r0, r2
	asr r0, r0, #0xc
	neg r1, r0
	ldr r0, [r4, #0x24]
	str r1, [r0]
	b _02017E6E
_02017E50:
	asr r1, r1, #4
	lsl r1, r1, #1
	add r1, r1, #1
	lsl r2, r1, #1
	ldr r1, _02017E94 ; =0x021094DC
	ldr r0, [r4, #0xc]
	ldrsh r1, [r1, r2]
	mul r1, r0
	asr r0, r1, #0xc
	neg r1, r0
	ldr r0, [r4, #0x24]
	str r1, [r0]
	b _02017E6E
_02017E6A:
	bl GF_AssertFail
_02017E6E:
	add r0, r4, #0
	add r0, #0x2c
	ldrb r0, [r0]
	add r1, r4, #0
	ldr r2, [r4, #0x24]
	ldr r3, [r4, #0x28]
	add r1, #0x30
	bl sub_02017BC8
	ldr r0, [r4, #0x1c]
	add r1, r0, #1
	str r1, [r4, #0x1c]
	ldr r0, [r4, #0x18]
	cmp r1, r0
	blt _02017E90
	mov r0, #0
	str r0, [r4]
_02017E90:
	pop {r4, pc}
	nop
_02017E94: .word 0x021094DC
	thumb_func_end sub_02017DD8

	thumb_func_start sub_02017E98
sub_02017E98: ; 0x02017E98
	push {r3, r4, r5, lr}
	add r4, r0, #0
	ldr r1, [r4, #0x24]
	ldr r3, [r4, #0xc]
	ldr r2, [r4, #0x14]
	ldr r5, [r4, #8]
	mul r2, r3
	ldr r0, [r1]
	add r2, r5, r2
	add r0, r0, r2
	str r0, [r1]
	add r0, r4, #0
	add r0, #0x2c
	add r1, r4, #0
	ldrb r0, [r0]
	ldr r2, [r4, #0x24]
	ldr r3, [r4, #0x28]
	add r1, #0x30
	bl sub_02017BC8
	ldr r0, [r4, #0x14]
	add r1, r0, #1
	str r1, [r4, #0x14]
	ldr r0, [r4, #0x10]
	cmp r1, r0
	blt _02017ED0
	mov r0, #0
	str r0, [r4]
_02017ED0:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02017E98

	thumb_func_start sub_02017ED4
sub_02017ED4: ; 0x02017ED4
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x10]
	add r1, r0, #1
	ldr r0, [r4, #8]
	mul r0, r1
	ldr r1, [r4, #0xc]
	bl sub_020F2998
	ldr r1, [r4, #0x24]
	str r0, [r1]
	add r0, r4, #0
	add r0, #0x2c
	add r1, r4, #0
	ldrb r0, [r0]
	ldr r2, [r4, #0x24]
	ldr r3, [r4, #0x28]
	add r1, #0x30
	bl sub_02017BC8
	ldr r0, [r4, #0x10]
	add r1, r0, #1
	str r1, [r4, #0x10]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	blt _02017F0C
	mov r0, #0
	str r0, [r4]
_02017F0C:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02017ED4

	thumb_func_start sub_02017F10
sub_02017F10: ; 0x02017F10
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0xc]
	ldr r0, [r4, #0x14]
	ldr r2, [r4, #8]
	mul r0, r1
	ldr r1, [r4, #0x24]
	add r2, r2, r0
	ldr r0, [r1]
	add r0, r0, r2
	str r0, [r1]
	add r0, r4, #0
	add r0, #0x2c
	ldrb r0, [r0]
	cmp r0, #0x18
	beq _02017F34
	cmp r0, #0x1a
	bne _02017F5A
_02017F34:
	cmp r2, #0
	ldr r2, [r4, #0x10]
	bge _02017F4A
	ldr r1, [r4, #0x24]
	ldr r0, [r1]
	cmp r0, r2
	bgt _02017F90
	str r2, [r1]
	mov r0, #0
	str r0, [r4]
	b _02017F90
_02017F4A:
	ldr r1, [r4, #0x24]
	ldr r0, [r1]
	cmp r0, r2
	blt _02017F90
	str r2, [r1]
	mov r0, #0
	str r0, [r4]
	b _02017F90
_02017F5A:
	cmp r0, #0x19
	bne _02017F8C
	ldr r1, [r4, #0x24]
	ldr r3, [r4, #0x30]
	ldr r0, [r1]
	add r3, r3, r0
	cmp r2, #0
	ldr r2, [r4, #0x10]
	bge _02017F7C
	cmp r3, r2
	bgt _02017F90
	sub r2, r2, r3
	add r0, r0, r2
	str r0, [r1]
	mov r0, #0
	str r0, [r4]
	b _02017F90
_02017F7C:
	cmp r3, r2
	blt _02017F90
	sub r2, r3, r2
	sub r0, r0, r2
	str r0, [r1]
	mov r0, #0
	str r0, [r4]
	b _02017F90
_02017F8C:
	bl GF_AssertFail
_02017F90:
	add r0, r4, #0
	add r0, #0x2c
	ldrb r0, [r0]
	add r1, r4, #0
	ldr r2, [r4, #0x24]
	ldr r3, [r4, #0x28]
	add r1, #0x30
	bl sub_02017BC8
	ldr r0, [r4, #0x14]
	add r0, r0, #1
	str r0, [r4, #0x14]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02017F10

	thumb_func_start sub_02017FAC
sub_02017FAC: ; 0x02017FAC
	ldr r3, _02017FC8 ; =0x020F6280
	mov r2, #0
_02017FB0:
	ldrh r1, [r3, #2]
	cmp r0, r1
	bhs _02017FBA
	add r0, r2, #0
	bx lr
_02017FBA:
	add r2, r2, #1
	add r3, r3, #2
	cmp r2, #2
	blt _02017FB0
	add r0, r2, #0
	bx lr
	nop
_02017FC8: .word 0x020F6280
	thumb_func_end sub_02017FAC

	thumb_func_start sub_02017FCC
sub_02017FCC: ; 0x02017FCC
	push {r4, lr}
	add r4, r0, #0
	bl sub_02017FAC
	lsl r1, r0, #1
	ldr r0, _02017FE0 ; =0x020F6280
	ldrh r0, [r0, r1]
	sub r0, r4, r0
	pop {r4, pc}
	nop
_02017FE0: .word 0x020F6280
	thumb_func_end sub_02017FCC

	thumb_func_start sub_02017FE4
sub_02017FE4: ; 0x02017FE4
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #3
	blt _02017FF2
	bl GF_AssertFail
_02017FF2:
	ldr r0, _02017FFC ; =0x020F6280
	lsl r1, r5, #1
	ldrh r0, [r0, r1]
	add r0, r4, r0
	pop {r3, r4, r5, pc}
	.align 2, 0
_02017FFC: .word 0x020F6280
	thumb_func_end sub_02017FE4

	thumb_func_start sub_02018000
sub_02018000: ; 0x02018000
	cmp r0, #1
	blo _02018008
	cmp r0, #0x6f
	bls _02018022
_02018008:
	mov r1, #0x7d
	lsl r1, r1, #4
	cmp r0, r1
	blo _02018016
	add r1, #0xa
	cmp r0, r1
	bls _02018022
_02018016:
	ldr r1, _0201802C ; =0x00000BB8
	cmp r0, r1
	blo _02018026
	add r1, #0x4c
	cmp r0, r1
	bhi _02018026
_02018022:
	mov r0, #1
	bx lr
_02018026:
	mov r0, #0
	bx lr
	nop
_0201802C: .word 0x00000BB8
	thumb_func_end sub_02018000

	thumb_func_start sub_02018030
sub_02018030: ; 0x02018030
	push {r3, r4, r5, lr}
	mov r4, #0
	add r5, r0, #0
	add r0, r1, #0
	add r1, r2, #0
	str r4, [sp]
	add r2, r4, #0
	bl sub_02007C98
	str r0, [r5]
	add r0, r5, #0
	bl sub_02018324
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02018030

	thumb_func_start sub_0201804C
sub_0201804C: ; 0x0201804C
	push {r3, r4, r5, lr}
	add r4, r1, #0
	add r5, r0, #0
	ldr r0, [r4, #0xc]
	bl sub_0201F668
	ldr r0, [r4]
	ldr r1, [r4, #0xc]
	bl sub_0201F64C
	add r0, r5, #0
	bl sub_0200E390
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0201804C

	thumb_func_start sub_02018068
sub_02018068: ; 0x02018068
	push {r4, lr}
	sub sp, #8
	add r4, r0, #0
	ldr r0, [r4, #0xc]
	cmp r0, #0
	beq _02018098
	add r1, sp, #4
	add r2, sp, #0
	bl sub_020BE4D0
	ldr r1, _020180B4 ; =0x02110928
	ldr r0, [sp, #4]
	ldr r1, [r1]
	blx r1
	ldr r1, _020180B4 ; =0x02110928
	ldr r0, [sp]
	ldr r1, [r1]
	blx r1
	ldr r0, [r4, #0xc]
	bl sub_020BE588
	ldr r1, _020180B8 ; =0x02110930
	ldr r1, [r1]
	blx r1
_02018098:
	ldr r0, [r4]
	cmp r0, #0
	beq _020180A2
	bl sub_0201AB0C
_020180A2:
	mov r1, #0x10
	mov r0, #0
_020180A6:
	strb r0, [r4]
	add r4, r4, #1
	sub r1, r1, #1
	bne _020180A6
	add sp, #8
	pop {r4, pc}
	nop
_020180B4: .word 0x02110928
_020180B8: .word 0x02110930
	thumb_func_end sub_02018068

	thumb_func_start sub_020180BC
sub_020180BC: ; 0x020180BC
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	add r4, r1, #0
	mov r6, #0
	add r1, r3, #0
	add r5, r0, #0
	add r0, r2, #0
	ldr r3, [sp, #0x18]
	add r2, r6, #0
	str r6, [sp]
	bl sub_02007C98
	add r2, r0, #0
	ldr r3, [sp, #0x1c]
	add r0, r5, #0
	add r1, r4, #0
	bl sub_020182F8
	add r0, r6, #0
	str r0, [r5, #0x10]
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end sub_020180BC

	thumb_func_start sub_020180E8
sub_020180E8: ; 0x020180E8
	push {r4, lr}
	add r4, r0, #0
	bl sub_020182F8
	mov r0, #1
	str r0, [r4, #0x10]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020180E8

	thumb_func_start sub_020180F8
sub_020180F8: ; 0x020180F8
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _02018116
	add r0, r1, #0
	ldr r1, [r4, #8]
	bl sub_020C2BA0
	ldr r0, [r4, #0x10]
	cmp r0, #0
	bne _02018116
	ldr r0, [r4]
	bl sub_0201AB0C
_02018116:
	mov r1, #0x14
	mov r0, #0
_0201811A:
	strb r0, [r4]
	add r4, r4, #1
	sub r1, r1, #1
	bne _0201811A
	pop {r4, pc}
	thumb_func_end sub_020180F8

	thumb_func_start sub_02018124
sub_02018124: ; 0x02018124
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #8]
	ldr r0, [r0, #8]
	ldrh r0, [r0, #4]
	lsl r2, r0, #0xc
	cmp r1, #0
	ble _02018142
	ldr r0, [r4, #0xc]
	add r0, r0, r1
	add r1, r2, #0
	bl sub_020F2998
	str r1, [r4, #0xc]
	b _02018154
_02018142:
	ldr r0, [r4, #0xc]
	add r3, r4, #0
	add r3, #0xc
	add r0, r0, r1
	str r0, [r4, #0xc]
	bpl _02018154
	ldr r0, [r3]
	add r0, r0, r2
	str r0, [r3]
_02018154:
	ldr r1, [r4, #0xc]
	ldr r0, [r4, #8]
	str r1, [r0]
	pop {r4, pc}
	thumb_func_end sub_02018124

	thumb_func_start sub_0201815C
sub_0201815C: ; 0x0201815C
	push {r3, r4}
	ldr r2, [r0, #8]
	ldr r3, [r0, #0xc]
	ldr r2, [r2, #8]
	ldrh r2, [r2, #4]
	lsl r4, r2, #0xc
	mov r2, #0
	cmp r1, #0
	ble _0201817E
	add r1, r3, r1
	cmp r1, r4
	bge _02018178
	str r1, [r0, #0xc]
	b _0201818A
_02018178:
	str r4, [r0, #0xc]
	mov r2, #1
	b _0201818A
_0201817E:
	add r1, r3, r1
	bmi _02018186
	str r1, [r0, #0xc]
	b _0201818A
_02018186:
	str r2, [r0, #0xc]
	mov r2, #1
_0201818A:
	ldr r1, [r0, #0xc]
	ldr r0, [r0, #8]
	str r1, [r0]
	add r0, r2, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end sub_0201815C

	thumb_func_start sub_02018198
sub_02018198: ; 0x02018198
	str r1, [r0, #0xc]
	ldr r0, [r0, #8]
	str r1, [r0]
	bx lr
	thumb_func_end sub_02018198

	thumb_func_start sub_020181A0
sub_020181A0: ; 0x020181A0
	ldr r0, [r0, #0xc]
	bx lr
	thumb_func_end sub_020181A0

	thumb_func_start sub_020181A4
sub_020181A4: ; 0x020181A4
	ldr r0, [r0, #8]
	ldr r0, [r0, #8]
	ldrh r0, [r0, #4]
	lsl r0, r0, #0xc
	bx lr
	.align 2, 0
	thumb_func_end sub_020181A4

	thumb_func_start sub_020181B0
sub_020181B0: ; 0x020181B0
	push {r3, r4, r5, lr}
	add r5, r1, #0
	mov r1, #0
	mov r2, #0x78
	add r4, r0, #0
	bl sub_020E5B44
	ldr r1, [r5, #8]
	add r0, r4, #0
	bl sub_020BE120
	mov r0, #1
	str r0, [r4, #0x6c]
	lsl r0, r0, #0xc
	str r0, [r4, #0x60]
	str r0, [r4, #0x64]
	str r0, [r4, #0x68]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_020181B0

	thumb_func_start sub_020181D4
sub_020181D4: ; 0x020181D4
	ldr r3, _020181DC ; =sub_020BE294
	ldr r1, [r1, #8]
	bx r3
	nop
_020181DC: .word sub_020BE294
	thumb_func_end sub_020181D4

	thumb_func_start sub_020181E0
sub_020181E0: ; 0x020181E0
	ldr r3, _020181E8 ; =sub_020BE388
	ldr r1, [r1, #8]
	bx r3
	nop
_020181E8: .word sub_020BE388
	thumb_func_end sub_020181E0

	thumb_func_start sub_020181EC
sub_020181EC: ; 0x020181EC
	push {r4, lr}
	sub sp, #0x48
	add r4, r0, #0
	ldr r0, [r4, #0x6c]
	cmp r0, #0
	beq _02018280
	add r0, sp, #0x24
	bl sub_020CAFEC
	add r0, r4, #0
	add r0, #0x70
	ldrh r0, [r0]
	ldr r3, _02018284 ; =0x021094DC
	asr r0, r0, #4
	lsl r2, r0, #1
	lsl r1, r2, #1
	add r2, r2, #1
	lsl r2, r2, #1
	ldrsh r1, [r3, r1]
	ldrsh r2, [r3, r2]
	add r0, sp, #0
	bl sub_020CB0D0
	add r1, sp, #0x24
	add r0, sp, #0
	add r2, r1, #0
	bl sub_020CB410
	add r0, r4, #0
	add r0, #0x74
	ldrh r0, [r0]
	ldr r3, _02018284 ; =0x021094DC
	asr r0, r0, #4
	lsl r2, r0, #1
	lsl r1, r2, #1
	add r2, r2, #1
	lsl r2, r2, #1
	ldrsh r1, [r3, r1]
	ldrsh r2, [r3, r2]
	add r0, sp, #0
	bl sub_020CB108
	add r1, sp, #0x24
	add r0, sp, #0
	add r2, r1, #0
	bl sub_020CB410
	add r0, r4, #0
	add r0, #0x72
	ldrh r0, [r0]
	ldr r3, _02018284 ; =0x021094DC
	asr r0, r0, #4
	lsl r2, r0, #1
	lsl r1, r2, #1
	add r2, r2, #1
	lsl r2, r2, #1
	ldrsh r1, [r3, r1]
	ldrsh r2, [r3, r2]
	add r0, sp, #0
	bl sub_020CB0EC
	add r1, sp, #0x24
	add r0, sp, #0
	add r2, r1, #0
	bl sub_020CB410
	add r1, r4, #0
	add r0, r4, #0
	add r4, #0x60
	add r1, #0x54
	add r2, sp, #0x24
	add r3, r4, #0
	bl sub_0201F554
_02018280:
	add sp, #0x48
	pop {r4, pc}
	.align 2, 0
_02018284: .word 0x021094DC
	thumb_func_end sub_020181EC

	thumb_func_start sub_02018288
sub_02018288: ; 0x02018288
	push {r3, lr}
	add r2, r1, #0
	ldr r1, [r0, #0x6c]
	cmp r1, #0
	beq _0201829E
	add r1, r0, #0
	add r3, r0, #0
	add r1, #0x54
	add r3, #0x60
	bl sub_0201F554
_0201829E:
	pop {r3, pc}
	thumb_func_end sub_02018288

	thumb_func_start sub_020182A0
sub_020182A0: ; 0x020182A0
	str r1, [r0, #0x6c]
	bx lr
	thumb_func_end sub_020182A0

	thumb_func_start sub_020182A4
sub_020182A4: ; 0x020182A4
	ldr r0, [r0, #0x6c]
	bx lr
	thumb_func_end sub_020182A4

	thumb_func_start sub_020182A8
sub_020182A8: ; 0x020182A8
	str r1, [r0, #0x54]
	str r2, [r0, #0x58]
	str r3, [r0, #0x5c]
	bx lr
	thumb_func_end sub_020182A8

	thumb_func_start sub_020182B0
sub_020182B0: ; 0x020182B0
	push {r3, r4}
	ldr r4, [r0, #0x54]
	str r4, [r1]
	ldr r1, [r0, #0x58]
	str r1, [r2]
	ldr r0, [r0, #0x5c]
	str r0, [r3]
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end sub_020182B0

	thumb_func_start sub_020182C4
sub_020182C4: ; 0x020182C4
	str r1, [r0, #0x60]
	str r2, [r0, #0x64]
	str r3, [r0, #0x68]
	bx lr
	thumb_func_end sub_020182C4

	thumb_func_start sub_020182CC
sub_020182CC: ; 0x020182CC
	push {r3, r4}
	ldr r4, [r0, #0x60]
	str r4, [r1]
	ldr r1, [r0, #0x64]
	str r1, [r2]
	ldr r0, [r0, #0x68]
	str r0, [r3]
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end sub_020182CC

	thumb_func_start sub_020182E0
sub_020182E0: ; 0x020182E0
	lsl r2, r2, #1
	add r0, r0, r2
	add r0, #0x70
	strh r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_020182E0

	thumb_func_start sub_020182EC
sub_020182EC: ; 0x020182EC
	lsl r1, r1, #1
	add r0, r0, r1
	add r0, #0x70
	ldrh r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_020182EC

	thumb_func_start sub_020182F8
sub_020182F8: ; 0x020182F8
	push {r4, r5, r6, lr}
	add r5, r0, #0
	add r4, r1, #0
	str r2, [r5]
	add r0, r2, #0
	mov r1, #0
	add r6, r3, #0
	bl sub_020C3B90
	str r0, [r5, #4]
	ldr r1, [r5, #4]
	ldr r2, [r4, #8]
	add r0, r6, #0
	bl sub_020C2B7C
	str r0, [r5, #8]
	ldr r1, [r5, #4]
	ldr r2, [r4, #8]
	ldr r3, [r4, #0xc]
	bl sub_020BE008
	pop {r4, r5, r6, pc}
	thumb_func_end sub_020182F8

	thumb_func_start sub_02018324
sub_02018324: ; 0x02018324
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	bne _02018332
	bl GF_AssertFail
_02018332:
	ldr r0, [r4]
	bl sub_020C3B40
	str r0, [r4, #4]
	cmp r0, #0
	beq _0201835E
	add r2, r0, #0
	add r2, #8
	beq _02018352
	ldrb r1, [r0, #9]
	cmp r1, #0
	bls _02018352
	ldrh r1, [r0, #0xe]
	add r1, r2, r1
	add r1, r1, #4
	b _02018354
_02018352:
	mov r1, #0
_02018354:
	cmp r1, #0
	beq _0201835E
	ldr r1, [r1]
	add r0, r0, r1
	b _02018360
_0201835E:
	mov r0, #0
_02018360:
	str r0, [r4, #8]
	ldr r0, [r4]
	bl sub_020C3B50
	str r0, [r4, #0xc]
	cmp r0, #0
	beq _0201837A
	mov r2, #1
	ldr r0, _0201837C ; =sub_0201804C
	add r1, r4, #0
	lsl r2, r2, #0xa
	bl sub_0200E374
_0201837A:
	pop {r4, pc}
	.align 2, 0
_0201837C: .word sub_0201804C
	thumb_func_end sub_02018324

	thumb_func_start sub_02018380
sub_02018380: ; 0x02018380
	ldr r0, _02018388 ; =0x021D10E8
	mov r1, #0
	str r1, [r0]
	bx lr
	.align 2, 0
_02018388: .word 0x021D10E8
	thumb_func_end sub_02018380

	thumb_func_start sub_0201838C
sub_0201838C: ; 0x0201838C
	push {r3, lr}
	ldr r1, _020183AC ; =0x021D10E8
	mov r2, #1
	str r2, [r1]
	mov r2, #0
	str r2, [r1, #0x10]
	str r2, [r1, #0x14]
	str r2, [r1, #8]
	str r2, [r1, #0xc]
	str r0, [r1, #4]
	bl sub_020254FC
	ldr r2, _020183AC ; =0x021D10E8
	str r0, [r2, #0x18]
	str r1, [r2, #0x1c]
	pop {r3, pc}
	.align 2, 0
_020183AC: .word 0x021D10E8
	thumb_func_end sub_0201838C

	thumb_func_start sub_020183B0
sub_020183B0: ; 0x020183B0
	push {r3, r4, r5, lr}
	ldr r0, _020183EC ; =0x021D10E8
	ldr r0, [r0]
	cmp r0, #0
	beq _020183EA
	bl sub_020254FC
	ldr r2, _020183EC ; =0x021D10E8
	ldr r3, [r2, #0x18]
	ldr r2, [r2, #0x1c]
	sub r0, r0, r3
	sbc r1, r2
	bl sub_02025504
	add r5, r1, #0
	ldr r1, _020183EC ; =0x021D10E8
	add r4, r0, #0
	ldr r3, [r1, #8]
	ldr r2, [r1, #0xc]
	sub r0, r3, r4
	sbc r2, r5
	bhs _020183EA
	ldr r0, [r1, #4]
	sub r1, r4, r3
	bl sub_0202CDBC
	ldr r0, _020183EC ; =0x021D10E8
	str r4, [r0, #8]
	str r5, [r0, #0xc]
_020183EA:
	pop {r3, r4, r5, pc}
	.align 2, 0
_020183EC: .word 0x021D10E8
	thumb_func_end sub_020183B0

	thumb_func_start sub_020183F0
sub_020183F0: ; 0x020183F0
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4]
	mov r1, #1
	cmp r0, #0
	beq _02018402
	cmp r0, #1
	beq _02018402
	mov r1, #0
_02018402:
	cmp r1, #0
	bne _0201840A
	bl GF_AssertFail
_0201840A:
	ldr r0, [r4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020183F0

	thumb_func_start sub_02018410
sub_02018410: ; 0x02018410
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	beq _02018420
	cmp r4, #1
	beq _02018420
	bl GF_AssertFail
_02018420:
	str r4, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02018410

	thumb_func_start sub_02018424
sub_02018424: ; 0x02018424
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	add r6, r1, #0
	mov r1, #0x18
	add r5, r0, #0
	bl sub_0201AA8C
	add r4, r0, #0
	mov r1, #0
	mov r2, #0x18
	bl sub_020D4994
	str r5, [r4]
	mov r2, #0
	mov r0, #0xa5
	mov r1, #1
	add r3, r5, #0
	str r2, [sp]
	bl sub_02007A44
	add r1, r4, #4
	str r0, [r4, #0xc]
	bl sub_020B70F4
	mov r1, #0
	mov r0, #0xa5
	add r2, r1, #0
	add r3, r5, #0
	str r1, [sp]
	bl sub_02007A44
	add r1, r4, #0
	add r1, #8
	str r0, [r4, #0x10]
	bl sub_020B7140
	str r6, [r4, #0x14]
	add r0, r4, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end sub_02018424

	thumb_func_start sub_02018474
sub_02018474: ; 0x02018474
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x10]
	bl sub_0201AB0C
	ldr r0, [r4, #0xc]
	bl sub_0201AB0C
	add r0, r4, #0
	mov r1, #0
	mov r2, #0x18
	bl sub_020D4994
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02018474

	thumb_func_start sub_02018498
sub_02018498: ; 0x02018498
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	str r2, [sp]
	add r7, r1, #0
	ldr r0, [r5]
	mov r1, #0x38
	add r6, r3, #0
	bl sub_0201AA8C
	add r4, r0, #0
	mov r1, #0
	mov r2, #0x38
	bl sub_020D4994
	add r0, r7, #0
	add r1, r4, #4
	mov r2, #0x18
	bl sub_020D4A50
	str r5, [r4]
	add r0, sp, #8
	ldrb r1, [r0, #0x18]
	ldrb r0, [r4, #0x18]
	cmp r1, r0
	bhs _020184D0
	add r0, r4, #0
	add r0, #0x24
	strb r1, [r0]
_020184D0:
	add r0, r4, #0
	mov r1, #0
	add r0, #0x25
	strb r1, [r0]
	ldr r0, [r5]
	add r3, sp, #8
	str r0, [r4, #0x2c]
	add r0, r4, #0
	ldrb r1, [r3, #0x10]
	add r0, #0x29
	strb r1, [r0]
	add r0, r4, #0
	ldrb r1, [r3, #0x18]
	add r0, #0x24
	strb r1, [r0]
	add r0, r4, #0
	add r0, #0x27
	ldrb r0, [r0]
	mov r1, #0xfe
	bic r0, r1
	ldr r1, [sp]
	lsl r1, r1, #0x19
	lsr r1, r1, #0x18
	orr r1, r0
	add r0, r4, #0
	add r0, #0x27
	strb r1, [r0]
	ldr r0, [sp, #0x24]
	str r0, [r4, #0x30]
	ldr r0, [sp, #0x28]
	str r0, [r4, #0x34]
	add r0, r4, #0
	add r0, #0x27
	ldrb r2, [r0]
	mov r0, #1
	bic r2, r0
	ldr r0, [sp, #0x2c]
	lsl r0, r0, #0x18
	lsr r1, r0, #0x18
	mov r0, #1
	and r0, r1
	add r1, r2, #0
	orr r1, r0
	add r0, r4, #0
	add r0, #0x27
	strb r1, [r0]
	ldrb r1, [r3, #0x14]
	cmp r1, #0
	bne _02018546
	ldrb r1, [r4, #0x18]
	ldrb r3, [r4, #5]
	ldr r0, [r7, #0xc]
	mov r2, #4
	bl sub_0201881C
	add r1, r4, #0
	add r1, #0x26
	strb r0, [r1]
	b _0201854C
_02018546:
	add r0, r4, #0
	add r0, #0x26
	strb r1, [r0]
_0201854C:
	ldr r0, [sp, #0x30]
	cmp r0, #0
	beq _0201855E
	cmp r0, #1
	beq _02018566
	cmp r0, #2
	beq _0201859C
	bl GF_AssertFail
_0201855E:
	add r0, r4, #0
	add r0, #0x28
	strb r6, [r0]
	b _020185B8
_02018566:
	add r0, r4, #0
	add r0, #0x26
	ldrb r1, [r0]
	mov r0, #1
	add r1, r1, #1
	bic r1, r0
	add r0, r4, #0
	add r0, #0x26
	strb r1, [r0]
	add r0, r4, #0
	add r0, #0x26
	ldrb r0, [r0]
	add r1, r0, #2
	lsr r0, r1, #0x1f
	add r0, r1, r0
	asr r0, r0, #1
	sub r1, r6, r0
	bpl _02018594
	add r0, r4, #0
	mov r1, #0
	add r0, #0x28
	strb r1, [r0]
	b _020185B8
_02018594:
	add r0, r4, #0
	add r0, #0x28
	strb r1, [r0]
	b _020185B8
_0201859C:
	add r0, r4, #0
	add r0, #0x26
	ldrb r0, [r0]
	add r0, r0, #2
	sub r1, r6, r0
	bpl _020185B2
	add r0, r4, #0
	mov r1, #0
	add r0, #0x28
	strb r1, [r0]
	b _020185B8
_020185B2:
	add r0, r4, #0
	add r0, #0x28
	strb r1, [r0]
_020185B8:
	add r0, r4, #0
	bl sub_02018890
	ldr r2, [r4]
	ldr r3, [r4, #0x2c]
	ldr r2, [r2, #0x14]
	add r0, r5, #0
	add r1, r4, #4
	bl sub_02018744
	add r0, r4, #0
	bl sub_020189AC
	add r0, r4, #0
	bl sub_02018C90
	add r1, r4, #0
	add r1, #0x24
	ldrb r1, [r1]
	add r0, r4, #0
	bl sub_02018DF4
	ldr r1, _020185F8 ; =0x000005DC
	add r0, r4, #0
	bl sub_02018FE8
	add r0, r4, #0
	mov r1, #0
	bl sub_02018FFC
	add r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_020185F8: .word 0x000005DC
	thumb_func_end sub_02018498

	thumb_func_start sub_020185FC
sub_020185FC: ; 0x020185FC
	push {r4, r5, lr}
	sub sp, #0x1c
	add r4, sp, #0x18
	ldrb r5, [r4, #0x10]
	str r5, [sp]
	ldrb r5, [r4, #0x14]
	str r5, [sp, #4]
	ldrb r4, [r4, #0x18]
	str r4, [sp, #8]
	mov r4, #0
	str r4, [sp, #0xc]
	str r4, [sp, #0x10]
	str r4, [sp, #0x14]
	str r4, [sp, #0x18]
	bl sub_02018498
	add sp, #0x1c
	pop {r4, r5, pc}
	thumb_func_end sub_020185FC

	thumb_func_start sub_02018620
sub_02018620: ; 0x02018620
	push {r4, r5, lr}
	sub sp, #0x1c
	add r4, sp, #0x18
	ldrb r5, [r4, #0x10]
	str r5, [sp]
	ldrb r5, [r4, #0x14]
	str r5, [sp, #4]
	ldrb r4, [r4, #0x18]
	str r4, [sp, #8]
	mov r4, #0
	str r4, [sp, #0xc]
	str r4, [sp, #0x10]
	str r4, [sp, #0x14]
	ldr r4, [sp, #0x34]
	str r4, [sp, #0x18]
	bl sub_02018498
	add sp, #0x1c
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02018620

	thumb_func_start sub_02018648
sub_02018648: ; 0x02018648
	push {r4, r5, lr}
	sub sp, #0x1c
	add r4, sp, #0x18
	ldrb r5, [r4, #0x10]
	str r5, [sp]
	ldrb r5, [r4, #0x14]
	str r5, [sp, #4]
	ldrb r4, [r4, #0x18]
	str r4, [sp, #8]
	ldr r4, [sp, #0x34]
	str r4, [sp, #0xc]
	ldr r4, [sp, #0x38]
	str r4, [sp, #0x10]
	ldr r4, [sp, #0x3c]
	str r4, [sp, #0x14]
	mov r4, #0
	str r4, [sp, #0x18]
	bl sub_02018498
	add sp, #0x1c
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02018648

	thumb_func_start sub_02018674
sub_02018674: ; 0x02018674
	add r0, #0x27
	ldrb r0, [r0]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x19
	bx lr
	.align 2, 0
	thumb_func_end sub_02018674

	thumb_func_start sub_02018680
sub_02018680: ; 0x02018680
	push {r4, lr}
	add r4, r0, #0
	mov r1, #0
	mov r2, #0x38
	bl sub_020D4994
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	thumb_func_end sub_02018680

	thumb_func_start sub_02018694
sub_02018694: ; 0x02018694
	push {r4, lr}
	add r4, r0, #0
	bl sub_02018D90
	add r0, r4, #0
	bl sub_02018998
	pop {r4, pc}
	thumb_func_end sub_02018694

	thumb_func_start sub_020186A4
sub_020186A4: ; 0x020186A4
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r1, r5, #0
	add r1, #0x25
	ldrb r1, [r1]
	cmp r1, #1
	bne _02018716
	add r1, r5, #0
	add r1, #0x2b
	ldrb r4, [r1]
	cmp r4, #0
	bne _020186CE
	bl sub_02018694
	ldr r1, [r5, #0x10]
	add r5, #0x2a
	ldrb r0, [r5]
	lsl r0, r0, #3
	add r0, r1, r0
	ldr r0, [r0, #4]
	pop {r3, r4, r5, pc}
_020186CE:
	lsr r2, r4, #0x1f
	lsl r1, r4, #0x1f
	sub r1, r1, r2
	mov r3, #0x1f
	ror r1, r3
	add r1, r2, r1
	bne _02018704
	lsr r1, r4, #1
	lsr r2, r1, #0x1f
	lsl r1, r1, #0x1f
	sub r1, r1, r2
	ror r1, r3
	add r1, r2, r1
	bne _020186F8
	add r1, r5, #0
	add r1, #0x2a
	ldrb r1, [r1]
	mov r2, #1
	bl sub_02018D0C
	b _02018704
_020186F8:
	add r1, r5, #0
	add r1, #0x2a
	ldrb r1, [r1]
	mov r2, #0
	bl sub_02018D0C
_02018704:
	add r0, r5, #0
	add r0, #0x2b
	ldrb r0, [r0]
	add r5, #0x2b
	sub r0, r0, #1
	strb r0, [r5]
	mov r0, #0
	mvn r0, r0
	pop {r3, r4, r5, pc}
_02018716:
	add r1, sp, #0
	bl sub_02018E08
	add r4, r0, #0
	ldr r0, [sp]
	cmp r0, #0
	bne _0201872C
	add r0, r5, #0
	bl sub_02018E8C
	add r4, r0, #0
_0201872C:
	mov r0, #1
	mvn r0, r0
	cmp r4, r0
	bne _0201873E
	add r0, r5, #0
	bl sub_02018694
	add r0, r4, #0
	pop {r3, r4, r5, pc}
_0201873E:
	add r0, r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_020186A4

	thumb_func_start sub_02018744
sub_02018744: ; 0x02018744
	push {r3, r4, r5, r6, r7, lr}
	add r6, r0, #0
	add r5, r1, #0
	add r0, r3, #0
	mov r1, #0x10
	add r7, r2, #0
	bl sub_0201AACC
	mov r1, #0
	mov r2, #0x10
	add r4, r0, #0
	bl sub_020D4994
	ldr r0, [r6, #4]
	add r1, r4, #0
	str r0, [r4, #8]
	ldr r0, [r6, #8]
	mov r2, #0x80
	str r0, [r4, #0xc]
	ldr r0, [r5, #0x10]
	str r0, [r4]
	ldrb r0, [r5, #2]
	strb r0, [r4, #4]
	ldrh r0, [r5, #8]
	strh r0, [r4, #6]
	ldrb r0, [r5, #3]
	strb r0, [r4, #5]
	ldr r0, _020187BC ; =sub_020187C0
	bl sub_0200E374
	cmp r7, #0
	beq _020187B8
	ldrb r0, [r5, #2]
	cmp r0, #4
	bhs _020187A2
	mov r0, #0x20
	str r0, [sp]
	ldrb r3, [r5, #3]
	ldr r1, [r4, #0xc]
	add r0, r7, #0
	lsl r3, r3, #0x14
	ldr r1, [r1, #0xc]
	mov r2, #0
	lsr r3, r3, #0x10
	bl sub_0200316C
	pop {r3, r4, r5, r6, r7, pc}
_020187A2:
	mov r0, #0x20
	str r0, [sp]
	ldrb r3, [r5, #3]
	ldr r1, [r4, #0xc]
	add r0, r7, #0
	lsl r3, r3, #0x14
	ldr r1, [r1, #0xc]
	mov r2, #1
	lsr r3, r3, #0x10
	bl sub_0200316C
_020187B8:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020187BC: .word sub_020187C0
	thumb_func_end sub_02018744

	thumb_func_start sub_020187C0
sub_020187C0: ; 0x020187C0
	push {r3, r4, r5, lr}
	add r4, r1, #0
	ldr r1, [r4, #8]
	add r5, r0, #0
	ldr r0, [r1, #0x14]
	ldr r1, [r1, #0x10]
	bl DC_FlushRange
	ldrh r0, [r4, #6]
	ldr r3, [r4, #8]
	str r0, [sp]
	ldr r2, [r3, #0x14]
	ldrb r1, [r4, #4]
	ldr r0, [r4]
	ldr r3, [r3, #0x10]
	bl sub_0201C0C0
	ldr r0, [r4, #0xc]
	mov r1, #0x20
	ldr r0, [r0, #0xc]
	bl DC_FlushRange
	ldrb r0, [r4, #4]
	cmp r0, #4
	ldr r0, [r4, #0xc]
	bhs _02018802
	ldrb r1, [r4, #5]
	ldr r0, [r0, #0xc]
	mov r2, #0x20
	lsl r1, r1, #5
	bl sub_020CFC6C
	b _0201880E
_02018802:
	ldrb r1, [r4, #5]
	ldr r0, [r0, #0xc]
	mov r2, #0x20
	lsl r1, r1, #5
	bl sub_020CFCC0
_0201880E:
	add r0, r5, #0
	bl sub_0200E390
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r3, r4, r5, pc}
	thumb_func_end sub_020187C0

	thumb_func_start sub_0201881C
sub_0201881C: ; 0x0201881C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r2, [sp]
	mov r4, #0
	add r7, r1, #0
	add r5, r0, #0
	add r6, r4, #0
	str r3, [sp, #4]
	cmp r7, #0
	ble _02018864
_02018830:
	ldr r0, [r5]
	cmp r0, #0
	bne _0201883A
	bl GF_AssertFail
_0201883A:
	mov r0, #0
	ldr r1, [r5]
	mvn r0, r0
	cmp r1, r0
	bne _02018848
	bl GF_AssertFail
_02018848:
	ldr r0, [sp]
	ldr r1, [r5]
	mov r2, #0
	bl sub_02002F30
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	cmp r0, r4
	bls _0201885C
	add r4, r0, #0
_0201885C:
	add r6, r6, #1
	add r5, #8
	cmp r6, r7
	blt _02018830
_02018864:
	ldr r0, [sp, #4]
	lsl r0, r0, #1
	add r0, r4, r0
	lsl r0, r0, #0x18
	lsr r3, r0, #0x18
	lsr r2, r3, #0x1f
	lsl r1, r3, #0x1d
	sub r1, r1, r2
	mov r0, #0x1d
	ror r1, r0
	add r0, r2, r1
	bne _02018884
	lsl r0, r3, #0x15
	add sp, #8
	lsr r0, r0, #0x18
	pop {r3, r4, r5, r6, r7, pc}
_02018884:
	lsr r0, r3, #3
	add r0, r0, #1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0201881C

	thumb_func_start sub_02018890
sub_02018890: ; 0x02018890
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	add r5, r0, #0
	ldrb r1, [r5, #0x18]
	ldr r0, [r5, #0x2c]
	bl sub_0201D39C
	str r0, [r5, #0x1c]
	ldrb r1, [r5, #0x18]
	ldr r0, [r5, #0x2c]
	add r1, r1, #1
	lsl r1, r1, #2
	bl sub_0201AA8C
	str r0, [r5, #0x20]
	ldrb r2, [r5, #0x18]
	mov r1, #0
	add r2, r2, #1
	lsl r2, r2, #2
	bl sub_020D4994
	add r0, r5, #0
	add r0, #0x26
	ldrb r0, [r0]
	lsl r0, r0, #0x11
	lsr r0, r0, #0x10
	str r0, [sp, #0x14]
	mov r0, #0
	str r0, [sp, #0x20]
	ldrb r0, [r5, #0x18]
	cmp r0, #0
	ble _02018988
	ldr r0, [sp, #0x20]
	str r0, [sp, #0x1c]
	str r0, [sp, #0x18]
	add r6, r0, #0
	add r7, r0, #0
	add r4, r0, #0
_020188DC:
	add r0, r5, #0
	add r0, #0x29
	ldrb r0, [r0]
	add r3, r5, #0
	add r3, #0x28
	add r1, r0, #1
	ldr r0, [sp, #0x18]
	add r0, r1, r0
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	add r0, r5, #0
	add r0, #0x26
	ldrb r0, [r0]
	str r0, [sp, #4]
	mov r0, #2
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	str r0, [sp, #0xc]
	ldrh r1, [r5, #0xa]
	ldr r0, [sp, #0x1c]
	add r0, r1, r0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	str r0, [sp, #0x10]
	ldrb r3, [r3]
	ldr r1, [r5, #0x1c]
	ldrb r2, [r5, #6]
	add r3, r3, #1
	lsl r3, r3, #0x18
	ldr r0, [r5, #0x14]
	add r1, r1, r6
	lsr r3, r3, #0x18
	bl sub_0201D40C
	ldr r0, [r5, #0x1c]
	mov r1, #3
	add r0, r0, r6
	bl sub_0201D978
	add r0, r5, #0
	add r0, #0x29
	ldrb r0, [r0]
	add r2, r5, #0
	add r2, #0x26
	add r0, r0, #1
	lsl r0, r0, #3
	add r1, r0, r7
	ldr r0, [r5, #0x20]
	add r6, #0x10
	strb r1, [r0, r4]
	ldr r0, [r5, #0x20]
	add r7, #0x18
	add r1, r0, r4
	ldrb r0, [r0, r4]
	add r0, #0x10
	strb r0, [r1, #1]
	add r0, r5, #0
	add r0, #0x28
	ldrb r0, [r0]
	add r0, r0, #1
	lsl r1, r0, #3
	ldr r0, [r5, #0x20]
	add r0, r0, r4
	strb r1, [r0, #2]
	ldr r0, [r5, #0x20]
	ldrb r2, [r2]
	add r1, r0, r4
	ldrb r0, [r1, #2]
	lsl r2, r2, #3
	add r4, r4, #4
	add r0, r0, r2
	strb r0, [r1, #3]
	ldr r1, [sp, #0x1c]
	ldr r0, [sp, #0x14]
	add r0, r1, r0
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0x18]
	ldrb r1, [r5, #0x18]
	add r0, r0, #3
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x20]
	add r0, r0, #1
	str r0, [sp, #0x20]
	cmp r0, r1
	blt _020188DC
_02018988:
	ldr r0, [sp, #0x20]
	ldr r1, [r5, #0x20]
	mov r2, #0xff
	lsl r0, r0, #2
	strb r2, [r1, r0]
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02018890

	thumb_func_start sub_02018998
sub_02018998: ; 0x02018998
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x20]
	bl sub_0201AB0C
	ldrb r1, [r4, #0x18]
	ldr r0, [r4, #0x1c]
	bl sub_0201D54C
	pop {r4, pc}
	thumb_func_end sub_02018998

	thumb_func_start sub_020189AC
sub_020189AC: ; 0x020189AC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	add r5, r0, #0
	ldrb r0, [r5, #0x18]
	ldrh r4, [r5, #0xc]
	sub r0, r0, #1
	str r0, [sp, #0x10]
	add r0, r5, #0
	add r0, #0x24
	ldrb r0, [r0]
	cmp r0, #0
	bne _020189C6
	add r4, #0xc
_020189C6:
	add r0, r5, #0
	add r0, #0x29
	ldrb r0, [r0]
	add r3, r5, #0
	lsl r2, r4, #0x10
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	add r3, #0x28
	lsr r2, r2, #0x10
	str r0, [sp, #0xc]
	ldrb r1, [r5, #6]
	ldrb r3, [r3]
	ldr r0, [r5, #0x14]
	bl sub_0201C8C4
	add r0, r5, #0
	add r0, #0x29
	ldrb r0, [r0]
	add r3, r5, #0
	add r2, r4, #1
	str r0, [sp]
	add r0, r5, #0
	add r0, #0x26
	ldrb r0, [r0]
	add r3, #0x28
	lsl r2, r2, #0x10
	str r0, [sp, #4]
	mov r0, #1
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	lsr r2, r2, #0x10
	str r0, [sp, #0xc]
	ldrb r3, [r3]
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	add r3, r3, #1
	lsl r3, r3, #0x18
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	add r0, r5, #0
	add r0, #0x29
	ldrb r0, [r0]
	add r3, r5, #0
	add r2, r4, #2
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	lsl r2, r2, #0x10
	add r3, #0x28
	str r0, [sp, #0xc]
	ldrb r4, [r3]
	add r3, r5, #0
	add r3, #0x26
	ldrb r3, [r3]
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	add r3, r4, r3
	add r3, r3, #1
	lsl r3, r3, #0x18
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	add r0, r5, #0
	add r0, #0x24
	ldrh r4, [r5, #0xc]
	ldrb r1, [r0]
	ldr r0, [sp, #0x10]
	add r4, #9
	cmp r1, r0
	bne _02018A62
	add r4, #0xc
_02018A62:
	add r0, r5, #0
	add r0, #0x29
	ldrb r1, [r5, #0x18]
	ldrb r2, [r0]
	add r3, r5, #0
	lsl r0, r1, #1
	add r0, r1, r0
	add r0, r2, r0
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	lsl r2, r4, #0x10
	add r3, #0x28
	str r0, [sp, #0xc]
	ldrb r1, [r5, #6]
	ldrb r3, [r3]
	ldr r0, [r5, #0x14]
	lsr r2, r2, #0x10
	bl sub_0201C8C4
	add r0, r5, #0
	add r0, #0x29
	ldrb r1, [r5, #0x18]
	ldrb r2, [r0]
	add r3, r5, #0
	lsl r0, r1, #1
	add r0, r1, r0
	add r0, r2, r0
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	add r0, r5, #0
	add r0, #0x26
	ldrb r0, [r0]
	add r2, r4, #1
	lsl r2, r2, #0x10
	str r0, [sp, #4]
	mov r0, #1
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	add r3, #0x28
	lsr r2, r2, #0x10
	str r0, [sp, #0xc]
	ldrb r3, [r3]
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	add r3, r3, #1
	lsl r3, r3, #0x18
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	add r0, r5, #0
	add r0, #0x29
	add r3, r5, #0
	ldrb r1, [r5, #0x18]
	ldrb r2, [r0]
	add r3, #0x28
	lsl r0, r1, #1
	add r0, r1, r0
	add r0, r2, r0
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	add r2, r4, #2
	lsl r2, r2, #0x10
	str r0, [sp, #0xc]
	ldrb r4, [r3]
	add r3, r5, #0
	add r3, #0x26
	ldrb r3, [r3]
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	add r3, r4, r3
	add r3, r3, #1
	lsl r3, r3, #0x18
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldrb r1, [r5, #0x18]
	mov r6, #0
	sub r0, r1, #1
	cmp r0, #0
	ble _02018BFE
	ldr r0, [sp, #0x10]
	add r7, r6, #0
	sub r0, r0, #1
	str r0, [sp, #0x14]
_02018B22:
	ldrh r0, [r5, #0xc]
	add r4, r0, #6
	add r0, r5, #0
	add r0, #0x24
	ldrb r0, [r0]
	cmp r0, #0
	bne _02018B34
	cmp r6, #0
	beq _02018B38
_02018B34:
	cmp r0, r6
	bne _02018B3C
_02018B38:
	add r4, #0xc
	b _02018B50
_02018B3C:
	ldr r1, [sp, #0x10]
	cmp r0, r1
	bne _02018B48
	ldr r1, [sp, #0x14]
	cmp r6, r1
	beq _02018B4E
_02018B48:
	add r1, r6, #1
	cmp r0, r1
	bne _02018B50
_02018B4E:
	add r4, #0x12
_02018B50:
	add r0, r5, #0
	add r0, #0x29
	ldrb r0, [r0]
	add r1, r7, #3
	add r3, r5, #0
	add r0, r1, r0
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	add r3, #0x28
	lsl r2, r4, #0x10
	str r0, [sp, #0xc]
	ldrb r1, [r5, #6]
	ldrb r3, [r3]
	ldr r0, [r5, #0x14]
	lsr r2, r2, #0x10
	bl sub_0201C8C4
	add r0, r5, #0
	add r0, #0x29
	ldrb r0, [r0]
	add r1, r7, #3
	add r3, r5, #0
	add r0, r1, r0
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	add r0, r5, #0
	add r0, #0x26
	ldrb r0, [r0]
	add r3, #0x28
	add r2, r4, #1
	str r0, [sp, #4]
	mov r0, #1
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	lsl r2, r2, #0x10
	lsr r2, r2, #0x10
	str r0, [sp, #0xc]
	ldrb r3, [r3]
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	add r3, r3, #1
	lsl r3, r3, #0x18
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	add r0, r5, #0
	add r0, #0x29
	add r3, r5, #0
	add r2, r4, #2
	ldrb r0, [r0]
	add r1, r7, #3
	add r3, #0x28
	add r0, r1, r0
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	lsl r2, r2, #0x10
	lsr r2, r2, #0x10
	str r0, [sp, #0xc]
	ldrb r4, [r3]
	add r3, r5, #0
	add r3, #0x26
	ldrb r3, [r3]
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	add r3, r4, r3
	add r3, r3, #1
	lsl r3, r3, #0x18
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldrb r1, [r5, #0x18]
	add r6, r6, #1
	add r7, r7, #3
	sub r0, r1, #1
	cmp r6, r0
	blt _02018B22
_02018BFE:
	mov r7, #0
	cmp r1, #0
	ble _02018C8C
	add r6, r7, #0
_02018C06:
	ldrh r0, [r5, #0xc]
	add r4, r0, #3
	add r0, r5, #0
	add r0, #0x24
	ldrb r0, [r0]
	cmp r0, r7
	bne _02018C16
	add r4, #0xc
_02018C16:
	add r0, r5, #0
	add r0, #0x29
	ldrb r0, [r0]
	add r3, r5, #0
	lsl r2, r4, #0x10
	add r0, r0, r6
	add r0, r0, #1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	mov r0, #2
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	add r3, #0x28
	lsr r2, r2, #0x10
	str r0, [sp, #0xc]
	ldrb r1, [r5, #6]
	ldrb r3, [r3]
	ldr r0, [r5, #0x14]
	bl sub_0201C8C4
	add r0, r5, #0
	add r0, #0x29
	ldrb r0, [r0]
	add r3, r5, #0
	add r2, r4, #2
	add r0, r0, r6
	add r0, r0, #1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	mov r0, #2
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	lsl r2, r2, #0x10
	add r3, #0x28
	str r0, [sp, #0xc]
	ldrb r4, [r3]
	add r3, r5, #0
	add r3, #0x26
	ldrb r3, [r3]
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	add r3, r4, r3
	add r3, r3, #1
	lsl r3, r3, #0x18
	lsr r2, r2, #0x10
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldrb r0, [r5, #0x18]
	add r7, r7, #1
	add r6, r6, #3
	cmp r7, r0
	blt _02018C06
_02018C8C:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_020189AC

	thumb_func_start sub_02018C90
sub_02018C90: ; 0x02018C90
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	add r5, r0, #0
	add r0, #0x26
	ldrb r0, [r0]
	mov r7, #0
	lsl r0, r0, #3
	str r0, [sp, #0x10]
	ldrb r0, [r5, #0x18]
	cmp r0, #0
	ble _02018CFA
	add r6, r7, #0
	add r4, r7, #0
_02018CAA:
	ldrb r0, [r5, #4]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x19
	bne _02018CB6
	ldrb r3, [r5, #5]
	b _02018CC8
_02018CB6:
	ldr r1, [r5, #0x10]
	mov r0, #4
	ldr r1, [r1, r6]
	mov r2, #0
	bl sub_02002F30
	ldr r1, [sp, #0x10]
	sub r0, r1, r0
	lsr r3, r0, #1
_02018CC8:
	mov r0, #0
	str r0, [sp]
	mov r0, #0xff
	str r0, [sp, #4]
	ldr r0, _02018D08 ; =0x00010203
	mov r1, #4
	str r0, [sp, #8]
	mov r0, #0
	str r0, [sp, #0xc]
	ldr r2, [r5, #0x10]
	ldr r0, [r5, #0x1c]
	ldr r2, [r2, r6]
	add r0, r0, r4
	bl sub_020200FC
	ldr r0, [r5, #0x1c]
	add r0, r0, r4
	bl sub_0201D5C8
	ldrb r0, [r5, #0x18]
	add r7, r7, #1
	add r6, #8
	add r4, #0x10
	cmp r7, r0
	blt _02018CAA
_02018CFA:
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	bl sub_0201EFBC
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_02018D08: .word 0x00010203
	thumb_func_end sub_02018C90

	thumb_func_start sub_02018D0C
sub_02018D0C: ; 0x02018D0C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	add r5, r0, #0
	add r4, r1, #0
	cmp r2, #0
	beq _02018D20
	mov r0, #6
	ldr r7, _02018D88 ; =0x00040506
	str r0, [sp, #0x14]
	b _02018D26
_02018D20:
	mov r0, #3
	ldr r7, _02018D8C ; =0x00010203
	str r0, [sp, #0x14]
_02018D26:
	add r0, r5, #0
	add r0, #0x26
	ldrb r0, [r0]
	lsl r6, r0, #3
	ldrb r0, [r5, #4]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x19
	bne _02018D3C
	ldrb r0, [r5, #5]
	str r0, [sp, #0x10]
	b _02018D50
_02018D3C:
	ldr r2, [r5, #0x10]
	lsl r1, r4, #3
	ldr r1, [r2, r1]
	mov r0, #4
	mov r2, #0
	bl sub_02002F30
	sub r0, r6, r0
	lsr r0, r0, #1
	str r0, [sp, #0x10]
_02018D50:
	ldr r0, [r5, #0x1c]
	lsl r6, r4, #4
	ldr r1, [sp, #0x14]
	add r0, r0, r6
	bl sub_0201D978
	mov r1, #0
	str r1, [sp]
	mov r0, #0xff
	str r0, [sp, #4]
	str r7, [sp, #8]
	str r1, [sp, #0xc]
	ldr r0, [r5, #0x1c]
	ldr r3, [r5, #0x10]
	lsl r2, r4, #3
	ldr r2, [r3, r2]
	ldr r3, [sp, #0x10]
	add r0, r0, r6
	mov r1, #4
	bl sub_020200FC
	ldr r0, [r5, #0x1c]
	add r0, r0, r6
	bl sub_0201D5C8
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02018D88: .word 0x00040506
_02018D8C: .word 0x00010203
	thumb_func_end sub_02018D0C

	thumb_func_start sub_02018D90
sub_02018D90: ; 0x02018D90
	push {r4, r5, r6, lr}
	sub sp, #0x10
	add r5, r0, #0
	ldrb r0, [r5, #0x18]
	mov r6, #0
	cmp r0, #0
	ble _02018DB2
	add r4, r6, #0
_02018DA0:
	ldr r0, [r5, #0x1c]
	add r0, r0, r4
	bl sub_0201D8E4
	ldrb r0, [r5, #0x18]
	add r6, r6, #1
	add r4, #0x10
	cmp r6, r0
	blt _02018DA0
_02018DB2:
	add r1, r5, #0
	add r1, #0x29
	ldrb r1, [r1]
	add r3, r5, #0
	add r3, #0x28
	str r1, [sp]
	add r1, r5, #0
	add r1, #0x26
	ldrb r1, [r1]
	mov r2, #0
	add r1, r1, #2
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	str r1, [sp, #4]
	lsl r1, r0, #1
	add r0, r0, r1
	add r0, r0, #1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	str r0, [sp, #0xc]
	ldrb r1, [r5, #6]
	ldrb r3, [r3]
	ldr r0, [r5, #0x14]
	bl sub_0201C8C4
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	bl sub_0201EFBC
	add sp, #0x10
	pop {r4, r5, r6, pc}
	thumb_func_end sub_02018D90

	thumb_func_start sub_02018DF4
sub_02018DF4: ; 0x02018DF4
	push {r4, lr}
	add r4, r0, #0
	bl sub_020189AC
	ldrb r1, [r4, #6]
	ldr r0, [r4, #0x14]
	bl sub_0201EFBC
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02018DF4

	thumb_func_start sub_02018E08
sub_02018E08: ; 0x02018E08
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #0x20]
	add r4, r1, #0
	bl sub_02025224
	add r6, r0, #0
	mov r0, #0
	mvn r0, r0
	cmp r6, r0
	bne _02018E24
	mov r1, #0
	str r1, [r4]
	pop {r4, r5, r6, pc}
_02018E24:
	lsl r0, r6, #0x18
	mov r2, #1
	lsr r1, r0, #0x18
	add r0, r5, #0
	str r2, [r4]
	add r0, #0x24
	strb r1, [r0]
	add r0, r5, #0
	bl sub_02018D0C
	add r0, r5, #0
	bl sub_020189AC
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	bl sub_0201EFBC
	add r0, r5, #0
	mov r1, #1
	add r0, #0x25
	strb r1, [r0]
	add r0, r5, #0
	mov r1, #8
	add r0, #0x2b
	strb r1, [r0]
	add r0, r5, #0
	add r0, #0x2a
	strb r6, [r0]
	add r0, r5, #0
	add r0, #0x27
	ldrb r1, [r0]
	mov r0, #0xfe
	bic r1, r0
	mov r0, #2
	orr r1, r0
	add r0, r5, #0
	add r0, #0x27
	strb r1, [r0]
	ldr r1, _02018E88 ; =0x000005DC
	add r0, r5, #0
	bl sub_02018FE8
	add r0, r5, #0
	mov r1, #2
	bl sub_02018FFC
	mov r0, #0
	mvn r0, r0
	pop {r4, r5, r6, pc}
	nop
_02018E88: .word 0x000005DC
	thumb_func_end sub_02018E08

	thumb_func_start sub_02018E8C
sub_02018E8C: ; 0x02018E8C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, _02018FDC ; =0x021D110C
	ldr r1, [r0, #0x48]
	ldr r0, _02018FE0 ; =0x00000CF3
	tst r0, r1
	beq _02018EAA
	add r0, r5, #0
	add r0, #0x27
	ldrb r1, [r0]
	mov r0, #0xfe
	bic r1, r0
	add r0, r5, #0
	add r0, #0x27
	strb r1, [r0]
_02018EAA:
	ldr r0, _02018FDC ; =0x021D110C
	mov r1, #2
	ldr r0, [r0, #0x48]
	tst r1, r0
	beq _02018ECA
	ldr r1, _02018FE4 ; =0x000005DC
	add r0, r5, #0
	bl sub_02018FE8
	add r0, r5, #0
	mov r1, #3
	bl sub_02018FFC
	mov r0, #1
	mvn r0, r0
	pop {r3, r4, r5, pc}
_02018ECA:
	mov r2, #1
	add r1, r0, #0
	tst r1, r2
	beq _02018F10
	add r1, r5, #0
	add r1, #0x24
	ldrb r1, [r1]
	add r0, r5, #0
	bl sub_02018D0C
	add r0, r5, #0
	mov r1, #1
	add r0, #0x25
	strb r1, [r0]
	add r0, r5, #0
	mov r1, #8
	add r0, #0x2b
	strb r1, [r0]
	add r0, r5, #0
	add r0, #0x24
	ldrb r1, [r0]
	add r0, r5, #0
	add r0, #0x2a
	strb r1, [r0]
	ldr r1, _02018FE4 ; =0x000005DC
	add r0, r5, #0
	bl sub_02018FE8
	add r0, r5, #0
	mov r1, #2
	bl sub_02018FFC
	mov r0, #0
	mvn r0, r0
	pop {r3, r4, r5, pc}
_02018F10:
	add r1, r5, #0
	add r1, #0x24
	ldrb r4, [r1]
	mov r1, #0x40
	tst r0, r1
	beq _02018F6E
	ldrb r0, [r5, #4]
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x1f
	beq _02018F36
	ldrb r1, [r5, #0x18]
	sub r0, r1, #1
	add r0, r4, r0
	bl sub_020F2998
	add r0, r5, #0
	add r0, #0x24
	strb r1, [r0]
	b _02018F48
_02018F36:
	cmp r4, #0
	beq _02018F48
	add r0, r5, #0
	add r0, #0x24
	ldrb r0, [r0]
	sub r1, r0, #1
	add r0, r5, #0
	add r0, #0x24
	strb r1, [r0]
_02018F48:
	add r0, r5, #0
	add r0, #0x24
	ldrb r0, [r0]
	cmp r4, r0
	beq _02018F6E
	ldr r1, _02018FE4 ; =0x000005DC
	add r0, r5, #0
	bl sub_02018FE8
	add r0, r5, #0
	mov r1, #1
	bl sub_02018FFC
	add r1, r5, #0
	add r1, #0x24
	ldrb r1, [r1]
	add r0, r5, #0
	bl sub_02018DF4
_02018F6E:
	ldr r0, _02018FDC ; =0x021D110C
	ldr r1, [r0, #0x48]
	mov r0, #0x80
	tst r0, r1
	beq _02018FD6
	ldrb r0, [r5, #4]
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x1f
	beq _02018F96
	add r0, r5, #0
	add r0, #0x24
	ldrb r0, [r0]
	ldrb r1, [r5, #0x18]
	add r0, r0, #1
	bl sub_020F2998
	add r0, r5, #0
	add r0, #0x24
	strb r1, [r0]
	b _02018FB2
_02018F96:
	add r0, r5, #0
	add r0, #0x24
	ldrb r1, [r0]
	ldrb r0, [r5, #0x18]
	sub r0, r0, #1
	cmp r1, r0
	bge _02018FB2
	add r0, r5, #0
	add r0, #0x24
	ldrb r0, [r0]
	add r1, r0, #1
	add r0, r5, #0
	add r0, #0x24
	strb r1, [r0]
_02018FB2:
	add r0, r5, #0
	add r0, #0x24
	ldrb r0, [r0]
	cmp r4, r0
	beq _02018FD6
	ldr r1, _02018FE4 ; =0x000005DC
	add r0, r5, #0
	bl sub_02018FE8
	add r0, r5, #0
	mov r1, #1
	bl sub_02018FFC
	add r0, r5, #0
	add r5, #0x24
	ldrb r1, [r5]
	bl sub_02018DF4
_02018FD6:
	mov r0, #0
	mvn r0, r0
	pop {r3, r4, r5, pc}
	.align 2, 0
_02018FDC: .word 0x021D110C
_02018FE0: .word 0x00000CF3
_02018FE4: .word 0x000005DC
	thumb_func_end sub_02018E8C

	thumb_func_start sub_02018FE8
sub_02018FE8: ; 0x02018FE8
	push {r3, lr}
	add r0, #0x27
	ldrb r0, [r0]
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x1f
	bne _02018FFA
	add r0, r1, #0
	bl sub_0200604C
_02018FFA:
	pop {r3, pc}
	thumb_func_end sub_02018FE8

	thumb_func_start sub_02018FFC
sub_02018FFC: ; 0x02018FFC
	push {r4, lr}
	ldr r4, [r0, #0x30]
	add r3, r1, #0
	cmp r4, #0
	beq _02019010
	add r1, r0, #0
	add r1, #0x24
	ldrb r1, [r1]
	ldr r2, [r0, #0x34]
	blx r4
_02019010:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02018FFC

	thumb_func_start sub_02019014
sub_02019014: ; 0x02019014
	push {r3, r4, r5, lr}
	add r5, r1, #0
	mov r1, #0x34
	bl sub_0201AA8C
	mov r1, #0
	mov r2, #0x34
	add r4, r0, #0
	bl sub_020D4994
	str r5, [r4]
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02019014

	thumb_func_start sub_02019030
sub_02019030: ; 0x02019030
	push {r4, lr}
	add r4, r0, #0
	bl sub_0201915C
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	thumb_func_end sub_02019030

	thumb_func_start sub_02019040
sub_02019040: ; 0x02019040
	push {r4, r5, r6, lr}
	sub sp, #0x28
	add r5, r0, #0
	ldrb r0, [r5, #7]
	add r3, r1, #0
	add r4, r2, #0
	cmp r0, #0
	bne _020190DE
	cmp r4, #0
	beq _020190DE
	mov r0, #1
	strb r0, [r5, #7]
	add r2, r5, #0
	ldmia r3!, {r0, r1}
	add r2, #0x1c
	stmia r2!, {r0, r1}
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	ldr r1, [r5]
	add r0, sp, #0
	bl sub_02023618
	add r0, sp, #0
	ldrh r1, [r0]
	strh r1, [r0, #8]
	ldrh r1, [r0, #2]
	strh r1, [r0, #0xa]
	ldrh r1, [r0, #4]
	strh r1, [r0, #0xc]
	ldrh r1, [r0, #6]
	strh r1, [r0, #0xe]
	ldr r1, [r5]
	add r0, sp, #0x10
	bl sub_02023630
	add r3, sp, #0x10
	ldmia r3!, {r0, r1}
	add r2, sp, #0x1c
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	ldr r0, [r5]
	bl sub_02023658
	add r6, r0, #0
	add r0, sp, #0
	ldrh r0, [r0, #8]
	strh r0, [r5, #8]
	ldr r0, [r5]
	bl sub_0202360C
	strh r0, [r5, #0xa]
	cmp r6, #0
	beq _020190BE
	add r2, r5, #0
	add r0, sp, #0x1c
	add r1, r6, #0
	add r2, #0xc
	bl sub_020CCDAC
	b _020190C6
_020190BE:
	mov r0, #0
	str r0, [r5, #0xc]
	str r0, [r5, #0x10]
	str r0, [r5, #0x14]
_020190C6:
	ldr r0, [r5]
	bl sub_02023614
	str r0, [r5, #0x18]
	ldr r0, _020190E4 ; =sub_020190FC
	strb r4, [r5, #4]
	mov r2, #0
	add r1, r5, #0
	strb r2, [r5, #5]
	bl sub_0200E320
	str r0, [r5, #0x30]
_020190DE:
	add sp, #0x28
	pop {r4, r5, r6, pc}
	nop
_020190E4: .word sub_020190FC
	thumb_func_end sub_02019040

	thumb_func_start sub_020190E8
sub_020190E8: ; 0x020190E8
	ldrb r0, [r0, #7]
	cmp r0, #0
	bne _020190F2
	mov r0, #1
	b _020190F4
_020190F2:
	mov r0, #0
_020190F4:
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
	.align 2, 0
	thumb_func_end sub_020190E8

	thumb_func_start sub_020190FC
sub_020190FC: ; 0x020190FC
	push {r3, r4, r5, lr}
	add r4, r1, #0
	ldrb r0, [r4, #6]
	cmp r0, #0
	bne _0201912E
	ldrb r0, [r4, #5]
	add r2, r4, #0
	add r1, #8
	add r0, r0, #1
	strb r0, [r4, #5]
	ldrb r0, [r4, #4]
	add r2, #0x1c
	str r0, [sp]
	ldrb r3, [r4, #5]
	ldr r0, [r4]
	bl sub_0201917C
	ldrb r1, [r4, #5]
	ldrb r0, [r4, #4]
	cmp r1, r0
	blo _02019158
	add r0, r4, #0
	bl sub_0201915C
	pop {r3, r4, r5, pc}
_0201912E:
	ldrb r5, [r4, #4]
	add r2, r4, #0
	add r1, #0x1c
	str r5, [sp]
	ldrb r3, [r4, #5]
	ldr r0, [r4]
	add r2, #8
	sub r3, r5, r3
	lsl r3, r3, #0x18
	lsr r3, r3, #0x18
	bl sub_0201917C
	ldrb r0, [r4, #5]
	sub r0, r0, #1
	strb r0, [r4, #5]
	ldrb r0, [r4, #5]
	cmp r0, #0
	bne _02019158
	add r0, r4, #0
	bl sub_0201915C
_02019158:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_020190FC

	thumb_func_start sub_0201915C
sub_0201915C: ; 0x0201915C
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x30]
	cmp r0, #0
	beq _0201916E
	bl sub_0200E390
	mov r0, #0
	str r0, [r4, #0x30]
_0201916E:
	mov r0, #0
	strb r0, [r4, #4]
	strb r0, [r4, #5]
	strb r0, [r4, #6]
	strb r0, [r4, #7]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0201915C

	thumb_func_start sub_0201917C
sub_0201917C: ; 0x0201917C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r3, [sp, #4]
	ldr r4, [sp, #0x20]
	add r5, r1, #0
	add r6, r2, #0
	str r4, [sp]
	add r1, #0x10
	add r2, #0x10
	add r7, r0, #0
	bl sub_02019218
	str r4, [sp]
	ldr r3, [sp, #4]
	add r0, r7, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020191C4
	str r4, [sp]
	ldr r3, [sp, #4]
	add r0, r7, #0
	add r1, r5, #2
	add r2, r6, #2
	bl sub_02019238
	str r4, [sp]
	ldr r3, [sp, #4]
	add r0, r7, #0
	add r1, r5, #4
	add r2, r6, #4
	bl sub_0201925C
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0201917C

	thumb_func_start sub_020191C4
sub_020191C4: ; 0x020191C4
	push {r3, r4, r5, lr}
	sub sp, #8
	add r5, r0, #0
	add r4, sp, #0
	mov r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	ldrh r4, [r1]
	ldrh r0, [r2]
	cmp r0, r4
	blo _020191F2
	sub r0, r0, r4
	lsl r0, r0, #0x10
	lsr r1, r0, #0x10
	add r0, r1, #0
	add r1, sp, #8
	ldrb r1, [r1, #0x10]
	mul r0, r3
	bl sub_020F2998
	b _02019206
_020191F2:
	sub r0, r4, r0
	lsl r0, r0, #0x10
	lsr r1, r0, #0x10
	add r0, r1, #0
	add r1, sp, #8
	ldrb r1, [r1, #0x10]
	mul r0, r3
	bl sub_020F2998
	neg r0, r0
_02019206:
	add r1, r4, r0
	add r0, sp, #0
	strh r1, [r0]
	add r0, sp, #0
	add r1, r5, #0
	bl sub_02023558
	add sp, #8
	pop {r3, r4, r5, pc}
	thumb_func_end sub_020191C4

	thumb_func_start sub_02019218
sub_02019218: ; 0x02019218
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r4, [r1]
	ldr r0, [r2]
	sub r1, r0, r4
	add r0, r1, #0
	add r1, sp, #0
	ldrb r1, [r1, #0x10]
	mul r0, r3
	bl sub_020F2998
	add r0, r4, r0
	add r1, r5, #0
	bl sub_020235D4
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02019218

	thumb_func_start sub_02019238
sub_02019238: ; 0x02019238
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldrh r4, [r1]
	ldrh r0, [r2]
	sub r1, r0, r4
	add r0, r1, #0
	add r1, sp, #0
	ldrb r1, [r1, #0x10]
	mul r0, r3
	bl sub_020F2998
	add r0, r4, r0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	add r1, r5, #0
	bl sub_02023494
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02019238

	thumb_func_start sub_0201925C
sub_0201925C: ; 0x0201925C
	push {r3, r4, r5, lr}
	sub sp, #0x18
	add r5, r0, #0
	add r0, r2, #0
	add r2, sp, #0
	add r4, r3, #0
	bl sub_020CCDAC
	add r2, sp, #0x18
	ldrb r2, [r2, #0x10]
	ldr r0, [sp]
	add r1, r4, #0
	bl sub_020192A4
	str r0, [sp, #0xc]
	add r2, sp, #0x18
	ldrb r2, [r2, #0x10]
	ldr r0, [sp, #4]
	add r1, r4, #0
	bl sub_020192A4
	str r0, [sp, #0x10]
	add r2, sp, #0x18
	ldrb r2, [r2, #0x10]
	ldr r0, [sp, #8]
	add r1, r4, #0
	bl sub_020192A4
	str r0, [sp, #0x14]
	add r0, sp, #0xc
	add r1, r5, #0
	bl sub_02023514
	add sp, #0x18
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0201925C

	thumb_func_start sub_020192A4
sub_020192A4: ; 0x020192A4
	push {r3, r4, r5, r6, r7, lr}
	add r4, r1, #0
	add r5, r0, #0
	add r6, r2, #0
	cmp r4, #0
	bne _020192B4
	bl GF_AssertFail
_020192B4:
	add r0, r5, #0
	mul r0, r4
	add r1, r6, #0
	bl sub_020F2998
	add r7, r0, #0
	sub r0, r4, #1
	mul r0, r5
	add r1, r6, #0
	bl sub_020F2998
	sub r0, r7, r0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_020192A4

	thumb_func_start sub_020192D0
sub_020192D0: ; 0x020192D0
	push {r3, r4, r5, lr}
	add r4, r0, #0
	mov r0, #0
	add r1, r0, #0
	bl sub_0201A0FC
	bl sub_0201A108
	bl sub_02022C54
	bl sub_02022CBC
	mov r1, #1
	lsl r1, r1, #0x1a
	ldr r0, [r1]
	ldr r2, _0201934C ; =0xFFFFE0FF
	and r0, r2
	str r0, [r1]
	ldr r0, _02019350 ; =0x04001000
	ldr r3, [r0]
	and r2, r3
	str r2, [r0]
	ldr r3, [r1]
	ldr r2, _02019354 ; =0xFFFF1FFF
	and r3, r2
	str r3, [r1]
	ldr r3, [r0]
	add r1, #0x50
	and r2, r3
	str r2, [r0]
	mov r2, #0
	strh r2, [r1]
	add r0, #0x50
	strh r2, [r0]
	mov r2, #0xa
	mov r0, #3
	mov r1, #0x7b
	lsl r2, r2, #0xe
	bl sub_0201A910
	add r0, r4, #0
	mov r1, #0x80
	mov r2, #0x7b
	bl sub_02007280
	mov r1, #0
	mov r2, #0x80
	add r5, r0, #0
	bl sub_020D4994
	add r0, r4, #0
	bl sub_020072A4
	str r0, [r5]
	ldr r1, _02019358 ; =0x0000047D
	mov r0, #0xb
	mov r2, #1
	bl sub_02004EC4
	mov r0, #1
	pop {r3, r4, r5, pc}
	nop
_0201934C: .word 0xFFFFE0FF
_02019350: .word 0x04001000
_02019354: .word 0xFFFF1FFF
_02019358: .word 0x0000047D
	thumb_func_end sub_020192D0

	thumb_func_start sub_0201935C
sub_0201935C: ; 0x0201935C
	push {r3, r4, r5, lr}
	add r5, r1, #0
	bl sub_02007290
	ldr r1, [r5]
	add r4, r0, #0
	cmp r1, #8
	bhi _0201945A
	add r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add pc, r1
_02019378: ; jump table
	.short _0201938A - _02019378 - 2 ; case 0
	.short _02019394 - _02019378 - 2 ; case 1
	.short _020193B6 - _02019378 - 2 ; case 2
	.short _020193CA - _02019378 - 2 ; case 3
	.short _020193F2 - _02019378 - 2 ; case 4
	.short _0201940E - _02019378 - 2 ; case 5
	.short _02019426 - _02019378 - 2 ; case 6
	.short _0201943A - _02019378 - 2 ; case 7
	.short _02019456 - _02019378 - 2 ; case 8
_0201938A:
	bl sub_020194B4
	mov r0, #1
	str r0, [r5]
	b _0201945A
_02019394:
	bl sub_02034DB8
	cmp r0, #0
	beq _0201945A
	ldr r1, [r4, #0x10]
	ldr r0, _02019480 ; =0x021D1108
	str r1, [r0]
	ldr r0, _02019484 ; =sub_02019520
	ldr r1, _02019488 ; =sub_02019548
	bl ov00_021EC294
	mov r0, #1
	str r0, [r4, #0x78]
	ldr r0, [r5]
	add r0, r0, #1
	str r0, [r5]
	b _0201945A
_020193B6:
	ldr r0, _0201948C ; =0x020F6288
	add r1, r4, #0
	mov r2, #0x7b
	bl OverlayManager_new
	str r0, [r4, #8]
	ldr r0, [r5]
	add r0, r0, #1
	str r0, [r5]
	b _0201945A
_020193CA:
	ldr r0, [r4, #8]
	bl OverlayManager_run
	cmp r0, #1
	bne _0201945A
	ldr r0, [r4, #8]
	bl OverlayManager_delete
	ldr r0, [r4, #0x7c]
	cmp r0, #1
	bne _020193EC
	mov r0, #1
	str r0, [r4, #4]
	ldr r0, [r5]
	add r0, r0, #1
	str r0, [r5]
	b _0201945A
_020193EC:
	mov r0, #8
	str r0, [r5]
	b _0201945A
_020193F2:
	ldr r0, [r4]
	ldrb r0, [r0, #0xc]
	bl sub_02087E10
	ldr r1, [r4]
	mov r2, #0x7b
	ldr r1, [r1]
	bl OverlayManager_new
	str r0, [r4, #8]
	ldr r0, [r5]
	add r0, r0, #1
	str r0, [r5]
	b _0201945A
_0201940E:
	ldr r0, [r4, #8]
	bl OverlayManager_run
	cmp r0, #1
	bne _0201945A
	ldr r0, [r4, #8]
	bl OverlayManager_delete
	ldr r0, [r5]
	add r0, r0, #1
	str r0, [r5]
	b _0201945A
_02019426:
	ldr r0, _0201948C ; =0x020F6288
	add r1, r4, #0
	mov r2, #0x7b
	bl OverlayManager_new
	str r0, [r4, #8]
	ldr r0, [r5]
	add r0, r0, #1
	str r0, [r5]
	b _0201945A
_0201943A:
	ldr r0, [r4, #8]
	bl OverlayManager_run
	cmp r0, #1
	bne _0201945A
	ldr r0, [r4, #8]
	bl OverlayManager_delete
	mov r0, #0
	str r0, [r4, #4]
	ldr r0, [r5]
	add r0, r0, #1
	str r0, [r5]
	b _0201945A
_02019456:
	mov r0, #1
	pop {r3, r4, r5, pc}
_0201945A:
	ldr r0, [r4, #0x78]
	cmp r0, #1
	bne _0201947C
	ldr r0, [r4, #4]
	cmp r0, #1
	bne _0201947C
	ldr r0, [r4, #0x7c]
	cmp r0, #1
	bne _0201947C
	bl ov00_021ECB40
	bl ov00_021EC9D4
	mov r1, #3
	sub r0, r1, r0
	bl sub_0203A930
_0201947C:
	mov r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_02019480: .word 0x021D1108
_02019484: .word sub_02019520
_02019488: .word sub_02019548
_0201948C: .word 0x020F6288
	thumb_func_end sub_0201935C

	thumb_func_start sub_02019490
sub_02019490: ; 0x02019490
	push {r3, r4, r5, lr}
	add r5, r0, #0
	bl sub_02007290
	add r4, r0, #0
	bl sub_020194F8
	ldr r0, [r4]
	bl sub_0201AB0C
	add r0, r5, #0
	bl sub_02007294
	mov r0, #0x7b
	bl sub_0201A9C4
	mov r0, #1
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02019490

	thumb_func_start sub_020194B4
sub_020194B4: ; 0x020194B4
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x78]
	cmp r0, #0
	bne _020194F2
	bl LoadDwcOverlay
	bl sub_02091614
	mov r0, #0x7b
	bl sub_02039FD8
	ldr r1, _020194F4 ; =0x00020020
	mov r0, #0x7b
	bl sub_0201AA8C
	str r0, [r4, #0xc]
	add r0, #0x1f
	mov r1, #0x1f
	bic r0, r1
	mov r1, #2
	lsl r1, r1, #0x10
	mov r2, #0
	bl sub_020B535C
	str r0, [r4, #0x10]
	bl sub_02034D8C
	mov r0, #4
	bl sub_0201A4CC
_020194F2:
	pop {r4, pc}
	.align 2, 0
_020194F4: .word 0x00020020
	thumb_func_end sub_020194B4

	thumb_func_start sub_020194F8
sub_020194F8: ; 0x020194F8
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x78]
	cmp r0, #1
	bne _0201951E
	ldr r0, [r4, #0x10]
	bl sub_020B5394
	ldr r0, [r4, #0xc]
	bl sub_0201AB0C
	bl sub_02091624
	bl UnloadDwcOverlay
	bl sub_02034DE0
	mov r0, #0
	str r0, [r4, #0x78]
_0201951E:
	pop {r4, pc}
	thumb_func_end sub_020194F8

	thumb_func_start sub_02019520
sub_02019520: ; 0x02019520
	push {r4, r5, r6, lr}
	add r5, r1, #0
	add r4, r2, #0
	bl sub_020D3A38
	add r6, r0, #0
	ldr r0, _02019544 ; =0x021D1108
	add r1, r5, #0
	ldr r0, [r0]
	add r2, r4, #0
	bl sub_020B53A0
	add r4, r0, #0
	add r0, r6, #0
	bl sub_020D3A4C
	add r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_02019544: .word 0x021D1108
	thumb_func_end sub_02019520

	thumb_func_start sub_02019548
sub_02019548: ; 0x02019548
	push {r3, r4, r5, lr}
	add r5, r1, #0
	beq _02019564
	bl sub_020D3A38
	add r4, r0, #0
	ldr r0, _02019568 ; =0x021D1108
	add r1, r5, #0
	ldr r0, [r0]
	bl sub_020B5530
	add r0, r4, #0
	bl sub_020D3A4C
_02019564:
	pop {r3, r4, r5, pc}
	nop
_02019568: .word 0x021D1108
	thumb_func_end sub_02019548

	thumb_func_start sub_0201956C
sub_0201956C: ; 0x0201956C
	push {r3, r4, r5, r6, r7, lr}
	add r6, r0, #0
	add r7, r1, #0
	add r0, r3, #0
	mov r1, #0x10
	add r5, r2, #0
	str r3, [sp]
	bl sub_0201AA8C
	add r4, r0, #0
	str r6, [r4]
	strh r5, [r4, #8]
	ldr r0, [sp]
	lsl r2, r7, #0x10
	str r0, [r4, #0xc]
	ldrh r0, [r4, #0xa]
	ldr r1, _020195BC ; =0xFFFF8000
	lsr r3, r2, #0x10
	lsr r2, r1, #0x11
	and r0, r1
	and r2, r3
	orr r0, r2
	strh r0, [r4, #0xa]
	ldrh r2, [r4, #0xa]
	sub r0, r1, #1
	lsl r5, r5, #4
	and r0, r2
	strh r0, [r4, #0xa]
	ldr r0, [sp]
	add r1, r5, #0
	bl sub_0201AA8C
	mov r1, #0
	add r2, r5, #0
	str r0, [r4, #4]
	bl sub_020D4994
	add r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020195BC: .word 0xFFFF8000
	thumb_func_end sub_0201956C

	thumb_func_start sub_020195C0
sub_020195C0: ; 0x020195C0
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldrh r0, [r5, #8]
	mov r6, #0
	cmp r0, #0
	bls _020195E4
	add r4, r6, #0
_020195CE:
	ldr r0, [r5, #4]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _020195DA
	bl sub_0201AB0C
_020195DA:
	ldrh r0, [r5, #8]
	add r6, r6, #1
	add r4, #0x10
	cmp r6, r0
	blo _020195CE
_020195E4:
	ldr r0, [r5, #4]
	bl sub_0201AB0C
	add r0, r5, #0
	bl sub_0201AB0C
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_020195C0

	thumb_func_start sub_020195F4
sub_020195F4: ; 0x020195F4
	push {r3, r4, r5, r6, r7, lr}
	lsl r7, r1, #4
	ldr r4, [r0, #4]
	ldr r1, [sp, #0x18]
	add r6, r3, #0
	mul r1, r6
	ldr r0, [r0, #0xc]
	add r5, r4, r7
	lsl r1, r1, #1
	str r2, [sp]
	bl sub_0201AA8C
	str r0, [r4, r7]
	ldrh r0, [r5, #4]
	mov r1, #0x3f
	bic r0, r1
	lsl r1, r6, #0x10
	lsr r2, r1, #0x10
	mov r1, #0x3f
	and r1, r2
	orr r0, r1
	strh r0, [r5, #4]
	ldrh r1, [r5, #4]
	ldr r0, _02019660 ; =0xFFFFF03F
	and r1, r0
	ldr r0, [sp, #0x18]
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	lsl r0, r0, #0x1a
	lsr r0, r0, #0x14
	orr r0, r1
	strh r0, [r5, #4]
	ldr r0, [sp]
	ldr r1, _02019664 ; =0xFFFF1FFF
	strb r0, [r5, #0xa]
	mov r0, #0
	strb r0, [r5, #6]
	strb r0, [r5, #7]
	ldrh r2, [r5, #4]
	and r1, r2
	strh r1, [r5, #4]
	mov r1, #1
	ldrh r2, [r5, #4]
	lsl r1, r1, #0xc
	orr r1, r2
	strh r1, [r5, #4]
	strb r0, [r5, #0xc]
	mov r1, #0x20
	strb r1, [r5, #0xd]
	strb r0, [r5, #0xe]
	mov r0, #0x18
	strb r0, [r5, #0xf]
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02019660: .word 0xFFFFF03F
_02019664: .word 0xFFFF1FFF
	thumb_func_end sub_020195F4

	thumb_func_start sub_02019668
sub_02019668: ; 0x02019668
	push {r4, lr}
	ldr r3, [r0, #4]
	lsl r1, r1, #4
	add r4, r3, r1
	add r0, r2, #0
	ldrh r2, [r4, #4]
	ldr r1, [r3, r1]
	lsl r3, r2, #0x1a
	lsl r2, r2, #0x14
	lsr r3, r3, #0x1a
	lsr r2, r2, #0x1a
	mul r2, r3
	lsl r2, r2, #1
	bl sub_020D47B8
	pop {r4, pc}
	thumb_func_end sub_02019668

	thumb_func_start sub_02019688
sub_02019688: ; 0x02019688
	push {r4, r5, r6, lr}
	sub sp, #8
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	add r4, r1, #0
	str r0, [sp]
	add r0, r2, #0
	add r1, r3, #0
	ldr r2, [sp, #0x18]
	add r3, sp, #4
	bl sub_020079D8
	ldr r2, [sp, #4]
	add r6, r0, #0
	add r0, r5, #0
	add r1, r4, #0
	add r2, #0xc
	bl sub_02019668
	add r0, r6, #0
	bl sub_0201AB0C
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end sub_02019688

	thumb_func_start sub_020196B8
sub_020196B8: ; 0x020196B8
	push {r4, r5, r6, lr}
	sub sp, #8
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	add r4, r1, #0
	str r0, [sp]
	add r0, r2, #0
	add r1, r3, #0
	ldr r2, [sp, #0x18]
	add r3, sp, #4
	bl sub_02007C2C
	ldr r2, [sp, #4]
	add r6, r0, #0
	add r0, r5, #0
	add r1, r4, #0
	add r2, #0xc
	bl sub_02019668
	add r0, r6, #0
	bl sub_0201AB0C
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end sub_020196B8

	thumb_func_start sub_020196E8
sub_020196E8: ; 0x020196E8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x38
	str r0, [sp, #0x1c]
	add r0, r2, #0
	ldr r2, [sp, #0x1c]
	lsl r1, r1, #4
	ldr r2, [r2, #4]
	add r4, r2, r1
	strb r0, [r4, #6]
	strb r3, [r4, #7]
	mov r1, #0xd
	ldrsb r1, [r4, r1]
	str r1, [sp, #0x28]
	cmp r0, r1
	bge _020197E6
	mov r1, #0xf
	ldrsb r1, [r4, r1]
	str r1, [sp, #0x20]
	cmp r3, r1
	bge _020197E6
	ldrh r1, [r4, #4]
	lsl r2, r1, #0x1a
	lsr r2, r2, #0x1a
	str r2, [sp, #0x2c]
	add r7, r0, r2
	mov r2, #0xc
	ldrsb r2, [r4, r2]
	mov ip, r2
	cmp r7, r2
	blt _020197E6
	lsl r1, r1, #0x14
	lsr r1, r1, #0x1a
	str r1, [sp, #0x24]
	add r6, r3, r1
	mov r1, #0xe
	ldrsb r2, [r4, r1]
	cmp r6, r2
	blt _020197E6
	lsl r1, r0, #0x18
	lsr r1, r1, #0x18
	str r1, [sp, #0x34]
	ldr r1, [sp, #0x2c]
	mov r5, #0
	lsl r1, r1, #0x18
	str r5, [sp, #0x30]
	mov r5, ip
	lsr r1, r1, #0x18
	cmp r0, r5
	bge _02019762
	mov r5, ip
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	str r5, [sp, #0x34]
	mov r5, ip
	sub r0, r5, r0
	sub r1, r1, r0
	lsl r0, r0, #0x18
	lsl r1, r1, #0x18
	lsr r0, r0, #0x18
	lsr r1, r1, #0x18
	str r0, [sp, #0x30]
_02019762:
	ldr r0, [sp, #0x28]
	cmp r7, r0
	blt _02019770
	sub r0, r7, r0
	sub r0, r1, r0
	lsl r0, r0, #0x18
	lsr r1, r0, #0x18
_02019770:
	lsl r0, r3, #0x18
	lsr r7, r0, #0x18
	ldr r0, [sp, #0x24]
	mov r5, #0
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	cmp r3, r2
	bge _02019790
	lsl r5, r2, #0x18
	sub r2, r2, r3
	sub r0, r0, r2
	lsl r0, r0, #0x18
	lsl r2, r2, #0x18
	lsr r7, r5, #0x18
	lsr r0, r0, #0x18
	lsr r5, r2, #0x18
_02019790:
	ldr r2, [sp, #0x20]
	cmp r6, r2
	blt _0201979E
	sub r2, r6, r2
	sub r0, r0, r2
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
_0201979E:
	str r1, [sp]
	str r0, [sp, #4]
	ldr r0, [r4]
	add r3, r7, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x30]
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x2c]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x24]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x1c]
	ldrb r1, [r4, #0xa]
	ldr r0, [r0]
	ldr r2, [sp, #0x34]
	bl sub_0201C4EC
	ldr r2, [sp, #0x1c]
	ldr r0, [sp, #0x1c]
	ldrh r2, [r2, #0xa]
	ldrb r1, [r4, #0xa]
	ldr r0, [r0]
	lsl r2, r2, #0x11
	lsr r3, r2, #0xf
	ldr r2, _020197EC ; =0x020F6298
	ldr r2, [r2, r3]
	blx r2
	ldrh r1, [r4, #4]
	ldr r0, _020197F0 ; =0xFFFFEFFF
	and r0, r1
	strh r0, [r4, #4]
_020197E6:
	add sp, #0x38
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020197EC: .word 0x020F6298
_020197F0: .word 0xFFFFEFFF
	thumb_func_end sub_020196E8

	thumb_func_start sub_020197F4
sub_020197F4: ; 0x020197F4
	push {r4, lr}
	ldr r2, [r0, #4]
	lsl r3, r1, #4
	add r4, r2, r3
	mov r2, #6
	mov r3, #7
	ldrsb r2, [r4, r2]
	ldrsb r3, [r4, r3]
	bl sub_020196E8
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020197F4

	thumb_func_start sub_0201980C
sub_0201980C: ; 0x0201980C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	ldr r2, [r0, #4]
	str r0, [sp, #0x10]
	lsl r0, r1, #4
	add r4, r2, r0
	mov r0, #1
	ldrh r1, [r4, #4]
	lsl r0, r0, #0xc
	orr r0, r1
	strh r0, [r4, #4]
	mov r0, #0xd
	ldrsb r6, [r4, r0]
	mov r0, #6
	ldrsb r0, [r4, r0]
	cmp r0, r6
	bge _020198F4
	mov r1, #0xf
	ldrsb r1, [r4, r1]
	str r1, [sp, #0x28]
	mov r1, #7
	ldrsb r3, [r4, r1]
	ldr r1, [sp, #0x28]
	cmp r3, r1
	bge _020198F4
	ldrh r2, [r4, #4]
	lsl r1, r2, #0x1a
	lsr r1, r1, #0x1a
	str r1, [sp, #0x24]
	add r7, r0, r1
	mov r1, #0xc
	ldrsb r1, [r4, r1]
	mov ip, r1
	cmp r7, r1
	blt _020198F4
	lsl r1, r2, #0x14
	lsr r1, r1, #0x1a
	str r1, [sp, #0x1c]
	ldr r1, [sp, #0x1c]
	str r3, [sp, #0x18]
	add r2, r3, r1
	mov r1, #0xe
	ldrsb r1, [r4, r1]
	str r1, [sp, #0x14]
	cmp r2, r1
	blt _020198F4
	ldr r1, [sp, #0x24]
	mov r5, ip
	lsl r1, r1, #0x18
	str r0, [sp, #0x20]
	asr r1, r1, #0x18
	cmp r0, r5
	bge _02019884
	mov r5, ip
	str r5, [sp, #0x20]
	mov r5, ip
	sub r0, r5, r0
	sub r0, r1, r0
	lsl r0, r0, #0x18
	asr r1, r0, #0x18
_02019884:
	cmp r7, r6
	blt _02019890
	sub r0, r7, r6
	sub r0, r1, r0
	lsl r0, r0, #0x18
	asr r1, r0, #0x18
_02019890:
	ldr r0, [sp, #0x1c]
	ldr r5, [sp, #0x14]
	lsl r0, r0, #0x18
	asr r0, r0, #0x18
	cmp r3, r5
	bge _020198AA
	add r3, r5, #0
	add r6, r5, #0
	ldr r5, [sp, #0x18]
	sub r5, r6, r5
	sub r0, r0, r5
	lsl r0, r0, #0x18
	asr r0, r0, #0x18
_020198AA:
	ldr r5, [sp, #0x28]
	cmp r2, r5
	blt _020198B8
	sub r2, r2, r5
	sub r0, r0, r2
	lsl r0, r0, #0x18
	asr r0, r0, #0x18
_020198B8:
	lsl r2, r3, #0x18
	lsr r2, r2, #0x18
	lsl r1, r1, #0x18
	str r2, [sp]
	lsr r1, r1, #0x18
	lsl r0, r0, #0x18
	str r1, [sp, #4]
	lsr r0, r0, #0x18
	str r0, [sp, #8]
	mov r0, #0x10
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x10]
	ldr r3, [sp, #0x20]
	ldrb r1, [r4, #0xa]
	lsl r3, r3, #0x18
	ldr r0, [r0]
	mov r2, #0
	lsr r3, r3, #0x18
	bl sub_0201C8C4
	ldr r2, [sp, #0x10]
	ldr r0, [sp, #0x10]
	ldrh r2, [r2, #0xa]
	ldrb r1, [r4, #0xa]
	ldr r0, [r0]
	lsl r2, r2, #0x11
	lsr r3, r2, #0xf
	ldr r2, _020198F8 ; =0x020F6298
	ldr r2, [r2, r3]
	blx r2
_020198F4:
	add sp, #0x2c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_020198F8: .word 0x020F6298
	thumb_func_end sub_0201980C

	thumb_func_start sub_020198FC
sub_020198FC: ; 0x020198FC
	push {r3, r4}
	ldr r4, [r0, #4]
	lsl r1, r1, #4
	add r1, r4, r1
	strb r2, [r1, #8]
	ldr r2, _0201992C ; =0xFFFFFFF8
	strb r3, [r1, #9]
	add r2, sp
	ldrb r2, [r2, #0x10]
	strb r2, [r1, #0xb]
	ldrh r3, [r1, #4]
	ldr r2, _02019930 ; =0xFFFF1FFF
	and r3, r2
	mov r2, #2
	lsl r2, r2, #0xc
	orr r3, r2
	strh r3, [r1, #4]
	ldrh r3, [r0, #0xa]
	lsl r1, r2, #2
	orr r1, r3
	strh r1, [r0, #0xa]
	pop {r3, r4}
	bx lr
	nop
_0201992C: .word 0xFFFFFFF8
_02019930: .word 0xFFFF1FFF
	thumb_func_end sub_020198FC

	thumb_func_start sub_02019934
sub_02019934: ; 0x02019934
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldrh r1, [r5, #0xa]
	lsl r0, r1, #0x10
	lsr r0, r0, #0x1f
	beq _02019970
	ldr r0, _02019974 ; =0xFFFF7FFF
	add r6, r5, #0
	and r0, r1
	strh r0, [r5, #0xa]
	ldrh r0, [r5, #8]
	add r6, #0xa
	mov r4, #0
	cmp r0, #0
	bls _02019970
	mov r7, #2
	lsl r7, r7, #0xe
_02019956:
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02019978
	cmp r0, #1
	bne _02019968
	ldrh r0, [r6]
	orr r0, r7
	strh r0, [r6]
_02019968:
	ldrh r0, [r5, #8]
	add r4, r4, #1
	cmp r4, r0
	blo _02019956
_02019970:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02019974: .word 0xFFFF7FFF
	thumb_func_end sub_02019934

	thumb_func_start sub_02019978
sub_02019978: ; 0x02019978
	push {r4, r5, r6, lr}
	add r5, r0, #0
	add r6, r1, #0
	ldr r2, [r5, #4]
	lsl r4, r6, #4
	add r2, r2, r4
	ldrh r2, [r2, #4]
	lsl r2, r2, #0x10
	lsr r2, r2, #0x1d
	bne _02019990
	mov r0, #0
	pop {r4, r5, r6, pc}
_02019990:
	bl sub_0201980C
	ldr r2, [r5, #4]
	add r1, r2, #6
	add r3, r2, r4
	mov r2, #8
	ldrsb r0, [r1, r4]
	ldrsb r2, [r3, r2]
	add r0, r0, r2
	strb r0, [r1, r4]
	ldr r2, [r5, #4]
	add r1, r2, #7
	add r3, r2, r4
	mov r2, #9
	ldrsb r0, [r1, r4]
	ldrsb r2, [r3, r2]
	add r0, r0, r2
	strb r0, [r1, r4]
	add r0, r5, #0
	add r1, r6, #0
	bl sub_020197F4
	ldr r1, [r5, #4]
	add r1, #0xb
	ldrb r0, [r1, r4]
	sub r0, r0, #1
	strb r0, [r1, r4]
	ldr r0, [r5, #4]
	add r2, r0, r4
	ldrb r0, [r2, #0xb]
	cmp r0, #0
	bne _020199DC
	ldrh r1, [r2, #4]
	ldr r0, _020199E0 ; =0xFFFF1FFF
	and r0, r1
	strh r0, [r2, #4]
	mov r0, #0
	pop {r4, r5, r6, pc}
_020199DC:
	mov r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
_020199E0: .word 0xFFFF1FFF
	thumb_func_end sub_02019978

	thumb_func_start sub_020199E4
sub_020199E4: ; 0x020199E4
	ldr r2, [r0, #4]
	lsl r0, r1, #4
	add r0, r2, r0
	ldrh r0, [r0, #4]
	lsl r0, r0, #0x10
	lsr r0, r0, #0x1d
	bx lr
	.align 2, 0
	thumb_func_end sub_020199E4

	thumb_func_start sub_020199F4
sub_020199F4: ; 0x020199F4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r2, [sp]
	ldr r2, [r0, #4]
	lsl r0, r1, #4
	add r1, r2, r0
	ldr r0, [r2, r0]
	add r7, r3, #0
	mov ip, r0
	ldrh r0, [r1, #4]
	add r1, sp, #0x10
	lsl r0, r0, #0x1a
	lsr r0, r0, #0x1a
	mov lr, r0
	ldrb r0, [r1, #0x14]
	add r0, r7, r0
	str r0, [sp, #4]
	cmp r7, r0
	bge _02019A58
	ldrb r0, [r1, #0x18]
	ldrb r1, [r1, #0x10]
	ldr r6, _02019A5C ; =0x00000FFF
	lsl r5, r0, #0xc
	ldr r0, [sp]
	add r2, r0, r1
_02019A26:
	ldr r1, [sp]
	add r0, r1, #0
	cmp r0, r2
	bge _02019A4C
	mov r0, lr
	mul r0, r7
	lsl r3, r0, #1
	mov r0, ip
	add r3, r0, r3
_02019A38:
	lsl r0, r1, #1
	ldrh r4, [r3, r0]
	and r4, r6
	orr r4, r5
	strh r4, [r3, r0]
	add r0, r1, #1
	lsl r0, r0, #0x10
	lsr r1, r0, #0x10
	cmp r1, r2
	blt _02019A38
_02019A4C:
	add r0, r7, #1
	lsl r0, r0, #0x10
	lsr r7, r0, #0x10
	ldr r0, [sp, #4]
	cmp r7, r0
	blt _02019A26
_02019A58:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02019A5C: .word 0x00000FFF
	thumb_func_end sub_020199F4

	thumb_func_start sub_02019A60
sub_02019A60: ; 0x02019A60
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	str r0, [sp]
	lsl r0, r1, #4
	str r0, [sp, #0xc]
	ldr r0, [sp]
	mov r6, #0
	ldr r1, [r0, #4]
	ldr r0, [sp, #0xc]
	add r3, r1, r0
	ldr r0, [r1, r0]
	mov ip, r0
	ldrh r0, [r3, #4]
	lsl r0, r0, #0x1a
	lsr r0, r0, #0x1a
	mov lr, r0
	ldrh r0, [r2, #0xa]
	lsl r0, r0, #0x11
	lsr r7, r0, #0x11
	ldrb r0, [r2, #9]
	lsl r0, r0, #0x1c
	lsr r0, r0, #0x10
	str r0, [sp, #8]
	ldrb r0, [r2, #8]
	cmp r0, #0
	ble _02019B04
_02019A94:
	ldrb r0, [r2, #6]
	add r3, r0, r6
	ldr r0, [sp]
	ldr r1, [r0, #4]
	ldr r0, [sp, #0xc]
	add r0, r1, r0
	ldrh r0, [r0, #4]
	lsl r0, r0, #0x14
	lsr r0, r0, #0x1a
	cmp r3, r0
	bge _02019B04
	ldrb r0, [r2, #7]
	mov r1, #0
	str r0, [sp, #4]
	cmp r0, #0
	ble _02019AF0
_02019AB4:
	ldr r0, [sp]
	ldrb r5, [r2, #5]
	ldr r3, [r0, #4]
	ldr r0, [sp, #0xc]
	add r4, r5, r1
	add r0, r3, r0
	ldrh r0, [r0, #4]
	lsl r0, r0, #0x1a
	lsr r0, r0, #0x1a
	cmp r4, r0
	bge _02019AF0
	ldr r0, [sp, #8]
	add r3, r7, r1
	add r0, r0, r3
	ldrb r3, [r2, #6]
	add r4, r3, r6
	mov r3, lr
	mul r4, r3
	add r3, r5, r4
	add r3, r1, r3
	lsl r4, r3, #1
	mov r3, ip
	strh r0, [r3, r4]
	add r0, r1, #1
	lsl r0, r0, #0x10
	lsr r1, r0, #0x10
	ldrb r0, [r2, #7]
	str r0, [sp, #4]
	cmp r1, r0
	blt _02019AB4
_02019AF0:
	ldr r0, [sp, #4]
	add r0, r7, r0
	lsl r0, r0, #0x10
	lsr r7, r0, #0x10
	add r0, r6, #1
	lsl r0, r0, #0x10
	lsr r6, r0, #0x10
	ldrb r0, [r2, #8]
	cmp r6, r0
	blt _02019A94
_02019B04:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02019A60

	thumb_func_start sub_02019B08
sub_02019B08: ; 0x02019B08
	ldr r2, [r0, #4]
	lsl r0, r1, #4
	ldr r0, [r2, r0]
	bx lr
	thumb_func_end sub_02019B08

	thumb_func_start sub_02019B10
sub_02019B10: ; 0x02019B10
	ldr r2, [r0, #4]
	lsl r0, r1, #4
	add r0, r2, r0
	ldrb r0, [r0, #0xa]
	bx lr
	.align 2, 0
	thumb_func_end sub_02019B10

	thumb_func_start sub_02019B1C
sub_02019B1C: ; 0x02019B1C
	push {r4, r5}
	cmp r2, #0
	beq _02019B2E
	ldr r5, [r0, #4]
	lsl r4, r1, #4
	add r5, r5, r4
	mov r4, #6
	ldrsb r4, [r5, r4]
	strb r4, [r2]
_02019B2E:
	cmp r3, #0
	beq _02019B3E
	ldr r2, [r0, #4]
	lsl r0, r1, #4
	add r1, r2, r0
	mov r0, #7
	ldrsb r0, [r1, r0]
	strb r0, [r3]
_02019B3E:
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end sub_02019B1C

	thumb_func_start sub_02019B44
sub_02019B44: ; 0x02019B44
	push {r4, r5}
	cmp r2, #0
	beq _02019B58
	ldr r5, [r0, #4]
	lsl r4, r1, #4
	add r4, r5, r4
	ldrh r4, [r4, #4]
	lsl r4, r4, #0x1a
	lsr r4, r4, #0x1a
	strh r4, [r2]
_02019B58:
	cmp r3, #0
	beq _02019B6A
	ldr r2, [r0, #4]
	lsl r0, r1, #4
	add r0, r2, r0
	ldrh r0, [r0, #4]
	lsl r0, r0, #0x14
	lsr r0, r0, #0x1a
	strh r0, [r3]
_02019B6A:
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end sub_02019B44

	thumb_func_start sub_02019B70
sub_02019B70: ; 0x02019B70
	push {r3, r4}
	ldr r4, [r0, #4]
	lsl r1, r1, #4
	add r4, r4, r1
	strb r2, [r4, #0xc]
	ldr r2, [r0, #4]
	add r2, r2, r1
	strb r3, [r2, #0xd]
	ldr r3, _02019B9C ; =0xFFFFFFF8
	mov r2, #0x10
	add r3, sp
	ldrsb r4, [r3, r2]
	ldr r2, [r0, #4]
	add r2, r2, r1
	strb r4, [r2, #0xe]
	mov r2, #0x14
	ldr r0, [r0, #4]
	ldrsb r2, [r3, r2]
	add r0, r0, r1
	strb r2, [r0, #0xf]
	pop {r3, r4}
	bx lr
	.align 2, 0
_02019B9C: .word 0xFFFFFFF8
	thumb_func_end sub_02019B70

	thumb_func_start sub_02019BA0
sub_02019BA0: ; 0x02019BA0
	bx lr
	.align 2, 0
	thumb_func_end sub_02019BA0

	thumb_func_start sub_02019BA4
sub_02019BA4: ; 0x02019BA4
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r4, r1, #0
	ldr r0, [sp, #0x20]
	mov r1, #0x20
	add r6, r2, #0
	add r7, r3, #0
	bl sub_0201AA8C
	str r5, [r0]
	str r4, [r0, #4]
	str r6, [r0, #0x18]
	str r7, [r0, #0x1c]
	mov r2, #0
	ldr r1, [sp, #0x18]
	strb r2, [r0, #0xc]
	str r1, [r0, #8]
	add r1, sp, #8
	ldrb r1, [r1, #0x14]
	strb r1, [r0, #0xd]
	mov r1, #0xff
	strb r1, [r0, #0xe]
	strb r1, [r0, #0xf]
	sub r1, r2, #1
	str r1, [r0, #0x10]
	str r1, [r0, #0x14]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02019BA4

	thumb_func_start sub_02019BDC
sub_02019BDC: ; 0x02019BDC
	ldr r3, _02019BE0 ; =sub_0201AB0C
	bx r3
	.align 2, 0
_02019BE0: .word sub_0201AB0C
	thumb_func_end sub_02019BDC

	thumb_func_start sub_02019BE4
sub_02019BE4: ; 0x02019BE4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	mov r4, #0
	add r5, r0, #0
	add r6, r4, #0
	sub r7, r4, #1
_02019BF0:
	ldr r2, [r5]
	lsl r1, r4, #2
	ldrb r0, [r2, r1]
	cmp r0, #0xff
	beq _02019C1A
	add r0, r2, r1
	bl sub_02025320
	cmp r0, #1
	bne _02019C12
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02019E4C
	cmp r0, r7
	bne _02019D0E
	mov r6, #1
_02019C12:
	add r0, r4, #1
	lsl r0, r0, #0x10
	lsr r4, r0, #0x10
	b _02019BF0
_02019C1A:
	cmp r6, #0
	beq _02019C26
	mov r0, #0
	add sp, #0x10
	mvn r0, r0
	pop {r3, r4, r5, r6, r7, pc}
_02019C26:
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _02019C4C
	ldrb r0, [r5, #0xc]
	cmp r0, #1
	bne _02019C4C
	ldr r0, _02019D14 ; =0x021D110C
	ldr r1, [r0, #0x48]
	mov r0, #0xf3
	tst r1, r0
	beq _02019C46
	add r0, r5, #0
	bl sub_02019E98
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
_02019C46:
	add sp, #0x10
	sub r0, #0xf4
	pop {r3, r4, r5, r6, r7, pc}
_02019C4C:
	ldr r0, _02019D14 ; =0x021D110C
	mov r1, #0x40
	ldr r0, [r0, #0x48]
	tst r1, r0
	beq _02019C72
	mov r1, #0
	str r1, [sp]
	ldrb r0, [r5, #0xd]
	add r2, r1, #0
	add r3, r1, #0
	str r0, [sp, #4]
	str r1, [sp, #8]
	ldr r0, [r5, #4]
	bl sub_02020A24
	add r2, r0, #0
	mov r0, #0
	str r0, [sp, #0xc]
	b _02019CE0
_02019C72:
	mov r1, #0x80
	tst r1, r0
	beq _02019C96
	mov r1, #0
	str r1, [sp]
	ldrb r0, [r5, #0xd]
	add r2, r1, #0
	add r3, r1, #0
	str r0, [sp, #4]
	mov r0, #1
	str r0, [sp, #8]
	ldr r0, [r5, #4]
	bl sub_02020A24
	add r2, r0, #0
	mov r0, #1
	str r0, [sp, #0xc]
	b _02019CE0
_02019C96:
	mov r1, #0x20
	tst r1, r0
	beq _02019CBA
	mov r1, #0
	str r1, [sp]
	ldrb r0, [r5, #0xd]
	add r2, r1, #0
	add r3, r1, #0
	str r0, [sp, #4]
	mov r0, #2
	str r0, [sp, #8]
	ldr r0, [r5, #4]
	bl sub_02020A24
	add r2, r0, #0
	mov r0, #2
	str r0, [sp, #0xc]
	b _02019CE0
_02019CBA:
	mov r1, #0x10
	tst r0, r1
	beq _02019CDE
	mov r1, #0
	str r1, [sp]
	ldrb r0, [r5, #0xd]
	add r2, r1, #0
	add r3, r1, #0
	str r0, [sp, #4]
	mov r0, #3
	str r0, [sp, #8]
	ldr r0, [r5, #4]
	bl sub_02020A24
	add r2, r0, #0
	mov r0, #3
	str r0, [sp, #0xc]
	b _02019CE0
_02019CDE:
	mov r2, #0xff
_02019CE0:
	cmp r2, #0xff
	beq _02019CF0
	ldr r1, [sp, #0xc]
	add r0, r5, #0
	bl sub_02019EB8
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
_02019CF0:
	ldr r0, _02019D14 ; =0x021D110C
	ldr r1, [r0, #0x48]
	mov r0, #1
	tst r0, r1
	beq _02019D00
	add sp, #0x10
	ldrb r0, [r5, #0xd]
	pop {r3, r4, r5, r6, r7, pc}
_02019D00:
	mov r0, #2
	tst r1, r0
	beq _02019D0C
	add sp, #0x10
	sub r0, r0, #4
	pop {r3, r4, r5, r6, r7, pc}
_02019D0C:
	sub r0, r0, #3
_02019D0E:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02019D14: .word 0x021D110C
	thumb_func_end sub_02019BE4

	thumb_func_start sub_02019D18
sub_02019D18: ; 0x02019D18
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	mov r4, #0
	add r5, r0, #0
	add r6, r4, #0
	sub r7, r4, #1
_02019D24:
	ldr r2, [r5]
	lsl r1, r4, #2
	ldrb r0, [r2, r1]
	cmp r0, #0xff
	beq _02019D4E
	add r0, r2, r1
	bl sub_02025320
	cmp r0, #1
	bne _02019D46
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02019E4C
	cmp r0, r7
	bne _02019E42
	mov r6, #1
_02019D46:
	add r0, r4, #1
	lsl r0, r0, #0x10
	lsr r4, r0, #0x10
	b _02019D24
_02019D4E:
	cmp r6, #0
	beq _02019D5A
	mov r0, #0
	add sp, #0x10
	mvn r0, r0
	pop {r3, r4, r5, r6, r7, pc}
_02019D5A:
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _02019D80
	ldrb r0, [r5, #0xc]
	cmp r0, #1
	bne _02019D80
	ldr r0, _02019E48 ; =0x021D110C
	ldr r1, [r0, #0x48]
	mov r0, #0xf3
	tst r1, r0
	beq _02019D7A
	add r0, r5, #0
	bl sub_02019E98
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
_02019D7A:
	add sp, #0x10
	sub r0, #0xf4
	pop {r3, r4, r5, r6, r7, pc}
_02019D80:
	ldr r0, _02019E48 ; =0x021D110C
	mov r1, #0x40
	ldr r0, [r0, #0x4c]
	tst r1, r0
	beq _02019DA6
	mov r1, #0
	str r1, [sp]
	ldrb r0, [r5, #0xd]
	add r2, r1, #0
	add r3, r1, #0
	str r0, [sp, #4]
	str r1, [sp, #8]
	ldr r0, [r5, #4]
	bl sub_02020A24
	add r2, r0, #0
	mov r0, #0
	str r0, [sp, #0xc]
	b _02019E14
_02019DA6:
	mov r1, #0x80
	tst r1, r0
	beq _02019DCA
	mov r1, #0
	str r1, [sp]
	ldrb r0, [r5, #0xd]
	add r2, r1, #0
	add r3, r1, #0
	str r0, [sp, #4]
	mov r0, #1
	str r0, [sp, #8]
	ldr r0, [r5, #4]
	bl sub_02020A24
	add r2, r0, #0
	mov r0, #1
	str r0, [sp, #0xc]
	b _02019E14
_02019DCA:
	mov r1, #0x20
	tst r1, r0
	beq _02019DEE
	mov r1, #0
	str r1, [sp]
	ldrb r0, [r5, #0xd]
	add r2, r1, #0
	add r3, r1, #0
	str r0, [sp, #4]
	mov r0, #2
	str r0, [sp, #8]
	ldr r0, [r5, #4]
	bl sub_02020A24
	add r2, r0, #0
	mov r0, #2
	str r0, [sp, #0xc]
	b _02019E14
_02019DEE:
	mov r1, #0x10
	tst r0, r1
	beq _02019E12
	mov r1, #0
	str r1, [sp]
	ldrb r0, [r5, #0xd]
	add r2, r1, #0
	add r3, r1, #0
	str r0, [sp, #4]
	mov r0, #3
	str r0, [sp, #8]
	ldr r0, [r5, #4]
	bl sub_02020A24
	add r2, r0, #0
	mov r0, #3
	str r0, [sp, #0xc]
	b _02019E14
_02019E12:
	mov r2, #0xff
_02019E14:
	cmp r2, #0xff
	beq _02019E24
	ldr r1, [sp, #0xc]
	add r0, r5, #0
	bl sub_02019EB8
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
_02019E24:
	ldr r0, _02019E48 ; =0x021D110C
	ldr r1, [r0, #0x48]
	mov r0, #1
	tst r0, r1
	beq _02019E34
	add sp, #0x10
	ldrb r0, [r5, #0xd]
	pop {r3, r4, r5, r6, r7, pc}
_02019E34:
	mov r0, #2
	tst r1, r0
	beq _02019E40
	add sp, #0x10
	sub r0, r0, #4
	pop {r3, r4, r5, r6, r7, pc}
_02019E40:
	sub r0, r0, #3
_02019E42:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02019E48: .word 0x021D110C
	thumb_func_end sub_02019D18

	thumb_func_start sub_02019E4C
sub_02019E4C: ; 0x02019E4C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, #0x10
	add r4, r1, #0
	bl sub_0201A06C
	cmp r0, #1
	bne _02019E90
	strb r4, [r5, #0xd]
	mov r0, #0xff
	strb r0, [r5, #0xe]
	strb r0, [r5, #0xf]
	ldr r0, [r5, #8]
	cmp r0, #1
	bne _02019E80
	ldrb r0, [r5, #0xc]
	cmp r0, #1
	bne _02019E80
	mov r0, #0
	str r0, [r5, #8]
	ldr r3, [r5, #0x18]
	ldrb r1, [r5, #0xd]
	ldrb r2, [r5, #0xe]
	ldr r0, [r5, #0x1c]
	ldr r3, [r3, #4]
	blx r3
_02019E80:
	ldr r3, [r5, #0x18]
	ldrb r1, [r5, #0xd]
	ldrb r2, [r5, #0xe]
	ldr r0, [r5, #0x1c]
	ldr r3, [r3, #0xc]
	blx r3
	add r0, r4, #0
	pop {r3, r4, r5, pc}
_02019E90:
	mov r0, #0
	mvn r0, r0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02019E4C

	thumb_func_start sub_02019E98
sub_02019E98: ; 0x02019E98
	push {r3, lr}
	add r3, r0, #0
	mov r0, #1
	str r0, [r3, #8]
	mov r0, #0xff
	strb r0, [r3, #0xe]
	strb r0, [r3, #0xf]
	ldr r0, [r3, #0x1c]
	ldrb r1, [r3, #0xd]
	ldrb r2, [r3, #0xe]
	ldr r3, [r3, #0x18]
	ldr r3, [r3]
	blx r3
	mov r0, #3
	mvn r0, r0
	pop {r3, pc}
	thumb_func_end sub_02019E98

	thumb_func_start sub_02019EB8
sub_02019EB8: ; 0x02019EB8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r4, r2, #0
	add r5, r0, #0
	add r6, r1, #0
	mov r0, #0x80
	add r1, r4, #0
	tst r1, r0
	beq _02019EDA
	ldrb r1, [r5, #0xf]
	cmp r1, #0xff
	beq _02019ED4
	add r4, r1, #0
	b _02019EDA
_02019ED4:
	eor r0, r4
	lsl r0, r0, #0x18
	lsr r4, r0, #0x18
_02019EDA:
	mov r0, #1
	str r0, [sp, #0xc]
	mov r7, #0
_02019EE0:
	lsr r2, r4, #0x1f
	lsl r1, r4, #0x1b
	sub r1, r1, r2
	mov r0, #0x1b
	ror r1, r0
	add r1, r2, r1
	mov r0, #1
	lsl r0, r1
	lsr r1, r4, #5
	lsl r1, r1, #2
	add r1, r5, r1
	ldr r1, [r1, #0x10]
	tst r0, r1
	bne _02019F2A
	str r7, [sp, #0xc]
	str r7, [sp]
	str r4, [sp, #4]
	str r6, [sp, #8]
	ldr r0, [r5, #4]
	add r1, r7, #0
	add r2, r7, #0
	add r3, r7, #0
	bl sub_02020A24
	mov r1, #0x7f
	and r0, r1
	lsl r0, r0, #0x18
	lsr r1, r0, #0x18
	cmp r1, r4
	beq _02019F22
	ldrb r0, [r5, #0xd]
	cmp r1, r0
	bne _02019F26
_02019F22:
	ldrb r4, [r5, #0xd]
	b _02019F2A
_02019F26:
	add r4, r1, #0
	b _02019EE0
_02019F2A:
	ldrb r0, [r5, #0xd]
	cmp r0, r4
	beq _02019F6A
	ldr r1, [r5, #4]
	lsl r0, r4, #3
	add r0, r1, r0
	add r1, r6, #0
	bl sub_0201A020
	cmp r0, #1
	bne _02019F4C
	ldr r0, [sp, #0xc]
	cmp r0, #0
	beq _02019F4C
	ldrb r0, [r5, #0xd]
	strb r0, [r5, #0xf]
	b _02019F50
_02019F4C:
	mov r0, #0xff
	strb r0, [r5, #0xf]
_02019F50:
	ldrb r0, [r5, #0xd]
	strb r0, [r5, #0xe]
	strb r4, [r5, #0xd]
	ldr r3, [r5, #0x18]
	ldrb r1, [r5, #0xd]
	ldrb r2, [r5, #0xe]
	ldr r0, [r5, #0x1c]
	ldr r3, [r3, #8]
	blx r3
	mov r0, #2
	add sp, #0x10
	mvn r0, r0
	pop {r3, r4, r5, r6, r7, pc}
_02019F6A:
	mov r0, #0
	mvn r0, r0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02019EB8

	thumb_func_start sub_02019F74
sub_02019F74: ; 0x02019F74
	ldrb r0, [r0, #0xd]
	bx lr
	thumb_func_end sub_02019F74

	thumb_func_start sub_02019F78
sub_02019F78: ; 0x02019F78
	ldrb r0, [r0, #0xf]
	bx lr
	thumb_func_end sub_02019F78

	thumb_func_start sub_02019F7C
sub_02019F7C: ; 0x02019F7C
	strb r1, [r0, #0xd]
	mov r1, #0xff
	strb r1, [r0, #0xe]
	strb r1, [r0, #0xf]
	bx lr
	.align 2, 0
	thumb_func_end sub_02019F7C

	thumb_func_start sub_02019F88
sub_02019F88: ; 0x02019F88
	strb r1, [r0, #0xd]
	strb r2, [r0, #0xe]
	strb r3, [r0, #0xf]
	bx lr
	thumb_func_end sub_02019F88

	thumb_func_start sub_02019F90
sub_02019F90: ; 0x02019F90
	ldr r0, [r0, #8]
	bx lr
	thumb_func_end sub_02019F90

	thumb_func_start sub_02019F94
sub_02019F94: ; 0x02019F94
	push {r3, lr}
	add r3, r0, #0
	str r1, [r3, #8]
	cmp r1, #1
	bne _02019FB4
	mov r0, #0xff
	strb r0, [r3, #0xe]
	strb r0, [r3, #0xf]
	ldr r0, [r3, #0x1c]
	ldrb r1, [r3, #0xd]
	ldr r3, [r3, #0x18]
	mov r2, #0
	ldr r3, [r3]
	mvn r2, r2
	blx r3
	pop {r3, pc}
_02019FB4:
	ldr r0, [r3, #0x1c]
	ldrb r1, [r3, #0xd]
	ldr r3, [r3, #0x18]
	mov r2, #0
	ldr r3, [r3, #4]
	mvn r2, r2
	blx r3
	pop {r3, pc}
	thumb_func_end sub_02019F94

	thumb_func_start sub_02019FC4
sub_02019FC4: ; 0x02019FC4
	mov r1, #0
	mvn r1, r1
	str r1, [r0, #0x10]
	str r1, [r0, #0x14]
	bx lr
	.align 2, 0
	thumb_func_end sub_02019FC4

	thumb_func_start sub_02019FD0
sub_02019FD0: ; 0x02019FD0
	push {r4, r5}
	mov r4, #1
	lsr r2, r1, #5
	mov r3, #0x1f
	and r1, r3
	add r5, r4, #0
	lsl r5, r1
	add r0, #0x10
	lsl r2, r2, #2
	ldr r4, [r0, r2]
	add r1, r5, #0
	tst r1, r4
	beq _02019FF4
	sub r3, #0x20
	add r1, r5, #0
	eor r1, r3
	and r1, r4
	str r1, [r0, r2]
_02019FF4:
	pop {r4, r5}
	bx lr
	thumb_func_end sub_02019FD0

	thumb_func_start sub_02019FF8
sub_02019FF8: ; 0x02019FF8
	push {r3, r4}
	mov r3, #0x1f
	lsr r2, r1, #5
	mov r4, #1
	and r1, r3
	lsl r4, r1
	add r0, #0x10
	lsl r2, r2, #2
	ldr r1, [r0, r2]
	add r3, r4, #0
	tst r3, r1
	bne _0201A014
	eor r1, r4
	str r1, [r0, r2]
_0201A014:
	pop {r3, r4}
	bx lr
	thumb_func_end sub_02019FF8

	thumb_func_start sub_0201A018
sub_0201A018: ; 0x0201A018
	ldr r2, [r0, #4]
	lsl r0, r1, #3
	add r0, r2, r0
	bx lr
	thumb_func_end sub_0201A018

	thumb_func_start sub_0201A020
sub_0201A020: ; 0x0201A020
	cmp r1, #3
	bhi _0201A068
	add r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add pc, r1
_0201A030: ; jump table
	.short _0201A038 - _0201A030 - 2 ; case 0
	.short _0201A044 - _0201A030 - 2 ; case 1
	.short _0201A050 - _0201A030 - 2 ; case 2
	.short _0201A05C - _0201A030 - 2 ; case 3
_0201A038:
	ldrb r1, [r0, #5]
	mov r0, #0x80
	tst r0, r1
	beq _0201A068
	mov r0, #1
	bx lr
_0201A044:
	ldrb r1, [r0, #4]
	mov r0, #0x80
	tst r0, r1
	beq _0201A068
	mov r0, #1
	bx lr
_0201A050:
	ldrb r1, [r0, #7]
	mov r0, #0x80
	tst r0, r1
	beq _0201A068
	mov r0, #1
	bx lr
_0201A05C:
	ldrb r1, [r0, #6]
	mov r0, #0x80
	tst r0, r1
	beq _0201A068
	mov r0, #1
	bx lr
_0201A068:
	mov r0, #0
	bx lr
	thumb_func_end sub_0201A020

	thumb_func_start sub_0201A06C
sub_0201A06C: ; 0x0201A06C
	push {r3, r4}
	mov r3, #0x1f
	mov r2, #1
	and r3, r1
	lsr r1, r1, #5
	add r4, r2, #0
	lsl r1, r1, #2
	lsl r4, r3
	ldr r0, [r0, r1]
	tst r0, r4
	bne _0201A084
	mov r2, #0
_0201A084:
	add r0, r2, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end sub_0201A06C

	thumb_func_start sub_0201A08C
sub_0201A08C: ; 0x0201A08C
	push {r3, lr}
	ldr r3, _0201A0B4 ; =OSi_IntrTable
	ldr r1, _0201A0B8 ; =0x00003FF8
	mov r0, #1
	ldr r2, [r3, r1]
	orr r0, r2
	str r0, [r3, r1]
	mov r0, #3
	bl sub_020D422C
	ldr r0, _0201A0BC ; =0x021D110C
	ldr r0, [r0, #0x1c]
	bl sub_0201F880
	ldr r0, _0201A0BC ; =0x021D110C
	ldr r1, [r0, #0x30]
	add r1, r1, #1
	str r1, [r0, #0x30]
	pop {r3, pc}
	nop
_0201A0B4: .word OSi_IntrTable
_0201A0B8: .word 0x00003FF8
_0201A0BC: .word 0x021D110C
	thumb_func_end sub_0201A08C

	thumb_func_start sub_0201A0C0
sub_0201A0C0: ; 0x0201A0C0
	ldr r3, _0201A0D4 ; =OSi_IntrTable
	ldr r1, _0201A0D8 ; =0x00003FF8
	mov r0, #1
	ldr r2, [r3, r1]
	orr r0, r2
	str r0, [r3, r1]
	ldr r3, _0201A0DC ; =sub_020D422C
	mov r0, #3
	bx r3
	nop
_0201A0D4: .word OSi_IntrTable
_0201A0D8: .word 0x00003FF8
_0201A0DC: .word sub_020D422C
	thumb_func_end sub_0201A0C0

	thumb_func_start sub_0201A0E0
sub_0201A0E0: ; 0x0201A0E0
	push {r3, lr}
	mov r0, #1
	bl sub_020D1204
	ldr r1, _0201A0F8 ; =sub_0201A0C0
	mov r0, #1
	bl sub_020D1004
	mov r0, #1
	bl sub_020D11D4
	pop {r3, pc}
	.align 2, 0
_0201A0F8: .word sub_0201A0C0
	thumb_func_end sub_0201A0E0

	thumb_func_start sub_0201A0FC
sub_0201A0FC: ; 0x0201A0FC
	ldr r2, _0201A104 ; =0x021D110C
	str r0, [r2]
	str r1, [r2, #4]
	bx lr
	.align 2, 0
_0201A104: .word 0x021D110C
	thumb_func_end sub_0201A0FC

	thumb_func_start sub_0201A108
sub_0201A108: ; 0x0201A108
	push {r3, lr}
	mov r0, #0
	bl sub_0201A16C
	ldr r0, _0201A11C ; =0x021D110C
	mov r1, #0
	str r1, [r0, #8]
	str r1, [r0, #0xc]
	pop {r3, pc}
	nop
_0201A11C: .word 0x021D110C
	thumb_func_end sub_0201A108

	thumb_func_start sub_0201A120
sub_0201A120: ; 0x0201A120
	push {r3, lr}
	cmp r0, #0
	bne _0201A138
	mov r0, #0
	bl sub_0201A16C
	ldr r0, _0201A154 ; =0x021D110C
	mov r1, #0
	str r1, [r0, #8]
	str r1, [r0, #0xc]
	mov r0, #1
	pop {r3, pc}
_0201A138:
	ldr r2, _0201A154 ; =0x021D110C
	ldr r3, [r2, #8]
	cmp r3, #0
	bne _0201A14E
	str r1, [r2, #0xc]
	str r0, [r2, #8]
	mov r0, #1
	bl sub_0201A16C
	mov r0, #1
	pop {r3, pc}
_0201A14E:
	mov r0, #0
	pop {r3, pc}
	nop
_0201A154: .word 0x021D110C
	thumb_func_end sub_0201A120

	thumb_func_start sub_0201A158
sub_0201A158: ; 0x0201A158
	push {r3, lr}
	ldr r0, _0201A168 ; =0x021D110C
	ldr r1, [r0, #8]
	cmp r1, #0
	beq _0201A166
	ldr r0, [r0, #0xc]
	blx r1
_0201A166:
	pop {r3, pc}
	.align 2, 0
_0201A168: .word 0x021D110C
	thumb_func_end sub_0201A158

	thumb_func_start sub_0201A16C
sub_0201A16C: ; 0x0201A16C
	push {r3, lr}
	ldr r2, _0201A1AC ; =0x04000208
	ldrh r1, [r2]
	mov r1, #0
	strh r1, [r2]
	cmp r0, #0
	bne _0201A18A
	ldr r0, [r2, #8]
	mov r0, #2
	bl sub_020D1204
	mov r0, #0
	bl sub_020CD910
	b _0201A1A0
_0201A18A:
	ldr r0, [r2, #8]
	ldr r1, _0201A1B0 ; =sub_0201A158
	mov r0, #2
	bl sub_020D1004
	mov r0, #2
	bl sub_020D11D4
	mov r0, #1
	bl sub_020CD910
_0201A1A0:
	ldr r1, _0201A1AC ; =0x04000208
	ldrh r0, [r1]
	mov r0, #1
	strh r0, [r1]
	pop {r3, pc}
	nop
_0201A1AC: .word 0x04000208
_0201A1B0: .word sub_0201A158
	thumb_func_end sub_0201A16C

	thumb_func_start sub_0201A1B4
sub_0201A1B4: ; 0x0201A1B4
	push {r3, lr}
	sub sp, #0x30
	add r0, sp, #0x10
	bl sub_020D3E78
	add r0, sp, #0
	add r1, sp, #0x10
	mov r2, #0x20
	bl sub_020E3758
	mov r3, #0
	add r1, r3, #0
	add r2, sp, #0
_0201A1CE:
	ldrb r0, [r2]
	add r1, r1, #1
	add r2, r2, #1
	add r3, r3, r0
	cmp r1, #0x10
	blo _0201A1CE
	lsl r0, r3, #0x18
	lsr r3, r0, #0x18
	mov r0, #3
	tst r0, r3
	beq _0201A1EE
	mov r0, #3
_0201A1E6:
	add r3, r3, #1
	add r1, r3, #0
	tst r1, r0
	bne _0201A1E6
_0201A1EE:
	ldr r0, _0201A1FC ; =0x020F62A4
	mov r1, #4
	mov r2, #0xa1
	bl sub_0201A7BC
	add sp, #0x30
	pop {r3, pc}
	.align 2, 0
_0201A1FC: .word 0x020F62A4
	thumb_func_end sub_0201A1B4

	thumb_func_start sub_0201A200
sub_0201A200: ; 0x0201A200
	push {r3, r4, r5, lr}
	bl sub_020D290C
	bl sub_020CD784
	ldr r2, _0201A324 ; =0x04000304
	ldr r0, _0201A328 ; =0xFFFFFDF1
	ldrh r1, [r2]
	and r1, r0
	ldr r0, _0201A32C ; =0x0000020E
	orr r0, r1
	strh r0, [r2]
	bl sub_020CD7C4
	bl sub_020D33C0
	bl sub_0201A1B4
	mov r0, #0xa0
	bl sub_0201F82C
	add r1, r0, #0
	mov r0, #0
	mov r2, #4
	bl sub_020D2CA0
	add r1, r0, #0
	mov r0, #0xa0
	bl sub_0201F834
	ldr r1, _0201A330 ; =0x021D110C
	str r0, [r1, #0x18]
	mov r0, #0x20
	bl sub_0201F82C
	add r1, r0, #0
	mov r0, #0
	mov r2, #4
	bl sub_020D2CA0
	add r1, r0, #0
	mov r0, #0x20
	bl sub_0201F834
	ldr r1, _0201A330 ; =0x021D110C
	str r0, [r1, #0x1c]
	mov r0, #0x20
	bl sub_0201F82C
	add r1, r0, #0
	mov r0, #0
	mov r2, #4
	bl sub_020D2CA0
	add r1, r0, #0
	mov r0, #0x20
	bl sub_0201F834
	ldr r1, _0201A330 ; =0x021D110C
	str r0, [r1, #0x20]
	mov r0, #4
	bl sub_0201F82C
	add r1, r0, #0
	mov r0, #0
	mov r2, #4
	bl sub_020D2CA0
	add r1, r0, #0
	mov r0, #4
	bl sub_0201F834
	ldr r1, _0201A330 ; =0x021D110C
	str r0, [r1, #0x24]
	bl sub_020CD978
	ldr r2, _0201A334 ; =0x04001000
	ldr r0, _0201A338 ; =0xFFFEFFFF
	ldr r1, [r2]
	and r0, r1
	str r0, [r2]
	ldr r2, _0201A324 ; =0x04000304
	ldrh r1, [r2]
	lsr r0, r2, #0xb
	orr r0, r1
	strh r0, [r2]
	ldr r1, _0201A33C ; =sub_0201A08C
	mov r0, #1
	bl sub_020D1004
	mov r0, #1
	bl sub_020D11D4
	mov r0, #1
	lsl r0, r0, #0x12
	bl sub_020D11D4
	ldr r1, _0201A340 ; =0x04000208
	ldrh r0, [r1]
	mov r0, #1
	strh r0, [r1]
	bl sub_020CD944
	mov r0, #1
	bl sub_020D7F60
	bl sub_02027010
	mov r0, #0
	add r1, r0, #0
	bl sub_020D8728
	add r4, r0, #0
	mov r0, #0
	add r1, r4, #0
	mov r2, #4
	bl sub_020D2CA0
	add r5, r0, #0
	bne _0201A2F4
	bl GF_AssertFail
_0201A2F4:
	add r0, r5, #0
	add r1, r4, #0
	bl sub_020D8728
	ldr r0, _0201A330 ; =0x021D110C
	mov r1, #0
	str r1, [r0]
	str r1, [r0, #8]
	str r1, [r0, #0x10]
	str r1, [r0, #0x14]
	str r1, [r0, #0x74]
	str r1, [r0, #0x2c]
	ldr r0, _0201A344 ; =0x021D116C
	strb r1, [r0, #9]
	mov r0, #5
	mov r1, #9
	lsl r0, r0, #8
	lsl r1, r1, #0xa
	bl sub_020DC9DC
	mov r0, #0
	bl sub_0201FFB0
	pop {r3, r4, r5, pc}
	.align 2, 0
_0201A324: .word 0x04000304
_0201A328: .word 0xFFFFFDF1
_0201A32C: .word 0x0000020E
_0201A330: .word 0x021D110C
_0201A334: .word 0x04001000
_0201A338: .word 0xFFFEFFFF
_0201A33C: .word sub_0201A08C
_0201A340: .word 0x04000208
_0201A344: .word 0x021D116C
	thumb_func_end sub_0201A200

	thumb_func_start sub_0201A348
sub_0201A348: ; 0x0201A348
	push {r3, lr}
	ldr r0, _0201A398 ; =0x000001FF
	bl sub_020CE630
	mov r1, #0x1a
	mov r2, #0x29
	mov r0, #0
	lsl r1, r1, #0x16
	lsl r2, r2, #0xe
	bl sub_020D4858
	bl sub_020CEB60
	mov r1, #7
	mov r2, #1
	mov r0, #0xc0
	lsl r1, r1, #0x18
	lsl r2, r2, #0xa
	bl sub_020D4858
	mov r2, #1
	ldr r1, _0201A39C ; =0x07000400
	mov r0, #0xc0
	lsl r2, r2, #0xa
	bl sub_020D4858
	mov r1, #5
	mov r2, #1
	mov r0, #0
	lsl r1, r1, #0x18
	lsl r2, r2, #0xa
	bl sub_020D4858
	mov r2, #1
	ldr r1, _0201A3A0 ; =0x05000400
	mov r0, #0
	lsl r2, r2, #0xa
	bl sub_020D4858
	pop {r3, pc}
	.align 2, 0
_0201A398: .word 0x000001FF
_0201A39C: .word 0x07000400
_0201A3A0: .word 0x05000400
	thumb_func_end sub_0201A348

	thumb_func_start sub_0201A3A4
sub_0201A3A4: ; 0x0201A3A4
	push {r4, r5, r6, lr}
	sub sp, #0x48
	add r6, r0, #0
	add r4, r1, #0
	add r0, sp, #0
	bl FS_InitFile
	add r0, sp, #0
	add r1, r4, #0
	bl sub_020D8278
	cmp r0, #0
	beq _0201A3F0
	ldr r1, [sp, #0x28]
	ldr r0, [sp, #0x24]
	sub r5, r1, r0
	add r0, r6, #0
	add r1, r5, #0
	bl sub_0201AA8C
	add r4, r0, #0
	beq _0201A3E8
	add r0, sp, #0
	add r1, r4, #0
	add r2, r5, #0
	bl sub_020D83CC
	cmp r5, r0
	beq _0201A3E8
	add r0, r6, #0
	add r1, r4, #0
	bl sub_0201AB80
	mov r4, #0
_0201A3E8:
	add r0, sp, #0
	bl FS_CloseFile
	b _0201A3F2
_0201A3F0:
	mov r4, #0
_0201A3F2:
	add r0, r4, #0
	add sp, #0x48
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0201A3A4

	thumb_func_start sub_0201A3F8
sub_0201A3F8: ; 0x0201A3F8
	push {r3, r4, r5, lr}
	sub sp, #0x48
	add r5, r0, #0
	add r0, sp, #0
	add r4, r1, #0
	bl FS_InitFile
	add r0, sp, #0
	add r1, r5, #0
	bl sub_020D8278
	cmp r0, #0
	beq _0201A42A
	ldr r1, [sp, #0x28]
	ldr r0, [sp, #0x24]
	sub r2, r1, r0
	ldr r1, [r4]
	cmp r1, #0
	beq _0201A424
	add r0, sp, #0
	bl sub_020D83CC
_0201A424:
	add r0, sp, #0
	bl FS_CloseFile
_0201A42A:
	add sp, #0x48
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0201A3F8

	thumb_func_start sub_0201A430
sub_0201A430: ; 0x0201A430
	push {r3, r4, r5, r6, r7, lr}
	mov r6, #0
	ldr r5, _0201A454 ; =0x021D157C
	mov r4, #0x7f
	sub r7, r6, #1
_0201A43A:
	ldr r0, [r5]
	cmp r0, #0
	beq _0201A448
	bl sub_0201AB0C
	str r6, [r5]
	str r6, [r5, #4]
_0201A448:
	sub r4, r4, #1
	sub r5, #8
	cmp r4, r7
	bgt _0201A43A
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0201A454: .word 0x021D157C
	thumb_func_end sub_0201A430

	thumb_func_start sub_0201A458
sub_0201A458: ; 0x0201A458
	push {r3, lr}
	sub sp, #8
	ldr r0, _0201A4A4 ; =0x021D110C
	mov r2, #0
	str r2, [r0, #0x34]
	str r2, [r0, #0x38]
	str r2, [r0, #0x3c]
	str r2, [r0, #0x40]
	str r2, [r0, #0x44]
	str r2, [r0, #0x48]
	str r2, [r0, #0x4c]
	str r2, [r0, #0x50]
	mov r1, #4
	str r1, [r0, #0x54]
	mov r1, #8
	str r1, [r0, #0x58]
	ldr r0, _0201A4A8 ; =0x021D114C
	strh r2, [r0, #0x20]
	strh r2, [r0, #0x22]
	strh r2, [r0, #0x24]
	strh r2, [r0, #0x26]
	ldr r0, _0201A4AC ; =0x021D116C
	strb r2, [r0, #8]
	bl sub_020D9EF0
	bl sub_020210A0
	add r0, sp, #0
	bl sub_020D9F68
	cmp r0, #1
	bne _0201A49E
	add r0, sp, #0
	bl sub_020D9FFC
_0201A49E:
	add sp, #8
	pop {r3, pc}
	nop
_0201A4A4: .word 0x021D110C
_0201A4A8: .word 0x021D114C
_0201A4AC: .word 0x021D116C
	thumb_func_end sub_0201A458

	thumb_func_start sub_0201A4B0
sub_0201A4B0: ; 0x0201A4B0
	ldr r1, _0201A4B8 ; =0x021D116C
	strb r0, [r1, #0xa]
	bx lr
	nop
_0201A4B8: .word 0x021D116C
	thumb_func_end sub_0201A4B0

	thumb_func_start sub_0201A4BC
sub_0201A4BC: ; 0x0201A4BC
	ldr r1, _0201A4C8 ; =0x021D116C
	ldrb r2, [r1, #0xb]
	orr r0, r2
	strb r0, [r1, #0xb]
	bx lr
	nop
_0201A4C8: .word 0x021D116C
	thumb_func_end sub_0201A4BC

	thumb_func_start sub_0201A4CC
sub_0201A4CC: ; 0x0201A4CC
	ldr r1, _0201A4D8 ; =0x021D116C
	mvn r0, r0
	ldrb r2, [r1, #0xb]
	and r0, r2
	strb r0, [r1, #0xb]
	bx lr
	.align 2, 0
_0201A4D8: .word 0x021D116C
	thumb_func_end sub_0201A4CC

	thumb_func_start ReadKeypadAndTouchpad
ReadKeypadAndTouchpad: ; 0x0201A4DC
	push {r4, lr}
	sub sp, #0x10
	ldr r2, _0201A5D0 ; =0x027FFFA8
	mov r0, #2
	ldrh r1, [r2]
	lsl r0, r0, #0xe
	and r0, r1
	asr r0, r0, #0xf
	beq _0201A502
	ldr r0, _0201A5D4 ; =0x021D110C
	mov r1, #0
	str r1, [r0, #0x48]
	str r1, [r0, #0x44]
	str r1, [r0, #0x4c]
	ldr r0, _0201A5D8 ; =0x021D114C
	add sp, #0x10
	strh r1, [r0, #0x24]
	strh r1, [r0, #0x26]
	pop {r4, pc}
_0201A502:
	ldr r0, _0201A5DC ; =0x04000130
	ldrh r1, [r0]
	ldrh r0, [r2]
	orr r1, r0
	ldr r0, _0201A5E0 ; =0x00002FFF
	eor r1, r0
	and r0, r1
	lsl r0, r0, #0x10
	ldr r1, _0201A5D4 ; =0x021D110C
	lsr r2, r0, #0x10
	ldr r0, [r1, #0x5c]
	orr r0, r2
	mov r2, #0
	str r2, [r1, #0x5c]
	ldr r2, [r1, #0x38]
	add r3, r0, #0
	eor r3, r2
	and r3, r0
	str r3, [r1, #0x3c]
	str r3, [r1, #0x40]
	cmp r0, #0
	beq _0201A542
	cmp r2, r0
	bne _0201A542
	ldr r2, [r1, #0x50]
	sub r2, r2, #1
	str r2, [r1, #0x50]
	bne _0201A548
	str r0, [r1, #0x40]
	ldr r2, [r1, #0x54]
	str r2, [r1, #0x50]
	b _0201A548
_0201A542:
	ldr r1, _0201A5D4 ; =0x021D110C
	ldr r2, [r1, #0x58]
	str r2, [r1, #0x50]
_0201A548:
	ldr r1, _0201A5D4 ; =0x021D110C
	str r0, [r1, #0x38]
	ldr r2, [r1, #0x3c]
	str r2, [r1, #0x48]
	str r0, [r1, #0x44]
	ldr r0, [r1, #0x40]
	str r0, [r1, #0x4c]
	bl sub_0201A5E8
	ldr r0, _0201A5E4 ; =0x021D116C
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _0201A574
	add r4, sp, #8
_0201A564:
	bl sub_020DA124
	add r0, r4, #0
	bl sub_020DA1B8
	cmp r0, #0
	bne _0201A564
	b _0201A57A
_0201A574:
	add r0, sp, #8
	bl sub_020DA3A0
_0201A57A:
	add r0, sp, #0
	add r1, sp, #8
	bl sub_020DA6E0
	add r1, sp, #0
	ldrh r3, [r1, #6]
	cmp r3, #0
	bne _0201A596
	ldrh r2, [r1]
	ldr r0, _0201A5D8 ; =0x021D114C
	strh r2, [r0, #0x20]
	ldrh r1, [r1, #2]
	strh r1, [r0, #0x22]
	b _0201A5BA
_0201A596:
	ldr r0, _0201A5D8 ; =0x021D114C
	ldrh r2, [r0, #0x26]
	cmp r2, #0
	beq _0201A5B6
	cmp r3, #1
	beq _0201A5AA
	cmp r3, #2
	beq _0201A5B0
	cmp r3, #3
	b _0201A5BA
_0201A5AA:
	ldrh r1, [r1, #2]
	strh r1, [r0, #0x22]
	b _0201A5BA
_0201A5B0:
	ldrh r1, [r1]
	strh r1, [r0, #0x20]
	b _0201A5BA
_0201A5B6:
	mov r0, #0
	strh r0, [r1, #4]
_0201A5BA:
	add r0, sp, #0
	ldrh r2, [r0, #4]
	ldr r0, _0201A5D8 ; =0x021D114C
	ldrh r1, [r0, #0x26]
	eor r1, r2
	and r1, r2
	strh r1, [r0, #0x24]
	strh r2, [r0, #0x26]
	add sp, #0x10
	pop {r4, pc}
	nop
_0201A5D0: .word 0x027FFFA8
_0201A5D4: .word 0x021D110C
_0201A5D8: .word 0x021D114C
_0201A5DC: .word 0x04000130
_0201A5E0: .word 0x00002FFF
_0201A5E4: .word 0x021D116C
	thumb_func_end ReadKeypadAndTouchpad

	thumb_func_start sub_0201A5E8
sub_0201A5E8: ; 0x0201A5E8
	ldr r0, _0201A710 ; =0x021D110C
	ldr r1, [r0, #0x34]
	cmp r1, #3
	bls _0201A5F2
	b _0201A70C
_0201A5F2:
	add r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add pc, r1
_0201A5FE: ; jump table
	.short _0201A70C - _0201A5FE - 2 ; case 0
	.short _0201A606 - _0201A5FE - 2 ; case 1
	.short _0201A63C - _0201A5FE - 2 ; case 2
	.short _0201A6C2 - _0201A5FE - 2 ; case 3
_0201A606:
	ldr r2, [r0, #0x48]
	mov r1, #8
	add r3, r2, #0
	tst r3, r1
	beq _0201A616
	lsl r1, r1, #7
	orr r1, r2
	str r1, [r0, #0x48]
_0201A616:
	ldr r1, _0201A710 ; =0x021D110C
	mov r0, #8
	ldr r2, [r1, #0x44]
	add r3, r2, #0
	tst r3, r0
	beq _0201A628
	lsl r0, r0, #7
	orr r0, r2
	str r0, [r1, #0x44]
_0201A628:
	ldr r1, _0201A710 ; =0x021D110C
	mov r0, #8
	ldr r2, [r1, #0x4c]
	add r3, r2, #0
	tst r3, r0
	beq _0201A70C
	lsl r0, r0, #7
	orr r0, r2
	str r0, [r1, #0x4c]
	bx lr
_0201A63C:
	ldr r3, [r0, #0x48]
	mov r0, #1
	lsl r0, r0, #0xa
	add r2, r3, #0
	mov r1, #0
	tst r2, r0
	beq _0201A64E
	lsl r0, r0, #1
	orr r1, r0
_0201A64E:
	mov r0, #2
	lsl r0, r0, #0xa
	add r2, r3, #0
	tst r2, r0
	beq _0201A65C
	lsr r0, r0, #1
	orr r1, r0
_0201A65C:
	ldr r2, _0201A710 ; =0x021D110C
	ldr r0, _0201A714 ; =0x0000F3FF
	ldr r3, [r2, #0x48]
	and r0, r3
	orr r0, r1
	str r0, [r2, #0x48]
	ldr r3, [r2, #0x44]
	mov r1, #1
	lsl r1, r1, #0xa
	add r2, r3, #0
	mov r0, #0
	tst r2, r1
	beq _0201A67A
	lsl r1, r1, #1
	orr r0, r1
_0201A67A:
	mov r1, #2
	lsl r1, r1, #0xa
	add r2, r3, #0
	tst r2, r1
	beq _0201A688
	lsr r1, r1, #1
	orr r0, r1
_0201A688:
	ldr r2, _0201A710 ; =0x021D110C
	ldr r1, _0201A714 ; =0x0000F3FF
	ldr r3, [r2, #0x44]
	and r1, r3
	orr r0, r1
	str r0, [r2, #0x44]
	ldr r3, [r2, #0x4c]
	mov r1, #1
	lsl r1, r1, #0xa
	add r2, r3, #0
	mov r0, #0
	tst r2, r1
	beq _0201A6A6
	lsl r1, r1, #1
	orr r0, r1
_0201A6A6:
	mov r1, #2
	lsl r1, r1, #0xa
	add r2, r3, #0
	tst r2, r1
	beq _0201A6B4
	lsr r1, r1, #1
	orr r0, r1
_0201A6B4:
	ldr r2, _0201A710 ; =0x021D110C
	ldr r1, _0201A714 ; =0x0000F3FF
	ldr r3, [r2, #0x4c]
	and r1, r3
	orr r0, r1
	str r0, [r2, #0x4c]
	bx lr
_0201A6C2:
	mov r1, #2
	ldr r2, [r0, #0x48]
	lsl r1, r1, #8
	tst r1, r2
	beq _0201A6D2
	mov r1, #1
	orr r1, r2
	str r1, [r0, #0x48]
_0201A6D2:
	ldr r1, _0201A710 ; =0x021D110C
	mov r0, #2
	ldr r2, [r1, #0x44]
	lsl r0, r0, #8
	tst r0, r2
	beq _0201A6E4
	mov r0, #1
	orr r0, r2
	str r0, [r1, #0x44]
_0201A6E4:
	ldr r1, _0201A710 ; =0x021D110C
	mov r0, #2
	ldr r2, [r1, #0x4c]
	lsl r0, r0, #8
	tst r0, r2
	beq _0201A6F6
	mov r0, #1
	orr r0, r2
	str r0, [r1, #0x4c]
_0201A6F6:
	ldr r1, _0201A710 ; =0x021D110C
	ldr r0, _0201A718 ; =0x0000FCFF
	ldr r2, [r1, #0x48]
	and r2, r0
	str r2, [r1, #0x48]
	ldr r2, [r1, #0x44]
	and r2, r0
	str r2, [r1, #0x44]
	ldr r2, [r1, #0x4c]
	and r0, r2
	str r0, [r1, #0x4c]
_0201A70C:
	bx lr
	nop
_0201A710: .word 0x021D110C
_0201A714: .word 0x0000F3FF
_0201A718: .word 0x0000FCFF
	thumb_func_end sub_0201A5E8

	thumb_func_start sub_0201A71C
sub_0201A71C: ; 0x0201A71C
	ldr r2, _0201A724 ; =0x021D110C
	str r0, [r2, #0x54]
	str r1, [r2, #0x58]
	bx lr
	.align 2, 0
_0201A724: .word 0x021D110C
	thumb_func_end sub_0201A71C

	thumb_func_start sub_0201A728
sub_0201A728: ; 0x0201A728
	ldr r1, _0201A734 ; =0x021D116C
	ldrb r2, [r1, #0xc]
	orr r0, r2
	strb r0, [r1, #0xc]
	bx lr
	nop
_0201A734: .word 0x021D116C
	thumb_func_end sub_0201A728

	thumb_func_start sub_0201A738
sub_0201A738: ; 0x0201A738
	ldr r1, _0201A744 ; =0x021D116C
	mvn r0, r0
	ldrb r2, [r1, #0xc]
	and r0, r2
	strb r0, [r1, #0xc]
	bx lr
	.align 2, 0
_0201A744: .word 0x021D116C
	thumb_func_end sub_0201A738

	thumb_func_start sub_0201A748
sub_0201A748: ; 0x0201A748
	push {r4, lr}
	add r4, r0, #0
	ldr r0, _0201A76C ; =0x021D110C
	ldr r0, [r0, #0x74]
	cmp r0, #0
	beq _0201A758
	bl GF_AssertFail
_0201A758:
	add r0, r4, #0
	mov r1, #4
	bl sub_0201AACC
	ldr r1, _0201A76C ; =0x021D110C
	str r0, [r1, #0x74]
	ldr r1, _0201A770 ; =0x2F93A1BC
	str r1, [r0]
	pop {r4, pc}
	nop
_0201A76C: .word 0x021D110C
_0201A770: .word 0x2F93A1BC
	thumb_func_end sub_0201A748

	thumb_func_start sub_0201A774
sub_0201A774: ; 0x0201A774
	push {r3, lr}
	ldr r0, _0201A798 ; =0x021D110C
	ldr r0, [r0, #0x74]
	cmp r0, #0
	bne _0201A782
	bl GF_AssertFail
_0201A782:
	ldr r0, _0201A798 ; =0x021D110C
	mov r2, #0
	ldr r1, [r0, #0x74]
	str r2, [r1]
	ldr r0, [r0, #0x74]
	bl sub_0201AB0C
	ldr r0, _0201A798 ; =0x021D110C
	mov r1, #0
	str r1, [r0, #0x74]
	pop {r3, pc}
	.align 2, 0
_0201A798: .word 0x021D110C
	thumb_func_end sub_0201A774

	thumb_func_start sub_0201A79C
sub_0201A79C: ; 0x0201A79C
	ldr r0, _0201A7B4 ; =0x021D110C
	ldr r0, [r0, #0x74]
	cmp r0, #0
	beq _0201A7B0
	ldr r1, [r0]
	ldr r0, _0201A7B8 ; =0x2F93A1BC
	cmp r1, r0
	bne _0201A7B0
	mov r0, #1
	bx lr
_0201A7B0:
	mov r0, #0
	bx lr
	.align 2, 0
_0201A7B4: .word 0x021D110C
_0201A7B8: .word 0x2F93A1BC
	thumb_func_end sub_0201A79C

	thumb_func_start sub_0201A7BC
sub_0201A7BC: ; 0x0201A7BC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r4, r1, #0
	add r5, r0, #0
	add r0, r4, #0
	str r0, [sp, #4]
	add r0, #0x18
	add r6, r2, #0
	str r0, [sp, #4]
	cmp r6, r0
	bhs _0201A7D4
	add r6, r0, #0
_0201A7D4:
	cmp r3, #0
	beq _0201A7F2
	mov r0, #3
	tst r0, r3
	beq _0201A7E8
	mov r0, #3
_0201A7E0:
	add r3, r3, #1
	add r1, r3, #0
	tst r1, r0
	bne _0201A7E0
_0201A7E8:
	mov r0, #0
	add r1, r3, #0
	mov r2, #4
	bl sub_020D2CA0
_0201A7F2:
	ldr r1, [sp, #4]
	lsl r7, r6, #1
	lsl r2, r1, #1
	add r1, r1, r2
	add r1, r1, #1
	lsl r1, r1, #2
	add r1, r7, r1
	mov r0, #0
	add r1, r6, r1
	mov r2, #4
	bl sub_020D2CA0
	ldr r1, _0201A8E4 ; =0x021D1584
	str r0, [r1]
	ldr r1, [sp, #4]
	add r1, r1, #1
	lsl r1, r1, #2
	add r1, r0, r1
	ldr r0, _0201A8E4 ; =0x021D1584
	str r1, [r0, #4]
	ldr r0, [sp, #4]
	lsl r0, r0, #2
	add r2, r1, r0
	ldr r1, _0201A8E4 ; =0x021D1584
	str r2, [r1, #8]
	add r1, r2, r0
	ldr r0, _0201A8E4 ; =0x021D1584
	str r1, [r0, #0xc]
	add r1, r1, r7
	str r1, [r0, #0x10]
	strh r6, [r0, #0x14]
	strh r4, [r0, #0x16]
	ldr r0, [sp, #4]
	mov r7, #0
	lsl r0, r0, #0x10
	lsr r1, r0, #0x10
	ldr r0, _0201A8E4 ; =0x021D1584
	cmp r4, #0
	strh r1, [r0, #0x1a]
	strh r1, [r0, #0x18]
	bls _0201A894
	str r7, [sp]
_0201A846:
	ldr r0, [r5, #4]
	cmp r0, #0
	beq _0201A850
	cmp r0, #2
	beq _0201A85C
_0201A850:
	ldr r1, [r5]
	mov r0, #0
	mov r2, #4
	bl sub_020D2CA0
	b _0201A866
_0201A85C:
	ldr r1, [r5]
	mov r0, #2
	mov r2, #4
	bl sub_020D2D0C
_0201A866:
	cmp r0, #0
	beq _0201A882
	ldr r1, [r5]
	mov r2, #0
	bl sub_020B535C
	ldr r1, _0201A8E4 ; =0x021D1584
	ldr r2, [r1]
	ldr r1, [sp]
	str r0, [r2, r1]
	ldr r0, _0201A8E4 ; =0x021D1584
	ldr r0, [r0, #0x10]
	strb r7, [r0, r7]
	b _0201A886
_0201A882:
	bl GF_AssertFail
_0201A886:
	ldr r0, [sp]
	add r7, r7, #1
	add r0, r0, #4
	add r5, #8
	str r0, [sp]
	cmp r7, r4
	blo _0201A846
_0201A894:
	ldr r0, [sp, #4]
	add r1, r0, #1
	cmp r4, r1
	bhs _0201A8B4
	ldr r3, _0201A8E4 ; =0x021D1584
	lsl r2, r4, #2
	mov r0, #0
_0201A8A2:
	ldr r5, [r3]
	str r0, [r5, r2]
	ldrh r7, [r3, #0x1a]
	ldr r5, [r3, #0x10]
	add r2, r2, #4
	strb r7, [r5, r4]
	add r4, r4, #1
	cmp r4, r1
	blo _0201A8A2
_0201A8B4:
	cmp r4, r6
	bhs _0201A8C6
	ldr r0, _0201A8E4 ; =0x021D1584
_0201A8BA:
	ldrh r2, [r0, #0x1a]
	ldr r1, [r0, #0x10]
	strb r2, [r1, r4]
	add r4, r4, #1
	cmp r4, r6
	blo _0201A8BA
_0201A8C6:
	mov r4, #0
	cmp r6, #0
	bls _0201A8DE
	ldr r0, _0201A8E4 ; =0x021D1584
	add r3, r4, #0
	add r2, r4, #0
_0201A8D2:
	ldr r1, [r0, #0xc]
	add r4, r4, #1
	strh r2, [r1, r3]
	add r3, r3, #2
	cmp r4, r6
	blo _0201A8D2
_0201A8DE:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0201A8E4: .word 0x021D1584
	thumb_func_end sub_0201A7BC

	thumb_func_start sub_0201A8E8
sub_0201A8E8: ; 0x0201A8E8
	ldr r1, _0201A90C ; =0x021D1584
	ldrh r0, [r1, #0x16]
	ldrh r3, [r1, #0x18]
	cmp r0, r3
	bge _0201A906
	ldr r2, [r1]
	lsl r1, r0, #2
	add r2, r2, r1
_0201A8F8:
	ldr r1, [r2]
	cmp r1, #0
	beq _0201A90A
	add r0, r0, #1
	add r2, r2, #4
	cmp r0, r3
	blt _0201A8F8
_0201A906:
	mov r0, #0
	mvn r0, r0
_0201A90A:
	bx lr
	.align 2, 0
_0201A90C: .word 0x021D1584
	thumb_func_end sub_0201A8E8

	thumb_func_start sub_0201A910
sub_0201A910: ; 0x0201A910
	push {r3, lr}
	mov r3, #4
	bl sub_0201A928
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_0201A910

	thumb_func_start sub_0201A91C
sub_0201A91C: ; 0x0201A91C
	push {r3, lr}
	mov r3, #3
	mvn r3, r3
	bl sub_0201A928
	pop {r3, pc}
	thumb_func_end sub_0201A91C

	thumb_func_start sub_0201A928
sub_0201A928: ; 0x0201A928
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r4, r0, #0
	add r5, r1, #0
	str r2, [sp]
	add r7, r3, #0
	bl sub_020D3A9C
	cmp r0, #0x12
	bne _0201A940
	bl GF_AssertFail
_0201A940:
	ldr r1, _0201A9C0 ; =0x021D1584
	ldr r0, [r1, #0x10]
	ldrh r3, [r1, #0x1a]
	ldrb r2, [r0, r5]
	cmp r3, r2
	bne _0201A9B6
	ldrb r0, [r0, r4]
	ldr r1, [r1]
	lsl r0, r0, #2
	ldr r6, [r1, r0]
	cmp r6, #0
	beq _0201A9B0
	ldr r1, [sp]
	add r0, r6, #0
	add r2, r7, #0
	bl sub_020B53A0
	str r0, [sp, #4]
	cmp r0, #0
	beq _0201A9AA
	bl sub_0201A8E8
	add r7, r0, #0
	bmi _0201A9A4
	ldr r0, [sp, #4]
	ldr r1, [sp]
	mov r2, #0
	lsl r4, r7, #2
	bl sub_020B535C
	ldr r1, _0201A9C0 ; =0x021D1584
	ldr r2, [r1]
	str r0, [r2, r4]
	ldr r0, [r1]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0201A99E
	ldr r0, [r1, #4]
	str r6, [r0, r4]
	ldr r0, [sp, #4]
	ldr r2, [r1, #8]
	add sp, #8
	str r0, [r2, r4]
	ldr r0, [r1, #0x10]
	strb r7, [r0, r5]
	mov r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0201A99E:
	bl GF_AssertFail
	b _0201A9BA
_0201A9A4:
	bl GF_AssertFail
	b _0201A9BA
_0201A9AA:
	bl GF_AssertFail
	b _0201A9BA
_0201A9B0:
	bl GF_AssertFail
	b _0201A9BA
_0201A9B6:
	bl GF_AssertFail
_0201A9BA:
	mov r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0201A9C0: .word 0x021D1584
	thumb_func_end sub_0201A928

	thumb_func_start sub_0201A9C4
sub_0201A9C4: ; 0x0201A9C4
	push {r4, lr}
	add r4, r0, #0
	bl sub_020D3A9C
	cmp r0, #0x12
	bne _0201A9D4
	bl GF_AssertFail
_0201A9D4:
	ldr r0, _0201AA34 ; =0x021D1584
	ldr r1, [r0]
	ldr r0, [r0, #0x10]
	ldrb r0, [r0, r4]
	lsl r0, r0, #2
	ldr r0, [r1, r0]
	cmp r0, #0
	beq _0201AA32
	bl sub_020B5394
	ldr r1, _0201AA34 ; =0x021D1584
	ldr r0, [r1, #0x10]
	ldrb r0, [r0, r4]
	lsl r2, r0, #2
	ldr r0, [r1, #4]
	ldr r1, [r1, #8]
	ldr r0, [r0, r2]
	ldr r1, [r1, r2]
	cmp r0, #0
	beq _0201AA06
	cmp r1, #0
	beq _0201AA06
	bl sub_020B5530
	b _0201AA0A
_0201AA06:
	bl GF_AssertFail
_0201AA0A:
	ldr r1, _0201AA34 ; =0x021D1584
	mov r0, #0
	ldr r2, [r1, #0x10]
	ldr r3, [r1]
	ldrb r2, [r2, r4]
	lsl r2, r2, #2
	str r0, [r3, r2]
	ldr r2, [r1, #0x10]
	ldr r3, [r1, #4]
	ldrb r2, [r2, r4]
	lsl r2, r2, #2
	str r0, [r3, r2]
	ldr r2, [r1, #0x10]
	ldr r3, [r1, #8]
	ldrb r2, [r2, r4]
	lsl r2, r2, #2
	str r0, [r3, r2]
	ldrh r2, [r1, #0x1a]
	ldr r0, [r1, #0x10]
	strb r2, [r0, r4]
_0201AA32:
	pop {r4, pc}
	.align 2, 0
_0201AA34: .word 0x021D1584
	thumb_func_end sub_0201A9C4

	thumb_func_start sub_0201AA38
sub_0201AA38: ; 0x0201AA38
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r4, r1, #0
	add r7, r2, #0
	add r6, r3, #0
	cmp r5, #0
	bne _0201AA4A
	bl GF_AssertFail
_0201AA4A:
	bl sub_020D3A38
	add r4, #0x10
	str r0, [sp]
	add r0, r5, #0
	add r1, r4, #0
	add r2, r7, #0
	bl sub_020B53A0
	add r4, r0, #0
	ldr r0, [sp]
	bl sub_020D3A4C
	cmp r4, #0
	beq _0201AA78
	ldr r1, [r4, #0xc]
	mov r0, #0xff
	bic r1, r0
	lsl r0, r6, #0x18
	lsr r0, r0, #0x18
	orr r0, r1
	str r0, [r4, #0xc]
	add r4, #0x10
_0201AA78:
	add r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0201AA38

	thumb_func_start sub_0201AA7C
sub_0201AA7C: ; 0x0201AA7C
	push {r3, lr}
	bl sub_02037D78
	cmp r0, #0
	beq _0201AA8A
	bl sub_02096338
_0201AA8A:
	pop {r3, pc}
	thumb_func_end sub_0201AA7C

	thumb_func_start sub_0201AA8C
sub_0201AA8C: ; 0x0201AA8C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, _0201AAC8 ; =0x021D1584
	mov r4, #0
	ldrh r2, [r0, #0x14]
	cmp r5, r2
	bhs _0201AAAE
	ldr r2, [r0]
	ldr r0, [r0, #0x10]
	add r3, r5, #0
	ldrb r0, [r0, r5]
	lsl r0, r0, #2
	ldr r0, [r2, r0]
	mov r2, #4
	bl sub_0201AA38
	add r4, r0, #0
_0201AAAE:
	cmp r4, #0
	beq _0201AAC0
	ldr r0, _0201AAC8 ; =0x021D1584
	lsl r1, r5, #1
	ldr r2, [r0, #0xc]
	ldrh r0, [r2, r1]
	add r0, r0, #1
	strh r0, [r2, r1]
	b _0201AAC4
_0201AAC0:
	bl sub_0201AA7C
_0201AAC4:
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_0201AAC8: .word 0x021D1584
	thumb_func_end sub_0201AA8C

	thumb_func_start sub_0201AACC
sub_0201AACC: ; 0x0201AACC
	push {r3, r4, r5, lr}
	ldr r2, _0201AB08 ; =0x021D1584
	add r5, r0, #0
	ldrh r0, [r2, #0x14]
	mov r4, #0
	cmp r5, r0
	bhs _0201AAEE
	ldr r0, [r2]
	ldr r2, [r2, #0x10]
	add r3, r5, #0
	ldrb r2, [r2, r5]
	lsl r2, r2, #2
	ldr r0, [r0, r2]
	sub r2, r4, #4
	bl sub_0201AA38
	add r4, r0, #0
_0201AAEE:
	cmp r4, #0
	beq _0201AB00
	ldr r0, _0201AB08 ; =0x021D1584
	lsl r1, r5, #1
	ldr r2, [r0, #0xc]
	ldrh r0, [r2, r1]
	add r0, r0, #1
	strh r0, [r2, r1]
	b _0201AB04
_0201AB00:
	bl sub_0201AA7C
_0201AB04:
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_0201AB08: .word 0x021D1584
	thumb_func_end sub_0201AACC

	thumb_func_start sub_0201AB0C
sub_0201AB0C: ; 0x0201AB0C
	push {r3, r4, r5, r6, r7, lr}
	add r6, r0, #0
	sub r0, r6, #4
	ldr r0, [r0]
	lsl r0, r0, #0x18
	lsr r4, r0, #0x18
	ldr r0, _0201AB7C ; =0x021D1584
	ldrh r1, [r0, #0x14]
	cmp r4, r1
	bhs _0201AB74
	ldr r1, [r0]
	ldr r0, [r0, #0x10]
	ldrb r0, [r0, r4]
	lsl r0, r0, #2
	ldr r7, [r1, r0]
	cmp r7, #0
	bne _0201AB32
	bl GF_AssertFail
_0201AB32:
	ldr r0, _0201AB7C ; =0x021D1584
	lsl r5, r4, #1
	ldr r0, [r0, #0xc]
	ldrh r0, [r0, r5]
	cmp r0, #0
	bne _0201AB44
	add r0, r4, #0
	bl sub_0201AC84
_0201AB44:
	ldr r0, _0201AB7C ; =0x021D1584
	ldr r0, [r0, #0xc]
	ldrh r0, [r0, r5]
	cmp r0, #0
	bne _0201AB52
	bl GF_AssertFail
_0201AB52:
	ldr r0, _0201AB7C ; =0x021D1584
	ldr r1, [r0, #0xc]
	ldrh r0, [r1, r5]
	sub r0, r0, #1
	strh r0, [r1, r5]
	bl sub_020D3A38
	sub r6, #0x10
	add r4, r0, #0
	add r0, r7, #0
	add r1, r6, #0
	bl sub_020B5530
	add r0, r4, #0
	bl sub_020D3A4C
	pop {r3, r4, r5, r6, r7, pc}
_0201AB74:
	bl GF_AssertFail
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0201AB7C: .word 0x021D1584
	thumb_func_end sub_0201AB0C

	thumb_func_start sub_0201AB80
sub_0201AB80: ; 0x0201AB80
	push {r4, r5, r6, lr}
	add r5, r0, #0
	add r4, r1, #0
	bl sub_020D3A9C
	cmp r0, #0x12
	bne _0201AB92
	bl GF_AssertFail
_0201AB92:
	ldr r0, _0201ABE8 ; =0x021D1584
	ldrh r1, [r0, #0x14]
	cmp r5, r1
	bhs _0201ABE2
	ldr r1, [r0]
	ldr r0, [r0, #0x10]
	ldrb r0, [r0, r5]
	lsl r0, r0, #2
	ldr r6, [r1, r0]
	cmp r6, #0
	bne _0201ABAC
	bl GF_AssertFail
_0201ABAC:
	sub r0, r4, #4
	ldr r0, [r0]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	cmp r0, r5
	beq _0201ABBC
	bl GF_AssertFail
_0201ABBC:
	sub r4, #0x10
	add r0, r6, #0
	add r1, r4, #0
	bl sub_020B5530
	ldr r0, _0201ABE8 ; =0x021D1584
	lsl r4, r5, #1
	ldr r0, [r0, #0xc]
	ldrh r0, [r0, r4]
	cmp r0, #0
	bne _0201ABD6
	bl GF_AssertFail
_0201ABD6:
	ldr r0, _0201ABE8 ; =0x021D1584
	ldr r1, [r0, #0xc]
	ldrh r0, [r1, r4]
	sub r0, r0, #1
	strh r0, [r1, r4]
	pop {r4, r5, r6, pc}
_0201ABE2:
	bl GF_AssertFail
	pop {r4, r5, r6, pc}
	.align 2, 0
_0201ABE8: .word 0x021D1584
	thumb_func_end sub_0201AB80

	thumb_func_start sub_0201ABEC
sub_0201ABEC: ; 0x0201ABEC
	push {r3, lr}
	ldr r1, _0201AC10 ; =0x021D1584
	ldrh r2, [r1, #0x14]
	cmp r0, r2
	bhs _0201AC06
	ldr r2, [r1]
	ldr r1, [r1, #0x10]
	ldrb r0, [r1, r0]
	lsl r0, r0, #2
	ldr r0, [r2, r0]
	bl sub_020B556C
	pop {r3, pc}
_0201AC06:
	bl GF_AssertFail
	mov r0, #0
	pop {r3, pc}
	nop
_0201AC10: .word 0x021D1584
	thumb_func_end sub_0201ABEC

	thumb_func_start sub_0201AC14
sub_0201AC14: ; 0x0201AC14
	push {r4, lr}
	ldr r4, _0201AC34 ; =0x021D1584
	ldrh r3, [r4, #0x14]
	cmp r1, r3
	bhs _0201AC2E
	ldr r3, [r4]
	ldr r4, [r4, #0x10]
	ldrb r1, [r4, r1]
	lsl r1, r1, #2
	ldr r1, [r3, r1]
	bl sub_020B59A4
	pop {r4, pc}
_0201AC2E:
	bl GF_AssertFail
	pop {r4, pc}
	.align 2, 0
_0201AC34: .word 0x021D1584
	thumb_func_end sub_0201AC14

	thumb_func_start sub_0201AC38
sub_0201AC38: ; 0x0201AC38
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	bl sub_020D3A9C
	cmp r0, #0x12
	bne _0201AC4A
	bl GF_AssertFail
_0201AC4A:
	add r0, r5, #0
	sub r0, #0x10
	bl sub_020B55A4
	add r4, #0x10
	cmp r0, r4
	blo _0201AC78
	sub r2, r5, #4
	ldr r0, _0201AC80 ; =0x021D1584
	ldr r2, [r2]
	ldr r1, [r0]
	lsl r2, r2, #0x18
	ldr r0, [r0, #0x10]
	lsr r2, r2, #0x18
	ldrb r0, [r0, r2]
	sub r5, #0x10
	add r2, r4, #0
	lsl r0, r0, #2
	ldr r0, [r1, r0]
	add r1, r5, #0
	bl sub_020B53D0
	pop {r3, r4, r5, pc}
_0201AC78:
	bl GF_AssertFail
	pop {r3, r4, r5, pc}
	nop
_0201AC80: .word 0x021D1584
	thumb_func_end sub_0201AC38

	thumb_func_start sub_0201AC84
sub_0201AC84: ; 0x0201AC84
	mov r0, #1
	bx lr
	thumb_func_end sub_0201AC84

	thumb_func_start sub_0201AC88
sub_0201AC88: ; 0x0201AC88
	push {r3, r4, r5, lr}
	mov r1, #0x5a
	lsl r1, r1, #2
	add r5, r0, #0
	bl sub_0201AA8C
	mov r2, #0x5a
	mov r1, #0
	lsl r2, r2, #2
	add r4, r0, #0
	bl sub_020E5B44
	str r5, [r4]
	mov r0, #0
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0201AC88

	thumb_func_start sub_0201ACAC
sub_0201ACAC: ; 0x0201ACAC
	ldr r0, [r0]
	bx lr
	thumb_func_end sub_0201ACAC

	thumb_func_start sub_0201ACB0
sub_0201ACB0: ; 0x0201ACB0
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r4, #4]
	ldr r2, [r4, #0xc]
	bl sub_020CD9FC
	ldr r0, [r4, #8]
	bl sub_020CDA64
	mov r2, #1
	lsl r2, r2, #0x1a
	ldr r1, [r2]
	ldr r0, _0201ACE4 ; =0xC7FFFFFF
	and r1, r0
	str r1, [r2]
	ldr r1, [r2]
	asr r0, r0, #3
	and r0, r1
	str r0, [r2]
	bl sub_02022C54
	bl sub_02022CBC
	pop {r4, pc}
	nop
_0201ACE4: .word 0xC7FFFFFF
	thumb_func_end sub_0201ACB0

	thumb_func_start sub_0201ACE8
sub_0201ACE8: ; 0x0201ACE8
	push {r3, lr}
	add r2, r0, #0
	cmp r1, #0
	bne _0201AD00
	ldr r0, [r2]
	ldr r1, [r2, #4]
	ldr r2, [r2, #0xc]
	bl sub_020CD9FC
	bl sub_02022C54
	pop {r3, pc}
_0201AD00:
	ldr r0, [r2, #8]
	bl sub_020CDA64
	bl sub_02022CBC
	pop {r3, pc}
	thumb_func_end sub_0201ACE8

	thumb_func_start sub_0201AD0C
sub_0201AD0C: ; 0x0201AD0C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	str r1, [sp, #4]
	str r3, [sp, #8]
	add r4, r2, #0
	str r0, [sp]
	ldrb r0, [r4, #0x10]
	ldr r1, [sp, #8]
	ldr r6, [sp, #0x30]
	bl sub_0201BA88
	add r5, r0, #0
	ldr r0, [sp, #4]
	cmp r0, #7
	bls _0201AD2C
	b _0201B14C
_0201AD2C:
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_0201AD38: ; jump table
	.short _0201AD48 - _0201AD38 - 2 ; case 0
	.short _0201ADA0 - _0201AD38 - 2 ; case 1
	.short _0201ADF8 - _0201AD38 - 2 ; case 2
	.short _0201AE9A - _0201AD38 - 2 ; case 3
	.short _0201AF3C - _0201AD38 - 2 ; case 4
	.short _0201AF94 - _0201AD38 - 2 ; case 5
	.short _0201AFEC - _0201AD38 - 2 ; case 6
	.short _0201B0AC - _0201AD38 - 2 ; case 7
_0201AD48:
	mov r0, #1
	add r1, r6, #0
	bl sub_02022C60
	ldrb r3, [r4, #0x14]
	ldrb r1, [r4, #0x12]
	ldrb r0, [r4, #0x11]
	ldrb r2, [r4, #0x13]
	lsl r6, r3, #0xd
	lsl r0, r0, #7
	lsl r3, r2, #2
	str r0, [sp, #0xc]
	ldr r2, _0201B090 ; =0x04000008
	lsl r7, r1, #8
	ldrh r1, [r2]
	mov r0, #0x43
	and r0, r1
	lsl r1, r5, #0xe
	orr r1, r0
	ldr r0, [sp, #0xc]
	orr r0, r1
	orr r0, r7
	orr r0, r3
	orr r0, r6
	strh r0, [r2]
	ldrh r1, [r2]
	mov r0, #3
	bic r1, r0
	ldrb r0, [r4, #0x15]
	orr r0, r1
	strh r0, [r2]
	ldr r0, [r4, #0x18]
	cmp r0, #0
	beq _0201AD96
	ldrh r1, [r2]
	mov r0, #0x40
	orr r0, r1
	strh r0, [r2]
	b _0201B14C
_0201AD96:
	ldrh r1, [r2]
	mov r0, #0x40
	bic r1, r0
	strh r1, [r2]
	b _0201B14C
_0201ADA0:
	mov r0, #2
	add r1, r6, #0
	bl sub_02022C60
	ldrb r3, [r4, #0x14]
	ldrb r1, [r4, #0x12]
	ldrb r0, [r4, #0x11]
	ldrb r2, [r4, #0x13]
	lsl r6, r3, #0xd
	lsl r0, r0, #7
	lsl r3, r2, #2
	str r0, [sp, #0x10]
	ldr r2, _0201B094 ; =0x0400000A
	lsl r7, r1, #8
	ldrh r1, [r2]
	mov r0, #0x43
	and r0, r1
	lsl r1, r5, #0xe
	orr r1, r0
	ldr r0, [sp, #0x10]
	orr r0, r1
	orr r0, r7
	orr r0, r3
	orr r0, r6
	strh r0, [r2]
	ldrh r1, [r2]
	mov r0, #3
	bic r1, r0
	ldrb r0, [r4, #0x15]
	orr r0, r1
	strh r0, [r2]
	ldr r0, [r4, #0x18]
	cmp r0, #0
	beq _0201ADEE
	ldrh r1, [r2]
	mov r0, #0x40
	orr r0, r1
	strh r0, [r2]
	b _0201B14C
_0201ADEE:
	ldrh r1, [r2]
	mov r0, #0x40
	bic r1, r0
	strh r1, [r2]
	b _0201B14C
_0201ADF8:
	mov r0, #4
	add r1, r6, #0
	bl sub_02022C60
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _0201AE0E
	cmp r0, #1
	beq _0201AE30
	cmp r0, #2
	beq _0201AE52
_0201AE0E:
	ldrb r1, [r4, #0x12]
	ldr r7, _0201B098 ; =0x0400000C
	ldrb r2, [r4, #0x13]
	lsl r3, r1, #8
	ldrb r0, [r4, #0x11]
	lsl r6, r2, #2
	ldrh r1, [r7]
	lsl r2, r0, #7
	mov r0, #0x43
	and r0, r1
	lsl r1, r5, #0xe
	orr r0, r1
	orr r0, r2
	orr r0, r3
	orr r0, r6
	strh r0, [r7]
	b _0201AE72
_0201AE30:
	ldrb r2, [r4, #0x13]
	ldrb r1, [r4, #0x12]
	ldrb r0, [r4, #0x16]
	lsl r3, r2, #2
	ldr r7, _0201B098 ; =0x0400000C
	lsl r2, r1, #8
	lsl r6, r0, #0xd
	ldrh r1, [r7]
	mov r0, #0x43
	and r0, r1
	lsl r1, r5, #0xe
	orr r0, r1
	orr r0, r2
	orr r0, r3
	orr r0, r6
	strh r0, [r7]
	b _0201AE72
_0201AE52:
	ldrb r1, [r4, #0x12]
	ldr r7, _0201B098 ; =0x0400000C
	ldrb r0, [r4, #0x16]
	lsl r3, r1, #8
	ldrb r2, [r4, #0x13]
	lsl r6, r0, #0xd
	ldrh r1, [r7]
	mov r0, #0x43
	lsl r2, r2, #2
	and r0, r1
	lsl r1, r5, #0xe
	orr r0, r1
	orr r0, r2
	orr r0, r3
	orr r0, r6
	strh r0, [r7]
_0201AE72:
	ldr r0, _0201B098 ; =0x0400000C
	mov r1, #3
	ldrh r2, [r0]
	bic r2, r1
	ldrb r1, [r4, #0x15]
	orr r1, r2
	strh r1, [r0]
	ldr r1, [r4, #0x18]
	cmp r1, #0
	beq _0201AE90
	ldrh r2, [r0]
	mov r1, #0x40
	orr r1, r2
	strh r1, [r0]
	b _0201B14C
_0201AE90:
	ldrh r2, [r0]
	mov r1, #0x40
	bic r2, r1
	strh r2, [r0]
	b _0201B14C
_0201AE9A:
	mov r0, #8
	add r1, r6, #0
	bl sub_02022C60
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _0201AEB0
	cmp r0, #1
	beq _0201AED2
	cmp r0, #2
	beq _0201AEF4
_0201AEB0:
	ldrb r1, [r4, #0x12]
	ldr r7, _0201B09C ; =0x0400000E
	ldrb r2, [r4, #0x13]
	lsl r3, r1, #8
	ldrb r0, [r4, #0x11]
	lsl r6, r2, #2
	ldrh r1, [r7]
	lsl r2, r0, #7
	mov r0, #0x43
	and r0, r1
	lsl r1, r5, #0xe
	orr r0, r1
	orr r0, r2
	orr r0, r3
	orr r0, r6
	strh r0, [r7]
	b _0201AF14
_0201AED2:
	ldrb r2, [r4, #0x13]
	ldrb r1, [r4, #0x12]
	ldrb r0, [r4, #0x16]
	lsl r3, r2, #2
	ldr r7, _0201B09C ; =0x0400000E
	lsl r2, r1, #8
	lsl r6, r0, #0xd
	ldrh r1, [r7]
	mov r0, #0x43
	and r0, r1
	lsl r1, r5, #0xe
	orr r0, r1
	orr r0, r2
	orr r0, r3
	orr r0, r6
	strh r0, [r7]
	b _0201AF14
_0201AEF4:
	ldrb r1, [r4, #0x12]
	ldr r7, _0201B09C ; =0x0400000E
	ldrb r0, [r4, #0x16]
	lsl r3, r1, #8
	ldrb r2, [r4, #0x13]
	lsl r6, r0, #0xd
	ldrh r1, [r7]
	mov r0, #0x43
	lsl r2, r2, #2
	and r0, r1
	lsl r1, r5, #0xe
	orr r0, r1
	orr r0, r2
	orr r0, r3
	orr r0, r6
	strh r0, [r7]
_0201AF14:
	ldr r0, _0201B09C ; =0x0400000E
	mov r1, #3
	ldrh r2, [r0]
	bic r2, r1
	ldrb r1, [r4, #0x15]
	orr r1, r2
	strh r1, [r0]
	ldr r1, [r4, #0x18]
	cmp r1, #0
	beq _0201AF32
	ldrh r2, [r0]
	mov r1, #0x40
	orr r1, r2
	strh r1, [r0]
	b _0201B14C
_0201AF32:
	ldrh r2, [r0]
	mov r1, #0x40
	bic r2, r1
	strh r2, [r0]
	b _0201B14C
_0201AF3C:
	mov r0, #1
	add r1, r6, #0
	bl sub_02022CC8
	ldrb r3, [r4, #0x14]
	ldrb r1, [r4, #0x12]
	ldrb r0, [r4, #0x11]
	ldrb r2, [r4, #0x13]
	lsl r6, r3, #0xd
	lsl r0, r0, #7
	lsl r3, r2, #2
	str r0, [sp, #0x14]
	ldr r2, _0201B0A0 ; =0x04001008
	lsl r7, r1, #8
	ldrh r1, [r2]
	mov r0, #0x43
	and r0, r1
	lsl r1, r5, #0xe
	orr r1, r0
	ldr r0, [sp, #0x14]
	orr r0, r1
	orr r0, r7
	orr r0, r3
	orr r0, r6
	strh r0, [r2]
	ldrh r1, [r2]
	mov r0, #3
	bic r1, r0
	ldrb r0, [r4, #0x15]
	orr r0, r1
	strh r0, [r2]
	ldr r0, [r4, #0x18]
	cmp r0, #0
	beq _0201AF8A
	ldrh r1, [r2]
	mov r0, #0x40
	orr r0, r1
	strh r0, [r2]
	b _0201B14C
_0201AF8A:
	ldrh r1, [r2]
	mov r0, #0x40
	bic r1, r0
	strh r1, [r2]
	b _0201B14C
_0201AF94:
	mov r0, #2
	add r1, r6, #0
	bl sub_02022CC8
	ldrb r2, [r4, #0x13]
	ldrb r1, [r4, #0x12]
	ldrb r0, [r4, #0x11]
	lsl r6, r2, #2
	ldrb r3, [r4, #0x14]
	lsl r0, r0, #7
	mov ip, r0
	ldr r2, _0201B0A4 ; =0x0400100A
	lsl r7, r1, #8
	ldrh r1, [r2]
	mov r0, #0x43
	lsl r3, r3, #0xd
	and r0, r1
	lsl r1, r5, #0xe
	orr r0, r1
	mov r1, ip
	orr r0, r1
	orr r0, r7
	orr r0, r6
	orr r0, r3
	strh r0, [r2]
	ldrh r1, [r2]
	mov r0, #3
	bic r1, r0
	ldrb r0, [r4, #0x15]
	orr r0, r1
	strh r0, [r2]
	ldr r0, [r4, #0x18]
	cmp r0, #0
	beq _0201AFE2
	ldrh r1, [r2]
	mov r0, #0x40
	orr r0, r1
	strh r0, [r2]
	b _0201B14C
_0201AFE2:
	ldrh r1, [r2]
	mov r0, #0x40
	bic r1, r0
	strh r1, [r2]
	b _0201B14C
_0201AFEC:
	mov r0, #4
	add r1, r6, #0
	bl sub_02022CC8
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _0201B002
	cmp r0, #1
	beq _0201B024
	cmp r0, #2
	beq _0201B046
_0201B002:
	ldrb r1, [r4, #0x12]
	ldr r7, _0201B0A8 ; =0x0400100C
	ldrb r2, [r4, #0x13]
	lsl r3, r1, #8
	ldrb r0, [r4, #0x11]
	lsl r6, r2, #2
	ldrh r1, [r7]
	lsl r2, r0, #7
	mov r0, #0x43
	and r0, r1
	lsl r1, r5, #0xe
	orr r0, r1
	orr r0, r2
	orr r0, r3
	orr r0, r6
	strh r0, [r7]
	b _0201B066
_0201B024:
	ldrb r2, [r4, #0x13]
	ldrb r1, [r4, #0x12]
	ldrb r0, [r4, #0x16]
	lsl r3, r2, #2
	ldr r7, _0201B0A8 ; =0x0400100C
	lsl r2, r1, #8
	lsl r6, r0, #0xd
	ldrh r1, [r7]
	mov r0, #0x43
	and r0, r1
	lsl r1, r5, #0xe
	orr r0, r1
	orr r0, r2
	orr r0, r3
	orr r0, r6
	strh r0, [r7]
	b _0201B066
_0201B046:
	ldrb r1, [r4, #0x12]
	ldr r7, _0201B0A8 ; =0x0400100C
	ldrb r0, [r4, #0x16]
	lsl r3, r1, #8
	ldrb r2, [r4, #0x13]
	lsl r6, r0, #0xd
	ldrh r1, [r7]
	mov r0, #0x43
	lsl r2, r2, #2
	and r0, r1
	lsl r1, r5, #0xe
	orr r0, r1
	orr r0, r2
	orr r0, r3
	orr r0, r6
	strh r0, [r7]
_0201B066:
	ldr r0, _0201B0A8 ; =0x0400100C
	mov r1, #3
	ldrh r2, [r0]
	bic r2, r1
	ldrb r1, [r4, #0x15]
	orr r1, r2
	strh r1, [r0]
	ldr r1, [r4, #0x18]
	cmp r1, #0
	beq _0201B084
	ldrh r2, [r0]
	mov r1, #0x40
	orr r1, r2
	strh r1, [r0]
	b _0201B14C
_0201B084:
	ldrh r2, [r0]
	mov r1, #0x40
	bic r2, r1
	strh r2, [r0]
	b _0201B14C
	nop
_0201B090: .word 0x04000008
_0201B094: .word 0x0400000A
_0201B098: .word 0x0400000C
_0201B09C: .word 0x0400000E
_0201B0A0: .word 0x04001008
_0201B0A4: .word 0x0400100A
_0201B0A8: .word 0x0400100C
_0201B0AC:
	mov r0, #8
	add r1, r6, #0
	bl sub_02022CC8
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _0201B0C2
	cmp r0, #1
	beq _0201B0E4
	cmp r0, #2
	beq _0201B106
_0201B0C2:
	ldrb r1, [r4, #0x12]
	ldr r7, _0201B1E0 ; =0x0400100E
	ldrb r2, [r4, #0x13]
	lsl r3, r1, #8
	ldrb r0, [r4, #0x11]
	lsl r6, r2, #2
	ldrh r1, [r7]
	lsl r2, r0, #7
	mov r0, #0x43
	and r0, r1
	lsl r1, r5, #0xe
	orr r0, r1
	orr r0, r2
	orr r0, r3
	orr r0, r6
	strh r0, [r7]
	b _0201B126
_0201B0E4:
	ldrb r2, [r4, #0x13]
	ldrb r1, [r4, #0x12]
	ldrb r0, [r4, #0x16]
	lsl r3, r2, #2
	ldr r7, _0201B1E0 ; =0x0400100E
	lsl r2, r1, #8
	lsl r6, r0, #0xd
	ldrh r1, [r7]
	mov r0, #0x43
	and r0, r1
	lsl r1, r5, #0xe
	orr r0, r1
	orr r0, r2
	orr r0, r3
	orr r0, r6
	strh r0, [r7]
	b _0201B126
_0201B106:
	ldrb r1, [r4, #0x12]
	ldr r7, _0201B1E0 ; =0x0400100E
	ldrb r0, [r4, #0x16]
	lsl r3, r1, #8
	ldrb r2, [r4, #0x13]
	lsl r6, r0, #0xd
	ldrh r1, [r7]
	mov r0, #0x43
	lsl r2, r2, #2
	and r0, r1
	lsl r1, r5, #0xe
	orr r0, r1
	orr r0, r2
	orr r0, r3
	orr r0, r6
	strh r0, [r7]
_0201B126:
	ldr r0, _0201B1E0 ; =0x0400100E
	mov r1, #3
	ldrh r2, [r0]
	bic r2, r1
	ldrb r1, [r4, #0x15]
	orr r1, r2
	strh r1, [r0]
	ldr r1, [r4, #0x18]
	cmp r1, #0
	beq _0201B144
	ldrh r2, [r0]
	mov r1, #0x40
	orr r1, r2
	strh r1, [r0]
	b _0201B14C
_0201B144:
	ldrh r2, [r0]
	mov r1, #0x40
	bic r2, r1
	strh r2, [r0]
_0201B14C:
	ldr r0, [sp, #4]
	mov r1, #0x2c
	add r5, r0, #0
	ldr r0, [sp]
	mul r5, r1
	add r2, r0, r5
	mov r3, #0
	mov r0, #1
	strh r3, [r2, #0x20]
	lsl r0, r0, #0xc
	str r0, [r2, #0x24]
	str r0, [r2, #0x28]
	str r3, [r2, #0x2c]
	str r3, [r2, #0x30]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _0201B194
	ldr r0, [sp]
	ldr r6, [sp]
	ldr r0, [r0]
	add r6, #8
	bl sub_0201AA8C
	str r0, [r6, r5]
	ldr r1, [r6, r5]
	ldr r2, [r4, #8]
	mov r0, #0
	bl sub_020D4790
	ldr r0, [sp]
	ldr r2, [r4, #8]
	add r1, r0, r5
	str r2, [r1, #0xc]
	ldr r0, [r4, #0xc]
	str r0, [r1, #0x10]
	b _0201B19A
_0201B194:
	str r3, [r2, #8]
	str r3, [r2, #0xc]
	str r3, [r2, #0x10]
_0201B19A:
	ldr r0, [sp]
	ldrb r1, [r4, #0x10]
	add r0, r0, r5
	strb r1, [r0, #0x1d]
	ldr r1, [sp, #8]
	strb r1, [r0, #0x1c]
	ldrb r1, [r4, #0x11]
	strb r1, [r0, #0x1e]
	ldr r1, [sp, #8]
	cmp r1, #0
	bne _0201B1BC
	ldrb r1, [r4, #0x11]
	cmp r1, #0
	bne _0201B1BC
	mov r1, #0x20
	strb r1, [r0, #0x1f]
	b _0201B1C4
_0201B1BC:
	ldr r0, [sp]
	mov r1, #0x40
	add r0, r0, r5
	strb r1, [r0, #0x1f]
_0201B1C4:
	ldr r0, [sp]
	ldr r1, [sp, #4]
	ldr r3, [r4]
	mov r2, #0
	bl sub_0201BC8C
	ldr r0, [sp]
	ldr r1, [sp, #4]
	ldr r3, [r4, #4]
	mov r2, #3
	bl sub_0201BC8C
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0201B1E0: .word 0x0400100E
	thumb_func_end sub_0201AD0C

	thumb_func_start sub_0201B1E4
sub_0201B1E4: ; 0x0201B1E4
	push {r3, r4, lr}
	sub sp, #4
	mov r4, #1
	str r4, [sp]
	bl sub_0201AD0C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end sub_0201B1E4

	thumb_func_start sub_0201B1F4
sub_0201B1F4: ; 0x0201B1F4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	add r4, r2, #0
	add r6, r0, #0
	add r7, r1, #0
	add r5, r3, #0
	cmp r4, #0
	bne _0201B230
	add r3, r6, #0
	mov r1, #0x2c
	add r2, r7, #0
	mul r2, r1
	add r3, #0x1e
	add r1, r6, r2
	strb r5, [r3, r2]
	mov ip, r1
	ldrb r1, [r1, #0x1c]
	cmp r1, #0
	bne _0201B228
	ldrb r1, [r3, r2]
	cmp r1, #0
	bne _0201B228
	mov r1, #0x20
	mov r2, ip
	strb r1, [r2, #0x1f]
	b _0201B262
_0201B228:
	mov r1, #0x40
	add r2, r6, r2
	strb r1, [r2, #0x1f]
	b _0201B262
_0201B230:
	cmp r4, #3
	bne _0201B262
	mov r0, #0x2c
	mul r0, r7
	str r0, [sp]
	add r0, r6, r0
	strb r5, [r0, #0x1c]
	ldrb r0, [r0, #0x1d]
	add r1, r5, #0
	bl sub_0201BA88
	cmp r5, #0
	bne _0201B25A
	ldr r1, [sp]
	add r2, r6, r1
	ldrb r1, [r2, #0x1e]
	cmp r1, #0
	bne _0201B25A
	mov r1, #0x20
	strb r1, [r2, #0x1f]
	b _0201B262
_0201B25A:
	ldr r2, [sp]
	mov r1, #0x40
	add r2, r6, r2
	strb r1, [r2, #0x1f]
_0201B262:
	cmp r7, #7
	bls _0201B26A
	bl sub_0201BA78
_0201B26A:
	add r1, r7, r7
	add r1, pc
	ldrh r1, [r1, #6]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add pc, r1
_0201B276: ; jump table
	.short _0201B286 - _0201B276 - 2 ; case 0
	.short _0201B306 - _0201B276 - 2 ; case 1
	.short _0201B386 - _0201B276 - 2 ; case 2
	.short _0201B4F6 - _0201B276 - 2 ; case 3
	.short _0201B680 - _0201B276 - 2 ; case 4
	.short _0201B700 - _0201B276 - 2 ; case 5
	.short _0201B780 - _0201B276 - 2 ; case 6
	.short _0201B90C - _0201B276 - 2 ; case 7
_0201B286:
	ldr r1, _0201B59C ; =0x04000008
	cmp r4, #1
	ldrh r2, [r1]
	add r1, sp, #4
	strh r2, [r1, #0x1e]
	bne _0201B2A2
	ldrh r2, [r1, #0x1e]
	ldr r0, _0201B5A0 ; =0xFFFFE0FF
	and r2, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x13
	orr r0, r2
	strh r0, [r1, #0x1e]
	b _0201B2C8
_0201B2A2:
	cmp r4, #2
	bne _0201B2B6
	ldrh r2, [r1, #0x1e]
	mov r0, #0x3c
	bic r2, r0
	lsl r0, r5, #0x1c
	lsr r0, r0, #0x1a
	orr r0, r2
	strh r0, [r1, #0x1e]
	b _0201B2C8
_0201B2B6:
	cmp r4, #3
	bne _0201B2C8
	ldrh r3, [r1, #0x1e]
	ldr r2, _0201B5A4 ; =0xFFFF3FFF
	lsl r0, r0, #0x1e
	and r2, r3
	lsr r0, r0, #0x10
	orr r0, r2
	strh r0, [r1, #0x1e]
_0201B2C8:
	add r0, sp, #4
	ldrh r3, [r0, #0x1e]
	add sp, #0x24
	lsl r0, r3, #0x12
	lsr r4, r0, #0x1f
	lsl r0, r3, #0x1a
	lsr r2, r0, #0x1c
	lsl r0, r3, #0x13
	lsr r1, r0, #0x1b
	mov r0, #0x2c
	mul r0, r7
	add r0, r6, r0
	lsl r3, r3, #0x10
	lsr r5, r3, #0x1e
	lsl r3, r2, #2
	ldrb r0, [r0, #0x1e]
	lsl r2, r1, #8
	mov r6, #0x43
	lsl r1, r0, #7
	ldr r0, _0201B59C ; =0x04000008
	lsl r5, r5, #0xe
	ldrh r7, [r0]
	lsl r4, r4, #0xd
	and r6, r7
	orr r5, r6
	orr r1, r5
	orr r1, r2
	orr r1, r3
	orr r1, r4
	strh r1, [r0]
	pop {r4, r5, r6, r7, pc}
_0201B306:
	ldr r1, _0201B5A8 ; =0x0400000A
	cmp r4, #1
	ldrh r2, [r1]
	add r1, sp, #4
	strh r2, [r1, #0x1c]
	bne _0201B322
	ldrh r2, [r1, #0x1c]
	ldr r0, _0201B5A0 ; =0xFFFFE0FF
	and r2, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x13
	orr r0, r2
	strh r0, [r1, #0x1c]
	b _0201B348
_0201B322:
	cmp r4, #2
	bne _0201B336
	ldrh r2, [r1, #0x1c]
	mov r0, #0x3c
	bic r2, r0
	lsl r0, r5, #0x1c
	lsr r0, r0, #0x1a
	orr r0, r2
	strh r0, [r1, #0x1c]
	b _0201B348
_0201B336:
	cmp r4, #3
	bne _0201B348
	ldrh r3, [r1, #0x1c]
	ldr r2, _0201B5A4 ; =0xFFFF3FFF
	lsl r0, r0, #0x1e
	and r2, r3
	lsr r0, r0, #0x10
	orr r0, r2
	strh r0, [r1, #0x1c]
_0201B348:
	add r0, sp, #4
	ldrh r3, [r0, #0x1c]
	add sp, #0x24
	lsl r0, r3, #0x12
	lsr r4, r0, #0x1f
	lsl r0, r3, #0x1a
	lsr r2, r0, #0x1c
	lsl r0, r3, #0x13
	lsr r1, r0, #0x1b
	mov r0, #0x2c
	mul r0, r7
	add r0, r6, r0
	lsl r3, r3, #0x10
	lsr r5, r3, #0x1e
	lsl r3, r2, #2
	ldrb r0, [r0, #0x1e]
	lsl r2, r1, #8
	mov r6, #0x43
	lsl r1, r0, #7
	ldr r0, _0201B5A8 ; =0x0400000A
	lsl r5, r5, #0xe
	ldrh r7, [r0]
	lsl r4, r4, #0xd
	and r6, r7
	orr r5, r6
	orr r1, r5
	orr r1, r2
	orr r1, r3
	orr r1, r4
	strh r1, [r0]
	pop {r4, r5, r6, r7, pc}
_0201B386:
	mov r1, #0x2c
	mul r1, r7
	add r2, r6, r1
	ldrb r2, [r2, #0x1c]
	cmp r2, #0
	beq _0201B39A
	cmp r2, #1
	beq _0201B40E
	cmp r2, #2
	beq _0201B482
_0201B39A:
	ldr r2, _0201B5AC ; =0x0400000C
	cmp r4, #1
	ldrh r3, [r2]
	add r2, sp, #4
	strh r3, [r2, #0x1a]
	bne _0201B3B6
	ldrh r3, [r2, #0x1a]
	ldr r0, _0201B5A0 ; =0xFFFFE0FF
	and r3, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x13
	orr r0, r3
	strh r0, [r2, #0x1a]
	b _0201B3DC
_0201B3B6:
	cmp r4, #2
	bne _0201B3CA
	ldrh r3, [r2, #0x1a]
	mov r0, #0x3c
	bic r3, r0
	lsl r0, r5, #0x1c
	lsr r0, r0, #0x1a
	orr r0, r3
	strh r0, [r2, #0x1a]
	b _0201B3DC
_0201B3CA:
	cmp r4, #3
	bne _0201B3DC
	ldrh r4, [r2, #0x1a]
	ldr r3, _0201B5A4 ; =0xFFFF3FFF
	lsl r0, r0, #0x1e
	and r3, r4
	lsr r0, r0, #0x10
	orr r0, r3
	strh r0, [r2, #0x1a]
_0201B3DC:
	add r0, sp, #4
	ldrh r3, [r0, #0x1a]
	add r1, r6, r1
	ldr r6, _0201B5AC ; =0x0400000C
	lsl r0, r3, #0x1a
	lsr r2, r0, #0x1c
	ldrb r4, [r1, #0x1e]
	lsl r0, r3, #0x13
	lsl r1, r3, #0x10
	lsr r3, r1, #0x1e
	lsr r0, r0, #0x1b
	lsl r1, r0, #8
	lsl r0, r4, #7
	ldrh r5, [r6]
	mov r4, #0x43
	lsl r3, r3, #0xe
	and r4, r5
	orr r3, r4
	orr r0, r3
	lsl r2, r2, #2
	orr r0, r1
	orr r0, r2
	add sp, #0x24
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B40E:
	ldr r1, _0201B5AC ; =0x0400000C
	add r2, sp, #4
	ldrh r1, [r1]
	cmp r4, #1
	strh r1, [r2, #0x18]
	bne _0201B42A
	ldrh r1, [r2, #0x18]
	ldr r0, _0201B5A0 ; =0xFFFFE0FF
	and r1, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x13
	orr r0, r1
	strh r0, [r2, #0x18]
	b _0201B450
_0201B42A:
	cmp r4, #2
	bne _0201B43E
	ldrh r1, [r2, #0x18]
	mov r0, #0x3c
	bic r1, r0
	lsl r0, r5, #0x1c
	lsr r0, r0, #0x1a
	orr r0, r1
	strh r0, [r2, #0x18]
	b _0201B450
_0201B43E:
	cmp r4, #3
	bne _0201B450
	ldrh r3, [r2, #0x18]
	ldr r1, _0201B5A4 ; =0xFFFF3FFF
	lsl r0, r0, #0x1e
	and r1, r3
	lsr r0, r0, #0x10
	orr r0, r1
	strh r0, [r2, #0x18]
_0201B450:
	add r0, sp, #4
	ldrh r3, [r0, #0x18]
	ldr r6, _0201B5AC ; =0x0400000C
	add sp, #0x24
	lsl r1, r3, #0x13
	lsl r0, r3, #0x1a
	lsr r4, r1, #0x1b
	lsl r1, r3, #0x12
	lsr r2, r1, #0x1f
	lsl r1, r3, #0x10
	lsr r3, r1, #0x1e
	lsr r0, r0, #0x1c
	lsl r1, r0, #2
	lsl r0, r4, #8
	ldrh r5, [r6]
	mov r4, #0x43
	lsl r3, r3, #0xe
	and r4, r5
	orr r3, r4
	orr r0, r3
	lsl r2, r2, #0xd
	orr r0, r1
	orr r0, r2
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B482:
	ldr r1, _0201B5AC ; =0x0400000C
	add r2, sp, #4
	ldrh r1, [r1]
	cmp r4, #1
	strh r1, [r2, #0x16]
	bne _0201B49E
	ldrh r1, [r2, #0x16]
	ldr r0, _0201B5A0 ; =0xFFFFE0FF
	and r1, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x13
	orr r0, r1
	strh r0, [r2, #0x16]
	b _0201B4C4
_0201B49E:
	cmp r4, #2
	bne _0201B4B2
	ldrh r1, [r2, #0x16]
	mov r0, #0x38
	bic r1, r0
	lsl r0, r5, #0x1d
	lsr r0, r0, #0x1a
	orr r0, r1
	strh r0, [r2, #0x16]
	b _0201B4C4
_0201B4B2:
	cmp r4, #3
	bne _0201B4C4
	ldrh r3, [r2, #0x16]
	ldr r1, _0201B5A4 ; =0xFFFF3FFF
	lsl r0, r0, #0x1e
	and r1, r3
	lsr r0, r0, #0x10
	orr r0, r1
	strh r0, [r2, #0x16]
_0201B4C4:
	add r0, sp, #4
	ldrh r3, [r0, #0x16]
	ldr r6, _0201B5AC ; =0x0400000C
	add sp, #0x24
	lsl r1, r3, #0x13
	lsr r4, r1, #0x1b
	lsl r1, r3, #0x12
	lsr r2, r1, #0x1f
	lsl r0, r3, #0x1a
	lsl r1, r3, #0x10
	lsr r3, r1, #0x1e
	lsl r1, r4, #8
	lsr r0, r0, #0x1d
	ldrh r5, [r6]
	mov r4, #0x43
	lsl r3, r3, #0xe
	and r4, r5
	lsl r0, r0, #2
	orr r3, r4
	orr r0, r3
	lsl r2, r2, #0xd
	orr r0, r1
	orr r0, r2
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B4F6:
	mov r1, #0x2c
	mul r1, r7
	add r2, r6, r1
	ldrb r2, [r2, #0x1c]
	cmp r2, #0
	beq _0201B50C
	cmp r2, #1
	beq _0201B580
	cmp r2, #2
	bne _0201B50C
	b _0201B60C
_0201B50C:
	ldr r2, _0201B5B0 ; =0x0400000E
	cmp r4, #1
	ldrh r3, [r2]
	add r2, sp, #4
	strh r3, [r2, #0x14]
	bne _0201B528
	ldrh r3, [r2, #0x14]
	ldr r0, _0201B5A0 ; =0xFFFFE0FF
	and r3, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x13
	orr r0, r3
	strh r0, [r2, #0x14]
	b _0201B54E
_0201B528:
	cmp r4, #2
	bne _0201B53C
	ldrh r3, [r2, #0x14]
	mov r0, #0x3c
	bic r3, r0
	lsl r0, r5, #0x1c
	lsr r0, r0, #0x1a
	orr r0, r3
	strh r0, [r2, #0x14]
	b _0201B54E
_0201B53C:
	cmp r4, #3
	bne _0201B54E
	ldrh r4, [r2, #0x14]
	ldr r3, _0201B5A4 ; =0xFFFF3FFF
	lsl r0, r0, #0x1e
	and r3, r4
	lsr r0, r0, #0x10
	orr r0, r3
	strh r0, [r2, #0x14]
_0201B54E:
	add r0, sp, #4
	ldrh r3, [r0, #0x14]
	add r1, r6, r1
	ldr r6, _0201B5B0 ; =0x0400000E
	lsl r0, r3, #0x1a
	lsr r2, r0, #0x1c
	ldrb r4, [r1, #0x1e]
	lsl r0, r3, #0x13
	lsl r1, r3, #0x10
	lsr r3, r1, #0x1e
	lsr r0, r0, #0x1b
	lsl r1, r0, #8
	lsl r0, r4, #7
	ldrh r5, [r6]
	mov r4, #0x43
	lsl r3, r3, #0xe
	and r4, r5
	orr r3, r4
	orr r0, r3
	lsl r2, r2, #2
	orr r0, r1
	orr r0, r2
	add sp, #0x24
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B580:
	ldr r1, _0201B5B0 ; =0x0400000E
	add r2, sp, #4
	ldrh r1, [r1]
	cmp r4, #1
	strh r1, [r2, #0x12]
	bne _0201B5B4
	ldrh r1, [r2, #0x12]
	ldr r0, _0201B5A0 ; =0xFFFFE0FF
	and r1, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x13
	orr r0, r1
	strh r0, [r2, #0x12]
	b _0201B5DA
	.align 2, 0
_0201B59C: .word 0x04000008
_0201B5A0: .word 0xFFFFE0FF
_0201B5A4: .word 0xFFFF3FFF
_0201B5A8: .word 0x0400000A
_0201B5AC: .word 0x0400000C
_0201B5B0: .word 0x0400000E
_0201B5B4:
	cmp r4, #2
	bne _0201B5C8
	ldrh r1, [r2, #0x12]
	mov r0, #0x3c
	bic r1, r0
	lsl r0, r5, #0x1c
	lsr r0, r0, #0x1a
	orr r0, r1
	strh r0, [r2, #0x12]
	b _0201B5DA
_0201B5C8:
	cmp r4, #3
	bne _0201B5DA
	ldrh r3, [r2, #0x12]
	ldr r1, _0201B8C8 ; =0xFFFF3FFF
	lsl r0, r0, #0x1e
	and r1, r3
	lsr r0, r0, #0x10
	orr r0, r1
	strh r0, [r2, #0x12]
_0201B5DA:
	add r0, sp, #4
	ldrh r3, [r0, #0x12]
	ldr r6, _0201B8CC ; =0x0400000E
	add sp, #0x24
	lsl r1, r3, #0x13
	lsl r0, r3, #0x1a
	lsr r4, r1, #0x1b
	lsl r1, r3, #0x12
	lsr r2, r1, #0x1f
	lsl r1, r3, #0x10
	lsr r3, r1, #0x1e
	lsr r0, r0, #0x1c
	lsl r1, r0, #2
	lsl r0, r4, #8
	ldrh r5, [r6]
	mov r4, #0x43
	lsl r3, r3, #0xe
	and r4, r5
	orr r3, r4
	orr r0, r3
	lsl r2, r2, #0xd
	orr r0, r1
	orr r0, r2
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B60C:
	ldr r1, _0201B8CC ; =0x0400000E
	add r2, sp, #4
	ldrh r1, [r1]
	cmp r4, #1
	strh r1, [r2, #0x10]
	bne _0201B628
	ldrh r1, [r2, #0x10]
	ldr r0, _0201B8D0 ; =0xFFFFE0FF
	and r1, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x13
	orr r0, r1
	strh r0, [r2, #0x10]
	b _0201B64E
_0201B628:
	cmp r4, #2
	bne _0201B63C
	ldrh r1, [r2, #0x10]
	mov r0, #0x38
	bic r1, r0
	lsl r0, r5, #0x1d
	lsr r0, r0, #0x1a
	orr r0, r1
	strh r0, [r2, #0x10]
	b _0201B64E
_0201B63C:
	cmp r4, #3
	bne _0201B64E
	ldrh r3, [r2, #0x10]
	ldr r1, _0201B8C8 ; =0xFFFF3FFF
	lsl r0, r0, #0x1e
	and r1, r3
	lsr r0, r0, #0x10
	orr r0, r1
	strh r0, [r2, #0x10]
_0201B64E:
	add r0, sp, #4
	ldrh r3, [r0, #0x10]
	ldr r6, _0201B8CC ; =0x0400000E
	add sp, #0x24
	lsl r1, r3, #0x13
	lsr r4, r1, #0x1b
	lsl r1, r3, #0x12
	lsr r2, r1, #0x1f
	lsl r0, r3, #0x1a
	lsl r1, r3, #0x10
	lsr r3, r1, #0x1e
	lsl r1, r4, #8
	lsr r0, r0, #0x1d
	ldrh r5, [r6]
	mov r4, #0x43
	lsl r3, r3, #0xe
	and r4, r5
	lsl r0, r0, #2
	orr r3, r4
	orr r0, r3
	lsl r2, r2, #0xd
	orr r0, r1
	orr r0, r2
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B680:
	ldr r1, _0201B8D4 ; =0x04001008
	cmp r4, #1
	ldrh r2, [r1]
	add r1, sp, #4
	strh r2, [r1, #0xe]
	bne _0201B69C
	ldrh r2, [r1, #0xe]
	ldr r0, _0201B8D0 ; =0xFFFFE0FF
	and r2, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x13
	orr r0, r2
	strh r0, [r1, #0xe]
	b _0201B6C2
_0201B69C:
	cmp r4, #2
	bne _0201B6B0
	ldrh r2, [r1, #0xe]
	mov r0, #0x3c
	bic r2, r0
	lsl r0, r5, #0x1c
	lsr r0, r0, #0x1a
	orr r0, r2
	strh r0, [r1, #0xe]
	b _0201B6C2
_0201B6B0:
	cmp r4, #3
	bne _0201B6C2
	ldrh r3, [r1, #0xe]
	ldr r2, _0201B8C8 ; =0xFFFF3FFF
	lsl r0, r0, #0x1e
	and r2, r3
	lsr r0, r0, #0x10
	orr r0, r2
	strh r0, [r1, #0xe]
_0201B6C2:
	add r0, sp, #4
	ldrh r3, [r0, #0xe]
	add sp, #0x24
	lsl r0, r3, #0x12
	lsr r4, r0, #0x1f
	lsl r0, r3, #0x1a
	lsr r2, r0, #0x1c
	lsl r0, r3, #0x13
	lsr r1, r0, #0x1b
	mov r0, #0x2c
	mul r0, r7
	add r0, r6, r0
	lsl r3, r3, #0x10
	lsr r5, r3, #0x1e
	lsl r3, r2, #2
	ldrb r0, [r0, #0x1e]
	lsl r2, r1, #8
	mov r6, #0x43
	lsl r1, r0, #7
	ldr r0, _0201B8D4 ; =0x04001008
	lsl r5, r5, #0xe
	ldrh r7, [r0]
	lsl r4, r4, #0xd
	and r6, r7
	orr r5, r6
	orr r1, r5
	orr r1, r2
	orr r1, r3
	orr r1, r4
	strh r1, [r0]
	pop {r4, r5, r6, r7, pc}
_0201B700:
	ldr r1, _0201B8D8 ; =0x0400100A
	cmp r4, #1
	ldrh r2, [r1]
	add r1, sp, #4
	strh r2, [r1, #0xc]
	bne _0201B71C
	ldrh r2, [r1, #0xc]
	ldr r0, _0201B8D0 ; =0xFFFFE0FF
	and r2, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x13
	orr r0, r2
	strh r0, [r1, #0xc]
	b _0201B742
_0201B71C:
	cmp r4, #2
	bne _0201B730
	ldrh r2, [r1, #0xc]
	mov r0, #0x3c
	bic r2, r0
	lsl r0, r5, #0x1c
	lsr r0, r0, #0x1a
	orr r0, r2
	strh r0, [r1, #0xc]
	b _0201B742
_0201B730:
	cmp r4, #3
	bne _0201B742
	ldrh r3, [r1, #0xc]
	ldr r2, _0201B8C8 ; =0xFFFF3FFF
	lsl r0, r0, #0x1e
	and r2, r3
	lsr r0, r0, #0x10
	orr r0, r2
	strh r0, [r1, #0xc]
_0201B742:
	add r0, sp, #4
	ldrh r3, [r0, #0xc]
	add sp, #0x24
	lsl r0, r3, #0x12
	lsr r4, r0, #0x1f
	lsl r0, r3, #0x1a
	lsr r2, r0, #0x1c
	lsl r0, r3, #0x13
	lsr r1, r0, #0x1b
	mov r0, #0x2c
	mul r0, r7
	add r0, r6, r0
	lsl r3, r3, #0x10
	lsr r5, r3, #0x1e
	lsl r3, r2, #2
	ldrb r0, [r0, #0x1e]
	lsl r2, r1, #8
	mov r6, #0x43
	lsl r1, r0, #7
	ldr r0, _0201B8D8 ; =0x0400100A
	lsl r5, r5, #0xe
	ldrh r7, [r0]
	lsl r4, r4, #0xd
	and r6, r7
	orr r5, r6
	orr r1, r5
	orr r1, r2
	orr r1, r3
	orr r1, r4
	strh r1, [r0]
	pop {r4, r5, r6, r7, pc}
_0201B780:
	mov r1, #0x2c
	mul r1, r7
	add r2, r6, r1
	ldrb r2, [r2, #0x1c]
	cmp r2, #0
	beq _0201B794
	cmp r2, #1
	beq _0201B808
	cmp r2, #2
	beq _0201B87C
_0201B794:
	ldr r2, _0201B8DC ; =0x0400100C
	cmp r4, #1
	ldrh r3, [r2]
	add r2, sp, #4
	strh r3, [r2, #0xa]
	bne _0201B7B0
	ldrh r3, [r2, #0xa]
	ldr r0, _0201B8D0 ; =0xFFFFE0FF
	and r3, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x13
	orr r0, r3
	strh r0, [r2, #0xa]
	b _0201B7D6
_0201B7B0:
	cmp r4, #2
	bne _0201B7C4
	ldrh r3, [r2, #0xa]
	mov r0, #0x3c
	bic r3, r0
	lsl r0, r5, #0x1c
	lsr r0, r0, #0x1a
	orr r0, r3
	strh r0, [r2, #0xa]
	b _0201B7D6
_0201B7C4:
	cmp r4, #3
	bne _0201B7D6
	ldrh r4, [r2, #0xa]
	ldr r3, _0201B8C8 ; =0xFFFF3FFF
	lsl r0, r0, #0x1e
	and r3, r4
	lsr r0, r0, #0x10
	orr r0, r3
	strh r0, [r2, #0xa]
_0201B7D6:
	add r0, sp, #4
	ldrh r3, [r0, #0xa]
	add r1, r6, r1
	ldr r6, _0201B8DC ; =0x0400100C
	lsl r0, r3, #0x1a
	lsr r2, r0, #0x1c
	ldrb r4, [r1, #0x1e]
	lsl r0, r3, #0x13
	lsl r1, r3, #0x10
	lsr r3, r1, #0x1e
	lsr r0, r0, #0x1b
	lsl r1, r0, #8
	lsl r0, r4, #7
	ldrh r5, [r6]
	mov r4, #0x43
	lsl r3, r3, #0xe
	and r4, r5
	orr r3, r4
	orr r0, r3
	lsl r2, r2, #2
	orr r0, r1
	orr r0, r2
	add sp, #0x24
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B808:
	ldr r1, _0201B8DC ; =0x0400100C
	add r2, sp, #4
	ldrh r1, [r1]
	cmp r4, #1
	strh r1, [r2, #8]
	bne _0201B824
	ldrh r1, [r2, #8]
	ldr r0, _0201B8D0 ; =0xFFFFE0FF
	and r1, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x13
	orr r0, r1
	strh r0, [r2, #8]
	b _0201B84A
_0201B824:
	cmp r4, #2
	bne _0201B838
	ldrh r1, [r2, #8]
	mov r0, #0x3c
	bic r1, r0
	lsl r0, r5, #0x1c
	lsr r0, r0, #0x1a
	orr r0, r1
	strh r0, [r2, #8]
	b _0201B84A
_0201B838:
	cmp r4, #3
	bne _0201B84A
	ldrh r3, [r2, #8]
	ldr r1, _0201B8C8 ; =0xFFFF3FFF
	lsl r0, r0, #0x1e
	and r1, r3
	lsr r0, r0, #0x10
	orr r0, r1
	strh r0, [r2, #8]
_0201B84A:
	add r0, sp, #4
	ldrh r3, [r0, #8]
	ldr r6, _0201B8DC ; =0x0400100C
	add sp, #0x24
	lsl r1, r3, #0x13
	lsl r0, r3, #0x1a
	lsr r4, r1, #0x1b
	lsl r1, r3, #0x12
	lsr r2, r1, #0x1f
	lsl r1, r3, #0x10
	lsr r3, r1, #0x1e
	lsr r0, r0, #0x1c
	lsl r1, r0, #2
	lsl r0, r4, #8
	ldrh r5, [r6]
	mov r4, #0x43
	lsl r3, r3, #0xe
	and r4, r5
	orr r3, r4
	orr r0, r3
	lsl r2, r2, #0xd
	orr r0, r1
	orr r0, r2
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B87C:
	ldr r1, _0201B8DC ; =0x0400100C
	add r2, sp, #4
	ldrh r1, [r1]
	cmp r4, #1
	strh r1, [r2, #6]
	bne _0201B898
	ldrh r1, [r2, #6]
	ldr r0, _0201B8D0 ; =0xFFFFE0FF
	and r1, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x13
	orr r0, r1
	strh r0, [r2, #6]
	b _0201B8BE
_0201B898:
	cmp r4, #2
	bne _0201B8AC
	ldrh r1, [r2, #6]
	mov r0, #0x38
	bic r1, r0
	lsl r0, r5, #0x1d
	lsr r0, r0, #0x1a
	orr r0, r1
	strh r0, [r2, #6]
	b _0201B8BE
_0201B8AC:
	cmp r4, #3
	bne _0201B8BE
	ldrh r3, [r2, #6]
	ldr r1, _0201B8C8 ; =0xFFFF3FFF
	lsl r0, r0, #0x1e
	and r1, r3
	lsr r0, r0, #0x10
	orr r0, r1
	strh r0, [r2, #6]
_0201B8BE:
	add r0, sp, #4
	ldrh r3, [r0, #6]
	ldr r6, _0201B8DC ; =0x0400100C
	b _0201B8E0
	nop
_0201B8C8: .word 0xFFFF3FFF
_0201B8CC: .word 0x0400000E
_0201B8D0: .word 0xFFFFE0FF
_0201B8D4: .word 0x04001008
_0201B8D8: .word 0x0400100A
_0201B8DC: .word 0x0400100C
_0201B8E0:
	add sp, #0x24
	lsl r1, r3, #0x13
	lsr r4, r1, #0x1b
	lsl r1, r3, #0x12
	lsr r2, r1, #0x1f
	lsl r0, r3, #0x1a
	lsl r1, r3, #0x10
	lsr r3, r1, #0x1e
	lsl r1, r4, #8
	lsr r0, r0, #0x1d
	ldrh r5, [r6]
	mov r4, #0x43
	lsl r3, r3, #0xe
	and r4, r5
	lsl r0, r0, #2
	orr r3, r4
	orr r0, r3
	lsl r2, r2, #0xd
	orr r0, r1
	orr r0, r2
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B90C:
	mov r1, #0x2c
	mul r1, r7
	add r2, r6, r1
	ldrb r2, [r2, #0x1c]
	cmp r2, #0
	beq _0201B920
	cmp r2, #1
	beq _0201B994
	cmp r2, #2
	beq _0201BA08
_0201B920:
	ldr r2, _0201BA7C ; =0x0400100E
	cmp r4, #1
	ldrh r3, [r2]
	add r2, sp, #4
	strh r3, [r2, #4]
	bne _0201B93C
	ldrh r3, [r2, #4]
	ldr r0, _0201BA80 ; =0xFFFFE0FF
	and r3, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x13
	orr r0, r3
	strh r0, [r2, #4]
	b _0201B962
_0201B93C:
	cmp r4, #2
	bne _0201B950
	ldrh r3, [r2, #4]
	mov r0, #0x3c
	bic r3, r0
	lsl r0, r5, #0x1c
	lsr r0, r0, #0x1a
	orr r0, r3
	strh r0, [r2, #4]
	b _0201B962
_0201B950:
	cmp r4, #3
	bne _0201B962
	ldrh r4, [r2, #4]
	ldr r3, _0201BA84 ; =0xFFFF3FFF
	lsl r0, r0, #0x1e
	and r3, r4
	lsr r0, r0, #0x10
	orr r0, r3
	strh r0, [r2, #4]
_0201B962:
	add r0, sp, #4
	ldrh r3, [r0, #4]
	add r1, r6, r1
	ldr r6, _0201BA7C ; =0x0400100E
	lsl r0, r3, #0x1a
	lsr r2, r0, #0x1c
	ldrb r4, [r1, #0x1e]
	lsl r0, r3, #0x13
	lsl r1, r3, #0x10
	lsr r3, r1, #0x1e
	lsr r0, r0, #0x1b
	lsl r1, r0, #8
	lsl r0, r4, #7
	ldrh r5, [r6]
	mov r4, #0x43
	lsl r3, r3, #0xe
	and r4, r5
	orr r3, r4
	orr r0, r3
	lsl r2, r2, #2
	orr r0, r1
	orr r0, r2
	add sp, #0x24
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B994:
	ldr r1, _0201BA7C ; =0x0400100E
	add r2, sp, #4
	ldrh r1, [r1]
	cmp r4, #1
	strh r1, [r2, #2]
	bne _0201B9B0
	ldrh r1, [r2, #2]
	ldr r0, _0201BA80 ; =0xFFFFE0FF
	and r1, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x13
	orr r0, r1
	strh r0, [r2, #2]
	b _0201B9D6
_0201B9B0:
	cmp r4, #2
	bne _0201B9C4
	ldrh r1, [r2, #2]
	mov r0, #0x3c
	bic r1, r0
	lsl r0, r5, #0x1c
	lsr r0, r0, #0x1a
	orr r0, r1
	strh r0, [r2, #2]
	b _0201B9D6
_0201B9C4:
	cmp r4, #3
	bne _0201B9D6
	ldrh r3, [r2, #2]
	ldr r1, _0201BA84 ; =0xFFFF3FFF
	lsl r0, r0, #0x1e
	and r1, r3
	lsr r0, r0, #0x10
	orr r0, r1
	strh r0, [r2, #2]
_0201B9D6:
	add r0, sp, #4
	ldrh r3, [r0, #2]
	ldr r6, _0201BA7C ; =0x0400100E
	add sp, #0x24
	lsl r1, r3, #0x13
	lsl r0, r3, #0x1a
	lsr r4, r1, #0x1b
	lsl r1, r3, #0x12
	lsr r2, r1, #0x1f
	lsl r1, r3, #0x10
	lsr r3, r1, #0x1e
	lsr r0, r0, #0x1c
	lsl r1, r0, #2
	lsl r0, r4, #8
	ldrh r5, [r6]
	mov r4, #0x43
	lsl r3, r3, #0xe
	and r4, r5
	orr r3, r4
	orr r0, r3
	lsl r2, r2, #0xd
	orr r0, r1
	orr r0, r2
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201BA08:
	ldr r1, _0201BA7C ; =0x0400100E
	add r2, sp, #4
	ldrh r1, [r1]
	cmp r4, #1
	strh r1, [r2]
	bne _0201BA24
	ldrh r1, [r2]
	ldr r0, _0201BA80 ; =0xFFFFE0FF
	and r1, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x13
	orr r0, r1
	strh r0, [r2]
	b _0201BA4A
_0201BA24:
	cmp r4, #2
	bne _0201BA38
	ldrh r1, [r2]
	mov r0, #0x38
	bic r1, r0
	lsl r0, r5, #0x1d
	lsr r0, r0, #0x1a
	orr r0, r1
	strh r0, [r2]
	b _0201BA4A
_0201BA38:
	cmp r4, #3
	bne _0201BA4A
	ldrh r3, [r2]
	ldr r1, _0201BA84 ; =0xFFFF3FFF
	lsl r0, r0, #0x1e
	and r1, r3
	lsr r0, r0, #0x10
	orr r0, r1
	strh r0, [r2]
_0201BA4A:
	add r0, sp, #4
	ldrh r3, [r0]
	ldr r6, _0201BA7C ; =0x0400100E
	lsl r1, r3, #0x13
	lsr r4, r1, #0x1b
	lsl r1, r3, #0x12
	lsr r2, r1, #0x1f
	lsl r0, r3, #0x1a
	lsl r1, r3, #0x10
	lsr r3, r1, #0x1e
	lsl r1, r4, #8
	lsr r0, r0, #0x1d
	ldrh r5, [r6]
	mov r4, #0x43
	lsl r3, r3, #0xe
	and r4, r5
	lsl r0, r0, #2
	orr r3, r4
	orr r0, r3
	lsl r2, r2, #0xd
	orr r0, r1
	orr r0, r2
	strh r0, [r6]
	thumb_func_end sub_0201B1F4

	thumb_func_start sub_0201BA78
sub_0201BA78: ; 0x0201BA78
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0201BA7C: .word 0x0400100E
_0201BA80: .word 0xFFFFE0FF
_0201BA84: .word 0xFFFF3FFF
	thumb_func_end sub_0201BA78

	thumb_func_start sub_0201BA88
sub_0201BA88: ; 0x0201BA88
	cmp r1, #0
	beq _0201BA96
	cmp r1, #1
	beq _0201BAB6
	cmp r1, #2
	beq _0201BAD6
	b _0201BAF6
_0201BA96:
	cmp r0, #1
	bne _0201BA9E
	mov r0, #0
	bx lr
_0201BA9E:
	cmp r0, #2
	bne _0201BAA6
	mov r0, #2
	bx lr
_0201BAA6:
	cmp r0, #3
	bne _0201BAAE
	mov r0, #1
	bx lr
_0201BAAE:
	cmp r0, #4
	bne _0201BAF6
	mov r0, #3
	bx lr
_0201BAB6:
	cmp r0, #0
	bne _0201BABE
	mov r0, #0
	bx lr
_0201BABE:
	cmp r0, #1
	bne _0201BAC6
	mov r0, #1
	bx lr
_0201BAC6:
	cmp r0, #4
	bne _0201BACE
	mov r0, #2
	bx lr
_0201BACE:
	cmp r0, #5
	bne _0201BAF6
	mov r0, #3
	bx lr
_0201BAD6:
	cmp r0, #0
	bne _0201BADE
	mov r0, #0
	bx lr
_0201BADE:
	cmp r0, #1
	bne _0201BAE6
	mov r0, #1
	bx lr
_0201BAE6:
	cmp r0, #4
	bne _0201BAEE
	mov r0, #2
	bx lr
_0201BAEE:
	cmp r0, #5
	bne _0201BAF6
	mov r0, #3
	bx lr
_0201BAF6:
	mov r0, #0
	bx lr
	.align 2, 0
	thumb_func_end sub_0201BA88

	thumb_func_start sub_0201BAFC
sub_0201BAFC: ; 0x0201BAFC
	cmp r0, #5
	bhi _0201BB4A
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_0201BB0C: ; jump table
	.short _0201BB18 - _0201BB0C - 2 ; case 0
	.short _0201BB20 - _0201BB0C - 2 ; case 1
	.short _0201BB28 - _0201BB0C - 2 ; case 2
	.short _0201BB32 - _0201BB0C - 2 ; case 3
	.short _0201BB3C - _0201BB0C - 2 ; case 4
	.short _0201BB44 - _0201BB0C - 2 ; case 5
_0201BB18:
	mov r0, #0x10
	strb r0, [r1]
	strb r0, [r2]
	bx lr
_0201BB20:
	mov r0, #0x20
	strb r0, [r1]
	strb r0, [r2]
	bx lr
_0201BB28:
	mov r0, #0x20
	strb r0, [r1]
	mov r0, #0x40
	strb r0, [r2]
	bx lr
_0201BB32:
	mov r0, #0x40
	strb r0, [r1]
	mov r0, #0x20
	strb r0, [r2]
	bx lr
_0201BB3C:
	mov r0, #0x40
	strb r0, [r1]
	strb r0, [r2]
	bx lr
_0201BB44:
	mov r0, #0x80
	strb r0, [r1]
	strb r0, [r2]
_0201BB4A:
	bx lr
	thumb_func_end sub_0201BAFC

	thumb_func_start sub_0201BB4C
sub_0201BB4C: ; 0x0201BB4C
	push {r3, r4, r5, lr}
	add r4, r0, #0
	mov r2, #0x2c
	add r5, r1, #0
	mul r5, r2
	add r4, #8
	ldr r0, [r4, r5]
	cmp r0, #0
	beq _0201BB66
	bl sub_0201AB0C
	mov r0, #0
	str r0, [r4, r5]
_0201BB66:
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0201BB4C

	thumb_func_start sub_0201BB68
sub_0201BB68: ; 0x0201BB68
	cmp r0, #7
	bhi _0201BC06
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_0201BB78: ; jump table
	.short _0201BB88 - _0201BB78 - 2 ; case 0
	.short _0201BB98 - _0201BB78 - 2 ; case 1
	.short _0201BBA8 - _0201BB78 - 2 ; case 2
	.short _0201BBB8 - _0201BB78 - 2 ; case 3
	.short _0201BBC8 - _0201BB78 - 2 ; case 4
	.short _0201BBD8 - _0201BB78 - 2 ; case 5
	.short _0201BBE8 - _0201BB78 - 2 ; case 6
	.short _0201BBF8 - _0201BB78 - 2 ; case 7
_0201BB88:
	ldr r2, _0201BC08 ; =0x04000008
	mov r0, #3
	ldrh r3, [r2]
	bic r3, r0
	add r0, r3, #0
	orr r0, r1
	strh r0, [r2]
	bx lr
_0201BB98:
	ldr r2, _0201BC0C ; =0x0400000A
	mov r0, #3
	ldrh r3, [r2]
	bic r3, r0
	add r0, r3, #0
	orr r0, r1
	strh r0, [r2]
	bx lr
_0201BBA8:
	ldr r2, _0201BC10 ; =0x0400000C
	mov r0, #3
	ldrh r3, [r2]
	bic r3, r0
	add r0, r3, #0
	orr r0, r1
	strh r0, [r2]
	bx lr
_0201BBB8:
	ldr r2, _0201BC14 ; =0x0400000E
	mov r0, #3
	ldrh r3, [r2]
	bic r3, r0
	add r0, r3, #0
	orr r0, r1
	strh r0, [r2]
	bx lr
_0201BBC8:
	ldr r2, _0201BC18 ; =0x04001008
	mov r0, #3
	ldrh r3, [r2]
	bic r3, r0
	add r0, r3, #0
	orr r0, r1
	strh r0, [r2]
	bx lr
_0201BBD8:
	ldr r2, _0201BC1C ; =0x0400100A
	mov r0, #3
	ldrh r3, [r2]
	bic r3, r0
	add r0, r3, #0
	orr r0, r1
	strh r0, [r2]
	bx lr
_0201BBE8:
	ldr r2, _0201BC20 ; =0x0400100C
	mov r0, #3
	ldrh r3, [r2]
	bic r3, r0
	add r0, r3, #0
	orr r0, r1
	strh r0, [r2]
	bx lr
_0201BBF8:
	ldr r2, _0201BC24 ; =0x0400100E
	mov r0, #3
	ldrh r3, [r2]
	bic r3, r0
	add r0, r3, #0
	orr r0, r1
	strh r0, [r2]
_0201BC06:
	bx lr
	.align 2, 0
_0201BC08: .word 0x04000008
_0201BC0C: .word 0x0400000A
_0201BC10: .word 0x0400000C
_0201BC14: .word 0x0400000E
_0201BC18: .word 0x04001008
_0201BC1C: .word 0x0400100A
_0201BC20: .word 0x0400100C
_0201BC24: .word 0x0400100E
	thumb_func_end sub_0201BB68

	thumb_func_start sub_0201BC28
sub_0201BC28: ; 0x0201BC28
	push {r3, lr}
	cmp r0, #7
	bhi _0201BC88
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_0201BC3A: ; jump table
	.short _0201BC4A - _0201BC3A - 2 ; case 0
	.short _0201BC52 - _0201BC3A - 2 ; case 1
	.short _0201BC5A - _0201BC3A - 2 ; case 2
	.short _0201BC62 - _0201BC3A - 2 ; case 3
	.short _0201BC6A - _0201BC3A - 2 ; case 4
	.short _0201BC72 - _0201BC3A - 2 ; case 5
	.short _0201BC7A - _0201BC3A - 2 ; case 6
	.short _0201BC82 - _0201BC3A - 2 ; case 7
_0201BC4A:
	mov r0, #1
	bl sub_02022C60
	pop {r3, pc}
_0201BC52:
	mov r0, #2
	bl sub_02022C60
	pop {r3, pc}
_0201BC5A:
	mov r0, #4
	bl sub_02022C60
	pop {r3, pc}
_0201BC62:
	mov r0, #8
	bl sub_02022C60
	pop {r3, pc}
_0201BC6A:
	mov r0, #1
	bl sub_02022CC8
	pop {r3, pc}
_0201BC72:
	mov r0, #2
	bl sub_02022CC8
	pop {r3, pc}
_0201BC7A:
	mov r0, #4
	bl sub_02022CC8
	pop {r3, pc}
_0201BC82:
	mov r0, #8
	bl sub_02022CC8
_0201BC88:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_0201BC28

	thumb_func_start sub_0201BC8C
sub_0201BC8C: ; 0x0201BC8C
	push {r4, r5, r6, lr}
	add r5, r1, #0
	add r4, r0, #0
	mov r0, #0x2c
	add r6, r5, #0
	mul r6, r0
	add r0, r4, #0
	add r0, #8
	add r1, r2, #0
	add r2, r3, #0
	add r0, r0, r6
	bl sub_0201BE38
	add r0, r4, r6
	ldr r1, [r0, #0x14]
	ldr r0, [r0, #0x18]
	cmp r5, #7
	bls _0201BCB2
	b _0201BDC8
_0201BCB2:
	add r2, r5, r5
	add r2, pc
	ldrh r2, [r2, #6]
	lsl r2, r2, #0x10
	asr r2, r2, #0x10
	add pc, r2
_0201BCBE: ; jump table
	.short _0201BCCE - _0201BCBE - 2 ; case 0
	.short _0201BCE4 - _0201BCBE - 2 ; case 1
	.short _0201BCFA - _0201BCBE - 2 ; case 2
	.short _0201BD24 - _0201BCBE - 2 ; case 3
	.short _0201BD4E - _0201BCBE - 2 ; case 4
	.short _0201BD64 - _0201BCBE - 2 ; case 5
	.short _0201BD7A - _0201BCBE - 2 ; case 6
	.short _0201BDA2 - _0201BCBE - 2 ; case 7
_0201BCCE:
	ldr r2, _0201BDCC ; =0x000001FF
	add r3, r1, #0
	lsl r1, r0, #0x10
	lsl r0, r2, #0x10
	and r3, r2
	and r0, r1
	add r1, r3, #0
	orr r1, r0
	ldr r0, _0201BDD0 ; =0x04000010
	str r1, [r0]
	pop {r4, r5, r6, pc}
_0201BCE4:
	ldr r2, _0201BDCC ; =0x000001FF
	add r3, r1, #0
	lsl r1, r0, #0x10
	lsl r0, r2, #0x10
	and r3, r2
	and r0, r1
	add r1, r3, #0
	orr r1, r0
	ldr r0, _0201BDD4 ; =0x04000014
	str r1, [r0]
	pop {r4, r5, r6, pc}
_0201BCFA:
	add r2, r4, #0
	add r2, #0x74
	ldrb r2, [r2]
	cmp r2, #0
	bne _0201BD1A
	ldr r2, _0201BDCC ; =0x000001FF
	add r3, r1, #0
	lsl r1, r0, #0x10
	lsl r0, r2, #0x10
	and r3, r2
	and r0, r1
	add r1, r3, #0
	orr r1, r0
	ldr r0, _0201BDD8 ; =0x04000018
	str r1, [r0]
	pop {r4, r5, r6, pc}
_0201BD1A:
	add r0, r4, #0
	mov r1, #2
	bl sub_0201BF18
	pop {r4, r5, r6, pc}
_0201BD24:
	add r2, r4, #0
	add r2, #0xa0
	ldrb r2, [r2]
	cmp r2, #0
	bne _0201BD44
	ldr r2, _0201BDCC ; =0x000001FF
	add r3, r1, #0
	lsl r1, r0, #0x10
	lsl r0, r2, #0x10
	and r3, r2
	and r0, r1
	add r1, r3, #0
	orr r1, r0
	ldr r0, _0201BDDC ; =0x0400001C
	str r1, [r0]
	pop {r4, r5, r6, pc}
_0201BD44:
	add r0, r4, #0
	mov r1, #3
	bl sub_0201BF18
	pop {r4, r5, r6, pc}
_0201BD4E:
	ldr r2, _0201BDCC ; =0x000001FF
	add r3, r1, #0
	lsl r1, r0, #0x10
	lsl r0, r2, #0x10
	and r3, r2
	and r0, r1
	add r1, r3, #0
	orr r1, r0
	ldr r0, _0201BDE0 ; =0x04001010
	str r1, [r0]
	pop {r4, r5, r6, pc}
_0201BD64:
	ldr r2, _0201BDCC ; =0x000001FF
	add r3, r1, #0
	lsl r1, r0, #0x10
	lsl r0, r2, #0x10
	and r3, r2
	and r0, r1
	add r1, r3, #0
	orr r1, r0
	ldr r0, _0201BDE4 ; =0x04001014
	str r1, [r0]
	pop {r4, r5, r6, pc}
_0201BD7A:
	mov r2, #0x49
	lsl r2, r2, #2
	ldrb r3, [r4, r2]
	cmp r3, #0
	bne _0201BD98
	add r2, #0xdb
	and r2, r1
	lsl r1, r0, #0x10
	ldr r0, _0201BDE8 ; =0x01FF0000
	and r0, r1
	add r1, r2, #0
	orr r1, r0
	ldr r0, _0201BDEC ; =0x04001018
	str r1, [r0]
	pop {r4, r5, r6, pc}
_0201BD98:
	add r0, r4, #0
	mov r1, #6
	bl sub_0201BF18
	pop {r4, r5, r6, pc}
_0201BDA2:
	mov r2, #0x15
	lsl r2, r2, #4
	ldrb r3, [r4, r2]
	cmp r3, #0
	bne _0201BDC0
	add r2, #0xaf
	and r2, r1
	lsl r1, r0, #0x10
	ldr r0, _0201BDE8 ; =0x01FF0000
	and r0, r1
	add r1, r2, #0
	orr r1, r0
	ldr r0, _0201BDF0 ; =0x0400101C
	str r1, [r0]
	pop {r4, r5, r6, pc}
_0201BDC0:
	add r0, r4, #0
	mov r1, #7
	bl sub_0201BF18
_0201BDC8:
	pop {r4, r5, r6, pc}
	nop
_0201BDCC: .word 0x000001FF
_0201BDD0: .word 0x04000010
_0201BDD4: .word 0x04000014
_0201BDD8: .word 0x04000018
_0201BDDC: .word 0x0400001C
_0201BDE0: .word 0x04001010
_0201BDE4: .word 0x04001014
_0201BDE8: .word 0x01FF0000
_0201BDEC: .word 0x04001018
_0201BDF0: .word 0x0400101C
	thumb_func_end sub_0201BC8C

	thumb_func_start sub_0201BDF4
sub_0201BDF4: ; 0x0201BDF4
	mov r2, #0x2c
	mul r2, r1
	add r0, r0, r2
	ldr r0, [r0, #0x14]
	bx lr
	.align 2, 0
	thumb_func_end sub_0201BDF4

	thumb_func_start sub_0201BE00
sub_0201BE00: ; 0x0201BE00
	mov r2, #0x2c
	mul r2, r1
	add r0, r0, r2
	ldr r0, [r0, #0x18]
	bx lr
	.align 2, 0
	thumb_func_end sub_0201BE00

	thumb_func_start sub_0201BE0C
sub_0201BE0C: ; 0x0201BE0C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	add r1, r5, #0
	mov r0, #0x2c
	add r1, #8
	mul r0, r4
	add r0, r1, r0
	add r1, r2, #0
	add r2, r3, #0
	bl sub_0201BE38
	ldr r0, [sp, #0x18]
	ldr r2, [sp, #0x10]
	str r0, [sp]
	ldr r3, [sp, #0x14]
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0201BE7C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0201BE0C

	thumb_func_start sub_0201BE38
sub_0201BE38: ; 0x0201BE38
	cmp r1, #5
	bhi _0201BE7A
	add r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add pc, r1
_0201BE48: ; jump table
	.short _0201BE54 - _0201BE48 - 2 ; case 0
	.short _0201BE58 - _0201BE48 - 2 ; case 1
	.short _0201BE60 - _0201BE48 - 2 ; case 2
	.short _0201BE68 - _0201BE48 - 2 ; case 3
	.short _0201BE6C - _0201BE48 - 2 ; case 4
	.short _0201BE74 - _0201BE48 - 2 ; case 5
_0201BE54:
	str r2, [r0, #0xc]
	bx lr
_0201BE58:
	ldr r1, [r0, #0xc]
	add r1, r1, r2
	str r1, [r0, #0xc]
	bx lr
_0201BE60:
	ldr r1, [r0, #0xc]
	sub r1, r1, r2
	str r1, [r0, #0xc]
	bx lr
_0201BE68:
	str r2, [r0, #0x10]
	bx lr
_0201BE6C:
	ldr r1, [r0, #0x10]
	add r1, r1, r2
	str r1, [r0, #0x10]
	bx lr
_0201BE74:
	ldr r1, [r0, #0x10]
	sub r1, r1, r2
	str r1, [r0, #0x10]
_0201BE7A:
	bx lr
	thumb_func_end sub_0201BE38

	thumb_func_start sub_0201BE7C
sub_0201BE7C: ; 0x0201BE7C
	push {r3, r4, r5, lr}
	sub sp, #8
	add r4, r1, #0
	add r1, r2, #0
	add r2, r3, #0
	ldr r3, [sp, #0x18]
	cmp r4, #7
	bhi _0201BF04
	add r5, r4, r4
	add r5, pc
	ldrh r5, [r5, #6]
	lsl r5, r5, #0x10
	asr r5, r5, #0x10
	add pc, r5
_0201BE98: ; jump table
	.short _0201BF04 - _0201BE98 - 2 ; case 0
	.short _0201BF04 - _0201BE98 - 2 ; case 1
	.short _0201BEA8 - _0201BE98 - 2 ; case 2
	.short _0201BEC0 - _0201BE98 - 2 ; case 3
	.short _0201BF04 - _0201BE98 - 2 ; case 4
	.short _0201BF04 - _0201BE98 - 2 ; case 5
	.short _0201BED8 - _0201BE98 - 2 ; case 6
	.short _0201BEF0 - _0201BE98 - 2 ; case 7
_0201BEA8:
	mov r5, #0x2c
	mul r5, r4
	add r4, r0, r5
	ldr r0, [r4, #0x14]
	str r0, [sp]
	ldr r0, [r4, #0x18]
	str r0, [sp, #4]
	ldr r0, _0201BF08 ; =0x04000020
	bl sub_020CF0AC
	add sp, #8
	pop {r3, r4, r5, pc}
_0201BEC0:
	mov r5, #0x2c
	mul r5, r4
	add r4, r0, r5
	ldr r0, [r4, #0x14]
	str r0, [sp]
	ldr r0, [r4, #0x18]
	str r0, [sp, #4]
	ldr r0, _0201BF0C ; =0x04000030
	bl sub_020CF0AC
	add sp, #8
	pop {r3, r4, r5, pc}
_0201BED8:
	mov r5, #0x2c
	mul r5, r4
	add r4, r0, r5
	ldr r0, [r4, #0x14]
	str r0, [sp]
	ldr r0, [r4, #0x18]
	str r0, [sp, #4]
	ldr r0, _0201BF10 ; =0x04001020
	bl sub_020CF0AC
	add sp, #8
	pop {r3, r4, r5, pc}
_0201BEF0:
	mov r5, #0x2c
	mul r5, r4
	add r4, r0, r5
	ldr r0, [r4, #0x14]
	str r0, [sp]
	ldr r0, [r4, #0x18]
	str r0, [sp, #4]
	ldr r0, _0201BF14 ; =0x04001030
	bl sub_020CF0AC
_0201BF04:
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
_0201BF08: .word 0x04000020
_0201BF0C: .word 0x04000030
_0201BF10: .word 0x04001020
_0201BF14: .word 0x04001030
	thumb_func_end sub_0201BE7C

	thumb_func_start sub_0201BF18
sub_0201BF18: ; 0x0201BF18
	push {r4, r5, lr}
	sub sp, #0x14
	mov r2, #1
	lsl r2, r2, #0xc
	add r5, r0, #0
	add r4, r1, #0
	mov r1, #0
	add r0, sp, #4
	add r3, r2, #0
	str r1, [sp]
	bl sub_0201FECC
	mov r3, #0
	add r0, r5, #0
	add r1, r4, #0
	add r2, sp, #4
	str r3, [sp]
	bl sub_0201BE7C
	add sp, #0x14
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0201BF18

	thumb_func_start sub_0201BF44
sub_0201BF44: ; 0x0201BF44
	push {r3, r4, r5, lr}
	cmp r2, #0
	bne _0201BF50
	bl sub_020D4BE8
	pop {r3, r4, r5, pc}
_0201BF50:
	mov r4, #3
	add r3, r0, #0
	tst r3, r4
	bne _0201BF76
	add r3, r1, #0
	tst r3, r4
	bne _0201BF76
	lsl r3, r2, #0x10
	lsr r3, r3, #0x10
	lsr r4, r3, #0x1f
	lsl r5, r3, #0x1e
	sub r5, r5, r4
	mov r3, #0x1e
	ror r5, r3
	add r3, r4, r5
	bne _0201BF76
	bl sub_020D4808
	pop {r3, r4, r5, pc}
_0201BF76:
	bl sub_020D47B8
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0201BF44

	thumb_func_start sub_0201BF7C
sub_0201BF7C: ; 0x0201BF7C
	push {r3, lr}
	mov r2, #0x2c
	mul r2, r1
	add r3, r0, r2
	ldr r2, [r3, #0x10]
	str r2, [sp]
	ldr r2, [r3, #8]
	ldr r3, [r3, #0xc]
	bl sub_0201BF94
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_0201BF7C

	thumb_func_start sub_0201BF94
sub_0201BF94: ; 0x0201BF94
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r5, r0, #0
	add r4, r1, #0
	add r6, r2, #0
	str r3, [sp]
	cmp r3, #0
	bne _0201C002
	mov r0, #0x2c
	add r7, r4, #0
	mul r7, r0
	add r0, r5, r7
	ldr r0, [r0, #8]
	str r0, [sp, #4]
	cmp r0, #0
	beq _0201BFD2
	ldr r1, [sp, #4]
	add r0, r6, #0
	add r2, r3, #0
	bl sub_0201BF44
	add r3, r5, r7
	ldr r2, [r3, #0x10]
	ldr r1, [sp, #4]
	ldr r3, [r3, #0xc]
	add r0, r4, #0
	lsl r2, r2, #1
	bl sub_0201C014
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_0201BFD2:
	ldr r0, [r6]
	lsr r7, r0, #8
	ldr r0, [r5]
	add r1, r7, #0
	bl sub_0201AACC
	add r5, r0, #0
	ldr r2, [sp]
	add r0, r6, #0
	add r1, r5, #0
	bl sub_0201BF44
	ldr r2, [sp, #0x20]
	add r0, r4, #0
	add r1, r5, #0
	lsl r2, r2, #1
	add r3, r7, #0
	bl sub_0201C014
	add r0, r5, #0
	bl sub_0201AB0C
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_0201C002:
	ldr r2, [sp, #0x20]
	add r0, r4, #0
	add r1, r6, #0
	lsl r2, r2, #1
	bl sub_0201C014
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0201BF94

	thumb_func_start sub_0201C014
sub_0201C014: ; 0x0201C014
	push {r3, r4, r5, r6, r7, lr}
	add r4, r1, #0
	add r6, r3, #0
	add r7, r0, #0
	add r0, r4, #0
	add r1, r6, #0
	add r5, r2, #0
	bl DC_FlushRange
	cmp r7, #7
	bhi _0201C0A4
	add r0, r7, r7
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_0201C036: ; jump table
	.short _0201C046 - _0201C036 - 2 ; case 0
	.short _0201C052 - _0201C036 - 2 ; case 1
	.short _0201C05E - _0201C036 - 2 ; case 2
	.short _0201C06A - _0201C036 - 2 ; case 3
	.short _0201C076 - _0201C036 - 2 ; case 4
	.short _0201C082 - _0201C036 - 2 ; case 5
	.short _0201C08E - _0201C036 - 2 ; case 6
	.short _0201C09A - _0201C036 - 2 ; case 7
_0201C046:
	add r0, r4, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020CFF24
	pop {r3, r4, r5, r6, r7, pc}
_0201C052:
	add r0, r4, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020CFFE4
	pop {r3, r4, r5, r6, r7, pc}
_0201C05E:
	add r0, r4, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020D00A4
	pop {r3, r4, r5, r6, r7, pc}
_0201C06A:
	add r0, r4, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020D0164
	pop {r3, r4, r5, r6, r7, pc}
_0201C076:
	add r0, r4, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020CFF84
	pop {r3, r4, r5, r6, r7, pc}
_0201C082:
	add r0, r4, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020D0044
	pop {r3, r4, r5, r6, r7, pc}
_0201C08E:
	add r0, r4, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020D0104
	pop {r3, r4, r5, r6, r7, pc}
_0201C09A:
	add r0, r4, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020D01C4
_0201C0A4:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0201C014

	thumb_func_start sub_0201C0A8
sub_0201C0A8: ; 0x0201C0A8
	push {r4, lr}
	add r4, r0, #0
	add r0, r2, #0
	mov r2, #0x2c
	mul r2, r1
	add r1, r4, r2
	ldr r1, [r1, #8]
	add r2, r3, #0
	bl sub_0201BF44
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0201C0A8

	thumb_func_start sub_0201C0C0
sub_0201C0C0: ; 0x0201C0C0
	push {r3, r4, lr}
	sub sp, #4
	mov r4, #0x2c
	mul r4, r1
	add r4, r0, r4
	ldrb r4, [r4, #0x1e]
	cmp r4, #0
	bne _0201C0DE
	ldr r4, [sp, #0x10]
	lsl r4, r4, #5
	str r4, [sp]
	bl sub_0201C0EC
	add sp, #4
	pop {r3, r4, pc}
_0201C0DE:
	ldr r4, [sp, #0x10]
	lsl r4, r4, #6
	str r4, [sp]
	bl sub_0201C0EC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end sub_0201C0C0

	thumb_func_start sub_0201C0EC
sub_0201C0EC: ; 0x0201C0EC
	push {r3, r4, r5, r6, r7, lr}
	add r7, r1, #0
	add r5, r2, #0
	str r3, [sp]
	cmp r3, #0
	bne _0201C124
	ldr r1, [r5]
	ldr r0, [r0]
	lsr r4, r1, #8
	add r1, r4, #0
	bl sub_0201AACC
	add r6, r0, #0
	ldr r2, [sp]
	add r0, r5, #0
	add r1, r6, #0
	bl sub_0201BF44
	ldr r2, [sp, #0x18]
	add r0, r7, #0
	add r1, r6, #0
	add r3, r4, #0
	bl sub_0201C130
	add r0, r6, #0
	bl sub_0201AB0C
	pop {r3, r4, r5, r6, r7, pc}
_0201C124:
	ldr r2, [sp, #0x18]
	add r0, r7, #0
	add r1, r5, #0
	bl sub_0201C130
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0201C0EC

	thumb_func_start sub_0201C130
sub_0201C130: ; 0x0201C130
	push {r3, r4, r5, r6, r7, lr}
	add r4, r1, #0
	add r6, r3, #0
	add r7, r0, #0
	add r0, r4, #0
	add r1, r6, #0
	add r5, r2, #0
	bl DC_FlushRange
	cmp r7, #7
	bhi _0201C1C0
	add r0, r7, r7
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_0201C152: ; jump table
	.short _0201C162 - _0201C152 - 2 ; case 0
	.short _0201C16E - _0201C152 - 2 ; case 1
	.short _0201C17A - _0201C152 - 2 ; case 2
	.short _0201C186 - _0201C152 - 2 ; case 3
	.short _0201C192 - _0201C152 - 2 ; case 4
	.short _0201C19E - _0201C152 - 2 ; case 5
	.short _0201C1AA - _0201C152 - 2 ; case 6
	.short _0201C1B6 - _0201C152 - 2 ; case 7
_0201C162:
	add r0, r4, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020D0224
	pop {r3, r4, r5, r6, r7, pc}
_0201C16E:
	add r0, r4, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020D02E4
	pop {r3, r4, r5, r6, r7, pc}
_0201C17A:
	add r0, r4, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020D03A4
	pop {r3, r4, r5, r6, r7, pc}
_0201C186:
	add r0, r4, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020D0464
	pop {r3, r4, r5, r6, r7, pc}
_0201C192:
	add r0, r4, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020D0284
	pop {r3, r4, r5, r6, r7, pc}
_0201C19E:
	add r0, r4, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020D0344
	pop {r3, r4, r5, r6, r7, pc}
_0201C1AA:
	add r0, r4, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020D0404
	pop {r3, r4, r5, r6, r7, pc}
_0201C1B6:
	add r0, r4, #0
	add r1, r5, #0
	add r2, r6, #0
	bl sub_020D04C4
_0201C1C0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0201C130

	thumb_func_start sub_0201C1C4
sub_0201C1C4: ; 0x0201C1C4
	push {r3, r4, r5, r6, r7, lr}
	add r6, r0, #0
	add r5, r1, #0
	add r0, r3, #0
	add r7, r2, #0
	str r3, [sp]
	bl sub_0201AACC
	add r4, r0, #0
	mov r1, #0
	add r2, r5, #0
	bl sub_020E5B44
	add r0, r6, #0
	add r1, r4, #0
	add r2, r7, #0
	add r3, r5, #0
	bl sub_0201C130
	ldr r0, [sp]
	add r1, r4, #0
	bl sub_0201AB80
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0201C1C4

	thumb_func_start sub_0201C1F4
sub_0201C1F4: ; 0x0201C1F4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r7, r1, #0
	add r4, r0, #0
	mov r1, #0x2c
	add r6, r7, #0
	add r4, #0x1f
	mul r6, r1
	ldrb r1, [r4, r6]
	ldr r0, [r0]
	add r5, r2, #0
	mul r1, r3
	str r1, [sp]
	bl sub_0201AACC
	str r0, [sp, #4]
	ldrb r0, [r4, r6]
	cmp r0, #0x20
	bne _0201C22E
	lsl r2, r5, #0xc
	lsl r1, r5, #8
	lsl r0, r5, #4
	orr r1, r2
	orr r0, r1
	add r1, r5, #0
	orr r1, r0
	lsl r0, r1, #0x10
	add r5, r1, #0
	b _0201C238
_0201C22E:
	lsl r2, r5, #0x18
	lsl r1, r5, #0x10
	lsl r0, r5, #8
	orr r1, r2
	orr r0, r1
_0201C238:
	orr r5, r0
	ldr r1, [sp, #4]
	ldr r2, [sp]
	add r0, r5, #0
	bl sub_020D4858
	lsl r0, r7, #0x18
	ldrb r2, [r4, r6]
	ldr r3, [sp, #0x20]
	ldr r1, [sp, #4]
	mul r2, r3
	ldr r3, [sp]
	lsr r0, r0, #0x18
	bl sub_0201C130
	ldr r0, [sp, #4]
	bl sub_0201AB0C
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0201C1F4

	thumb_func_start sub_0201C260
sub_0201C260: ; 0x0201C260
	push {r3, r4, r5, r6, r7, lr}
	add r5, r1, #0
	add r4, r2, #0
	add r6, r0, #0
	add r0, r5, #0
	add r1, r4, #0
	add r7, r3, #0
	bl DC_FlushRange
	cmp r6, #4
	bhs _0201C282
	add r0, r5, #0
	add r1, r7, #0
	add r2, r4, #0
	bl sub_020CFC6C
	pop {r3, r4, r5, r6, r7, pc}
_0201C282:
	add r0, r5, #0
	add r1, r7, #0
	add r2, r4, #0
	bl sub_020CFCC0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0201C260

	thumb_func_start sub_0201C290
sub_0201C290: ; 0x0201C290
	push {r3, r4, r5, r6, r7, lr}
	add r6, r0, #0
	add r5, r1, #0
	add r0, r3, #0
	add r7, r2, #0
	str r3, [sp]
	bl sub_0201AACC
	add r4, r0, #0
	mov r1, #0
	add r2, r5, #0
	bl sub_020E5B44
	add r0, r4, #0
	add r1, r5, #0
	bl DC_FlushRange
	cmp r6, #4
	bhs _0201C2C2
	add r0, r4, #0
	add r1, r7, #0
	add r2, r5, #0
	bl sub_020CFC6C
	b _0201C2CC
_0201C2C2:
	add r0, r4, #0
	add r1, r7, #0
	add r2, r5, #0
	bl sub_020CFCC0
_0201C2CC:
	ldr r0, [sp]
	add r1, r4, #0
	bl sub_0201AB80
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0201C290

	thumb_func_start sub_0201C2D8
sub_0201C2D8: ; 0x0201C2D8
	push {r0, r1, r2, r3}
	push {r3, lr}
	add r1, sp, #0xc
	mov r2, #2
	mov r3, #0
	bl sub_0201C260
	pop {r3}
	pop {r3}
	add sp, #0x10
	bx r3
	.align 2, 0
	thumb_func_end sub_0201C2D8

	thumb_func_start sub_0201C2F0
sub_0201C2F0: ; 0x0201C2F0
	push {r4, r5, r6, lr}
	add r4, r0, #0
	add r5, r1, #0
	add r6, r3, #0
	cmp r2, #5
	bhi _0201C3E2
	add r1, r2, r2
	add r1, pc
	ldrh r1, [r1, #6]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add pc, r1
_0201C308: ; jump table
	.short _0201C314 - _0201C308 - 2 ; case 0
	.short _0201C32E - _0201C308 - 2 ; case 1
	.short _0201C348 - _0201C308 - 2 ; case 2
	.short _0201C362 - _0201C308 - 2 ; case 3
	.short _0201C388 - _0201C308 - 2 ; case 4
	.short _0201C3CA - _0201C308 - 2 ; case 5
_0201C314:
	cmp r4, #0x10
	blo _0201C31C
	bl GF_AssertFail
_0201C31C:
	cmp r5, #0x10
	blo _0201C324
	bl GF_AssertFail
_0201C324:
	lsl r0, r5, #4
	add r0, r4, r0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	pop {r4, r5, r6, pc}
_0201C32E:
	cmp r4, #0x20
	blo _0201C336
	bl GF_AssertFail
_0201C336:
	cmp r5, #0x20
	blo _0201C33E
	bl GF_AssertFail
_0201C33E:
	lsl r0, r5, #5
	add r0, r4, r0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	pop {r4, r5, r6, pc}
_0201C348:
	cmp r4, #0x20
	blo _0201C350
	bl GF_AssertFail
_0201C350:
	cmp r5, #0x40
	blo _0201C358
	bl GF_AssertFail
_0201C358:
	lsl r0, r5, #5
	add r0, r4, r0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	pop {r4, r5, r6, pc}
_0201C362:
	cmp r4, #0x40
	blo _0201C36A
	bl GF_AssertFail
_0201C36A:
	cmp r5, #0x20
	blo _0201C372
	bl GF_AssertFail
_0201C372:
	mov r0, #0x1f
	add r1, r4, #0
	and r1, r0
	mov r0, #0x1f
	bic r4, r0
	add r0, r5, r4
	lsl r0, r0, #5
	add r0, r1, r0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	pop {r4, r5, r6, pc}
_0201C388:
	cmp r4, #0x40
	blo _0201C390
	bl GF_AssertFail
_0201C390:
	cmp r5, #0x40
	blo _0201C398
	bl GF_AssertFail
_0201C398:
	cmp r6, #0
	bne _0201C3C0
	asr r0, r5, #5
	asr r1, r4, #5
	lsl r0, r0, #1
	add r0, r1, r0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	lsl r0, r0, #0x1a
	lsr r2, r0, #0x10
	mov r0, #0x1f
	add r1, r4, #0
	and r1, r0
	lsl r0, r5, #0x1b
	lsr r0, r0, #0x16
	add r0, r1, r0
	add r0, r2, r0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	pop {r4, r5, r6, pc}
_0201C3C0:
	lsl r0, r5, #6
	add r0, r4, r0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	pop {r4, r5, r6, pc}
_0201C3CA:
	cmp r4, #0x80
	blo _0201C3D2
	bl GF_AssertFail
_0201C3D2:
	cmp r5, #0x80
	blo _0201C3DA
	bl GF_AssertFail
_0201C3DA:
	lsl r0, r5, #7
	add r0, r4, r0
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
_0201C3E2:
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0201C2F0

	thumb_func_start sub_0201C3E4
sub_0201C3E4: ; 0x0201C3E4
	push {r3, r4, r5, r6, r7}
	sub sp, #4
	str r3, [sp]
	add r6, r2, #0
	ldr r5, [sp]
	add r4, r6, #0
	sub r4, #0x20
	sub r5, #0x20
	mov r2, #0
	lsl r4, r4, #0x10
	lsl r5, r5, #0x10
	add r3, r2, #0
	asr r4, r4, #0x10
	asr r7, r5, #0x10
	lsr r5, r0, #5
	beq _0201C40A
	add r2, r2, #1
	lsl r2, r2, #0x18
	lsr r2, r2, #0x18
_0201C40A:
	lsr r5, r1, #5
	beq _0201C414
	add r2, r2, #2
	lsl r2, r2, #0x18
	lsr r2, r2, #0x18
_0201C414:
	cmp r2, #3
	bhi _0201C4BC
	add r2, r2, r2
	add r2, pc
	ldrh r2, [r2, #6]
	lsl r2, r2, #0x10
	asr r2, r2, #0x10
	add pc, r2
_0201C424: ; jump table
	.short _0201C42C - _0201C424 - 2 ; case 0
	.short _0201C44A - _0201C424 - 2 ; case 1
	.short _0201C470 - _0201C424 - 2 ; case 2
	.short _0201C49C - _0201C424 - 2 ; case 3
_0201C42C:
	cmp r4, #0
	blt _0201C43C
	lsl r1, r1, #5
	add r0, r0, r1
	add r0, r3, r0
	lsl r0, r0, #0x10
	lsr r3, r0, #0x10
	b _0201C4BC
_0201C43C:
	add r2, r1, #0
	mul r2, r6
	add r0, r0, r2
	add r0, r3, r0
	lsl r0, r0, #0x10
	lsr r3, r0, #0x10
	b _0201C4BC
_0201C44A:
	cmp r7, #0
	blt _0201C454
	mov r2, #1
	lsl r2, r2, #0xa
	b _0201C458
_0201C454:
	ldr r2, [sp]
	lsl r2, r2, #5
_0201C458:
	add r2, r3, r2
	lsl r2, r2, #0x10
	lsr r3, r2, #0x10
	mov r2, #0x1f
	and r2, r0
	add r0, r1, #0
	mul r0, r4
	add r0, r2, r0
	add r0, r3, r0
	lsl r0, r0, #0x10
	lsr r3, r0, #0x10
	b _0201C4BC
_0201C470:
	lsl r2, r6, #5
	add r2, r3, r2
	lsl r2, r2, #0x10
	lsr r2, r2, #0x10
	cmp r4, #0
	blt _0201C48A
	lsl r1, r1, #0x1b
	lsr r1, r1, #0x16
	add r0, r0, r1
	add r0, r2, r0
	lsl r0, r0, #0x10
	lsr r3, r0, #0x10
	b _0201C4BC
_0201C48A:
	mov r3, #0x1f
	and r1, r3
	add r3, r1, #0
	mul r3, r6
	add r0, r0, r3
	add r0, r2, r0
	lsl r0, r0, #0x10
	lsr r3, r0, #0x10
	b _0201C4BC
_0201C49C:
	add r2, r6, r7
	lsl r2, r2, #5
	add r2, r3, r2
	add r5, r0, #0
	mov r3, #0x1f
	add r0, r1, #0
	and r0, r3
	add r1, r0, #0
	lsl r2, r2, #0x10
	and r5, r3
	mul r1, r4
	lsr r2, r2, #0x10
	add r0, r5, r1
	add r0, r2, r0
	lsl r0, r0, #0x10
	lsr r3, r0, #0x10
_0201C4BC:
	add r0, r3, #0
	add sp, #4
	pop {r3, r4, r5, r6, r7}
	bx lr
	thumb_func_end sub_0201C3E4

	thumb_func_start sub_0201C4C4
sub_0201C4C4: ; 0x0201C4C4
	push {r3, r4, r5, r6, lr}
	sub sp, #0x1c
	add r6, sp, #0x20
	ldrb r5, [r6, #0x14]
	str r5, [sp]
	ldrb r4, [r6, #0x18]
	str r4, [sp, #4]
	str r2, [sp, #8]
	mov r2, #0
	str r2, [sp, #0xc]
	str r2, [sp, #0x10]
	str r5, [sp, #0x14]
	str r4, [sp, #0x18]
	add r2, r3, #0
	ldrb r3, [r6, #0x10]
	bl sub_0201C4EC
	add sp, #0x1c
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0201C4C4

	thumb_func_start sub_0201C4EC
sub_0201C4EC: ; 0x0201C4EC
	push {r4, r5, lr}
	sub sp, #0x1c
	add r4, r2, #0
	add r2, r3, #0
	mov r3, #0x2c
	add r5, r1, #0
	mul r5, r3
	add r1, r0, r5
	ldrb r1, [r1, #0x1c]
	add r3, sp, #0x18
	cmp r1, #1
	beq _0201C536
	ldrb r1, [r3, #0x14]
	add r0, #8
	add r0, r0, r5
	str r1, [sp]
	ldr r1, [sp, #0x30]
	str r1, [sp, #4]
	ldrb r1, [r3, #0x1c]
	str r1, [sp, #8]
	add r1, sp, #0x38
	ldrb r1, [r1]
	str r1, [sp, #0xc]
	add r1, sp, #0x3c
	ldrb r1, [r1]
	str r1, [sp, #0x10]
	add r1, sp, #0x40
	ldrb r1, [r1]
	str r1, [sp, #0x14]
	mov r1, #0
	str r1, [sp, #0x18]
	ldrb r3, [r3, #0x10]
	add r1, r4, #0
	bl sub_0201C5E4
	add sp, #0x1c
	pop {r4, r5, pc}
_0201C536:
	ldrb r1, [r3, #0x14]
	add r0, #8
	add r0, r0, r5
	str r1, [sp]
	ldr r1, [sp, #0x30]
	str r1, [sp, #4]
	ldrb r1, [r3, #0x1c]
	str r1, [sp, #8]
	add r1, sp, #0x38
	ldrb r1, [r1]
	str r1, [sp, #0xc]
	add r1, sp, #0x3c
	ldrb r1, [r1]
	str r1, [sp, #0x10]
	add r1, sp, #0x40
	ldrb r1, [r1]
	str r1, [sp, #0x14]
	mov r1, #0
	str r1, [sp, #0x18]
	ldrb r3, [r3, #0x10]
	add r1, r4, #0
	bl sub_0201C75C
	add sp, #0x1c
	pop {r4, r5, pc}
	thumb_func_end sub_0201C4EC

	thumb_func_start sub_0201C568
sub_0201C568: ; 0x0201C568
	push {r4, r5, lr}
	sub sp, #0x1c
	add r4, r2, #0
	add r2, r3, #0
	mov r3, #0x2c
	add r5, r1, #0
	mul r5, r3
	add r1, r0, r5
	ldrb r1, [r1, #0x1c]
	add r3, sp, #0x18
	cmp r1, #1
	beq _0201C5B2
	ldrb r1, [r3, #0x14]
	add r0, #8
	add r0, r0, r5
	str r1, [sp]
	ldr r1, [sp, #0x30]
	str r1, [sp, #4]
	ldrb r1, [r3, #0x1c]
	str r1, [sp, #8]
	add r1, sp, #0x38
	ldrb r1, [r1]
	str r1, [sp, #0xc]
	add r1, sp, #0x3c
	ldrb r1, [r1]
	str r1, [sp, #0x10]
	add r1, sp, #0x40
	ldrb r1, [r1]
	str r1, [sp, #0x14]
	mov r1, #1
	str r1, [sp, #0x18]
	ldrb r3, [r3, #0x10]
	add r1, r4, #0
	bl sub_0201C5E4
	add sp, #0x1c
	pop {r4, r5, pc}
_0201C5B2:
	ldrb r1, [r3, #0x14]
	add r0, #8
	add r0, r0, r5
	str r1, [sp]
	ldr r1, [sp, #0x30]
	str r1, [sp, #4]
	ldrb r1, [r3, #0x1c]
	str r1, [sp, #8]
	add r1, sp, #0x38
	ldrb r1, [r1]
	str r1, [sp, #0xc]
	add r1, sp, #0x3c
	ldrb r1, [r1]
	str r1, [sp, #0x10]
	add r1, sp, #0x40
	ldrb r1, [r1]
	str r1, [sp, #0x14]
	mov r1, #1
	str r1, [sp, #0x18]
	ldrb r3, [r3, #0x10]
	add r1, r4, #0
	bl sub_0201C75C
	add sp, #0x1c
	pop {r4, r5, pc}
	thumb_func_end sub_0201C568

	thumb_func_start sub_0201C5E4
sub_0201C5E4: ; 0x0201C5E4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x44
	str r1, [sp]
	str r2, [sp, #4]
	add r7, r0, #0
	ldr r0, [sp, #0x58]
	add r6, r3, #0
	str r0, [sp, #0x58]
	ldr r0, [sp, #0x5c]
	ldr r4, [sp, #0x68]
	str r0, [sp, #0x5c]
	ldr r0, [sp, #0x6c]
	str r0, [sp, #0x6c]
	ldr r0, [r7]
	str r0, [sp, #0x2c]
	cmp r0, #0
	bne _0201C608
	b _0201C756
_0201C608:
	ldrb r0, [r7, #0x15]
	add r1, sp, #0x40
	add r1, #1
	add r2, sp, #0x40
	bl sub_0201BAFC
	add r0, sp, #0x70
	ldrb r0, [r0]
	cmp r0, #0
	bne _0201C6B8
	mov r0, #0
	str r0, [sp, #0x28]
	ldr r0, [sp, #0x58]
	cmp r0, #0
	bls _0201C652
	add r1, sp, #0x48
	ldrb r0, [r1, #0x1c]
	str r0, [sp, #0x1c]
	ldrb r0, [r1, #0x18]
	str r0, [sp, #0x18]
	lsl r1, r0, #1
	ldr r0, [sp, #0x5c]
	add r0, r0, r1
	str r0, [sp, #0x14]
_0201C638:
	ldr r1, [sp, #4]
	ldr r0, [sp, #0x28]
	add r0, r1, r0
	add r1, sp, #0x40
	ldrb r1, [r1]
	cmp r0, r1
	bge _0201C652
	ldr r2, [sp, #0x1c]
	ldr r1, [sp, #0x28]
	add r2, r2, r1
	ldr r1, [sp, #0x6c]
	cmp r2, r1
	blt _0201C654
_0201C652:
	b _0201C756
_0201C654:
	mov r5, #0
	cmp r6, #0
	bls _0201C6A4
	add r1, r4, #0
	mul r1, r2
	lsl r2, r1, #1
	ldr r1, [sp, #0x14]
	lsl r0, r0, #0x18
	add r1, r1, r2
	lsr r0, r0, #0x18
	str r1, [sp, #0x10]
	str r0, [sp, #0x30]
_0201C66C:
	add r1, sp, #0x40
	ldr r0, [sp]
	ldrb r1, [r1, #1]
	add r0, r0, r5
	cmp r0, r1
	bge _0201C6A4
	ldr r1, [sp, #0x18]
	add r1, r1, r5
	cmp r1, r4
	bge _0201C6A4
	ldrb r2, [r7, #0x15]
	lsl r0, r0, #0x18
	ldrb r3, [r7, #0x14]
	ldr r1, [sp, #0x30]
	lsr r0, r0, #0x18
	bl sub_0201C2F0
	ldr r1, [sp, #0x10]
	lsl r2, r5, #1
	ldrh r1, [r1, r2]
	lsl r2, r0, #1
	ldr r0, [sp, #0x2c]
	strh r1, [r0, r2]
	add r0, r5, #1
	lsl r0, r0, #0x18
	lsr r5, r0, #0x18
	cmp r5, r6
	blo _0201C66C
_0201C6A4:
	ldr r0, [sp, #0x28]
	add r0, r0, #1
	lsl r0, r0, #0x18
	lsr r1, r0, #0x18
	str r1, [sp, #0x28]
	ldr r0, [sp, #0x58]
	cmp r1, r0
	blo _0201C638
	add sp, #0x44
	pop {r4, r5, r6, r7, pc}
_0201C6B8:
	mov r0, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x58]
	cmp r0, #0
	bls _0201C756
	add r1, sp, #0x48
	ldrb r0, [r1, #0x1c]
	str r0, [sp, #0x24]
	ldrb r0, [r1, #0x18]
	str r0, [sp, #0x20]
_0201C6CC:
	ldr r1, [sp, #4]
	ldr r0, [sp, #8]
	add r1, r1, r0
	add r0, sp, #0x40
	ldrb r0, [r0]
	cmp r1, r0
	bge _0201C756
	ldr r2, [sp, #0x24]
	ldr r0, [sp, #8]
	add r0, r2, r0
	ldr r2, [sp, #0x6c]
	cmp r0, r2
	bge _0201C756
	mov r5, #0
	cmp r6, #0
	bls _0201C746
	lsl r1, r1, #0x18
	lsl r0, r0, #0x18
	lsr r1, r1, #0x18
	lsr r0, r0, #0x18
	str r1, [sp, #0x34]
	str r0, [sp, #0x3c]
_0201C6F8:
	add r1, sp, #0x40
	ldr r0, [sp]
	ldrb r1, [r1, #1]
	add r0, r0, r5
	cmp r0, r1
	bge _0201C746
	ldr r1, [sp, #0x20]
	add r1, r1, r5
	str r1, [sp, #0xc]
	cmp r1, r4
	bge _0201C746
	ldrb r2, [r7, #0x15]
	lsl r0, r0, #0x18
	ldrb r3, [r7, #0x14]
	ldr r1, [sp, #0x34]
	lsr r0, r0, #0x18
	bl sub_0201C2F0
	str r0, [sp, #0x38]
	ldr r0, [sp, #0xc]
	ldr r1, [sp, #0x3c]
	lsl r0, r0, #0x18
	ldr r3, [sp, #0x6c]
	lsr r0, r0, #0x18
	add r2, r4, #0
	bl sub_0201C3E4
	lsl r1, r0, #1
	ldr r0, [sp, #0x5c]
	ldrh r0, [r0, r1]
	ldr r1, [sp, #0x38]
	lsl r2, r1, #1
	ldr r1, [sp, #0x2c]
	strh r0, [r1, r2]
	add r0, r5, #1
	lsl r0, r0, #0x18
	lsr r5, r0, #0x18
	cmp r5, r6
	blo _0201C6F8
_0201C746:
	ldr r0, [sp, #8]
	add r0, r0, #1
	lsl r0, r0, #0x18
	lsr r1, r0, #0x18
	str r1, [sp, #8]
	ldr r0, [sp, #0x58]
	cmp r1, r0
	blo _0201C6CC
_0201C756:
	add sp, #0x44
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0201C5E4

	thumb_func_start sub_0201C75C
sub_0201C75C: ; 0x0201C75C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x44
	str r1, [sp]
	str r2, [sp, #4]
	add r7, r0, #0
	ldr r0, [sp, #0x58]
	add r6, r3, #0
	str r0, [sp, #0x58]
	ldr r0, [sp, #0x5c]
	ldr r4, [sp, #0x68]
	str r0, [sp, #0x5c]
	ldr r0, [sp, #0x6c]
	str r0, [sp, #0x6c]
	ldr r0, [r7]
	str r0, [sp, #0x2c]
	cmp r0, #0
	bne _0201C780
	b _0201C8C0
_0201C780:
	ldrb r0, [r7, #0x15]
	add r1, sp, #0x40
	add r1, #1
	add r2, sp, #0x40
	bl sub_0201BAFC
	add r0, sp, #0x70
	ldrb r0, [r0]
	cmp r0, #0
	bne _0201C826
	mov r0, #0
	str r0, [sp, #0x28]
	ldr r0, [sp, #0x58]
	cmp r0, #0
	bls _0201C7BC
	add r1, sp, #0x48
	ldrb r0, [r1, #0x1c]
	str r0, [sp, #0x1c]
	ldrb r0, [r1, #0x18]
	ldr r1, [sp, #0x5c]
	str r0, [sp, #0x18]
	add r0, r1, r0
	str r0, [sp, #0x14]
_0201C7AE:
	ldr r1, [sp, #4]
	ldr r0, [sp, #0x28]
	add r0, r1, r0
	add r1, sp, #0x40
	ldrb r1, [r1]
	cmp r0, r1
	blt _0201C7BE
_0201C7BC:
	b _0201C8C0
_0201C7BE:
	ldr r2, [sp, #0x1c]
	ldr r1, [sp, #0x28]
	add r2, r2, r1
	ldr r1, [sp, #0x6c]
	cmp r2, r1
	bge _0201C8C0
	mov r5, #0
	cmp r6, #0
	bls _0201C812
	ldr r1, [sp, #0x14]
	mul r2, r4
	lsl r0, r0, #0x18
	add r1, r1, r2
	lsr r0, r0, #0x18
	str r1, [sp, #0x10]
	str r0, [sp, #0x30]
_0201C7DE:
	add r1, sp, #0x40
	ldr r0, [sp]
	ldrb r1, [r1, #1]
	add r0, r0, r5
	cmp r0, r1
	bge _0201C812
	ldr r1, [sp, #0x18]
	add r1, r1, r5
	cmp r1, r4
	bge _0201C812
	ldrb r2, [r7, #0x15]
	lsl r0, r0, #0x18
	ldrb r3, [r7, #0x14]
	ldr r1, [sp, #0x30]
	lsr r0, r0, #0x18
	bl sub_0201C2F0
	ldr r1, [sp, #0x10]
	ldrb r2, [r1, r5]
	ldr r1, [sp, #0x2c]
	strb r2, [r1, r0]
	add r0, r5, #1
	lsl r0, r0, #0x18
	lsr r5, r0, #0x18
	cmp r5, r6
	blo _0201C7DE
_0201C812:
	ldr r0, [sp, #0x28]
	add r0, r0, #1
	lsl r0, r0, #0x18
	lsr r1, r0, #0x18
	str r1, [sp, #0x28]
	ldr r0, [sp, #0x58]
	cmp r1, r0
	blo _0201C7AE
	add sp, #0x44
	pop {r4, r5, r6, r7, pc}
_0201C826:
	mov r0, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x58]
	cmp r0, #0
	bls _0201C8C0
	add r1, sp, #0x48
	ldrb r0, [r1, #0x1c]
	str r0, [sp, #0x24]
	ldrb r0, [r1, #0x18]
	str r0, [sp, #0x20]
_0201C83A:
	ldr r1, [sp, #4]
	ldr r0, [sp, #8]
	add r1, r1, r0
	add r0, sp, #0x40
	ldrb r0, [r0]
	cmp r1, r0
	bge _0201C8C0
	ldr r2, [sp, #0x24]
	ldr r0, [sp, #8]
	add r0, r2, r0
	ldr r2, [sp, #0x6c]
	cmp r0, r2
	bge _0201C8C0
	mov r5, #0
	cmp r6, #0
	bls _0201C8B0
	lsl r1, r1, #0x18
	lsl r0, r0, #0x18
	lsr r1, r1, #0x18
	lsr r0, r0, #0x18
	str r1, [sp, #0x34]
	str r0, [sp, #0x3c]
_0201C866:
	add r1, sp, #0x40
	ldr r0, [sp]
	ldrb r1, [r1, #1]
	add r0, r0, r5
	cmp r0, r1
	bge _0201C8B0
	ldr r1, [sp, #0x20]
	add r1, r1, r5
	str r1, [sp, #0xc]
	cmp r1, r4
	bge _0201C8B0
	ldrb r2, [r7, #0x15]
	lsl r0, r0, #0x18
	ldrb r3, [r7, #0x14]
	ldr r1, [sp, #0x34]
	lsr r0, r0, #0x18
	bl sub_0201C2F0
	str r0, [sp, #0x38]
	ldr r0, [sp, #0xc]
	ldr r1, [sp, #0x3c]
	lsl r0, r0, #0x18
	ldr r3, [sp, #0x6c]
	lsr r0, r0, #0x18
	add r2, r4, #0
	bl sub_0201C3E4
	ldr r1, [sp, #0x5c]
	ldrb r2, [r1, r0]
	ldr r1, [sp, #0x2c]
	ldr r0, [sp, #0x38]
	strb r2, [r1, r0]
	add r0, r5, #1
	lsl r0, r0, #0x18
	lsr r5, r0, #0x18
	cmp r5, r6
	blo _0201C866
_0201C8B0:
	ldr r0, [sp, #8]
	add r0, r0, #1
	lsl r0, r0, #0x18
	lsr r1, r0, #0x18
	str r1, [sp, #8]
	ldr r0, [sp, #0x58]
	cmp r1, r0
	blo _0201C83A
_0201C8C0:
	add sp, #0x44
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0201C75C

	thumb_func_start sub_0201C8C4
sub_0201C8C4: ; 0x0201C8C4
	push {r4, r5, lr}
	sub sp, #0xc
	add r4, r2, #0
	add r2, r3, #0
	mov r3, #0x2c
	add r5, r1, #0
	mul r5, r3
	add r1, r0, r5
	ldrb r1, [r1, #0x1c]
	add r3, sp, #8
	cmp r1, #1
	beq _0201C8F8
	ldrb r1, [r3, #0x14]
	add r0, #8
	add r0, r0, r5
	str r1, [sp]
	ldrb r1, [r3, #0x18]
	str r1, [sp, #4]
	ldrb r1, [r3, #0x1c]
	str r1, [sp, #8]
	ldrb r3, [r3, #0x10]
	add r1, r4, #0
	bl sub_0201C914
	add sp, #0xc
	pop {r4, r5, pc}
_0201C8F8:
	ldrb r1, [r3, #0x14]
	add r0, #8
	add r0, r0, r5
	str r1, [sp]
	ldrb r1, [r3, #0x18]
	str r1, [sp, #4]
	lsl r1, r4, #0x18
	ldrb r3, [r3, #0x10]
	lsr r1, r1, #0x18
	bl sub_0201C9D4
	add sp, #0xc
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0201C8C4

	thumb_func_start sub_0201C914
sub_0201C914: ; 0x0201C914
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	str r1, [sp]
	str r2, [sp, #4]
	str r3, [sp, #8]
	add r7, r0, #0
	ldr r4, [r7]
	ldr r6, [sp, #0x40]
	cmp r4, #0
	beq _0201C9CA
	ldrb r0, [r7, #0x15]
	add r1, sp, #0x1c
	add r1, #1
	add r2, sp, #0x1c
	bl sub_0201BAFC
	add r0, sp, #0x28
	ldrb r2, [r0, #0x14]
	ldr r1, [sp, #8]
	add r1, r1, r2
	ldr r2, [sp, #8]
	str r1, [sp, #0xc]
	cmp r2, r1
	bge _0201C9CA
	ldr r2, _0201C9D0 ; =0x00000FFF
	ldr r1, [sp]
	and r1, r2
	lsl r2, r6, #0xc
	str r1, [sp, #0x14]
	add r1, r2, r1
	ldrb r2, [r0, #0x10]
	ldr r0, [sp, #4]
	add r0, r0, r2
	str r0, [sp, #0x10]
	lsl r0, r1, #0x10
	lsr r0, r0, #0x10
	str r0, [sp, #0x18]
_0201C95E:
	add r0, sp, #0x1c
	ldrb r1, [r0]
	ldr r0, [sp, #8]
	cmp r0, r1
	bhs _0201C9CA
	ldr r5, [sp, #4]
	ldr r0, [sp, #0x10]
	add r1, r5, #0
	cmp r1, r0
	bge _0201C9BA
_0201C972:
	add r0, sp, #0x1c
	ldrb r0, [r0, #1]
	cmp r5, r0
	bhs _0201C9BA
	ldrb r2, [r7, #0x15]
	ldrb r3, [r7, #0x14]
	ldr r1, [sp, #8]
	add r0, r5, #0
	bl sub_0201C2F0
	cmp r6, #0x11
	bne _0201C992
	lsl r1, r0, #1
	ldr r0, [sp]
	strh r0, [r4, r1]
	b _0201C9AE
_0201C992:
	cmp r6, #0x10
	bne _0201C9A8
	lsl r0, r0, #1
	ldrh r2, [r4, r0]
	mov r1, #0xf
	lsl r1, r1, #0xc
	and r2, r1
	ldr r1, [sp, #0x14]
	add r1, r1, r2
	strh r1, [r4, r0]
	b _0201C9AE
_0201C9A8:
	lsl r1, r0, #1
	ldr r0, [sp, #0x18]
	strh r0, [r4, r1]
_0201C9AE:
	add r0, r5, #1
	lsl r0, r0, #0x18
	lsr r5, r0, #0x18
	ldr r0, [sp, #0x10]
	cmp r5, r0
	blt _0201C972
_0201C9BA:
	ldr r0, [sp, #8]
	add r0, r0, #1
	lsl r0, r0, #0x18
	lsr r1, r0, #0x18
	ldr r0, [sp, #0xc]
	str r1, [sp, #8]
	cmp r1, r0
	blt _0201C95E
_0201C9CA:
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0201C9D0: .word 0x00000FFF
	thumb_func_end sub_0201C914

	thumb_func_start sub_0201C9D4
sub_0201C9D4: ; 0x0201C9D4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r1, [sp]
	add r7, r0, #0
	str r2, [sp, #4]
	ldr r0, [r7]
	add r5, r3, #0
	str r0, [sp, #0xc]
	cmp r0, #0
	beq _0201CA46
	ldrb r0, [r7, #0x15]
	add r1, sp, #0x10
	add r1, #1
	add r2, sp, #0x10
	bl sub_0201BAFC
	add r1, sp, #0x18
	ldrb r0, [r1, #0x14]
	add r0, r5, r0
	str r0, [sp, #8]
	cmp r5, r0
	bge _0201CA46
	ldrb r1, [r1, #0x10]
	ldr r0, [sp, #4]
	add r6, r0, r1
_0201CA06:
	add r0, sp, #0x10
	ldrb r0, [r0]
	cmp r5, r0
	bhs _0201CA46
	ldr r4, [sp, #4]
	add r0, r4, #0
	cmp r0, r6
	bge _0201CA3A
_0201CA16:
	add r0, sp, #0x10
	ldrb r0, [r0, #1]
	cmp r4, r0
	bhs _0201CA3A
	ldrb r2, [r7, #0x15]
	ldrb r3, [r7, #0x14]
	add r0, r4, #0
	add r1, r5, #0
	bl sub_0201C2F0
	ldr r2, [sp]
	ldr r1, [sp, #0xc]
	strb r2, [r1, r0]
	add r0, r4, #1
	lsl r0, r0, #0x18
	lsr r4, r0, #0x18
	cmp r4, r6
	blt _0201CA16
_0201CA3A:
	add r0, r5, #1
	lsl r0, r0, #0x18
	lsr r5, r0, #0x18
	ldr r0, [sp, #8]
	cmp r5, r0
	blt _0201CA06
_0201CA46:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0201C9D4

	thumb_func_start sub_0201CA4C
sub_0201CA4C: ; 0x0201CA4C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	add r5, r0, #0
	mov r0, #0x2c
	add r7, r1, #0
	mul r7, r0
	str r2, [sp]
	add r0, r5, r7
	ldr r4, [r0, #8]
	add r6, r3, #0
	cmp r4, #0
	beq _0201CAD8
	ldrb r0, [r0, #0x1d]
	add r1, sp, #0x10
	add r1, #1
	add r2, sp, #0x10
	bl sub_0201BAFC
	add r0, sp, #0x18
	ldrb r1, [r0, #0x14]
	add r1, r6, r1
	str r1, [sp, #4]
	cmp r6, r1
	bge _0201CAD8
	ldrb r1, [r0, #0x18]
	add r7, r5, r7
	lsl r1, r1, #0xc
	str r1, [sp, #0xc]
	ldrb r1, [r0, #0x10]
	ldr r0, [sp]
	add r0, r0, r1
	str r0, [sp, #8]
_0201CA8C:
	add r0, sp, #0x10
	ldrb r0, [r0]
	cmp r6, r0
	bhs _0201CAD8
	ldr r5, [sp]
	ldr r0, [sp, #8]
	add r1, r5, #0
	cmp r1, r0
	bge _0201CACC
_0201CA9E:
	add r0, sp, #0x10
	ldrb r0, [r0, #1]
	cmp r5, r0
	bhs _0201CACC
	ldrb r2, [r7, #0x1d]
	ldrb r3, [r7, #0x1c]
	add r0, r5, #0
	add r1, r6, #0
	bl sub_0201C2F0
	lsl r0, r0, #1
	ldrh r2, [r4, r0]
	ldr r1, _0201CADC ; =0x00000FFF
	and r2, r1
	ldr r1, [sp, #0xc]
	orr r1, r2
	strh r1, [r4, r0]
	add r0, r5, #1
	lsl r0, r0, #0x18
	lsr r5, r0, #0x18
	ldr r0, [sp, #8]
	cmp r5, r0
	blt _0201CA9E
_0201CACC:
	add r0, r6, #1
	lsl r0, r0, #0x18
	lsr r6, r0, #0x18
	ldr r0, [sp, #4]
	cmp r6, r0
	blt _0201CA8C
_0201CAD8:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0201CADC: .word 0x00000FFF
	thumb_func_end sub_0201CA4C

	thumb_func_start sub_0201CAE0
sub_0201CAE0: ; 0x0201CAE0
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	mov r0, #0x2c
	mul r0, r4
	add r2, r5, r0
	ldr r1, [r2, #8]
	cmp r1, #0
	beq _0201CB02
	ldr r2, [r2, #0xc]
	mov r0, #0
	bl sub_020D4790
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0201BF7C
_0201CB02:
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0201CAE0

	thumb_func_start sub_0201CB04
sub_0201CB04: ; 0x0201CB04
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	mov r0, #0x2c
	mul r0, r4
	add r3, r5, r0
	ldr r1, [r3, #8]
	cmp r1, #0
	beq _0201CB26
	add r0, r2, #0
	ldr r2, [r3, #0xc]
	bl sub_020D4790
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0201BF7C
_0201CB26:
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0201CB04

	thumb_func_start sub_0201CB28
sub_0201CB28: ; 0x0201CB28
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	mov r0, #0x2c
	mul r0, r4
	add r3, r5, r0
	ldr r1, [r3, #8]
	cmp r1, #0
	beq _0201CB4A
	add r0, r2, #0
	ldr r2, [r3, #0xc]
	bl sub_020D4790
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0201EFBC
_0201CB4A:
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0201CB28

	thumb_func_start sub_0201CB4C
sub_0201CB4C: ; 0x0201CB4C
	push {r3, lr}
	cmp r0, #7
	bhi _0201CB9E
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_0201CB5E: ; jump table
	.short _0201CB6E - _0201CB5E - 2 ; case 0
	.short _0201CB74 - _0201CB5E - 2 ; case 1
	.short _0201CB7A - _0201CB5E - 2 ; case 2
	.short _0201CB80 - _0201CB5E - 2 ; case 3
	.short _0201CB86 - _0201CB5E - 2 ; case 4
	.short _0201CB8C - _0201CB5E - 2 ; case 5
	.short _0201CB92 - _0201CB5E - 2 ; case 6
	.short _0201CB98 - _0201CB5E - 2 ; case 7
_0201CB6E:
	bl sub_020CEED4
	pop {r3, pc}
_0201CB74:
	bl sub_020CEF28
	pop {r3, pc}
_0201CB7A:
	bl sub_020CEF7C
	pop {r3, pc}
_0201CB80:
	bl sub_020CF00C
	pop {r3, pc}
_0201CB86:
	bl sub_020CEF08
	pop {r3, pc}
_0201CB8C:
	bl sub_020CEF5C
	pop {r3, pc}
_0201CB92:
	bl sub_020CEFCC
	pop {r3, pc}
_0201CB98:
	bl sub_020CF064
	pop {r3, pc}
_0201CB9E:
	mov r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_0201CB4C

	thumb_func_start sub_0201CBA4
sub_0201CBA4: ; 0x0201CBA4
	push {r4, r5, r6, r7}
	lsl r3, r3, #0x1c
	lsr r3, r3, #0x18
	mov r4, #0
	cmp r1, #0
	bls _0201CBDE
	mov r5, #0xf
	add r6, r5, #0
_0201CBB4:
	ldrb r7, [r0, r4]
	and r7, r6
	strb r7, [r2]
	ldrb r7, [r2]
	cmp r7, #0
	beq _0201CBC4
	add r7, r7, r3
	strb r7, [r2]
_0201CBC4:
	ldrb r7, [r0, r4]
	asr r7, r7, #4
	and r7, r5
	strb r7, [r2, #1]
	ldrb r7, [r2, #1]
	cmp r7, #0
	beq _0201CBD6
	add r7, r7, r3
	strb r7, [r2, #1]
_0201CBD6:
	add r4, r4, #1
	add r2, r2, #2
	cmp r4, r1
	blo _0201CBB4
_0201CBDE:
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end sub_0201CBA4

	thumb_func_start sub_0201CBE4
sub_0201CBE4: ; 0x0201CBE4
	push {r3, r4, r5, r6, r7, lr}
	add r5, r1, #0
	add r6, r0, #0
	add r0, r3, #0
	lsl r1, r5, #1
	add r7, r2, #0
	bl sub_0201AA8C
	add r4, r0, #0
	add r0, r6, #0
	add r1, r5, #0
	add r2, r4, #0
	add r3, r7, #0
	bl sub_0201CBA4
	add r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0201CBE4

	thumb_func_start sub_0201CC08
sub_0201CC08: ; 0x0201CC08
	mov r2, #0x2c
	mul r2, r1
	add r0, r0, r2
	ldr r0, [r0, #8]
	bx lr
	.align 2, 0
	thumb_func_end sub_0201CC08

	thumb_func_start sub_0201CC14
sub_0201CC14: ; 0x0201CC14
	mov r2, #0x2c
	mul r2, r1
	add r0, r0, r2
	ldr r0, [r0, #0x14]
	bx lr
	.align 2, 0
	thumb_func_end sub_0201CC14

	thumb_func_start sub_0201CC20
sub_0201CC20: ; 0x0201CC20
	mov r2, #0x2c
	mul r2, r1
	add r0, r0, r2
	ldrb r0, [r0, #0x1e]
	bx lr
	.align 2, 0
	thumb_func_end sub_0201CC20

	thumb_func_start sub_0201CC2C
sub_0201CC2C: ; 0x0201CC2C
	sub sp, #0x20
	cmp r1, #7
	bls _0201CC34
	b _0201CDE0
_0201CC34:
	add r2, r1, r1
	add r2, pc
	ldrh r2, [r2, #6]
	lsl r2, r2, #0x10
	asr r2, r2, #0x10
	add pc, r2
_0201CC40: ; jump table
	.short _0201CC50 - _0201CC40 - 2 ; case 0
	.short _0201CC64 - _0201CC40 - 2 ; case 1
	.short _0201CC78 - _0201CC40 - 2 ; case 2
	.short _0201CCC8 - _0201CC40 - 2 ; case 3
	.short _0201CD18 - _0201CC40 - 2 ; case 4
	.short _0201CD2C - _0201CC40 - 2 ; case 5
	.short _0201CD40 - _0201CC40 - 2 ; case 6
	.short _0201CD90 - _0201CC40 - 2 ; case 7
_0201CC50:
	ldr r0, _0201CDE8 ; =0x04000008
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0x1e]
	lsl r0, r1, #0x1e
	lsr r0, r0, #0x1e
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
_0201CC64:
	ldr r0, _0201CDEC ; =0x0400000A
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0x1c]
	lsl r0, r1, #0x1e
	lsr r0, r0, #0x1e
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
_0201CC78:
	mov r2, #0x2c
	mul r2, r1
	add r0, r0, r2
	ldrb r0, [r0, #0x1c]
	cmp r0, #0
	beq _0201CC8C
	cmp r0, #1
	beq _0201CCA0
	cmp r0, #2
	beq _0201CCB4
_0201CC8C:
	ldr r0, _0201CDF0 ; =0x0400000C
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0x1a]
	lsl r0, r1, #0x1e
	lsr r0, r0, #0x1e
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
_0201CCA0:
	ldr r0, _0201CDF0 ; =0x0400000C
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0x18]
	lsl r0, r1, #0x1e
	lsr r0, r0, #0x1e
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
_0201CCB4:
	ldr r0, _0201CDF0 ; =0x0400000C
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0x16]
	lsl r0, r1, #0x1e
	lsr r0, r0, #0x1e
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
_0201CCC8:
	mov r2, #0x2c
	mul r2, r1
	add r0, r0, r2
	ldrb r0, [r0, #0x1c]
	cmp r0, #0
	beq _0201CCDC
	cmp r0, #1
	beq _0201CCF0
	cmp r0, #2
	beq _0201CD04
_0201CCDC:
	ldr r0, _0201CDF4 ; =0x0400000E
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0x14]
	lsl r0, r1, #0x1e
	lsr r0, r0, #0x1e
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
_0201CCF0:
	ldr r0, _0201CDF4 ; =0x0400000E
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0x12]
	lsl r0, r1, #0x1e
	lsr r0, r0, #0x1e
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
_0201CD04:
	ldr r0, _0201CDF4 ; =0x0400000E
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0x10]
	lsl r0, r1, #0x1e
	lsr r0, r0, #0x1e
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
_0201CD18:
	ldr r0, _0201CDF8 ; =0x04001008
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0xe]
	lsl r0, r1, #0x1e
	lsr r0, r0, #0x1e
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
_0201CD2C:
	ldr r0, _0201CDFC ; =0x0400100A
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0xc]
	lsl r0, r1, #0x1e
	lsr r0, r0, #0x1e
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
_0201CD40:
	mov r2, #0x2c
	mul r2, r1
	add r0, r0, r2
	ldrb r0, [r0, #0x1c]
	cmp r0, #0
	beq _0201CD54
	cmp r0, #1
	beq _0201CD68
	cmp r0, #2
	beq _0201CD7C
_0201CD54:
	ldr r0, _0201CE00 ; =0x0400100C
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0xa]
	lsl r0, r1, #0x1e
	lsr r0, r0, #0x1e
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
_0201CD68:
	ldr r0, _0201CE00 ; =0x0400100C
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #8]
	lsl r0, r1, #0x1e
	lsr r0, r0, #0x1e
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
_0201CD7C:
	ldr r0, _0201CE00 ; =0x0400100C
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #6]
	lsl r0, r1, #0x1e
	lsr r0, r0, #0x1e
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
_0201CD90:
	mov r2, #0x2c
	mul r2, r1
	add r0, r0, r2
	ldrb r0, [r0, #0x1c]
	cmp r0, #0
	beq _0201CDA4
	cmp r0, #1
	beq _0201CDB8
	cmp r0, #2
	beq _0201CDCC
_0201CDA4:
	ldr r0, _0201CE04 ; =0x0400100E
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #4]
	lsl r0, r1, #0x1e
	lsr r0, r0, #0x1e
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
_0201CDB8:
	ldr r0, _0201CE04 ; =0x0400100E
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #2]
	lsl r0, r1, #0x1e
	lsr r0, r0, #0x1e
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
_0201CDCC:
	ldr r0, _0201CE04 ; =0x0400100E
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0]
	lsl r0, r1, #0x1e
	lsr r0, r0, #0x1e
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	bx lr
_0201CDE0:
	mov r0, #0
	add sp, #0x20
	bx lr
	nop
_0201CDE8: .word 0x04000008
_0201CDEC: .word 0x0400000A
_0201CDF0: .word 0x0400000C
_0201CDF4: .word 0x0400000E
_0201CDF8: .word 0x04001008
_0201CDFC: .word 0x0400100A
_0201CE00: .word 0x0400100C
_0201CE04: .word 0x0400100E
	thumb_func_end sub_0201CC2C

	thumb_func_start sub_0201CE08
sub_0201CE08: ; 0x0201CE08
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x68
	str r2, [sp, #8]
	str r3, [sp, #0xc]
	add r2, sp, #0x70
	str r0, [sp]
	ldrh r0, [r2, #0x10]
	str r1, [sp, #4]
	ldrh r2, [r2, #0x18]
	str r0, [sp, #0x10]
	add r0, r1, #0
	ldrh r1, [r0, #4]
	ldr r0, [sp, #0x10]
	sub r3, r1, r0
	cmp r3, r2
	bge _0201CE30
	ldr r0, [sp, #8]
	add r0, r0, r3
	str r0, [sp, #0x50]
	b _0201CE36
_0201CE30:
	ldr r0, [sp, #8]
	add r0, r2, r0
	str r0, [sp, #0x50]
_0201CE36:
	ldr r2, [sp, #4]
	add r3, sp, #0x70
	ldrh r0, [r3, #0x14]
	ldrh r2, [r2, #6]
	ldrh r3, [r3, #0x1c]
	sub r4, r2, r0
	cmp r4, r3
	bge _0201CE4E
	ldr r2, [sp, #0xc]
	add r2, r2, r4
	str r2, [sp, #0x4c]
	b _0201CE54
_0201CE4E:
	ldr r2, [sp, #0xc]
	add r2, r3, r2
	str r2, [sp, #0x4c]
_0201CE54:
	ldr r2, [sp]
	mov r3, #7
	ldrh r4, [r2, #4]
	add r2, r4, #0
	and r2, r3
	add r2, r4, r2
	asr r2, r2, #3
	str r2, [sp, #0x48]
	add r2, r1, #0
	and r2, r3
	add r1, r1, r2
	asr r1, r1, #3
	str r1, [sp, #0x44]
	add r1, sp, #0x70
	ldrh r1, [r1, #0x20]
	ldr r2, _0201D040 ; =0x0000FFFF
	str r1, [sp, #0x38]
	cmp r1, r2
	bne _0201CF5C
	ldr r2, [sp, #0xc]
	ldr r1, [sp, #0x4c]
	cmp r2, r1
	bge _0201CE86
	cmp r2, r1
	blt _0201CE88
_0201CE86:
	b _0201D03A
_0201CE88:
	add r1, r2, #0
	lsl r1, r1, #2
	lsl r0, r0, #2
	str r1, [sp, #0x28]
	str r0, [sp, #0x24]
_0201CE92:
	ldr r3, [sp, #8]
	ldr r0, [sp, #0x50]
	add r1, r3, #0
	ldr r4, [sp, #0x10]
	cmp r1, r0
	bge _0201CF3E
	cmp r1, r0
	bge _0201CF3E
	add r0, r3, #0
	lsl r5, r0, #2
	add r0, r4, #0
	lsl r6, r0, #2
	ldr r0, _0201D044 ; =0x00003FE0
	ldr r1, [sp, #0x28]
	ldr r2, [sp, #0x48]
	and r1, r0
	mul r2, r1
	str r2, [sp, #0x20]
	ldr r2, [sp, #0x28]
	mov r1, #0x1c
	and r2, r1
	str r2, [sp, #0x1c]
	ldr r2, [sp, #0x24]
	and r0, r2
	ldr r2, [sp, #0x44]
	mul r2, r0
	ldr r0, [sp, #0x24]
	str r2, [sp, #0x18]
	and r0, r1
	str r0, [sp, #0x14]
_0201CECE:
	ldr r0, [sp, #4]
	asr r2, r4, #1
	mov r1, #3
	ldr r0, [r0]
	and r1, r2
	add r1, r0, r1
	ldr r0, _0201D044 ; =0x00003FE0
	and r0, r6
	add r1, r1, r0
	ldr r0, [sp, #0x18]
	add r6, r6, #4
	add r0, r1, r0
	str r0, [sp, #0x64]
	lsl r0, r4, #0x1f
	lsr r2, r0, #0x1d
	ldr r0, [sp]
	asr r1, r3, #1
	ldr r7, [r0]
	mov r0, #3
	and r0, r1
	ldr r1, _0201D044 ; =0x00003FE0
	add r4, r4, #1
	and r1, r5
	str r1, [sp, #0x54]
	add r1, r7, r0
	ldr r0, [sp, #0x54]
	add r5, r5, #4
	add r1, r0, r1
	ldr r0, [sp, #0x20]
	add r1, r0, r1
	ldr r0, [sp, #0x1c]
	ldrb r1, [r0, r1]
	lsl r0, r3, #0x1f
	lsr r0, r0, #0x1d
	asr r1, r0
	mov r0, #0xf
	and r0, r1
	add r7, r0, #0
	ldr r1, [sp, #0x14]
	ldr r0, [sp, #0x64]
	lsl r7, r2
	ldrb r0, [r0, r1]
	add r3, r3, #1
	str r0, [sp, #0x58]
	mov r0, #0xf0
	asr r0, r2
	ldr r1, [sp, #0x58]
	add r2, r7, #0
	and r0, r1
	orr r2, r0
	ldr r1, [sp, #0x14]
	ldr r0, [sp, #0x64]
	strb r2, [r0, r1]
	ldr r0, [sp, #0x50]
	cmp r3, r0
	blt _0201CECE
_0201CF3E:
	ldr r0, [sp, #0x28]
	add r0, r0, #4
	str r0, [sp, #0x28]
	ldr r0, [sp, #0xc]
	add r0, r0, #1
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x24]
	ldr r1, [sp, #0xc]
	add r0, r0, #4
	str r0, [sp, #0x24]
	ldr r0, [sp, #0x4c]
	cmp r1, r0
	blt _0201CE92
	add sp, #0x68
	pop {r3, r4, r5, r6, r7, pc}
_0201CF5C:
	ldr r2, [sp, #0xc]
	ldr r1, [sp, #0x4c]
	cmp r2, r1
	bge _0201D03A
	cmp r2, r1
	bge _0201D03A
	add r1, r2, #0
	lsl r1, r1, #2
	lsl r0, r0, #2
	str r1, [sp, #0x40]
	str r0, [sp, #0x3c]
_0201CF72:
	ldr r3, [sp, #8]
	ldr r0, [sp, #0x50]
	add r1, r3, #0
	ldr r4, [sp, #0x10]
	cmp r1, r0
	bge _0201D020
	cmp r1, r0
	bge _0201D020
	add r0, r3, #0
	lsl r1, r0, #2
	add r0, r4, #0
	lsl r2, r0, #2
	ldr r0, _0201D044 ; =0x00003FE0
	ldr r5, [sp, #0x40]
	ldr r6, [sp, #0x48]
	and r5, r0
	mul r6, r5
	str r6, [sp, #0x34]
	ldr r6, [sp, #0x40]
	mov r5, #0x1c
	and r6, r5
	str r6, [sp, #0x30]
	ldr r6, [sp, #0x3c]
	and r0, r6
	ldr r6, [sp, #0x44]
	mul r6, r0
	ldr r0, [sp, #0x3c]
	str r6, [sp, #0x2c]
	and r0, r5
	str r0, [sp, #0x60]
_0201CFAE:
	ldr r0, [sp, #4]
	asr r6, r4, #1
	mov r5, #3
	and r5, r6
	ldr r0, [r0]
	asr r6, r3, #1
	add r5, r0, r5
	ldr r0, _0201D044 ; =0x00003FE0
	and r0, r2
	add r5, r5, r0
	ldr r0, [sp, #0x2c]
	add r5, r5, r0
	ldr r0, [sp]
	ldr r7, [r0]
	mov r0, #3
	and r0, r6
	ldr r6, _0201D044 ; =0x00003FE0
	and r6, r1
	str r6, [sp, #0x5c]
	add r6, r7, r0
	ldr r0, [sp, #0x5c]
	add r6, r0, r6
	ldr r0, [sp, #0x34]
	add r6, r0, r6
	ldr r0, [sp, #0x30]
	ldrb r6, [r0, r6]
	lsl r0, r3, #0x1f
	lsr r0, r0, #0x1d
	asr r6, r0
	mov r0, #0xf
	and r0, r6
	ldr r6, [sp, #0x38]
	cmp r0, r6
	beq _0201D012
	lsl r6, r4, #0x1f
	lsr r7, r6, #0x1d
	lsl r0, r7
	mov lr, r0
	ldr r0, [sp, #0x60]
	ldrb r0, [r5, r0]
	mov ip, r0
	mov r0, #0xf0
	add r6, r0, #0
	asr r6, r7
	mov r0, ip
	and r0, r6
	mov r6, lr
	orr r6, r0
	ldr r0, [sp, #0x60]
	strb r6, [r5, r0]
_0201D012:
	ldr r0, [sp, #0x50]
	add r3, r3, #1
	add r1, r1, #4
	add r2, r2, #4
	add r4, r4, #1
	cmp r3, r0
	blt _0201CFAE
_0201D020:
	ldr r0, [sp, #0x40]
	add r0, r0, #4
	str r0, [sp, #0x40]
	ldr r0, [sp, #0xc]
	add r0, r0, #1
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x3c]
	ldr r1, [sp, #0xc]
	add r0, r0, #4
	str r0, [sp, #0x3c]
	ldr r0, [sp, #0x4c]
	cmp r1, r0
	blt _0201CF72
_0201D03A:
	add sp, #0x68
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0201D040: .word 0x0000FFFF
_0201D044: .word 0x00003FE0
	thumb_func_end sub_0201CE08

	thumb_func_start sub_0201D048
sub_0201D048: ; 0x0201D048
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x50
	str r2, [sp, #8]
	str r3, [sp, #0xc]
	add r2, sp, #0x58
	str r0, [sp]
	ldrh r0, [r2, #0x10]
	str r1, [sp, #4]
	ldrh r2, [r2, #0x18]
	str r0, [sp, #0x10]
	add r0, r1, #0
	ldrh r1, [r0, #4]
	ldr r0, [sp, #0x10]
	sub r3, r1, r0
	cmp r3, r2
	bge _0201D06E
	ldr r0, [sp, #8]
	add r0, r0, r3
	b _0201D072
_0201D06E:
	ldr r0, [sp, #8]
	add r0, r2, r0
_0201D072:
	ldr r2, [sp, #4]
	add r3, sp, #0x58
	mov ip, r0
	ldrh r0, [r3, #0x14]
	ldrh r2, [r2, #6]
	ldrh r3, [r3, #0x1c]
	sub r4, r2, r0
	cmp r4, r3
	bge _0201D08A
	ldr r2, [sp, #0xc]
	add r2, r2, r4
	b _0201D08E
_0201D08A:
	ldr r2, [sp, #0xc]
	add r2, r3, r2
_0201D08E:
	mov lr, r2
	ldr r2, [sp]
	mov r3, #7
	ldrh r4, [r2, #4]
	add r2, r4, #0
	and r2, r3
	add r2, r4, r2
	asr r2, r2, #3
	str r2, [sp, #0x4c]
	add r2, r1, #0
	and r2, r3
	add r1, r1, r2
	asr r1, r1, #3
	str r1, [sp, #0x48]
	add r1, sp, #0x58
	ldrh r1, [r1, #0x20]
	ldr r2, _0201D228 ; =0x0000FFFF
	str r1, [sp, #0x3c]
	cmp r1, r2
	bne _0201D16E
	ldr r2, [sp, #0xc]
	mov r1, lr
	cmp r2, r1
	bge _0201D0C4
	mov r1, lr
	cmp r2, r1
	blt _0201D0C6
_0201D0C4:
	b _0201D224
_0201D0C6:
	add r1, r2, #0
	lsl r1, r1, #3
	lsl r0, r0, #3
	str r1, [sp, #0x28]
	str r0, [sp, #0x24]
_0201D0D0:
	ldr r1, [sp, #8]
	mov r0, ip
	add r2, r1, #0
	ldr r7, [sp, #0x10]
	cmp r2, r0
	bge _0201D150
	mov r0, ip
	cmp r2, r0
	bge _0201D150
	add r0, r1, #0
	lsl r2, r0, #3
	add r0, r7, #0
	lsl r3, r0, #3
	ldr r6, _0201D22C ; =0x00007FC0
	ldr r0, [sp, #0x28]
	ldr r4, [sp, #0x4c]
	and r0, r6
	mul r4, r0
	str r4, [sp, #0x20]
	ldr r0, [sp, #0x28]
	mov r5, #0x38
	and r0, r5
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0x24]
	ldr r4, [sp, #0x48]
	and r0, r6
	mul r4, r0
	ldr r0, [sp, #0x24]
	str r4, [sp, #0x18]
	and r0, r5
	str r0, [sp, #0x14]
_0201D10E:
	ldr r0, [sp]
	add r5, r1, #0
	mov r4, #7
	and r5, r4
	ldr r0, [r0]
	ldr r4, _0201D22C ; =0x00007FC0
	add r0, r0, r5
	and r4, r2
	add r4, r4, r0
	ldr r0, [sp, #0x20]
	add r5, r7, #0
	add r4, r0, r4
	ldr r0, [sp, #0x1c]
	add r1, r1, #1
	ldrb r6, [r0, r4]
	ldr r0, [sp, #4]
	mov r4, #7
	and r5, r4
	ldr r0, [r0]
	ldr r4, _0201D22C ; =0x00007FC0
	add r0, r0, r5
	and r4, r3
	add r4, r4, r0
	ldr r0, [sp, #0x18]
	add r2, #8
	add r4, r0, r4
	ldr r0, [sp, #0x14]
	add r3, #8
	strb r6, [r0, r4]
	mov r0, ip
	add r7, r7, #1
	cmp r1, r0
	blt _0201D10E
_0201D150:
	ldr r0, [sp, #0x28]
	add r0, #8
	str r0, [sp, #0x28]
	ldr r0, [sp, #0xc]
	add r0, r0, #1
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x24]
	ldr r1, [sp, #0xc]
	add r0, #8
	str r0, [sp, #0x24]
	mov r0, lr
	cmp r1, r0
	blt _0201D0D0
	add sp, #0x50
	pop {r3, r4, r5, r6, r7, pc}
_0201D16E:
	ldr r2, [sp, #0xc]
	mov r1, lr
	cmp r2, r1
	bge _0201D224
	mov r1, lr
	cmp r2, r1
	bge _0201D224
	add r1, r2, #0
	lsl r1, r1, #3
	lsl r0, r0, #3
	str r1, [sp, #0x44]
	str r0, [sp, #0x40]
_0201D186:
	ldr r2, [sp, #8]
	mov r0, ip
	add r1, r2, #0
	ldr r3, [sp, #0x10]
	cmp r1, r0
	bge _0201D20A
	mov r0, ip
	cmp r1, r0
	bge _0201D20A
	add r0, r2, #0
	lsl r6, r0, #3
	add r0, r3, #0
	lsl r1, r0, #3
	ldr r7, _0201D22C ; =0x00007FC0
	ldr r0, [sp, #0x44]
	ldr r4, [sp, #0x4c]
	and r0, r7
	mul r4, r0
	str r4, [sp, #0x38]
	ldr r0, [sp, #0x44]
	mov r5, #0x38
	and r0, r5
	str r0, [sp, #0x34]
	ldr r0, [sp, #0x40]
	ldr r4, [sp, #0x48]
	and r0, r7
	mul r4, r0
	ldr r0, [sp, #0x40]
	str r4, [sp, #0x30]
	and r0, r5
	str r0, [sp, #0x2c]
_0201D1C4:
	ldr r0, [sp, #4]
	mov r4, #7
	ldr r0, [r0]
	and r4, r3
	add r0, r0, r4
	ldr r4, _0201D22C ; =0x00007FC0
	add r5, r2, #0
	and r4, r1
	add r4, r0, r4
	ldr r0, [sp, #0x30]
	add r7, r4, r0
	ldr r0, [sp]
	mov r4, #7
	and r5, r4
	ldr r0, [r0]
	ldr r4, _0201D22C ; =0x00007FC0
	add r0, r0, r5
	and r4, r6
	add r4, r4, r0
	ldr r0, [sp, #0x38]
	add r4, r0, r4
	ldr r0, [sp, #0x34]
	ldrb r0, [r0, r4]
	ldr r4, [sp, #0x3c]
	cmp r0, r4
	beq _0201D1FC
	ldr r4, [sp, #0x2c]
	strb r0, [r7, r4]
_0201D1FC:
	add r2, r2, #1
	mov r0, ip
	add r6, #8
	add r1, #8
	add r3, r3, #1
	cmp r2, r0
	blt _0201D1C4
_0201D20A:
	ldr r0, [sp, #0x44]
	add r0, #8
	str r0, [sp, #0x44]
	ldr r0, [sp, #0xc]
	add r0, r0, #1
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x40]
	ldr r1, [sp, #0xc]
	add r0, #8
	str r0, [sp, #0x40]
	mov r0, lr
	cmp r1, r0
	blt _0201D186
_0201D224:
	add sp, #0x50
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0201D228: .word 0x0000FFFF
_0201D22C: .word 0x00007FC0
	thumb_func_end sub_0201D048

	thumb_func_start sub_0201D230
sub_0201D230: ; 0x0201D230
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r1, [sp, #4]
	str r2, [sp, #8]
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	str r0, [sp, #0x2c]
	ldr r0, [sp, #4]
	add r6, r0, r3
	ldr r0, [sp]
	ldrh r0, [r0, #4]
	cmp r6, r0
	ble _0201D24C
	add r6, r0, #0
_0201D24C:
	add r1, sp, #0x18
	ldrh r2, [r1, #0x10]
	ldr r1, [sp, #8]
	add r1, r1, r2
	mov ip, r1
	ldr r1, [sp]
	ldrh r2, [r1, #6]
	mov r1, ip
	cmp r1, r2
	ble _0201D262
	mov ip, r2
_0201D262:
	mov r1, #7
	and r1, r0
	add r0, r0, r1
	asr r0, r0, #3
	mov lr, r0
	ldr r1, [sp, #8]
	mov r0, ip
	cmp r1, r0
	bge _0201D2EC
	add r0, r1, #0
	lsl r0, r0, #2
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x2c]
	lsl r0, r0, #4
	str r0, [sp, #0x10]
_0201D280:
	ldr r1, [sp, #4]
	add r0, r1, #0
	cmp r0, r6
	bge _0201D2DA
	lsl r5, r0, #2
	ldr r2, _0201D2F0 ; =0x00003FE0
	ldr r0, [sp, #0xc]
	and r0, r2
	add r7, r0, #0
	mov r2, lr
	mul r7, r2
	ldr r0, [sp, #0xc]
	mov r2, #0x1c
	and r2, r0
_0201D29C:
	ldr r0, [sp]
	asr r3, r1, #1
	ldr r4, [r0]
	mov r0, #3
	and r0, r3
	ldr r3, _0201D2F0 ; =0x00003FE0
	add r0, r4, r0
	and r3, r5
	add r0, r0, r3
	add r0, r0, r7
	mov r3, #1
	tst r3, r1
	ldrb r4, [r0, r2]
	beq _0201D2C4
	mov r3, #0xf
	and r3, r4
	strb r3, [r0, r2]
	ldrb r4, [r0, r2]
	ldr r3, [sp, #0x10]
	b _0201D2CE
_0201D2C4:
	mov r3, #0xf0
	and r3, r4
	strb r3, [r0, r2]
	ldrb r4, [r0, r2]
	ldr r3, [sp, #0x2c]
_0201D2CE:
	orr r3, r4
	add r1, r1, #1
	strb r3, [r0, r2]
	add r5, r5, #4
	cmp r1, r6
	blt _0201D29C
_0201D2DA:
	ldr r0, [sp, #0xc]
	add r0, r0, #4
	str r0, [sp, #0xc]
	ldr r0, [sp, #8]
	add r1, r0, #1
	mov r0, ip
	str r1, [sp, #8]
	cmp r1, r0
	blt _0201D280
_0201D2EC:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0201D2F0: .word 0x00003FE0
	thumb_func_end sub_0201D230

	thumb_func_start sub_0201D2F4
sub_0201D2F4: ; 0x0201D2F4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r1, [sp, #4]
	str r2, [sp, #8]
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	str r0, [sp, #0x2c]
	ldr r0, [sp, #4]
	add r5, r0, r3
	ldr r0, [sp]
	ldrh r0, [r0, #4]
	cmp r5, r0
	ble _0201D310
	add r5, r0, #0
_0201D310:
	add r1, sp, #0x18
	ldrh r2, [r1, #0x10]
	ldr r1, [sp, #8]
	add r1, r1, r2
	mov lr, r1
	ldr r1, [sp]
	ldrh r2, [r1, #6]
	mov r1, lr
	cmp r1, r2
	ble _0201D326
	mov lr, r2
_0201D326:
	mov r1, #7
	and r1, r0
	add r0, r0, r1
	asr r0, r0, #3
	str r0, [sp, #0x10]
	ldr r1, [sp, #8]
	mov r0, lr
	cmp r1, r0
	bge _0201D392
	add r0, r1, #0
	lsl r0, r0, #3
	str r0, [sp, #0xc]
	ldr r0, [sp, #4]
	lsl r0, r0, #3
	mov ip, r0
_0201D344:
	ldr r2, [sp, #4]
	add r0, r2, #0
	cmp r0, r5
	bge _0201D380
	ldr r1, [sp, #0xc]
	ldr r0, _0201D398 ; =0x00007FC0
	mov r3, ip
	and r0, r1
	add r7, r0, #0
	ldr r1, [sp, #0x10]
	mov r0, #0x38
	mul r7, r1
	ldr r1, [sp, #0xc]
	add r6, r1, #0
	and r6, r0
_0201D362:
	ldr r0, [sp]
	ldr r4, _0201D398 ; =0x00007FC0
	ldr r1, [r0]
	mov r0, #7
	and r0, r2
	and r4, r3
	add r0, r1, r0
	add r0, r4, r0
	add r1, r7, r0
	ldr r0, [sp, #0x2c]
	add r2, r2, #1
	strb r0, [r6, r1]
	add r3, #8
	cmp r2, r5
	blt _0201D362
_0201D380:
	ldr r0, [sp, #0xc]
	add r0, #8
	str r0, [sp, #0xc]
	ldr r0, [sp, #8]
	add r1, r0, #1
	mov r0, lr
	str r1, [sp, #8]
	cmp r1, r0
	blt _0201D344
_0201D392:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_0201D398: .word 0x00007FC0
	thumb_func_end sub_0201D2F4

	thumb_func_start sub_0201D39C
sub_0201D39C: ; 0x0201D39C
	push {r4, r5, r6, lr}
	add r5, r1, #0
	lsl r1, r5, #4
	bl sub_0201AA8C
	add r6, r0, #0
	mov r4, #0
	cmp r5, #0
	ble _0201D3C0
_0201D3AE:
	lsl r0, r4, #4
	add r0, r6, r0
	bl sub_0201D3C4
	add r0, r4, #1
	lsl r0, r0, #0x10
	lsr r4, r0, #0x10
	cmp r4, r5
	blt _0201D3AE
_0201D3C0:
	add r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0201D39C

	thumb_func_start sub_0201D3C4
sub_0201D3C4: ; 0x0201D3C4
	mov r3, #0
	str r3, [r0]
	mov r1, #0xff
	strb r1, [r0, #4]
	strb r3, [r0, #5]
	strb r3, [r0, #6]
	strb r3, [r0, #7]
	strb r3, [r0, #8]
	strb r3, [r0, #9]
	ldrh r2, [r0, #0xa]
	ldr r1, _0201D3EC ; =0xFFFF8000
	and r2, r1
	strh r2, [r0, #0xa]
	str r3, [r0, #0xc]
	ldrh r2, [r0, #0xa]
	sub r1, r1, #1
	and r1, r2
	strh r1, [r0, #0xa]
	bx lr
	nop
_0201D3EC: .word 0xFFFF8000
	thumb_func_end sub_0201D3C4

	thumb_func_start sub_0201D3F0
sub_0201D3F0: ; 0x0201D3F0
	ldr r1, [r0]
	cmp r1, #0
	beq _0201D402
	ldrb r1, [r0, #4]
	cmp r1, #0xff
	beq _0201D402
	ldr r0, [r0, #0xc]
	cmp r0, #0
	bne _0201D406
_0201D402:
	mov r0, #0
	bx lr
_0201D406:
	mov r0, #1
	bx lr
	.align 2, 0
	thumb_func_end sub_0201D3F0

	thumb_func_start sub_0201D40C
sub_0201D40C: ; 0x0201D40C
	push {r3, r4, r5, r6, r7, lr}
	add r6, r2, #0
	add r5, r0, #0
	mov r0, #0x2c
	add r7, r6, #0
	mul r7, r0
	add r4, r1, #0
	str r3, [sp]
	add r1, r5, r7
	ldr r0, [r1, #8]
	cmp r0, #0
	beq _0201D488
	add r3, sp, #8
	ldrb r2, [r1, #0x1f]
	ldrb r1, [r3, #0x14]
	ldrb r3, [r3, #0x18]
	ldr r0, [r5]
	mul r3, r1
	add r1, r2, #0
	mul r1, r3
	bl sub_0201AA8C
	add r1, r0, #0
	beq _0201D488
	str r5, [r4]
	strb r6, [r4, #4]
	ldr r0, [sp]
	add r3, sp, #8
	strb r0, [r4, #5]
	ldrb r0, [r3, #0x10]
	ldr r2, _0201D48C ; =0xFFFF8000
	strb r0, [r4, #6]
	ldrb r0, [r3, #0x14]
	strb r0, [r4, #7]
	ldrb r0, [r3, #0x18]
	strb r0, [r4, #8]
	ldrb r0, [r3, #0x1c]
	strb r0, [r4, #9]
	ldrh r0, [r4, #0xa]
	ldrh r3, [r3, #0x20]
	and r0, r2
	lsr r2, r2, #0x11
	and r2, r3
	orr r0, r2
	strh r0, [r4, #0xa]
	str r1, [r4, #0xc]
	add r0, r5, r7
	ldrb r0, [r0, #0x1e]
	cmp r0, #0
	bne _0201D474
	mov r2, #0
	b _0201D476
_0201D474:
	mov r2, #1
_0201D476:
	ldrh r1, [r4, #0xa]
	ldr r0, _0201D490 ; =0xFFFF7FFF
	and r1, r0
	lsl r0, r2, #0x10
	lsr r0, r0, #0x10
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x10
	orr r0, r1
	strh r0, [r4, #0xa]
_0201D488:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0201D48C: .word 0xFFFF8000
_0201D490: .word 0xFFFF7FFF
	thumb_func_end sub_0201D40C

	thumb_func_start sub_0201D494
sub_0201D494: ; 0x0201D494
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r3, [sp]
	add r5, r0, #0
	ldr r0, [sp, #0x24]
	add r6, r2, #0
	str r0, [sp, #0x24]
	ldr r0, [sp]
	add r4, r1, #0
	mul r0, r6
	lsl r0, r0, #5
	str r0, [sp, #4]
	ldr r0, [r5]
	ldr r1, [sp, #4]
	bl sub_0201AA8C
	ldr r1, [sp, #0x24]
	add r7, r0, #0
	lsl r2, r1, #4
	orr r1, r2
	lsl r1, r1, #0x18
	ldr r2, [sp, #4]
	lsr r1, r1, #0x18
	bl sub_020E5B44
	cmp r7, #0
	beq _0201D4F0
	str r5, [r4]
	strb r6, [r4, #7]
	ldr r0, [sp]
	strb r0, [r4, #8]
	ldrh r1, [r4, #0xa]
	ldr r0, _0201D4F4 ; =0xFFFF8000
	add r3, r1, #0
	add r1, sp, #0x10
	ldrh r2, [r1, #0x10]
	lsr r1, r0, #0x11
	and r3, r0
	and r1, r2
	orr r1, r3
	strh r1, [r4, #0xa]
	str r7, [r4, #0xc]
	ldrh r1, [r4, #0xa]
	sub r0, r0, #1
	and r0, r1
	strh r0, [r4, #0xa]
_0201D4F0:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0201D4F4: .word 0xFFFF8000
	thumb_func_end sub_0201D494

	thumb_func_start sub_0201D4F8
sub_0201D4F8: ; 0x0201D4F8
	push {lr}
	sub sp, #0x14
	add r3, r2, #0
	ldrb r2, [r3, #2]
	str r2, [sp]
	ldrb r2, [r3, #3]
	str r2, [sp, #4]
	ldrb r2, [r3, #4]
	str r2, [sp, #8]
	ldrb r2, [r3, #5]
	str r2, [sp, #0xc]
	ldrh r2, [r3, #6]
	str r2, [sp, #0x10]
	ldrb r2, [r3]
	ldrb r3, [r3, #1]
	bl sub_0201D40C
	add sp, #0x14
	pop {pc}
	.align 2, 0
	thumb_func_end sub_0201D4F8

	thumb_func_start sub_0201D520
sub_0201D520: ; 0x0201D520
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0xc]
	bl sub_0201AB0C
	mov r2, #0
	str r2, [r4]
	mov r0, #0xff
	strb r0, [r4, #4]
	strb r2, [r4, #5]
	strb r2, [r4, #6]
	strb r2, [r4, #7]
	strb r2, [r4, #8]
	strb r2, [r4, #9]
	ldrh r1, [r4, #0xa]
	ldr r0, _0201D548 ; =0xFFFF8000
	and r0, r1
	strh r0, [r4, #0xa]
	str r2, [r4, #0xc]
	pop {r4, pc}
	.align 2, 0
_0201D548: .word 0xFFFF8000
	thumb_func_end sub_0201D520

	thumb_func_start sub_0201D54C
sub_0201D54C: ; 0x0201D54C
	push {r4, r5, r6, lr}
	add r6, r1, #0
	add r5, r0, #0
	mov r4, #0
	cmp r6, #0
	ble _0201D570
_0201D558:
	lsl r0, r4, #4
	add r0, r5, r0
	ldr r0, [r0, #0xc]
	cmp r0, #0
	beq _0201D566
	bl sub_0201AB0C
_0201D566:
	add r0, r4, #1
	lsl r0, r0, #0x10
	lsr r4, r0, #0x10
	cmp r4, r6
	blt _0201D558
_0201D570:
	add r0, r5, #0
	bl sub_0201AB0C
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0201D54C

	thumb_func_start sub_0201D578
sub_0201D578: ; 0x0201D578
	push {r4, lr}
	add r4, r0, #0
	bne _0201D582
	bl GF_AssertFail
_0201D582:
	ldr r0, [r4]
	cmp r0, #0
	bne _0201D58C
	bl GF_AssertFail
_0201D58C:
	ldrb r0, [r4, #4]
	cmp r0, #8
	blo _0201D596
	bl GF_AssertFail
_0201D596:
	ldrb r1, [r4, #4]
	mov r0, #0x2c
	ldr r2, [r4]
	mul r0, r1
	add r0, r2, r0
	ldrb r0, [r0, #0x1c]
	cmp r0, #3
	blo _0201D5AA
	bl GF_AssertFail
_0201D5AA:
	ldrb r2, [r4, #4]
	mov r1, #0x2c
	ldr r3, [r4]
	mul r1, r2
	add r1, r3, r1
	ldrb r1, [r1, #0x1c]
	add r0, r4, #0
	lsl r2, r1, #2
	ldr r1, _0201D5C4 ; =0x020F62FC
	ldr r1, [r1, r2]
	blx r1
	pop {r4, pc}
	nop
_0201D5C4: .word 0x020F62FC
	thumb_func_end sub_0201D578

	thumb_func_start sub_0201D5C8
sub_0201D5C8: ; 0x0201D5C8
	push {r4, lr}
	add r4, r0, #0
	bne _0201D5D2
	bl GF_AssertFail
_0201D5D2:
	ldr r0, [r4]
	cmp r0, #0
	bne _0201D5DC
	bl GF_AssertFail
_0201D5DC:
	ldrb r0, [r4, #4]
	cmp r0, #8
	blo _0201D5E6
	bl GF_AssertFail
_0201D5E6:
	ldrb r1, [r4, #4]
	mov r0, #0x2c
	ldr r2, [r4]
	mul r0, r1
	add r0, r2, r0
	ldrb r0, [r0, #0x1c]
	cmp r0, #3
	blo _0201D5FA
	bl GF_AssertFail
_0201D5FA:
	ldrb r2, [r4, #4]
	mov r1, #0x2c
	ldr r3, [r4]
	mul r1, r2
	add r1, r3, r1
	ldrb r1, [r1, #0x1c]
	add r0, r4, #0
	lsl r2, r1, #2
	ldr r1, _0201D614 ; =0x020F62F0
	ldr r1, [r1, r2]
	blx r1
	pop {r4, pc}
	nop
_0201D614: .word 0x020F62F0
	thumb_func_end sub_0201D5C8

	thumb_func_start sub_0201D618
sub_0201D618: ; 0x0201D618
	push {r3, lr}
	ldrb r2, [r0, #4]
	mov r1, #0x2c
	ldr r3, [r0]
	mul r1, r2
	add r1, r3, r1
	ldrb r1, [r1, #0x1c]
	lsl r2, r1, #2
	ldr r1, _0201D630 ; =0x020F62CC
	ldr r1, [r1, r2]
	blx r1
	pop {r3, pc}
	.align 2, 0
_0201D630: .word 0x020F62CC
	thumb_func_end sub_0201D618

	thumb_func_start sub_0201D634
sub_0201D634: ; 0x0201D634
	push {r3, lr}
	ldrb r2, [r0, #4]
	mov r1, #0x2c
	ldr r3, [r0]
	mul r1, r2
	add r1, r3, r1
	ldrb r1, [r1, #0x1c]
	lsl r2, r1, #2
	ldr r1, _0201D64C ; =0x020F6308
	ldr r1, [r1, r2]
	blx r1
	pop {r3, pc}
	.align 2, 0
_0201D64C: .word 0x020F6308
	thumb_func_end sub_0201D634

	thumb_func_start sub_0201D650
sub_0201D650: ; 0x0201D650
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r6, r0, #0
	ldrb r1, [r6, #4]
	mov r0, #0x2c
	ldr r2, [r6]
	mul r0, r1
	add r0, r2, r0
	ldr r0, [r0, #8]
	str r0, [sp]
	cmp r0, #0
	beq _0201D6CA
	ldrh r0, [r6, #0xa]
	ldrb r1, [r6, #5]
	lsl r0, r0, #0x11
	lsr r5, r0, #0x11
	ldrb r0, [r6, #7]
	add r7, r1, r0
	ldrb r0, [r6, #6]
	ldrb r1, [r6, #8]
	str r0, [sp, #8]
	add r0, r0, r1
	ldr r1, [sp, #8]
	str r0, [sp, #4]
	cmp r1, r0
	bhs _0201D6CA
_0201D684:
	ldrb r4, [r6, #5]
	cmp r4, r7
	bhs _0201D6BE
	ldr r0, [sp, #8]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0xc]
_0201D692:
	ldrb r2, [r6, #4]
	mov r1, #0x2c
	ldr r0, [r6]
	mul r1, r2
	add r3, r0, r1
	ldrb r2, [r3, #0x1d]
	lsl r0, r4, #0x18
	ldrb r3, [r3, #0x1c]
	ldr r1, [sp, #0xc]
	lsr r0, r0, #0x18
	bl sub_0201C2F0
	ldrb r1, [r6, #9]
	lsl r2, r0, #1
	ldr r0, [sp]
	lsl r1, r1, #0xc
	orr r1, r5
	add r4, r4, #1
	strh r1, [r0, r2]
	add r5, r5, #1
	cmp r4, r7
	blo _0201D692
_0201D6BE:
	ldr r0, [sp, #8]
	add r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #8]
	cmp r1, r0
	blo _0201D684
_0201D6CA:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0201D650

	thumb_func_start sub_0201D6D0
sub_0201D6D0: ; 0x0201D6D0
	push {r4, r5, r6, r7}
	ldrb r3, [r0, #4]
	mov r1, #0x2c
	add r2, r3, #0
	mul r2, r1
	ldr r1, [r0]
	add r1, r1, r2
	ldr r3, [r1, #8]
	cmp r3, #0
	beq _0201D724
	ldrb r2, [r1, #0x1d]
	ldr r1, _0201D728 ; =0x020F62C4
	ldrb r6, [r1, r2]
	ldrb r1, [r0, #6]
	add r2, r1, #0
	mul r2, r6
	add r2, r3, r2
	ldrb r1, [r0, #5]
	mov r3, #0
	add r4, r2, r1
	ldrh r1, [r0, #0xa]
	lsl r1, r1, #0x11
	lsr r5, r1, #0x11
	ldrb r1, [r0, #8]
	cmp r1, #0
	ble _0201D724
	add r1, r3, #0
_0201D706:
	ldrb r7, [r0, #7]
	add r2, r1, #0
	cmp r7, #0
	ble _0201D71A
_0201D70E:
	strb r5, [r4, r2]
	ldrb r7, [r0, #7]
	add r2, r2, #1
	add r5, r5, #1
	cmp r2, r7
	blt _0201D70E
_0201D71A:
	ldrb r2, [r0, #8]
	add r3, r3, #1
	add r4, r4, r6
	cmp r3, r2
	blt _0201D706
_0201D724:
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
_0201D728: .word 0x020F62C4
	thumb_func_end sub_0201D6D0

	thumb_func_start sub_0201D72C
sub_0201D72C: ; 0x0201D72C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r5, r0, #0
	ldrb r1, [r5, #4]
	mov r0, #0x2c
	ldr r2, [r5]
	mul r0, r1
	add r0, r2, r0
	ldr r0, [r0, #8]
	str r0, [sp]
	cmp r0, #0
	beq _0201D798
	ldrb r1, [r5, #5]
	ldrb r0, [r5, #7]
	add r6, r1, r0
	ldrb r0, [r5, #6]
	ldrb r1, [r5, #8]
	str r0, [sp, #8]
	add r0, r0, r1
	ldr r1, [sp, #8]
	str r0, [sp, #4]
	cmp r1, r0
	bhs _0201D798
_0201D75A:
	ldrb r4, [r5, #5]
	cmp r4, r6
	bhs _0201D78C
	ldr r0, [sp, #8]
	lsl r0, r0, #0x18
	lsr r7, r0, #0x18
_0201D766:
	ldrb r2, [r5, #4]
	mov r1, #0x2c
	ldr r0, [r5]
	mul r1, r2
	add r3, r0, r1
	ldrb r2, [r3, #0x1d]
	lsl r0, r4, #0x18
	ldrb r3, [r3, #0x1c]
	lsr r0, r0, #0x18
	add r1, r7, #0
	bl sub_0201C2F0
	lsl r2, r0, #1
	ldr r0, [sp]
	mov r1, #0
	add r4, r4, #1
	strh r1, [r0, r2]
	cmp r4, r6
	blo _0201D766
_0201D78C:
	ldr r0, [sp, #8]
	add r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #8]
	cmp r1, r0
	blo _0201D75A
_0201D798:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0201D72C

	thumb_func_start sub_0201D79C
sub_0201D79C: ; 0x0201D79C
	push {r4, r5, r6, r7}
	ldrb r3, [r0, #4]
	mov r1, #0x2c
	add r2, r3, #0
	mul r2, r1
	ldr r1, [r0]
	add r1, r1, r2
	ldr r3, [r1, #8]
	cmp r3, #0
	beq _0201D7EA
	ldrb r2, [r1, #0x1d]
	ldr r1, _0201D7F0 ; =0x020F62C4
	mov r4, #0
	ldrb r6, [r1, r2]
	ldrb r1, [r0, #6]
	add r2, r1, #0
	mul r2, r6
	ldrb r1, [r0, #5]
	add r2, r3, r2
	add r5, r2, r1
	ldrb r1, [r0, #8]
	cmp r1, #0
	ble _0201D7EA
	add r1, r4, #0
	add r2, r4, #0
_0201D7CE:
	ldrb r7, [r0, #7]
	add r3, r2, #0
	cmp r7, #0
	ble _0201D7E0
_0201D7D6:
	strb r1, [r5, r3]
	ldrb r7, [r0, #7]
	add r3, r3, #1
	cmp r3, r7
	blt _0201D7D6
_0201D7E0:
	ldrb r3, [r0, #8]
	add r4, r4, #1
	add r5, r5, r6
	cmp r4, r3
	blt _0201D7CE
_0201D7EA:
	pop {r4, r5, r6, r7}
	bx lr
	nop
_0201D7F0: .word 0x020F62C4
	thumb_func_end sub_0201D79C

	thumb_func_start sub_0201D7F4
sub_0201D7F4: ; 0x0201D7F4
	push {r3, r4, lr}
	sub sp, #4
	add r4, r0, #0
	bl sub_0201D650
	add r0, r4, #0
	bl sub_0201D8A0
	ldrb r1, [r4, #4]
	mov r0, #0x2c
	add r2, r1, #0
	mul r2, r0
	ldr r0, [r4]
	add r3, r0, r2
	ldr r2, [r3, #0x10]
	str r2, [sp]
	ldr r2, [r3, #8]
	ldr r3, [r3, #0xc]
	bl sub_0201BF94
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end sub_0201D7F4

	thumb_func_start sub_0201D820
sub_0201D820: ; 0x0201D820
	push {r4, lr}
	add r4, r0, #0
	bl sub_0201D650
	ldrb r1, [r4, #4]
	ldr r0, [r4]
	bl sub_0201EFBC
	add r0, r4, #0
	bl sub_0201D8A0
	pop {r4, pc}
	thumb_func_end sub_0201D820

	thumb_func_start sub_0201D838
sub_0201D838: ; 0x0201D838
	push {r3, r4, r5, lr}
	add r4, r0, #0
	bl sub_0201D6D0
	ldrb r1, [r4, #4]
	mov r0, #0x2c
	add r2, r1, #0
	mul r2, r0
	ldr r0, [r4]
	add r3, r0, r2
	ldr r2, [r3, #0x10]
	str r2, [sp]
	ldr r2, [r3, #8]
	ldr r3, [r3, #0xc]
	bl sub_0201BF94
	ldrh r0, [r4, #0xa]
	lsl r0, r0, #0x11
	lsr r0, r0, #0x11
	str r0, [sp]
	ldrb r5, [r4, #7]
	ldrb r3, [r4, #8]
	ldrb r1, [r4, #4]
	ldr r0, [r4]
	mul r3, r5
	ldr r2, [r4, #0xc]
	lsl r3, r3, #6
	bl sub_0201C0C0
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0201D838

	thumb_func_start sub_0201D874
sub_0201D874: ; 0x0201D874
	push {r3, r4, r5, lr}
	add r4, r0, #0
	bl sub_0201D6D0
	ldrb r1, [r4, #4]
	ldr r0, [r4]
	bl sub_0201EFBC
	ldrh r0, [r4, #0xa]
	lsl r0, r0, #0x11
	lsr r0, r0, #0x11
	str r0, [sp]
	ldrb r5, [r4, #7]
	ldrb r3, [r4, #8]
	ldrb r1, [r4, #4]
	ldr r0, [r4]
	mul r3, r5
	ldr r2, [r4, #0xc]
	lsl r3, r3, #6
	bl sub_0201C0C0
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0201D874

	thumb_func_start sub_0201D8A0
sub_0201D8A0: ; 0x0201D8A0
	push {r3, r4, r5, lr}
	add r3, r0, #0
	ldrh r2, [r3, #0xa]
	ldrb r1, [r3, #4]
	mov r4, #0x2c
	lsl r2, r2, #0x11
	ldr r0, [r3]
	lsr r2, r2, #0x11
	str r2, [sp]
	mul r4, r1
	add r4, r0, r4
	ldr r2, [r3, #0xc]
	ldrb r5, [r3, #7]
	ldrb r3, [r3, #8]
	ldrb r4, [r4, #0x1f]
	mul r3, r5
	mul r3, r4
	bl sub_0201C0C0
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0201D8A0

	thumb_func_start sub_0201D8C8
sub_0201D8C8: ; 0x0201D8C8
	push {r3, lr}
	ldrb r2, [r0, #4]
	mov r1, #0x2c
	ldr r3, [r0]
	mul r1, r2
	add r1, r3, r1
	ldrb r1, [r1, #0x1c]
	lsl r2, r1, #2
	ldr r1, _0201D8E0 ; =0x020F62E4
	ldr r1, [r1, r2]
	blx r1
	pop {r3, pc}
	.align 2, 0
_0201D8E0: .word 0x020F62E4
	thumb_func_end sub_0201D8C8

	thumb_func_start sub_0201D8E4
sub_0201D8E4: ; 0x0201D8E4
	push {r3, lr}
	ldrb r2, [r0, #4]
	mov r1, #0x2c
	ldr r3, [r0]
	mul r1, r2
	add r1, r3, r1
	ldrb r1, [r1, #0x1c]
	lsl r2, r1, #2
	ldr r1, _0201D8FC ; =0x020F62D8
	ldr r1, [r1, r2]
	blx r1
	pop {r3, pc}
	.align 2, 0
_0201D8FC: .word 0x020F62D8
	thumb_func_end sub_0201D8E4

	thumb_func_start sub_0201D900
sub_0201D900: ; 0x0201D900
	push {r3, r4, lr}
	sub sp, #4
	add r4, r0, #0
	bl sub_0201D72C
	ldrb r1, [r4, #4]
	mov r0, #0x2c
	add r2, r1, #0
	mul r2, r0
	ldr r0, [r4]
	add r3, r0, r2
	ldr r2, [r3, #0x10]
	str r2, [sp]
	ldr r2, [r3, #8]
	ldr r3, [r3, #0xc]
	bl sub_0201BF94
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_0201D900

	thumb_func_start sub_0201D928
sub_0201D928: ; 0x0201D928
	push {r4, lr}
	add r4, r0, #0
	bl sub_0201D72C
	ldrb r1, [r4, #4]
	ldr r0, [r4]
	bl sub_0201EFBC
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0201D928

	thumb_func_start sub_0201D93C
sub_0201D93C: ; 0x0201D93C
	push {r3, r4, lr}
	sub sp, #4
	add r4, r0, #0
	bl sub_0201D79C
	ldrb r1, [r4, #4]
	mov r0, #0x2c
	add r2, r1, #0
	mul r2, r0
	ldr r0, [r4]
	add r3, r0, r2
	ldr r2, [r3, #0x10]
	str r2, [sp]
	ldr r2, [r3, #8]
	ldr r3, [r3, #0xc]
	bl sub_0201BF94
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_0201D93C

	thumb_func_start sub_0201D964
sub_0201D964: ; 0x0201D964
	push {r4, lr}
	add r4, r0, #0
	bl sub_0201D79C
	ldrb r1, [r4, #4]
	ldr r0, [r4]
	bl sub_0201EFBC
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0201D964

	thumb_func_start sub_0201D978
sub_0201D978: ; 0x0201D978
	push {r3, r4, r5, lr}
	add r4, r0, #0
	ldrb r2, [r4, #4]
	mov r0, #0x2c
	ldr r3, [r4]
	mul r0, r2
	add r0, r3, r0
	ldrb r2, [r0, #0x1f]
	cmp r2, #0x20
	bne _0201D994
	lsl r0, r1, #4
	orr r0, r1
	lsl r0, r0, #0x18
	lsr r1, r0, #0x18
_0201D994:
	lsl r3, r1, #0x18
	lsl r0, r1, #0x10
	orr r0, r3
	lsl r5, r1, #8
	orr r0, r5
	orr r0, r1
	ldr r1, [r4, #0xc]
	ldrb r3, [r4, #8]
	ldrb r4, [r4, #7]
	mul r2, r4
	mul r2, r3
	bl sub_020D4858
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0201D978

	thumb_func_start sub_0201D9B0
sub_0201D9B0: ; 0x0201D9B0
	push {r4, lr}
	add r2, r0, #0
	lsl r0, r1, #4
	orr r0, r1
	lsl r0, r0, #0x18
	lsr r4, r0, #0x18
	lsl r1, r4, #0x18
	lsl r0, r4, #0x10
	orr r0, r1
	lsl r3, r4, #8
	orr r0, r3
	ldr r1, [r2, #0xc]
	ldrb r3, [r2, #8]
	ldrb r2, [r2, #7]
	orr r0, r4
	lsl r2, r2, #5
	mul r2, r3
	bl sub_020D4858
	pop {r4, pc}
	thumb_func_end sub_0201D9B0

	thumb_func_start sub_0201D9D8
sub_0201D9D8: ; 0x0201D9D8
	push {r4, r5, lr}
	sub sp, #0x1c
	add r4, sp, #0x18
	ldrh r5, [r4, #0x10]
	str r5, [sp]
	ldrh r5, [r4, #0x14]
	str r5, [sp, #4]
	ldrh r5, [r4, #0x18]
	str r5, [sp, #8]
	ldrh r5, [r4, #0x1c]
	str r5, [sp, #0xc]
	ldrh r5, [r4, #0x20]
	str r5, [sp, #0x10]
	ldrh r4, [r4, #0x24]
	str r4, [sp, #0x14]
	mov r4, #0
	str r4, [sp, #0x18]
	bl sub_0201DA04
	add sp, #0x1c
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0201D9D8

	thumb_func_start sub_0201DA04
sub_0201DA04: ; 0x0201DA04
	push {r4, r5, lr}
	sub sp, #0x24
	str r1, [sp, #0x1c]
	add r4, sp, #0x20
	ldrh r5, [r4, #0x10]
	add r1, sp, #0x14
	strh r5, [r1, #0xc]
	ldrh r5, [r4, #0x14]
	strh r5, [r1, #0xe]
	ldr r5, [r0, #0xc]
	str r5, [sp, #0x14]
	ldrb r5, [r0, #7]
	lsl r5, r5, #3
	strh r5, [r1, #4]
	ldrb r5, [r0, #8]
	lsl r5, r5, #3
	strh r5, [r1, #6]
	ldrb r5, [r0, #4]
	ldr r1, [r0]
	mov r0, #0x2c
	mul r0, r5
	add r0, r1, r0
	ldrb r0, [r0, #0x1e]
	add r1, sp, #0x14
	cmp r0, #0
	ldrh r0, [r4, #0x18]
	bne _0201DA56
	str r0, [sp]
	ldrh r0, [r4, #0x1c]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	ldrh r0, [r4, #0x24]
	str r0, [sp, #0xc]
	ldrh r0, [r4, #0x28]
	str r0, [sp, #0x10]
	add r0, sp, #0x1c
	bl sub_0201CE08
	add sp, #0x24
	pop {r4, r5, pc}
_0201DA56:
	str r0, [sp]
	ldrh r0, [r4, #0x1c]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	ldrh r0, [r4, #0x24]
	str r0, [sp, #0xc]
	ldrh r0, [r4, #0x28]
	str r0, [sp, #0x10]
	add r0, sp, #0x1c
	bl sub_0201D048
	add sp, #0x24
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0201DA04

	thumb_func_start sub_0201DA74
sub_0201DA74: ; 0x0201DA74
	push {r3, r4, r5, lr}
	sub sp, #0x10
	add r5, r1, #0
	ldr r1, [r0, #0xc]
	add r4, r2, #0
	str r1, [sp, #8]
	ldrb r1, [r0, #7]
	add r2, r3, #0
	lsl r3, r1, #3
	add r1, sp, #8
	strh r3, [r1, #4]
	ldrb r3, [r0, #8]
	lsl r3, r3, #3
	strh r3, [r1, #6]
	ldrb r3, [r0, #4]
	ldr r1, [r0]
	mov r0, #0x2c
	mul r0, r3
	add r0, r1, r0
	ldrb r0, [r0, #0x1e]
	add r3, sp, #0x10
	cmp r0, #0
	bne _0201DAB6
	ldrh r0, [r3, #0x14]
	add r1, r4, #0
	str r0, [sp]
	str r5, [sp, #4]
	ldrh r3, [r3, #0x10]
	add r0, sp, #8
	bl sub_0201D230
	add sp, #0x10
	pop {r3, r4, r5, pc}
_0201DAB6:
	ldrh r0, [r3, #0x14]
	add r1, r4, #0
	str r0, [sp]
	str r5, [sp, #4]
	ldrh r3, [r3, #0x10]
	add r0, sp, #8
	bl sub_0201D2F4
	add sp, #0x10
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0201DA74

	thumb_func_start sub_0201DACC
sub_0201DACC: ; 0x0201DACC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1fc
	sub sp, #0x118
	add r5, r0, #0
	ldr r0, [sp, #0x330]
	str r1, [sp]
	str r0, [sp, #0x330]
	add r1, sp, #0x318
	ldrh r1, [r1, #0x10]
	ldr r0, [r5, #0xc]
	str r1, [sp, #0x5c]
	ldrb r1, [r5, #7]
	str r0, [sp, #0x278]
	ldrb r0, [r5, #8]
	lsl r1, r1, #0x13
	lsr r4, r1, #0x10
	ldr r1, [sp, #0x5c]
	lsl r0, r0, #0x13
	sub r1, r4, r1
	lsr r0, r0, #0x10
	str r4, [sp, #0x58]
	str r1, [sp, #8]
	cmp r1, r2
	blt _0201DAFE
	str r2, [sp, #8]
_0201DAFE:
	add r1, sp, #0x318
	ldrh r1, [r1, #0x14]
	sub r0, r0, r1
	str r1, [sp, #0x48]
	str r0, [sp, #4]
	cmp r0, r3
	blt _0201DB0E
	str r3, [sp, #4]
_0201DB0E:
	ldr r0, [sp, #8]
	mov r4, #0
	cmp r0, #8
	ble _0201DB1E
	mov r0, #1
	orr r0, r4
	lsl r0, r0, #0x18
	lsr r4, r0, #0x18
_0201DB1E:
	ldr r0, [sp, #4]
	cmp r0, #8
	ble _0201DB2C
	mov r0, #2
	orr r0, r4
	lsl r0, r0, #0x18
	lsr r4, r0, #0x18
_0201DB2C:
	ldrh r0, [r5, #0xa]
	lsl r0, r0, #0x10
	lsr r0, r0, #0x1f
	beq _0201DB38
	bl sub_0201E4AC
_0201DB38:
	cmp r4, #3
	bls _0201DB40
	bl sub_0201EC3C
_0201DB40:
	add r0, r4, r4
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_0201DB4C: ; jump table
	.short _0201DB54 - _0201DB4C - 2 ; case 0
	.short _0201DC56 - _0201DB4C - 2 ; case 1
	.short _0201DE66 - _0201DB4C - 2 ; case 2
	.short _0201E086 - _0201DB4C - 2 ; case 3
_0201DB54:
	ldr r0, [sp, #0x330]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x70]
	mov r0, #0
	str r0, [sp, #0x274]
	ldr r0, [sp, #4]
	cmp r0, #0
	bgt _0201DB6A
	bl sub_0201EC3C
_0201DB6A:
	ldr r0, [sp, #0x58]
	mov r1, #7
	and r1, r0
	add r0, r0, r1
	asr r0, r0, #3
	str r0, [sp, #0x6c]
_0201DB76:
	ldr r0, [sp]
	ldr r1, [sp, #0x70]
	ldr r0, [r0]
	ldr r2, [sp, #0x5c]
	str r0, [sp, #0x26c]
	ldr r0, [sp, #0x274]
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x270]
	ldr r0, [sp, #8]
	mov r1, #0
	cmp r0, #0
	ble _0201DC2A
	ble _0201DC2A
	add r0, r2, #0
	lsl r3, r0, #2
	ldr r0, [sp, #0x48]
	ldr r6, [sp, #0x6c]
	lsl r5, r0, #2
	ldr r0, _0201DEE8 ; =0x00003FE0
	add r7, r5, #0
	and r0, r5
	mul r6, r0
	mov r0, #0x1c
	and r7, r0
	ldr r0, [sp, #0x48]
	str r6, [sp, #0x68]
	add r0, r0, #1
	lsl r6, r0, #2
	ldr r0, _0201DEE8 ; =0x00003FE0
	ldr r5, [sp, #0x6c]
	and r0, r6
	mul r5, r0
	mov r0, #0x1c
	and r0, r6
	add r4, r1, #0
	str r5, [sp, #0x64]
	str r0, [sp, #0x60]
_0201DBC8:
	asr r5, r2, #1
	mov r0, #3
	and r5, r0
	ldr r0, [sp, #0x278]
	add r0, r0, r5
	ldr r5, _0201DEE8 ; =0x00003FE0
	and r5, r3
	add r5, r0, r5
	ldr r0, [sp, #0x68]
	str r5, [sp, #0x27c]
	add r0, r5, r0
	ldr r5, [sp, #0x26c]
	add r6, r5, #0
	lsr r6, r4
	mov r5, #0xf
	and r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	beq _0201DC1C
	lsl r6, r2, #0x1f
	lsr r6, r6, #0x1d
	lsl r5, r6
	str r5, [sp, #0x280]
	ldrb r5, [r0, r7]
	str r5, [sp, #0x284]
	mov r5, #0xf0
	asr r5, r6
	ldr r6, [sp, #0x284]
	and r6, r5
	ldr r5, [sp, #0x280]
	orr r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x270]
	cmp r0, #0
	beq _0201DC1C
	ldr r6, [sp, #0x27c]
	ldr r0, [sp, #0x64]
	add r6, r6, r0
	ldr r0, [sp, #0x60]
	strb r5, [r0, r6]
_0201DC1C:
	ldr r0, [sp, #8]
	add r1, r1, #1
	add r4, r4, #4
	add r3, r3, #4
	add r2, r2, #1
	cmp r1, r0
	blt _0201DBC8
_0201DC2A:
	ldr r0, [sp, #0x270]
	cmp r0, #0
	beq _0201DC38
	ldr r0, [sp, #0x48]
	add r0, r0, #2
	str r0, [sp, #0x48]
	b _0201DC3E
_0201DC38:
	ldr r0, [sp, #0x48]
	add r0, r0, #1
	str r0, [sp, #0x48]
_0201DC3E:
	ldr r0, [sp]
	add r0, r0, #4
	str r0, [sp]
	ldr r0, [sp, #0x274]
	add r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #0x274]
	cmp r1, r0
	blt _0201DB76
	add sp, #0x1fc
	add sp, #0x118
	pop {r4, r5, r6, r7, pc}
_0201DC56:
	ldr r0, [sp]
	str r0, [sp, #0x25c]
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x264]
	ldr r0, [sp, #0x330]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x54]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x84]
	mov r0, #0
	str r0, [sp, #0x268]
	ldr r0, [sp, #4]
	cmp r0, #0
	ble _0201DD52
	ldr r0, [sp, #0x58]
	mov r1, #7
	and r1, r0
	add r0, r0, r1
	asr r0, r0, #3
	str r0, [sp, #0x80]
_0201DC82:
	ldr r0, [sp, #0x25c]
	ldr r1, [sp, #0x84]
	ldr r0, [r0]
	ldr r2, [sp, #0x5c]
	str r0, [sp, #0x258]
	ldr r0, [sp, #0x268]
	ldr r6, [sp, #0x80]
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x260]
	add r0, r2, #0
	lsl r3, r0, #2
	ldr r0, [sp, #0x264]
	mov r1, #0
	lsl r5, r0, #2
	ldr r0, _0201DEE8 ; =0x00003FE0
	add r7, r5, #0
	and r0, r5
	mul r6, r0
	mov r0, #0x1c
	and r7, r0
	ldr r0, [sp, #0x264]
	str r6, [sp, #0x7c]
	add r0, r0, #1
	lsl r6, r0, #2
	ldr r0, _0201DEE8 ; =0x00003FE0
	ldr r5, [sp, #0x80]
	and r0, r6
	mul r5, r0
	mov r0, #0x1c
	and r0, r6
	add r4, r1, #0
	str r5, [sp, #0x78]
	str r0, [sp, #0x74]
_0201DCCC:
	asr r5, r2, #1
	mov r0, #3
	and r5, r0
	ldr r0, [sp, #0x278]
	add r0, r0, r5
	ldr r5, _0201DEE8 ; =0x00003FE0
	and r5, r3
	add r5, r0, r5
	ldr r0, [sp, #0x7c]
	str r5, [sp, #0x288]
	add r0, r5, r0
	ldr r5, [sp, #0x258]
	add r6, r5, #0
	lsr r6, r4
	mov r5, #0xf
	and r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	beq _0201DD20
	lsl r6, r2, #0x1f
	lsr r6, r6, #0x1d
	lsl r5, r6
	str r5, [sp, #0x28c]
	ldrb r5, [r0, r7]
	str r5, [sp, #0x290]
	mov r5, #0xf0
	asr r5, r6
	ldr r6, [sp, #0x290]
	and r6, r5
	ldr r5, [sp, #0x28c]
	orr r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x260]
	cmp r0, #0
	beq _0201DD20
	ldr r6, [sp, #0x288]
	ldr r0, [sp, #0x78]
	add r6, r6, r0
	ldr r0, [sp, #0x74]
	strb r5, [r0, r6]
_0201DD20:
	add r1, r1, #1
	add r4, r4, #4
	add r3, r3, #4
	add r2, r2, #1
	cmp r1, #8
	blt _0201DCCC
	ldr r0, [sp, #0x260]
	cmp r0, #0
	beq _0201DD3A
	ldr r0, [sp, #0x264]
	add r0, r0, #2
	str r0, [sp, #0x264]
	b _0201DD40
_0201DD3A:
	ldr r0, [sp, #0x264]
	add r0, r0, #1
	str r0, [sp, #0x264]
_0201DD40:
	ldr r0, [sp, #0x25c]
	add r0, r0, #4
	str r0, [sp, #0x25c]
	ldr r0, [sp, #0x268]
	add r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #0x268]
	cmp r1, r0
	blt _0201DC82
_0201DD52:
	ldr r0, [sp]
	add r0, #0x20
	str r0, [sp]
	ldr r0, [sp, #0x54]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x98]
	mov r0, #0
	str r0, [sp, #0x254]
	ldr r0, [sp, #4]
	cmp r0, #0
	bgt _0201DD6E
	bl sub_0201EC3C
_0201DD6E:
	ldr r0, [sp, #0x5c]
	mov r1, #7
	add r0, #8
	str r0, [sp, #0x5c]
	ldr r0, [sp, #0x58]
	and r1, r0
	add r0, r0, r1
	asr r0, r0, #3
	str r0, [sp, #0x94]
_0201DD80:
	ldr r0, [sp]
	ldr r1, [sp, #0x98]
	ldr r0, [r0]
	ldr r2, [sp, #0x5c]
	str r0, [sp, #0x24c]
	ldr r0, [sp, #0x254]
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x250]
	ldr r0, [sp, #8]
	mov r1, #0
	str r0, [sp, #0x294]
	sub r0, #8
	str r0, [sp, #0x294]
	cmp r0, #0
	ble _0201DE3A
	ble _0201DE3A
	add r0, r2, #0
	lsl r3, r0, #2
	ldr r0, [sp, #0x48]
	ldr r6, [sp, #0x94]
	lsl r5, r0, #2
	ldr r0, _0201DEE8 ; =0x00003FE0
	add r7, r5, #0
	and r0, r5
	mul r6, r0
	mov r0, #0x1c
	and r7, r0
	ldr r0, [sp, #0x48]
	str r6, [sp, #0x90]
	add r0, r0, #1
	lsl r6, r0, #2
	ldr r0, _0201DEE8 ; =0x00003FE0
	ldr r5, [sp, #0x94]
	and r0, r6
	mul r5, r0
	mov r0, #0x1c
	and r0, r6
	add r4, r1, #0
	str r5, [sp, #0x8c]
	str r0, [sp, #0x88]
_0201DDD8:
	asr r5, r2, #1
	mov r0, #3
	and r5, r0
	ldr r0, [sp, #0x278]
	add r0, r0, r5
	ldr r5, _0201DEE8 ; =0x00003FE0
	and r5, r3
	add r5, r0, r5
	ldr r0, [sp, #0x90]
	str r5, [sp, #0x298]
	add r0, r5, r0
	ldr r5, [sp, #0x24c]
	add r6, r5, #0
	lsr r6, r4
	mov r5, #0xf
	and r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	beq _0201DE2C
	lsl r6, r2, #0x1f
	lsr r6, r6, #0x1d
	lsl r5, r6
	str r5, [sp, #0x29c]
	ldrb r5, [r0, r7]
	str r5, [sp, #0x2a0]
	mov r5, #0xf0
	asr r5, r6
	ldr r6, [sp, #0x2a0]
	and r6, r5
	ldr r5, [sp, #0x29c]
	orr r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x250]
	cmp r0, #0
	beq _0201DE2C
	ldr r6, [sp, #0x298]
	ldr r0, [sp, #0x8c]
	add r6, r6, r0
	ldr r0, [sp, #0x88]
	strb r5, [r0, r6]
_0201DE2C:
	ldr r0, [sp, #0x294]
	add r1, r1, #1
	add r4, r4, #4
	add r3, r3, #4
	add r2, r2, #1
	cmp r1, r0
	blt _0201DDD8
_0201DE3A:
	ldr r0, [sp, #0x250]
	cmp r0, #0
	beq _0201DE48
	ldr r0, [sp, #0x48]
	add r0, r0, #2
	str r0, [sp, #0x48]
	b _0201DE4E
_0201DE48:
	ldr r0, [sp, #0x48]
	add r0, r0, #1
	str r0, [sp, #0x48]
_0201DE4E:
	ldr r0, [sp]
	add r0, r0, #4
	str r0, [sp]
	ldr r0, [sp, #0x254]
	add r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #0x254]
	cmp r1, r0
	blt _0201DD80
	add sp, #0x1fc
	add sp, #0x118
	pop {r4, r5, r6, r7, pc}
_0201DE66:
	ldr r0, [sp]
	mov r1, #7
	str r0, [sp, #0x23c]
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x244]
	mov r0, #0
	str r0, [sp, #0x248]
	ldr r0, [sp, #0x330]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0xa8]
	ldr r0, [sp, #0x58]
	and r1, r0
	add r0, r0, r1
	asr r0, r0, #3
	str r0, [sp, #0x40]
_0201DE86:
	ldr r0, [sp, #0x23c]
	ldr r1, [sp, #0xa8]
	ldr r0, [r0]
	ldr r2, [sp, #0x5c]
	str r0, [sp, #0x238]
	ldr r0, [sp, #0x248]
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x240]
	ldr r0, [sp, #8]
	mov r1, #0
	cmp r0, #0
	ble _0201DF42
	ble _0201DF42
	add r0, r2, #0
	lsl r3, r0, #2
	ldr r0, [sp, #0x244]
	ldr r6, [sp, #0x40]
	lsl r5, r0, #2
	ldr r0, _0201DEE8 ; =0x00003FE0
	add r7, r5, #0
	and r0, r5
	mul r6, r0
	mov r0, #0x1c
	and r7, r0
	ldr r0, [sp, #0x244]
	str r6, [sp, #0xa4]
	add r0, r0, #1
	lsl r6, r0, #2
	ldr r0, _0201DEE8 ; =0x00003FE0
	ldr r5, [sp, #0x40]
	and r0, r6
	mul r5, r0
	mov r0, #0x1c
	and r0, r6
	add r4, r1, #0
	str r5, [sp, #0xa0]
	str r0, [sp, #0x9c]
_0201DED8:
	asr r5, r2, #1
	mov r0, #3
	and r5, r0
	ldr r0, [sp, #0x278]
	add r0, r0, r5
	ldr r5, _0201DEE8 ; =0x00003FE0
	b _0201DEEC
	nop
_0201DEE8: .word 0x00003FE0
_0201DEEC:
	and r5, r3
	add r5, r0, r5
	ldr r0, [sp, #0xa4]
	str r5, [sp, #0x2a4]
	add r0, r5, r0
	ldr r5, [sp, #0x238]
	add r6, r5, #0
	lsr r6, r4
	mov r5, #0xf
	and r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	beq _0201DF34
	lsl r6, r2, #0x1f
	lsr r6, r6, #0x1d
	lsl r5, r6
	str r5, [sp, #0x2a8]
	ldrb r5, [r0, r7]
	str r5, [sp, #0x2ac]
	mov r5, #0xf0
	asr r5, r6
	ldr r6, [sp, #0x2ac]
	and r6, r5
	ldr r5, [sp, #0x2a8]
	orr r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x240]
	cmp r0, #0
	beq _0201DF34
	ldr r6, [sp, #0x2a4]
	ldr r0, [sp, #0xa0]
	add r6, r6, r0
	ldr r0, [sp, #0x9c]
	strb r5, [r0, r6]
_0201DF34:
	ldr r0, [sp, #8]
	add r1, r1, #1
	add r4, r4, #4
	add r3, r3, #4
	add r2, r2, #1
	cmp r1, r0
	blt _0201DED8
_0201DF42:
	ldr r0, [sp, #0x240]
	cmp r0, #0
	beq _0201DF50
	ldr r0, [sp, #0x244]
	add r0, r0, #2
	str r0, [sp, #0x244]
	b _0201DF56
_0201DF50:
	ldr r0, [sp, #0x244]
	add r0, r0, #1
	str r0, [sp, #0x244]
_0201DF56:
	ldr r0, [sp, #0x23c]
	add r0, r0, #4
	str r0, [sp, #0x23c]
	ldr r0, [sp, #0x248]
	add r0, r0, #1
	str r0, [sp, #0x248]
	cmp r0, #8
	blt _0201DE86
	ldr r0, [sp]
	mov r2, #0
	add r0, #0x40
	str r0, [sp]
	ldr r0, [sp, #0x48]
	mov r1, #1
	add r0, #8
	str r0, [sp, #0x48]
_0201DF76:
	ldr r0, [sp, #0x330]
	asr r0, r2
	tst r0, r1
	beq _0201DF84
	ldr r0, [sp, #0x48]
	add r0, r0, #1
	str r0, [sp, #0x48]
_0201DF84:
	add r2, r2, #1
	cmp r2, #8
	blt _0201DF76
	ldr r0, [sp, #0x330]
	asr r0, r0, #8
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0xb8]
	mov r0, #0
	str r0, [sp, #0x20]
	ldr r0, [sp, #4]
	sub r0, #8
	cmp r0, #0
	bgt _0201DFA4
	bl sub_0201EC3C
_0201DFA4:
	ldr r0, [sp]
	ldr r1, [sp, #0xb8]
	ldr r0, [r0]
	ldr r2, [sp, #0x5c]
	str r0, [sp, #0x230]
	ldr r0, [sp, #0x20]
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x234]
	ldr r0, [sp, #8]
	mov r1, #0
	cmp r0, #0
	ble _0201E058
	ble _0201E058
	add r0, r2, #0
	lsl r3, r0, #2
	ldr r0, [sp, #0x48]
	ldr r6, [sp, #0x40]
	lsl r5, r0, #2
	ldr r0, _0201E308 ; =0x00003FE0
	add r7, r5, #0
	and r0, r5
	mul r6, r0
	mov r0, #0x1c
	and r7, r0
	ldr r0, [sp, #0x48]
	str r6, [sp, #0xb4]
	add r0, r0, #1
	lsl r6, r0, #2
	ldr r0, _0201E308 ; =0x00003FE0
	ldr r5, [sp, #0x40]
	and r0, r6
	mul r5, r0
	mov r0, #0x1c
	and r0, r6
	add r4, r1, #0
	str r5, [sp, #0xb0]
	str r0, [sp, #0xac]
_0201DFF6:
	asr r5, r2, #1
	mov r0, #3
	and r5, r0
	ldr r0, [sp, #0x278]
	add r0, r0, r5
	ldr r5, _0201E308 ; =0x00003FE0
	and r5, r3
	add r5, r0, r5
	ldr r0, [sp, #0xb4]
	str r5, [sp, #0x2b0]
	add r0, r5, r0
	ldr r5, [sp, #0x230]
	add r6, r5, #0
	lsr r6, r4
	mov r5, #0xf
	and r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	beq _0201E04A
	lsl r6, r2, #0x1f
	lsr r6, r6, #0x1d
	lsl r5, r6
	str r5, [sp, #0x2b4]
	ldrb r5, [r0, r7]
	str r5, [sp, #0x2b8]
	mov r5, #0xf0
	asr r5, r6
	ldr r6, [sp, #0x2b8]
	and r6, r5
	ldr r5, [sp, #0x2b4]
	orr r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x234]
	cmp r0, #0
	beq _0201E04A
	ldr r6, [sp, #0x2b0]
	ldr r0, [sp, #0xb0]
	add r6, r6, r0
	ldr r0, [sp, #0xac]
	strb r5, [r0, r6]
_0201E04A:
	ldr r0, [sp, #8]
	add r1, r1, #1
	add r4, r4, #4
	add r3, r3, #4
	add r2, r2, #1
	cmp r1, r0
	blt _0201DFF6
_0201E058:
	ldr r0, [sp, #0x234]
	cmp r0, #0
	beq _0201E066
	ldr r0, [sp, #0x48]
	add r0, r0, #2
	str r0, [sp, #0x48]
	b _0201E06C
_0201E066:
	ldr r0, [sp, #0x48]
	add r0, r0, #1
	str r0, [sp, #0x48]
_0201E06C:
	ldr r0, [sp]
	ldr r1, [sp, #4]
	add r0, r0, #4
	str r0, [sp]
	ldr r0, [sp, #0x20]
	sub r1, #8
	add r0, r0, #1
	str r0, [sp, #0x20]
	cmp r0, r1
	blt _0201DFA4
	add sp, #0x1fc
	add sp, #0x118
	pop {r4, r5, r6, r7, pc}
_0201E086:
	ldr r0, [sp]
	str r0, [sp, #0x220]
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x228]
	ldr r0, [sp, #0x330]
	lsl r0, r0, #0x18
	lsr r1, r0, #0x18
	mov r0, #0
	str r0, [sp, #0x22c]
	lsl r0, r1, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x3c]
	ldr r0, [sp, #0x58]
	mov r1, #7
	and r1, r0
	add r0, r0, r1
	asr r0, r0, #3
	str r0, [sp, #0x38]
_0201E0AA:
	ldr r0, [sp, #0x220]
	ldr r1, [sp, #0x3c]
	ldr r0, [r0]
	ldr r2, [sp, #0x5c]
	str r0, [sp, #0x21c]
	ldr r0, [sp, #0x22c]
	ldr r6, [sp, #0x38]
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x224]
	add r0, r2, #0
	lsl r3, r0, #2
	ldr r0, [sp, #0x228]
	mov r1, #0
	lsl r5, r0, #2
	ldr r0, _0201E308 ; =0x00003FE0
	add r7, r5, #0
	and r0, r5
	mul r6, r0
	mov r0, #0x1c
	and r7, r0
	ldr r0, [sp, #0x228]
	str r6, [sp, #0xc4]
	add r0, r0, #1
	lsl r6, r0, #2
	ldr r0, _0201E308 ; =0x00003FE0
	ldr r5, [sp, #0x38]
	and r0, r6
	mul r5, r0
	mov r0, #0x1c
	and r0, r6
	str r3, [sp, #0x34]
	add r4, r1, #0
	str r5, [sp, #0xc0]
	str r0, [sp, #0xbc]
_0201E0F6:
	asr r5, r2, #1
	mov r0, #3
	and r5, r0
	ldr r0, [sp, #0x278]
	add r0, r0, r5
	ldr r5, _0201E308 ; =0x00003FE0
	and r5, r3
	add r5, r0, r5
	ldr r0, [sp, #0xc4]
	str r5, [sp, #0x2bc]
	add r0, r5, r0
	ldr r5, [sp, #0x21c]
	add r6, r5, #0
	lsr r6, r4
	mov r5, #0xf
	and r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	beq _0201E14A
	lsl r6, r2, #0x1f
	lsr r6, r6, #0x1d
	lsl r5, r6
	str r5, [sp, #0x2c0]
	ldrb r5, [r0, r7]
	str r5, [sp, #0x2c4]
	mov r5, #0xf0
	asr r5, r6
	ldr r6, [sp, #0x2c4]
	and r6, r5
	ldr r5, [sp, #0x2c0]
	orr r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x224]
	cmp r0, #0
	beq _0201E14A
	ldr r6, [sp, #0x2bc]
	ldr r0, [sp, #0xc0]
	add r6, r6, r0
	ldr r0, [sp, #0xbc]
	strb r5, [r0, r6]
_0201E14A:
	add r1, r1, #1
	add r4, r4, #4
	add r3, r3, #4
	add r2, r2, #1
	cmp r1, #8
	blt _0201E0F6
	ldr r0, [sp, #0x224]
	cmp r0, #0
	beq _0201E164
	ldr r0, [sp, #0x228]
	add r0, r0, #2
	str r0, [sp, #0x228]
	b _0201E16A
_0201E164:
	ldr r0, [sp, #0x228]
	add r0, r0, #1
	str r0, [sp, #0x228]
_0201E16A:
	ldr r0, [sp, #0x220]
	add r0, r0, #4
	str r0, [sp, #0x220]
	ldr r0, [sp, #0x22c]
	add r0, r0, #1
	str r0, [sp, #0x22c]
	cmp r0, #8
	blt _0201E0AA
	ldr r0, [sp]
	str r0, [sp, #0x20c]
	add r0, #0x20
	str r0, [sp, #0x20c]
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x214]
	mov r0, #0
	str r0, [sp, #0x218]
	ldr r0, [sp, #0x5c]
	str r0, [sp, #0xd4]
	add r0, #8
	str r0, [sp, #0xd4]
_0201E192:
	ldr r0, [sp, #0x20c]
	ldr r1, [sp, #0x3c]
	ldr r0, [r0]
	ldr r2, [sp, #0xd4]
	str r0, [sp, #0x208]
	ldr r0, [sp, #0x218]
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x210]
	ldr r0, [sp, #8]
	mov r1, #0
	str r0, [sp, #0x2c8]
	sub r0, #8
	str r0, [sp, #0x2c8]
	cmp r0, #0
	ble _0201E24C
	ble _0201E24C
	add r0, r2, #0
	lsl r3, r0, #2
	ldr r0, [sp, #0x214]
	ldr r6, [sp, #0x38]
	lsl r5, r0, #2
	ldr r0, _0201E308 ; =0x00003FE0
	add r7, r5, #0
	and r0, r5
	mul r6, r0
	mov r0, #0x1c
	and r7, r0
	ldr r0, [sp, #0x214]
	str r6, [sp, #0xd0]
	add r0, r0, #1
	lsl r6, r0, #2
	ldr r0, _0201E308 ; =0x00003FE0
	ldr r5, [sp, #0x38]
	and r0, r6
	mul r5, r0
	mov r0, #0x1c
	and r0, r6
	add r4, r1, #0
	str r5, [sp, #0xcc]
	str r0, [sp, #0xc8]
_0201E1EA:
	asr r5, r2, #1
	mov r0, #3
	and r5, r0
	ldr r0, [sp, #0x278]
	add r0, r0, r5
	ldr r5, _0201E308 ; =0x00003FE0
	and r5, r3
	add r5, r0, r5
	ldr r0, [sp, #0xd0]
	str r5, [sp, #0x2cc]
	add r0, r5, r0
	ldr r5, [sp, #0x208]
	add r6, r5, #0
	lsr r6, r4
	mov r5, #0xf
	and r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	beq _0201E23E
	lsl r6, r2, #0x1f
	lsr r6, r6, #0x1d
	lsl r5, r6
	str r5, [sp, #0x2d0]
	ldrb r5, [r0, r7]
	str r5, [sp, #0x2d4]
	mov r5, #0xf0
	asr r5, r6
	ldr r6, [sp, #0x2d4]
	and r6, r5
	ldr r5, [sp, #0x2d0]
	orr r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x210]
	cmp r0, #0
	beq _0201E23E
	ldr r6, [sp, #0x2cc]
	ldr r0, [sp, #0xcc]
	add r6, r6, r0
	ldr r0, [sp, #0xc8]
	strb r5, [r0, r6]
_0201E23E:
	ldr r0, [sp, #0x2c8]
	add r1, r1, #1
	add r4, r4, #4
	add r3, r3, #4
	add r2, r2, #1
	cmp r1, r0
	blt _0201E1EA
_0201E24C:
	ldr r0, [sp, #0x210]
	cmp r0, #0
	beq _0201E25A
	ldr r0, [sp, #0x214]
	add r0, r0, #2
	str r0, [sp, #0x214]
	b _0201E260
_0201E25A:
	ldr r0, [sp, #0x214]
	add r0, r0, #1
	str r0, [sp, #0x214]
_0201E260:
	ldr r0, [sp, #0x20c]
	add r0, r0, #4
	str r0, [sp, #0x20c]
	ldr r0, [sp, #0x218]
	add r0, r0, #1
	str r0, [sp, #0x218]
	cmp r0, #8
	blt _0201E192
	ldr r0, [sp]
	mov r2, #0
	str r0, [sp, #0x1fc]
	add r0, #0x40
	str r0, [sp, #0x1fc]
	ldr r0, [sp, #0x48]
	mov r1, #1
	add r0, #8
	str r0, [sp, #0x48]
	str r0, [sp, #0x204]
_0201E284:
	ldr r0, [sp, #0x330]
	asr r0, r2
	tst r0, r1
	beq _0201E292
	ldr r0, [sp, #0x204]
	add r0, r0, #1
	str r0, [sp, #0x204]
_0201E292:
	add r2, r2, #1
	cmp r2, #8
	blt _0201E284
	ldr r0, [sp, #0x330]
	asr r0, r0, #8
	str r0, [sp, #0x50]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0xe4]
	mov r0, #0
	str r0, [sp, #0x1c]
	ldr r0, [sp, #4]
	sub r0, #8
	cmp r0, #0
	ble _0201E388
_0201E2B0:
	ldr r0, [sp, #0x1fc]
	ldr r1, [sp, #0xe4]
	ldr r0, [r0]
	ldr r6, [sp, #0x38]
	str r0, [sp, #0x1f8]
	ldr r0, [sp, #0x1c]
	ldr r2, [sp, #0x5c]
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x200]
	ldr r0, [sp, #0x204]
	mov r1, #0
	lsl r5, r0, #2
	ldr r0, _0201E308 ; =0x00003FE0
	add r7, r5, #0
	and r0, r5
	mul r6, r0
	mov r0, #0x1c
	and r7, r0
	ldr r0, [sp, #0x204]
	str r6, [sp, #0xe0]
	add r0, r0, #1
	lsl r6, r0, #2
	ldr r0, _0201E308 ; =0x00003FE0
	ldr r5, [sp, #0x38]
	and r0, r6
	mul r5, r0
	mov r0, #0x1c
	and r0, r6
	ldr r3, [sp, #0x34]
	add r4, r1, #0
	str r5, [sp, #0xdc]
	str r0, [sp, #0xd8]
_0201E2F8:
	asr r5, r2, #1
	mov r0, #3
	and r5, r0
	ldr r0, [sp, #0x278]
	add r0, r0, r5
	ldr r5, _0201E308 ; =0x00003FE0
	b _0201E30C
	nop
_0201E308: .word 0x00003FE0
_0201E30C:
	and r5, r3
	add r5, r0, r5
	ldr r0, [sp, #0xe0]
	str r5, [sp, #0x2d8]
	add r0, r5, r0
	ldr r5, [sp, #0x1f8]
	add r6, r5, #0
	lsr r6, r4
	mov r5, #0xf
	and r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	beq _0201E354
	lsl r6, r2, #0x1f
	lsr r6, r6, #0x1d
	lsl r5, r6
	str r5, [sp, #0x2dc]
	ldrb r5, [r0, r7]
	str r5, [sp, #0x2e0]
	mov r5, #0xf0
	asr r5, r6
	ldr r6, [sp, #0x2e0]
	and r6, r5
	ldr r5, [sp, #0x2dc]
	orr r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x200]
	cmp r0, #0
	beq _0201E354
	ldr r6, [sp, #0x2d8]
	ldr r0, [sp, #0xdc]
	add r6, r6, r0
	ldr r0, [sp, #0xd8]
	strb r5, [r0, r6]
_0201E354:
	add r1, r1, #1
	add r4, r4, #4
	add r3, r3, #4
	add r2, r2, #1
	cmp r1, #8
	blt _0201E2F8
	ldr r0, [sp, #0x200]
	cmp r0, #0
	beq _0201E36E
	ldr r0, [sp, #0x204]
	add r0, r0, #2
	str r0, [sp, #0x204]
	b _0201E374
_0201E36E:
	ldr r0, [sp, #0x204]
	add r0, r0, #1
	str r0, [sp, #0x204]
_0201E374:
	ldr r0, [sp, #0x1fc]
	ldr r1, [sp, #4]
	add r0, r0, #4
	str r0, [sp, #0x1fc]
	ldr r0, [sp, #0x1c]
	sub r1, #8
	add r0, r0, #1
	str r0, [sp, #0x1c]
	cmp r0, r1
	blt _0201E2B0
_0201E388:
	ldr r0, [sp]
	mov r2, #0
	add r0, #0x60
	str r0, [sp]
	mov r1, #1
_0201E392:
	ldr r0, [sp, #0x330]
	asr r0, r2
	tst r0, r1
	beq _0201E3A0
	ldr r0, [sp, #0x48]
	add r0, r0, #1
	str r0, [sp, #0x48]
_0201E3A0:
	add r2, r2, #1
	cmp r2, #8
	blt _0201E392
	ldr r0, [sp, #0x50]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0xf4]
	mov r0, #0
	str r0, [sp, #0x18]
	ldr r0, [sp, #4]
	sub r0, #8
	cmp r0, #0
	bgt _0201E3BE
	bl sub_0201EC3C
_0201E3BE:
	ldr r0, [sp, #0x5c]
	add r0, #8
	str r0, [sp, #0x5c]
_0201E3C4:
	ldr r0, [sp]
	ldr r1, [sp, #0xf4]
	ldr r0, [r0]
	ldr r2, [sp, #0x5c]
	str r0, [sp, #0x1f0]
	ldr r0, [sp, #0x18]
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x1f4]
	ldr r0, [sp, #8]
	mov r1, #0
	str r0, [sp, #0x2e4]
	sub r0, #8
	str r0, [sp, #0x2e4]
	cmp r0, #0
	ble _0201E47E
	ble _0201E47E
	add r0, r2, #0
	lsl r3, r0, #2
	ldr r0, [sp, #0x48]
	ldr r6, [sp, #0x38]
	lsl r5, r0, #2
	ldr r0, _0201E6F0 ; =0x00003FE0
	add r7, r5, #0
	and r0, r5
	mul r6, r0
	mov r0, #0x1c
	and r7, r0
	ldr r0, [sp, #0x48]
	str r6, [sp, #0xf0]
	add r0, r0, #1
	lsl r6, r0, #2
	ldr r0, _0201E6F0 ; =0x00003FE0
	ldr r5, [sp, #0x38]
	and r0, r6
	mul r5, r0
	mov r0, #0x1c
	and r0, r6
	add r4, r1, #0
	str r5, [sp, #0xec]
	str r0, [sp, #0xe8]
_0201E41C:
	asr r5, r2, #1
	mov r0, #3
	and r5, r0
	ldr r0, [sp, #0x278]
	add r0, r0, r5
	ldr r5, _0201E6F0 ; =0x00003FE0
	and r5, r3
	add r5, r0, r5
	ldr r0, [sp, #0xf0]
	str r5, [sp, #0x2e8]
	add r0, r5, r0
	ldr r5, [sp, #0x1f0]
	add r6, r5, #0
	lsr r6, r4
	mov r5, #0xf
	and r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	beq _0201E470
	lsl r6, r2, #0x1f
	lsr r6, r6, #0x1d
	lsl r5, r6
	str r5, [sp, #0x2ec]
	ldrb r5, [r0, r7]
	mov ip, r5
	mov r5, #0xf0
	asr r5, r6
	mov r6, ip
	and r6, r5
	ldr r5, [sp, #0x2ec]
	orr r5, r6
	lsl r5, r5, #0x18
	lsr r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x1f4]
	cmp r0, #0
	beq _0201E470
	ldr r6, [sp, #0x2e8]
	ldr r0, [sp, #0xec]
	add r6, r6, r0
	ldr r0, [sp, #0xe8]
	strb r5, [r0, r6]
_0201E470:
	ldr r0, [sp, #0x2e4]
	add r1, r1, #1
	add r4, r4, #4
	add r3, r3, #4
	add r2, r2, #1
	cmp r1, r0
	blt _0201E41C
_0201E47E:
	ldr r0, [sp, #0x1f4]
	cmp r0, #0
	beq _0201E48C
	ldr r0, [sp, #0x48]
	add r0, r0, #2
	str r0, [sp, #0x48]
	b _0201E492
_0201E48C:
	ldr r0, [sp, #0x48]
	add r0, r0, #1
	str r0, [sp, #0x48]
_0201E492:
	ldr r0, [sp]
	ldr r1, [sp, #4]
	add r0, r0, #4
	str r0, [sp]
	ldr r0, [sp, #0x18]
	sub r1, #8
	add r0, r0, #1
	str r0, [sp, #0x18]
	cmp r0, r1
	blt _0201E3C4
	add sp, #0x1fc
	add sp, #0x118
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_0201DACC

	thumb_func_start sub_0201E4AC
sub_0201E4AC: ; 0x0201E4AC
	lsl r1, r2, #2
	mul r1, r3
	ldr r3, [r5]
	ldrb r2, [r5, #9]
	ldr r0, [sp]
	ldr r3, [r3]
	lsl r1, r1, #3
	bl sub_0201CBE4
	str r0, [sp, #0x1ec]
	cmp r4, #3
	bhi _0201E59E
	add r0, r4, r4
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_0201E4D0: ; jump table
	.short _0201E4D8 - _0201E4D0 - 2 ; case 0
	.short _0201E5A0 - _0201E4D0 - 2 ; case 1
	.short _0201E74C - _0201E4D0 - 2 ; case 2
	.short _0201E8F0 - _0201E4D0 - 2 ; case 3
_0201E4D8:
	ldr r0, [sp, #0x330]
	ldr r7, [sp, #0x1ec]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x10c]
	mov r0, #0
	str r0, [sp, #0x1e8]
	ldr r0, [sp, #4]
	cmp r0, #0
	ble _0201E59E
	ldr r0, [sp, #0x58]
	mov r1, #7
	and r1, r0
	add r0, r0, r1
	asr r0, r0, #3
	str r0, [sp, #0x108]
_0201E4F8:
	ldr r1, [sp, #0x10c]
	ldr r0, [sp, #0x1e8]
	mov r4, #0
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x310]
	ldr r0, [sp, #8]
	ldr r5, [sp, #0x5c]
	cmp r0, #0
	ble _0201E57C
	ble _0201E57C
	add r0, r5, #0
	lsl r6, r0, #3
	ldr r0, [sp, #0x48]
	ldr r2, [sp, #0x108]
	lsl r1, r0, #3
	ldr r0, _0201E6F4 ; =0x00007FC0
	mov r3, #0x38
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	str r0, [sp, #0x100]
	ldr r0, [sp, #0x48]
	str r2, [sp, #0x104]
	add r0, r0, #1
	lsl r1, r0, #3
	ldr r0, _0201E6F4 ; =0x00007FC0
	ldr r2, [sp, #0x108]
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	str r2, [sp, #0xfc]
	str r0, [sp, #0xf8]
_0201E544:
	mov r0, #7
	add r1, r5, #0
	and r1, r0
	ldr r0, [sp, #0x278]
	add r1, r0, r1
	ldr r0, _0201E6F4 ; =0x00007FC0
	and r0, r6
	add r3, r1, r0
	ldr r0, [sp, #0x104]
	ldrb r1, [r7, r4]
	add r2, r3, r0
	cmp r1, #0
	beq _0201E570
	ldr r0, [sp, #0x100]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x310]
	cmp r0, #0
	beq _0201E570
	ldr r0, [sp, #0xfc]
	add r2, r3, r0
	ldr r0, [sp, #0xf8]
	strb r1, [r0, r2]
_0201E570:
	ldr r0, [sp, #8]
	add r4, r4, #1
	add r6, #8
	add r5, r5, #1
	cmp r4, r0
	blt _0201E544
_0201E57C:
	ldr r0, [sp, #0x310]
	cmp r0, #0
	beq _0201E58A
	ldr r0, [sp, #0x48]
	add r0, r0, #2
	str r0, [sp, #0x48]
	b _0201E590
_0201E58A:
	ldr r0, [sp, #0x48]
	add r0, r0, #1
	str r0, [sp, #0x48]
_0201E590:
	ldr r0, [sp, #0x1e8]
	add r7, #8
	add r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #0x1e8]
	cmp r1, r0
	blt _0201E4F8
_0201E59E:
	b _0201EC36
_0201E5A0:
	ldr r0, [sp, #0x48]
	ldr r7, [sp, #0x1ec]
	str r0, [sp, #0x1e0]
	ldr r0, [sp, #0x330]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x4c]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x124]
	mov r0, #0
	str r0, [sp, #0x1e4]
	ldr r0, [sp, #4]
	cmp r0, #0
	ble _0201E666
	ldr r0, [sp, #0x58]
	mov r1, #7
	and r1, r0
	add r0, r0, r1
	asr r0, r0, #3
	str r0, [sp, #0x120]
_0201E5CA:
	ldr r1, [sp, #0x124]
	ldr r0, [sp, #0x1e4]
	ldr r5, [sp, #0x5c]
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x30c]
	add r0, r5, #0
	lsl r6, r0, #3
	ldr r0, [sp, #0x1e0]
	ldr r2, [sp, #0x120]
	lsl r1, r0, #3
	ldr r0, _0201E6F4 ; =0x00007FC0
	mov r3, #0x38
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	str r0, [sp, #0x118]
	ldr r0, [sp, #0x1e0]
	str r2, [sp, #0x11c]
	add r0, r0, #1
	lsl r1, r0, #3
	ldr r0, _0201E6F4 ; =0x00007FC0
	ldr r2, [sp, #0x120]
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	mov r4, #0
	str r2, [sp, #0x114]
	str r0, [sp, #0x110]
_0201E60E:
	mov r0, #7
	add r1, r5, #0
	and r1, r0
	ldr r0, [sp, #0x278]
	add r1, r0, r1
	ldr r0, _0201E6F4 ; =0x00007FC0
	and r0, r6
	add r3, r1, r0
	ldr r0, [sp, #0x11c]
	ldrb r1, [r7, r4]
	add r2, r3, r0
	cmp r1, #0
	beq _0201E63A
	ldr r0, [sp, #0x118]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x30c]
	cmp r0, #0
	beq _0201E63A
	ldr r0, [sp, #0x114]
	add r2, r3, r0
	ldr r0, [sp, #0x110]
	strb r1, [r0, r2]
_0201E63A:
	add r4, r4, #1
	add r6, #8
	add r5, r5, #1
	cmp r4, #8
	blt _0201E60E
	ldr r0, [sp, #0x30c]
	cmp r0, #0
	beq _0201E652
	ldr r0, [sp, #0x1e0]
	add r0, r0, #2
	str r0, [sp, #0x1e0]
	b _0201E658
_0201E652:
	ldr r0, [sp, #0x1e0]
	add r0, r0, #1
	str r0, [sp, #0x1e0]
_0201E658:
	ldr r0, [sp, #0x1e4]
	add r7, #8
	add r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #0x1e4]
	cmp r1, r0
	blt _0201E5CA
_0201E666:
	ldr r0, [sp, #0x1ec]
	str r0, [sp, #0x308]
	add r0, #0x40
	str r0, [sp, #0x308]
	ldr r0, [sp, #0x4c]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x13c]
	mov r0, #0
	str r0, [sp, #0x1dc]
	ldr r0, [sp, #4]
	cmp r0, #0
	ble _0201E74A
	ldr r0, [sp, #0x5c]
	mov r1, #7
	add r0, #8
	str r0, [sp, #0x5c]
	ldr r0, [sp, #0x58]
	and r1, r0
	add r0, r0, r1
	asr r0, r0, #3
	str r0, [sp, #0x138]
_0201E692:
	ldr r1, [sp, #0x13c]
	ldr r0, [sp, #0x1dc]
	ldr r7, [sp, #8]
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	sub r7, #8
	mov r4, #0
	str r0, [sp, #0x1d8]
	ldr r5, [sp, #0x5c]
	cmp r7, #0
	ble _0201E724
	ble _0201E724
	add r0, r5, #0
	lsl r6, r0, #3
	ldr r0, [sp, #0x48]
	ldr r2, [sp, #0x138]
	lsl r1, r0, #3
	ldr r0, _0201E6F4 ; =0x00007FC0
	mov r3, #0x38
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	str r0, [sp, #0x130]
	ldr r0, [sp, #0x48]
	str r2, [sp, #0x134]
	add r0, r0, #1
	lsl r1, r0, #3
	ldr r0, _0201E6F4 ; =0x00007FC0
	ldr r2, [sp, #0x138]
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	str r2, [sp, #0x12c]
	str r0, [sp, #0x128]
_0201E6E0:
	mov r0, #7
	add r1, r5, #0
	and r1, r0
	ldr r0, [sp, #0x278]
	add r1, r0, r1
	ldr r0, _0201E6F4 ; =0x00007FC0
	b _0201E6F8
	nop
_0201E6F0: .word 0x00003FE0
_0201E6F4: .word 0x00007FC0
_0201E6F8:
	and r0, r6
	add r3, r1, r0
	ldr r0, [sp, #0x134]
	add r2, r3, r0
	ldr r0, [sp, #0x308]
	ldrb r1, [r0, r4]
	cmp r1, #0
	beq _0201E71A
	ldr r0, [sp, #0x130]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x1d8]
	cmp r0, #0
	beq _0201E71A
	ldr r0, [sp, #0x12c]
	add r2, r3, r0
	ldr r0, [sp, #0x128]
	strb r1, [r0, r2]
_0201E71A:
	add r4, r4, #1
	add r6, #8
	add r5, r5, #1
	cmp r4, r7
	blt _0201E6E0
_0201E724:
	ldr r0, [sp, #0x1d8]
	cmp r0, #0
	beq _0201E732
	ldr r0, [sp, #0x48]
	add r0, r0, #2
	str r0, [sp, #0x48]
	b _0201E738
_0201E732:
	ldr r0, [sp, #0x48]
	add r0, r0, #1
	str r0, [sp, #0x48]
_0201E738:
	ldr r0, [sp, #0x308]
	add r0, #8
	str r0, [sp, #0x308]
	ldr r0, [sp, #0x1dc]
	add r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #0x1dc]
	cmp r1, r0
	blt _0201E692
_0201E74A:
	b _0201EC36
_0201E74C:
	ldr r0, [sp, #0x48]
	mov r1, #7
	str r0, [sp, #0x1d0]
	mov r0, #0
	str r0, [sp, #0x1d4]
	ldr r0, [sp, #0x330]
	ldr r7, [sp, #0x1ec]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x150]
	ldr r0, [sp, #0x58]
	and r1, r0
	add r0, r0, r1
	asr r0, r0, #3
	str r0, [sp, #0x30]
_0201E76A:
	ldr r1, [sp, #0x150]
	ldr r0, [sp, #0x1d4]
	mov r4, #0
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x304]
	ldr r0, [sp, #8]
	ldr r5, [sp, #0x5c]
	cmp r0, #0
	ble _0201E7EE
	ble _0201E7EE
	add r0, r5, #0
	lsl r6, r0, #3
	ldr r0, [sp, #0x1d0]
	ldr r2, [sp, #0x30]
	lsl r1, r0, #3
	ldr r0, _0201EA5C ; =0x00007FC0
	mov r3, #0x38
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	str r0, [sp, #0x148]
	ldr r0, [sp, #0x1d0]
	str r2, [sp, #0x14c]
	add r0, r0, #1
	lsl r1, r0, #3
	ldr r0, _0201EA5C ; =0x00007FC0
	ldr r2, [sp, #0x30]
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	str r2, [sp, #0x144]
	str r0, [sp, #0x140]
_0201E7B6:
	mov r0, #7
	add r1, r5, #0
	and r1, r0
	ldr r0, [sp, #0x278]
	add r1, r0, r1
	ldr r0, _0201EA5C ; =0x00007FC0
	and r0, r6
	add r3, r1, r0
	ldr r0, [sp, #0x14c]
	ldrb r1, [r7, r4]
	add r2, r3, r0
	cmp r1, #0
	beq _0201E7E2
	ldr r0, [sp, #0x148]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x304]
	cmp r0, #0
	beq _0201E7E2
	ldr r0, [sp, #0x144]
	add r2, r3, r0
	ldr r0, [sp, #0x140]
	strb r1, [r0, r2]
_0201E7E2:
	ldr r0, [sp, #8]
	add r4, r4, #1
	add r6, #8
	add r5, r5, #1
	cmp r4, r0
	blt _0201E7B6
_0201E7EE:
	ldr r0, [sp, #0x304]
	cmp r0, #0
	beq _0201E7FC
	ldr r0, [sp, #0x1d0]
	add r0, r0, #2
	str r0, [sp, #0x1d0]
	b _0201E802
_0201E7FC:
	ldr r0, [sp, #0x1d0]
	add r0, r0, #1
	str r0, [sp, #0x1d0]
_0201E802:
	ldr r0, [sp, #0x1d4]
	add r7, #8
	add r0, r0, #1
	str r0, [sp, #0x1d4]
	cmp r0, #8
	blt _0201E76A
	ldr r0, [sp, #0x48]
	ldr r7, [sp, #0x1ec]
	add r0, #8
	str r0, [sp, #0x48]
	add r7, #0x80
	mov r0, #0
	mov r2, #1
_0201E81C:
	ldr r1, [sp, #0x330]
	asr r1, r0
	tst r1, r2
	beq _0201E82A
	ldr r1, [sp, #0x48]
	add r1, r1, #1
	str r1, [sp, #0x48]
_0201E82A:
	add r0, r0, #1
	cmp r0, #8
	blt _0201E81C
	ldr r0, [sp, #0x330]
	asr r0, r0, #8
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x164]
	mov r0, #0
	str r0, [sp, #0x14]
	ldr r0, [sp, #4]
	sub r0, #8
	cmp r0, #0
	ble _0201E8EE
_0201E846:
	ldr r1, [sp, #0x164]
	ldr r0, [sp, #0x14]
	mov r4, #0
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x300]
	ldr r0, [sp, #8]
	ldr r5, [sp, #0x5c]
	cmp r0, #0
	ble _0201E8CA
	ble _0201E8CA
	add r0, r5, #0
	lsl r6, r0, #3
	ldr r0, [sp, #0x48]
	ldr r2, [sp, #0x30]
	lsl r1, r0, #3
	ldr r0, _0201EA5C ; =0x00007FC0
	mov r3, #0x38
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	str r0, [sp, #0x15c]
	ldr r0, [sp, #0x48]
	str r2, [sp, #0x160]
	add r0, r0, #1
	lsl r1, r0, #3
	ldr r0, _0201EA5C ; =0x00007FC0
	ldr r2, [sp, #0x30]
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	str r2, [sp, #0x158]
	str r0, [sp, #0x154]
_0201E892:
	mov r0, #7
	add r1, r5, #0
	and r1, r0
	ldr r0, [sp, #0x278]
	add r1, r0, r1
	ldr r0, _0201EA5C ; =0x00007FC0
	and r0, r6
	add r3, r1, r0
	ldr r0, [sp, #0x160]
	ldrb r1, [r7, r4]
	add r2, r3, r0
	cmp r1, #0
	beq _0201E8BE
	ldr r0, [sp, #0x15c]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x300]
	cmp r0, #0
	beq _0201E8BE
	ldr r0, [sp, #0x158]
	add r2, r3, r0
	ldr r0, [sp, #0x154]
	strb r1, [r0, r2]
_0201E8BE:
	ldr r0, [sp, #8]
	add r4, r4, #1
	add r6, #8
	add r5, r5, #1
	cmp r4, r0
	blt _0201E892
_0201E8CA:
	ldr r0, [sp, #0x300]
	cmp r0, #0
	beq _0201E8D8
	ldr r0, [sp, #0x48]
	add r0, r0, #2
	str r0, [sp, #0x48]
	b _0201E8DE
_0201E8D8:
	ldr r0, [sp, #0x48]
	add r0, r0, #1
	str r0, [sp, #0x48]
_0201E8DE:
	ldr r0, [sp, #0x14]
	ldr r1, [sp, #4]
	add r0, r0, #1
	sub r1, #8
	add r7, #8
	str r0, [sp, #0x14]
	cmp r0, r1
	blt _0201E846
_0201E8EE:
	b _0201EC36
_0201E8F0:
	ldr r0, [sp, #0x48]
	ldr r7, [sp, #0x1ec]
	str r0, [sp, #0x1c8]
	ldr r0, [sp, #0x330]
	lsl r0, r0, #0x18
	lsr r1, r0, #0x18
	mov r0, #0
	str r0, [sp, #0x1cc]
	lsl r0, r1, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x2c]
	ldr r0, [sp, #0x58]
	mov r1, #7
	and r1, r0
	add r0, r0, r1
	asr r0, r0, #3
	str r0, [sp, #0x28]
_0201E912:
	ldr r1, [sp, #0x2c]
	ldr r0, [sp, #0x1cc]
	ldr r5, [sp, #0x5c]
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x2fc]
	add r0, r5, #0
	lsl r6, r0, #3
	ldr r0, [sp, #0x1c8]
	ldr r2, [sp, #0x28]
	lsl r1, r0, #3
	ldr r0, _0201EA5C ; =0x00007FC0
	mov r3, #0x38
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	str r0, [sp, #0x170]
	ldr r0, [sp, #0x1c8]
	str r2, [sp, #0x174]
	add r0, r0, #1
	lsl r1, r0, #3
	ldr r0, _0201EA5C ; =0x00007FC0
	ldr r2, [sp, #0x28]
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	mov r4, #0
	str r6, [sp, #0x24]
	str r2, [sp, #0x16c]
	str r0, [sp, #0x168]
_0201E958:
	mov r0, #7
	add r1, r5, #0
	and r1, r0
	ldr r0, [sp, #0x278]
	add r1, r0, r1
	ldr r0, _0201EA5C ; =0x00007FC0
	and r0, r6
	add r3, r1, r0
	ldr r0, [sp, #0x174]
	ldrb r1, [r7, r4]
	add r2, r3, r0
	cmp r1, #0
	beq _0201E984
	ldr r0, [sp, #0x170]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x2fc]
	cmp r0, #0
	beq _0201E984
	ldr r0, [sp, #0x16c]
	add r2, r3, r0
	ldr r0, [sp, #0x168]
	strb r1, [r0, r2]
_0201E984:
	add r4, r4, #1
	add r6, #8
	add r5, r5, #1
	cmp r4, #8
	blt _0201E958
	ldr r0, [sp, #0x2fc]
	cmp r0, #0
	beq _0201E99C
	ldr r0, [sp, #0x1c8]
	add r0, r0, #2
	str r0, [sp, #0x1c8]
	b _0201E9A2
_0201E99C:
	ldr r0, [sp, #0x1c8]
	add r0, r0, #1
	str r0, [sp, #0x1c8]
_0201E9A2:
	ldr r0, [sp, #0x1cc]
	add r7, #8
	add r0, r0, #1
	str r0, [sp, #0x1cc]
	cmp r0, #8
	blt _0201E912
	ldr r0, [sp, #0x1ec]
	str r0, [sp, #0x2f8]
	add r0, #0x40
	str r0, [sp, #0x2f8]
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x1c0]
	mov r0, #0
	str r0, [sp, #0x1c4]
	ldr r0, [sp, #0x5c]
	str r0, [sp, #0x188]
	add r0, #8
	str r0, [sp, #0x188]
_0201E9C6:
	ldr r1, [sp, #0x2c]
	ldr r0, [sp, #0x1c4]
	ldr r7, [sp, #8]
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	sub r7, #8
	mov r4, #0
	str r0, [sp, #0x1bc]
	ldr r5, [sp, #0x188]
	cmp r7, #0
	ble _0201EA4C
	ble _0201EA4C
	add r0, r5, #0
	lsl r6, r0, #3
	ldr r0, [sp, #0x1c0]
	ldr r2, [sp, #0x28]
	lsl r1, r0, #3
	ldr r0, _0201EA5C ; =0x00007FC0
	mov r3, #0x38
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	str r0, [sp, #0x180]
	ldr r0, [sp, #0x1c0]
	str r2, [sp, #0x184]
	add r0, r0, #1
	lsl r1, r0, #3
	ldr r0, _0201EA5C ; =0x00007FC0
	ldr r2, [sp, #0x28]
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	str r2, [sp, #0x17c]
	str r0, [sp, #0x178]
_0201EA14:
	mov r0, #7
	add r1, r5, #0
	and r1, r0
	ldr r0, [sp, #0x278]
	add r1, r0, r1
	ldr r0, _0201EA5C ; =0x00007FC0
	and r0, r6
	add r3, r1, r0
	ldr r0, [sp, #0x184]
	add r2, r3, r0
	ldr r0, [sp, #0x2f8]
	ldrb r1, [r0, r4]
	cmp r1, #0
	beq _0201EA42
	ldr r0, [sp, #0x180]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x1bc]
	cmp r0, #0
	beq _0201EA42
	ldr r0, [sp, #0x17c]
	add r2, r3, r0
	ldr r0, [sp, #0x178]
	strb r1, [r0, r2]
_0201EA42:
	add r4, r4, #1
	add r6, #8
	add r5, r5, #1
	cmp r4, r7
	blt _0201EA14
_0201EA4C:
	ldr r0, [sp, #0x1bc]
	cmp r0, #0
	beq _0201EA60
	ldr r0, [sp, #0x1c0]
	add r0, r0, #2
	str r0, [sp, #0x1c0]
	b _0201EA66
	nop
_0201EA5C: .word 0x00007FC0
_0201EA60:
	ldr r0, [sp, #0x1c0]
	add r0, r0, #1
	str r0, [sp, #0x1c0]
_0201EA66:
	ldr r0, [sp, #0x2f8]
	add r0, #8
	str r0, [sp, #0x2f8]
	ldr r0, [sp, #0x1c4]
	add r0, r0, #1
	str r0, [sp, #0x1c4]
	cmp r0, #8
	blt _0201E9C6
	ldr r0, [sp, #0x48]
	ldr r7, [sp, #0x1ec]
	add r0, #8
	add r7, #0x80
	str r0, [sp, #0x48]
	str r0, [sp, #0x1b8]
	mov r0, #0
	mov r2, #1
_0201EA86:
	ldr r1, [sp, #0x330]
	asr r1, r0
	tst r1, r2
	beq _0201EA94
	ldr r1, [sp, #0x1b8]
	add r1, r1, #1
	str r1, [sp, #0x1b8]
_0201EA94:
	add r0, r0, #1
	cmp r0, #8
	blt _0201EA86
	ldr r0, [sp, #0x330]
	asr r0, r0, #8
	str r0, [sp, #0x44]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x19c]
	mov r0, #0
	str r0, [sp, #0x10]
	ldr r0, [sp, #4]
	sub r0, #8
	cmp r0, #0
	ble _0201EB4E
_0201EAB2:
	ldr r1, [sp, #0x19c]
	ldr r0, [sp, #0x10]
	ldr r2, [sp, #0x28]
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x2f4]
	ldr r0, [sp, #0x1b8]
	mov r3, #0x38
	lsl r1, r0, #3
	ldr r0, _0201EC44 ; =0x00007FC0
	ldr r5, [sp, #0x5c]
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	str r0, [sp, #0x194]
	ldr r0, [sp, #0x1b8]
	str r2, [sp, #0x198]
	add r0, r0, #1
	lsl r1, r0, #3
	ldr r0, _0201EC44 ; =0x00007FC0
	ldr r2, [sp, #0x28]
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	ldr r6, [sp, #0x24]
	mov r4, #0
	str r2, [sp, #0x190]
	str r0, [sp, #0x18c]
_0201EAF4:
	mov r0, #7
	add r1, r5, #0
	and r1, r0
	ldr r0, [sp, #0x278]
	add r1, r0, r1
	ldr r0, _0201EC44 ; =0x00007FC0
	and r0, r6
	add r3, r1, r0
	ldr r0, [sp, #0x198]
	ldrb r1, [r7, r4]
	add r2, r3, r0
	cmp r1, #0
	beq _0201EB20
	ldr r0, [sp, #0x194]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x2f4]
	cmp r0, #0
	beq _0201EB20
	ldr r0, [sp, #0x190]
	add r2, r3, r0
	ldr r0, [sp, #0x18c]
	strb r1, [r0, r2]
_0201EB20:
	add r4, r4, #1
	add r6, #8
	add r5, r5, #1
	cmp r4, #8
	blt _0201EAF4
	ldr r0, [sp, #0x2f4]
	cmp r0, #0
	beq _0201EB38
	ldr r0, [sp, #0x1b8]
	add r0, r0, #2
	str r0, [sp, #0x1b8]
	b _0201EB3E
_0201EB38:
	ldr r0, [sp, #0x1b8]
	add r0, r0, #1
	str r0, [sp, #0x1b8]
_0201EB3E:
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #4]
	add r0, r0, #1
	sub r1, #8
	add r7, #8
	str r0, [sp, #0x10]
	cmp r0, r1
	blt _0201EAB2
_0201EB4E:
	ldr r0, [sp, #0x1ec]
	mov r2, #0
	str r0, [sp, #0x2f0]
	add r0, #0xc0
	str r0, [sp, #0x2f0]
	mov r1, #1
_0201EB5A:
	ldr r0, [sp, #0x330]
	asr r0, r2
	tst r0, r1
	beq _0201EB68
	ldr r0, [sp, #0x48]
	add r0, r0, #1
	str r0, [sp, #0x48]
_0201EB68:
	add r2, r2, #1
	cmp r2, #8
	blt _0201EB5A
	ldr r0, [sp, #0x44]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x1b0]
	mov r0, #0
	str r0, [sp, #0xc]
	ldr r0, [sp, #4]
	sub r0, #8
	cmp r0, #0
	ble _0201EC36
	ldr r0, [sp, #0x5c]
	add r0, #8
	str r0, [sp, #0x5c]
_0201EB88:
	ldr r1, [sp, #0x1b0]
	ldr r0, [sp, #0xc]
	ldr r7, [sp, #8]
	asr r1, r0
	mov r0, #1
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	sub r7, #8
	mov r4, #0
	str r0, [sp, #0x1b4]
	ldr r5, [sp, #0x5c]
	cmp r7, #0
	ble _0201EC0E
	ble _0201EC0E
	add r0, r5, #0
	lsl r6, r0, #3
	ldr r0, [sp, #0x48]
	ldr r2, [sp, #0x28]
	lsl r1, r0, #3
	ldr r0, _0201EC44 ; =0x00007FC0
	mov r3, #0x38
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	str r0, [sp, #0x1a8]
	ldr r0, [sp, #0x48]
	str r2, [sp, #0x1ac]
	add r0, r0, #1
	lsl r1, r0, #3
	ldr r0, _0201EC44 ; =0x00007FC0
	ldr r2, [sp, #0x28]
	and r0, r1
	mul r2, r0
	add r0, r1, #0
	and r0, r3
	str r2, [sp, #0x1a4]
	str r0, [sp, #0x1a0]
_0201EBD6:
	mov r0, #7
	add r1, r5, #0
	and r1, r0
	ldr r0, [sp, #0x278]
	add r1, r0, r1
	ldr r0, _0201EC44 ; =0x00007FC0
	and r0, r6
	add r3, r1, r0
	ldr r0, [sp, #0x1ac]
	add r2, r3, r0
	ldr r0, [sp, #0x2f0]
	ldrb r1, [r0, r4]
	cmp r1, #0
	beq _0201EC04
	ldr r0, [sp, #0x1a8]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x1b4]
	cmp r0, #0
	beq _0201EC04
	ldr r0, [sp, #0x1a4]
	add r2, r3, r0
	ldr r0, [sp, #0x1a0]
	strb r1, [r0, r2]
_0201EC04:
	add r4, r4, #1
	add r6, #8
	add r5, r5, #1
	cmp r4, r7
	blt _0201EBD6
_0201EC0E:
	ldr r0, [sp, #0x1b4]
	cmp r0, #0
	beq _0201EC1C
	ldr r0, [sp, #0x48]
	add r0, r0, #2
	str r0, [sp, #0x48]
	b _0201EC22
_0201EC1C:
	ldr r0, [sp, #0x48]
	add r0, r0, #1
	str r0, [sp, #0x48]
_0201EC22:
	ldr r0, [sp, #0x2f0]
	ldr r1, [sp, #4]
	add r0, #8
	str r0, [sp, #0x2f0]
	ldr r0, [sp, #0xc]
	sub r1, #8
	add r0, r0, #1
	str r0, [sp, #0xc]
	cmp r0, r1
	blt _0201EB88
_0201EC36:
	ldr r0, [sp, #0x1ec]
	bl sub_0201AB0C
	thumb_func_end sub_0201E4AC

	thumb_func_start sub_0201EC3C
sub_0201EC3C: ; 0x0201EC3C
	add sp, #0x1fc
	add sp, #0x118
	pop {r4, r5, r6, r7, pc}
	nop
_0201EC44: .word 0x00007FC0
	thumb_func_end sub_0201EC3C

	thumb_func_start sub_0201EC48
sub_0201EC48: ; 0x0201EC48
	push {r4, r5, r6, lr}
	ldrb r6, [r0, #4]
	mov r5, #0x2c
	ldr r4, [r0]
	mul r5, r6
	add r4, r4, r5
	ldrb r4, [r4, #0x1e]
	cmp r4, #0
	bne _0201EC60
	bl sub_0201EC68
	pop {r4, r5, r6, pc}
_0201EC60:
	bl sub_0201ED54
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0201EC48

	thumb_func_start sub_0201EC68
sub_0201EC68: ; 0x0201EC68
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r6, r3, #0
	add r4, r0, #0
	add r0, r1, #0
	lsl r3, r6, #0x18
	lsl r1, r6, #0x10
	str r2, [sp]
	orr r1, r3
	lsl r5, r6, #8
	orr r1, r5
	orr r1, r6
	str r1, [sp, #4]
	ldrb r1, [r4, #7]
	ldrb r3, [r4, #8]
	ldr r2, [r4, #0xc]
	str r1, [sp, #8]
	mul r1, r3
	lsl r1, r1, #5
	str r1, [sp, #0xc]
	cmp r0, #3
	bhi _0201ED4E
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_0201ECA0: ; jump table
	.short _0201ECA8 - _0201ECA0 - 2 ; case 0
	.short _0201ECF6 - _0201ECA0 - 2 ; case 1
	.short _0201ED4E - _0201ECA0 - 2 ; case 2
	.short _0201ED4E - _0201ECA0 - 2 ; case 3
_0201ECA8:
	add r0, r1, #0
	mov r7, #0
	cmp r0, #0
	ble _0201ED4E
	mov r0, #7
	mov lr, r0
_0201ECB4:
	ldr r3, [sp]
	mov r4, #0
	add r5, r7, #0
_0201ECBA:
	mov r0, #7
	add r6, r3, #0
	and r6, r0
	add r1, r3, #0
	mov r0, lr
	bic r1, r0
	ldr r0, [sp, #8]
	mul r1, r0
	add r0, r6, #0
	orr r0, r1
	lsl r0, r0, #2
	add r1, r7, r0
	ldr r0, [sp, #0xc]
	cmp r1, r0
	bge _0201ECDC
	ldr r0, [r2, r1]
	b _0201ECDE
_0201ECDC:
	ldr r0, [sp, #4]
_0201ECDE:
	add r4, r4, #1
	str r0, [r2, r5]
	add r3, r3, #1
	add r5, r5, #4
	cmp r4, #8
	blt _0201ECBA
	ldr r0, [sp, #0xc]
	add r7, #0x20
	cmp r7, r0
	blt _0201ECB4
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
_0201ECF6:
	add r0, r1, #0
	sub r0, r0, #4
	add r2, r2, r0
	add r0, r1, #0
	mov r7, #0
	cmp r0, #0
	ble _0201ED4E
	mov r0, #7
	mov ip, r0
_0201ED08:
	ldr r4, [sp]
	mov r5, #0
	add r3, r7, #0
_0201ED0E:
	mov r0, #7
	add r6, r4, #0
	and r6, r0
	add r1, r4, #0
	mov r0, ip
	bic r1, r0
	ldr r0, [sp, #8]
	mul r1, r0
	add r0, r6, #0
	orr r0, r1
	lsl r0, r0, #2
	add r1, r7, r0
	ldr r0, [sp, #0xc]
	cmp r1, r0
	bge _0201ED36
	sub r0, r2, r1
	ldr r1, [r0]
	sub r0, r2, r3
	str r1, [r0]
	b _0201ED3C
_0201ED36:
	ldr r0, [sp, #4]
	sub r1, r2, r3
	str r0, [r1]
_0201ED3C:
	add r5, r5, #1
	add r4, r4, #1
	add r3, r3, #4
	cmp r5, #8
	blt _0201ED0E
	ldr r0, [sp, #0xc]
	add r7, #0x20
	cmp r7, r0
	blt _0201ED08
_0201ED4E:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0201EC68

	thumb_func_start sub_0201ED54
sub_0201ED54: ; 0x0201ED54
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	add r6, r3, #0
	add r4, r0, #0
	str r2, [sp]
	lsl r2, r6, #0x18
	lsl r0, r6, #0x10
	orr r0, r2
	ldrb r2, [r4, #7]
	ldr r3, [r4, #0xc]
	lsl r5, r6, #8
	orr r0, r5
	ldrb r4, [r4, #8]
	str r2, [sp, #0x10]
	orr r0, r6
	mul r2, r4
	lsl r2, r2, #6
	str r2, [sp, #0x1c]
	cmp r1, #3
	bls _0201ED7E
	b _0201EE84
_0201ED7E:
	add r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add pc, r1
_0201ED8A: ; jump table
	.short _0201ED92 - _0201ED8A - 2 ; case 0
	.short _0201EE00 - _0201ED8A - 2 ; case 1
	.short _0201EE84 - _0201ED8A - 2 ; case 2
	.short _0201EE84 - _0201ED8A - 2 ; case 3
_0201ED92:
	mov r1, #0
	str r1, [sp, #0xc]
	add r1, r2, #0
	cmp r1, #0
	ble _0201EE84
	add r1, r1, #4
	str r1, [sp, #0x14]
	mov r1, #7
	mov lr, r1
_0201EDA4:
	ldr r4, [sp]
	ldr r5, [sp, #0xc]
	mov r7, #0
_0201EDAA:
	mov r1, #7
	add r6, r4, #0
	and r6, r1
	add r2, r4, #0
	mov r1, lr
	bic r2, r1
	ldr r1, [sp, #0x10]
	mul r2, r1
	add r1, r6, #0
	orr r1, r2
	lsl r2, r1, #3
	ldr r1, [sp, #0xc]
	add r1, r1, r2
	ldr r2, [sp, #0x1c]
	cmp r1, r2
	bge _0201EDD0
	ldr r2, [r3, r1]
	str r2, [r3, r5]
	b _0201EDD2
_0201EDD0:
	str r0, [r3, r5]
_0201EDD2:
	add r2, r1, #4
	ldr r1, [sp, #0x14]
	cmp r2, r1
	bge _0201EDE2
	ldr r2, [r3, r2]
	add r1, r5, #4
	str r2, [r3, r1]
	b _0201EDE6
_0201EDE2:
	add r1, r5, #4
	str r0, [r3, r1]
_0201EDE6:
	add r7, r7, #1
	add r4, r4, #1
	add r5, #8
	cmp r7, #8
	blt _0201EDAA
	ldr r2, [sp, #0xc]
	ldr r1, [sp, #0x1c]
	add r2, #0x40
	str r2, [sp, #0xc]
	cmp r2, r1
	blt _0201EDA4
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
_0201EE00:
	add r1, r2, #0
	sub r1, #8
	add r3, r3, r1
	mov r1, #0
	str r1, [sp, #8]
	add r1, r2, #0
	cmp r1, #0
	ble _0201EE84
_0201EE10:
	mov r1, #0
	str r1, [sp, #4]
	ldr r1, [sp, #0x1c]
	ldr r5, [sp]
	sub r1, r1, #4
	str r1, [sp, #0x18]
	mov r1, #7
	ldr r4, [sp, #8]
	mov ip, r1
_0201EE22:
	mov r1, #7
	add r6, r5, #0
	and r6, r1
	add r2, r5, #0
	mov r1, ip
	bic r2, r1
	ldr r1, [sp, #0x10]
	mul r2, r1
	add r1, r6, #0
	orr r1, r2
	lsl r2, r1, #3
	ldr r1, [sp, #8]
	add r6, r1, r2
	ldr r1, [sp, #0x1c]
	cmp r6, r1
	bge _0201EE4C
	sub r1, r3, r6
	ldr r2, [r1]
	sub r1, r3, r4
	str r2, [r1]
	b _0201EE50
_0201EE4C:
	sub r1, r3, r4
	str r0, [r1]
_0201EE50:
	ldr r1, [sp, #0x18]
	sub r2, r6, #4
	cmp r2, r1
	bge _0201EE64
	sub r1, r3, r2
	sub r2, r4, #4
	ldr r1, [r1]
	sub r2, r3, r2
	str r1, [r2]
	b _0201EE6A
_0201EE64:
	sub r1, r4, #4
	sub r1, r3, r1
	str r0, [r1]
_0201EE6A:
	ldr r1, [sp, #4]
	add r5, r5, #1
	add r1, r1, #1
	add r4, #8
	str r1, [sp, #4]
	cmp r1, #8
	blt _0201EE22
	ldr r2, [sp, #8]
	ldr r1, [sp, #0x1c]
	add r2, #0x40
	str r2, [sp, #8]
	cmp r2, r1
	blt _0201EE10
_0201EE84:
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0201ED54

	thumb_func_start sub_0201EE88
sub_0201EE88: ; 0x0201EE88
	ldr r0, [r0]
	bx lr
	thumb_func_end sub_0201EE88

	thumb_func_start sub_0201EE8C
sub_0201EE8C: ; 0x0201EE8C
	ldrb r0, [r0, #4]
	bx lr
	thumb_func_end sub_0201EE8C

	thumb_func_start sub_0201EE90
sub_0201EE90: ; 0x0201EE90
	ldrb r0, [r0, #7]
	bx lr
	thumb_func_end sub_0201EE90

	thumb_func_start sub_0201EE94
sub_0201EE94: ; 0x0201EE94
	ldrb r0, [r0, #8]
	bx lr
	thumb_func_end sub_0201EE94

	thumb_func_start sub_0201EE98
sub_0201EE98: ; 0x0201EE98
	ldrb r0, [r0, #5]
	bx lr
	thumb_func_end sub_0201EE98

	thumb_func_start sub_0201EE9C
sub_0201EE9C: ; 0x0201EE9C
	ldrb r0, [r0, #6]
	bx lr
	thumb_func_end sub_0201EE9C

	thumb_func_start sub_0201EEA0
sub_0201EEA0: ; 0x0201EEA0
	ldrh r0, [r0, #0xa]
	lsl r0, r0, #0x11
	lsr r0, r0, #0x11
	bx lr
	thumb_func_end sub_0201EEA0

	thumb_func_start sub_0201EEA8
sub_0201EEA8: ; 0x0201EEA8
	strb r1, [r0, #5]
	bx lr
	thumb_func_end sub_0201EEA8

	thumb_func_start sub_0201EEAC
sub_0201EEAC: ; 0x0201EEAC
	strb r1, [r0, #6]
	bx lr
	thumb_func_end sub_0201EEAC

	thumb_func_start sub_0201EEB0
sub_0201EEB0: ; 0x0201EEB0
	strb r1, [r0, #9]
	bx lr
	thumb_func_end sub_0201EEB0

	thumb_func_start sub_0201EEB4
sub_0201EEB4: ; 0x0201EEB4
	push {r4, lr}
	add r4, r0, #0
	bl sub_0201EFCC
	add r0, r4, #0
	bl sub_0201EECC
	mov r0, #0
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0201EEB4

	thumb_func_start sub_0201EECC
sub_0201EECC: ; 0x0201EECC
	push {r4, lr}
	add r4, r0, #0
	ldrh r1, [r4, #6]
	mov r0, #1
	tst r0, r1
	beq _0201EEE6
	ldr r2, [r4, #0x10]
	ldr r1, [r4, #8]
	ldr r3, [r4, #0xc]
	mov r0, #0
	lsl r2, r2, #1
	bl sub_0201C014
_0201EEE6:
	ldrh r1, [r4, #6]
	mov r0, #2
	tst r0, r1
	beq _0201EEFC
	ldr r2, [r4, #0x3c]
	ldr r1, [r4, #0x34]
	ldr r3, [r4, #0x38]
	mov r0, #1
	lsl r2, r2, #1
	bl sub_0201C014
_0201EEFC:
	ldrh r1, [r4, #6]
	mov r0, #4
	tst r0, r1
	beq _0201EF12
	ldr r2, [r4, #0x68]
	ldr r1, [r4, #0x60]
	ldr r3, [r4, #0x64]
	mov r0, #2
	lsl r2, r2, #1
	bl sub_0201C014
_0201EF12:
	ldrh r1, [r4, #6]
	mov r0, #8
	tst r0, r1
	beq _0201EF34
	add r2, r4, #0
	add r1, r4, #0
	add r2, #0x94
	add r3, r4, #0
	add r1, #0x8c
	ldr r2, [r2]
	add r3, #0x90
	ldr r1, [r1]
	ldr r3, [r3]
	mov r0, #3
	lsl r2, r2, #1
	bl sub_0201C014
_0201EF34:
	ldrh r1, [r4, #6]
	mov r0, #0x10
	tst r0, r1
	beq _0201EF56
	add r2, r4, #0
	add r1, r4, #0
	add r2, #0xc0
	add r3, r4, #0
	add r1, #0xb8
	ldr r2, [r2]
	add r3, #0xbc
	ldr r1, [r1]
	ldr r3, [r3]
	mov r0, #4
	lsl r2, r2, #1
	bl sub_0201C014
_0201EF56:
	ldrh r1, [r4, #6]
	mov r0, #0x20
	tst r0, r1
	beq _0201EF78
	add r2, r4, #0
	add r1, r4, #0
	add r2, #0xec
	add r3, r4, #0
	add r1, #0xe4
	ldr r2, [r2]
	add r3, #0xe8
	ldr r1, [r1]
	ldr r3, [r3]
	mov r0, #5
	lsl r2, r2, #1
	bl sub_0201C014
_0201EF78:
	ldrh r0, [r4, #6]
	mov r3, #0x40
	tst r0, r3
	beq _0201EF98
	add r2, r3, #0
	add r1, r3, #0
	add r2, #0xd8
	add r1, #0xd0
	ldr r2, [r4, r2]
	add r3, #0xd4
	ldr r1, [r4, r1]
	ldr r3, [r4, r3]
	mov r0, #6
	lsl r2, r2, #1
	bl sub_0201C014
_0201EF98:
	ldrh r0, [r4, #6]
	mov r3, #0x80
	tst r0, r3
	beq _0201EFB8
	add r2, r3, #0
	add r1, r3, #0
	add r2, #0xc4
	add r1, #0xbc
	ldr r2, [r4, r2]
	add r3, #0xc0
	ldr r1, [r4, r1]
	ldr r3, [r4, r3]
	mov r0, #7
	lsl r2, r2, #1
	bl sub_0201C014
_0201EFB8:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0201EECC

	thumb_func_start sub_0201EFBC
sub_0201EFBC: ; 0x0201EFBC
	ldrh r3, [r0, #6]
	mov r2, #1
	lsl r2, r1
	add r1, r3, #0
	orr r1, r2
	strh r1, [r0, #6]
	bx lr
	.align 2, 0
	thumb_func_end sub_0201EFBC

	thumb_func_start sub_0201EFCC
sub_0201EFCC: ; 0x0201EFCC
	push {r4, lr}
	sub sp, #0x48
	add r4, r0, #0
	ldrh r1, [r4, #4]
	mov r0, #1
	tst r0, r1
	beq _0201EFF2
	ldr r1, [r4, #0x14]
	ldr r0, _0201F204 ; =0x000001FF
	add r2, r1, #0
	ldr r1, [r4, #0x18]
	and r2, r0
	lsl r1, r1, #0x10
	lsl r0, r0, #0x10
	and r0, r1
	add r1, r2, #0
	orr r1, r0
	ldr r0, _0201F208 ; =0x04000010
	str r1, [r0]
_0201EFF2:
	ldrh r1, [r4, #4]
	mov r0, #2
	tst r0, r1
	beq _0201F012
	ldr r1, [r4, #0x40]
	ldr r0, _0201F204 ; =0x000001FF
	add r2, r1, #0
	ldr r1, [r4, #0x44]
	and r2, r0
	lsl r1, r1, #0x10
	lsl r0, r0, #0x10
	and r0, r1
	add r1, r2, #0
	orr r1, r0
	ldr r0, _0201F20C ; =0x04000014
	str r1, [r0]
_0201F012:
	ldrh r1, [r4, #4]
	mov r0, #4
	tst r0, r1
	beq _0201F072
	add r0, r4, #0
	add r0, #0x74
	ldrb r0, [r0]
	cmp r0, #0
	bne _0201F03E
	ldr r1, [r4, #0x6c]
	ldr r0, _0201F204 ; =0x000001FF
	add r2, r1, #0
	ldr r1, [r4, #0x70]
	and r2, r0
	lsl r1, r1, #0x10
	lsl r0, r0, #0x10
	and r0, r1
	add r1, r2, #0
	orr r1, r0
	ldr r0, _0201F210 ; =0x04000018
	str r1, [r0]
	b _0201F072
_0201F03E:
	mov r0, #2
	str r0, [sp]
	add r1, r4, #0
	add r1, #0x78
	add r3, r4, #0
	add r3, #0x80
	ldrh r1, [r1]
	ldr r2, [r4, #0x7c]
	ldr r3, [r3]
	add r0, sp, #0x38
	bl sub_0201FECC
	ldr r0, [r4, #0x6c]
	add r2, r4, #0
	str r0, [sp]
	ldr r0, [r4, #0x70]
	add r3, r4, #0
	str r0, [sp, #4]
	add r2, #0x84
	add r3, #0x88
	ldr r0, _0201F214 ; =0x04000020
	ldr r2, [r2]
	ldr r3, [r3]
	add r1, sp, #0x38
	bl sub_020CF0AC
_0201F072:
	ldrh r1, [r4, #4]
	mov r0, #8
	tst r0, r1
	beq _0201F0E2
	add r0, r4, #0
	add r0, #0xa0
	ldrb r0, [r0]
	cmp r0, #0
	bne _0201F0A2
	add r0, r4, #0
	add r2, r4, #0
	add r0, #0x98
	add r2, #0x9c
	ldr r2, [r2]
	ldr r0, [r0]
	ldr r1, _0201F204 ; =0x000001FF
	lsl r2, r2, #0x10
	and r0, r1
	lsl r1, r1, #0x10
	and r1, r2
	orr r1, r0
	ldr r0, _0201F218 ; =0x0400001C
	str r1, [r0]
	b _0201F0E2
_0201F0A2:
	mov r0, #2
	add r1, r4, #0
	str r0, [sp]
	add r1, #0xa4
	add r2, r4, #0
	add r3, r4, #0
	add r2, #0xa8
	add r3, #0xac
	ldrh r1, [r1]
	ldr r2, [r2]
	ldr r3, [r3]
	add r0, sp, #0x28
	bl sub_0201FECC
	add r0, r4, #0
	add r0, #0x98
	ldr r0, [r0]
	add r2, r4, #0
	str r0, [sp]
	add r0, r4, #0
	add r0, #0x9c
	ldr r0, [r0]
	add r3, r4, #0
	str r0, [sp, #4]
	add r2, #0xb0
	add r3, #0xb4
	ldr r0, _0201F21C ; =0x04000030
	ldr r2, [r2]
	ldr r3, [r3]
	add r1, sp, #0x28
	bl sub_020CF0AC
_0201F0E2:
	ldrh r1, [r4, #4]
	mov r0, #0x10
	tst r0, r1
	beq _0201F106
	add r0, r4, #0
	add r2, r4, #0
	add r0, #0xc4
	add r2, #0xc8
	ldr r2, [r2]
	ldr r0, [r0]
	ldr r1, _0201F204 ; =0x000001FF
	lsl r2, r2, #0x10
	and r0, r1
	lsl r1, r1, #0x10
	and r1, r2
	orr r1, r0
	ldr r0, _0201F220 ; =0x04001010
	str r1, [r0]
_0201F106:
	ldrh r1, [r4, #4]
	mov r0, #0x20
	tst r0, r1
	beq _0201F12A
	add r0, r4, #0
	add r2, r4, #0
	add r0, #0xf0
	add r2, #0xf4
	ldr r2, [r2]
	ldr r0, [r0]
	ldr r1, _0201F204 ; =0x000001FF
	lsl r2, r2, #0x10
	and r0, r1
	lsl r1, r1, #0x10
	and r1, r2
	orr r1, r0
	ldr r0, _0201F224 ; =0x04001014
	str r1, [r0]
_0201F12A:
	ldrh r0, [r4, #4]
	mov r3, #0x40
	tst r0, r3
	beq _0201F192
	add r0, r3, #0
	add r0, #0xe4
	ldrb r0, [r4, r0]
	cmp r0, #0
	bne _0201F158
	ldr r1, _0201F204 ; =0x000001FF
	add r3, #0xdc
	add r2, r1, #0
	sub r2, #0xdf
	ldr r0, [r4, r3]
	ldr r2, [r4, r2]
	and r0, r1
	lsl r2, r2, #0x10
	lsl r1, r1, #0x10
	and r1, r2
	orr r1, r0
	ldr r0, _0201F228 ; =0x04001018
	str r1, [r0]
	b _0201F192
_0201F158:
	mov r0, #2
	add r1, r3, #0
	add r2, r3, #0
	str r0, [sp]
	add r1, #0xe8
	add r2, #0xec
	add r3, #0xf0
	ldrh r1, [r4, r1]
	ldr r2, [r4, r2]
	ldr r3, [r4, r3]
	add r0, sp, #0x18
	bl sub_0201FECC
	mov r3, #0x47
	lsl r3, r3, #2
	ldr r0, [r4, r3]
	add r2, r3, #0
	str r0, [sp]
	add r0, r3, #4
	ldr r0, [r4, r0]
	add r2, #0x18
	str r0, [sp, #4]
	add r3, #0x1c
	ldr r0, _0201F22C ; =0x04001020
	ldr r2, [r4, r2]
	ldr r3, [r4, r3]
	add r1, sp, #0x18
	bl sub_020CF0AC
_0201F192:
	ldrh r0, [r4, #4]
	mov r3, #0x80
	tst r0, r3
	beq _0201F200
	add r0, r3, #0
	add r0, #0xd0
	ldrb r0, [r4, r0]
	cmp r0, #0
	bne _0201F1C6
	add r3, #0xc8
	ldr r1, [r4, r3]
	ldr r0, _0201F204 ; =0x000001FF
	add r2, r1, #0
	add r1, r0, #0
	sub r1, #0xb3
	ldr r1, [r4, r1]
	and r2, r0
	lsl r1, r1, #0x10
	lsl r0, r0, #0x10
	and r0, r1
	add r1, r2, #0
	orr r1, r0
	ldr r0, _0201F230 ; =0x0400101C
	add sp, #0x48
	str r1, [r0]
	pop {r4, pc}
_0201F1C6:
	mov r0, #2
	add r1, r3, #0
	add r2, r3, #0
	str r0, [sp]
	add r1, #0xd4
	add r2, #0xd8
	add r3, #0xdc
	ldrh r1, [r4, r1]
	ldr r2, [r4, r2]
	ldr r3, [r4, r3]
	add r0, sp, #8
	bl sub_0201FECC
	mov r3, #0x52
	lsl r3, r3, #2
	ldr r0, [r4, r3]
	add r2, r3, #0
	str r0, [sp]
	add r0, r3, #4
	ldr r0, [r4, r0]
	add r2, #0x18
	str r0, [sp, #4]
	add r3, #0x1c
	ldr r0, _0201F234 ; =0x04001030
	ldr r2, [r4, r2]
	ldr r3, [r4, r3]
	add r1, sp, #8
	bl sub_020CF0AC
_0201F200:
	add sp, #0x48
	pop {r4, pc}
	.align 2, 0
_0201F204: .word 0x000001FF
_0201F208: .word 0x04000010
_0201F20C: .word 0x04000014
_0201F210: .word 0x04000018
_0201F214: .word 0x04000020
_0201F218: .word 0x0400001C
_0201F21C: .word 0x04000030
_0201F220: .word 0x04001010
_0201F224: .word 0x04001014
_0201F228: .word 0x04001018
_0201F22C: .word 0x04001020
_0201F230: .word 0x0400101C
_0201F234: .word 0x04001030
	thumb_func_end sub_0201EFCC

	thumb_func_start sub_0201F238
sub_0201F238: ; 0x0201F238
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	add r1, r5, #0
	mov r0, #0x2c
	add r1, #8
	mul r0, r4
	add r0, r1, r0
	add r1, r2, #0
	add r2, r3, #0
	bl sub_0201BE38
	mov r0, #1
	ldrh r1, [r5, #4]
	lsl r0, r4
	orr r0, r1
	strh r0, [r5, #4]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0201F238

	thumb_func_start sub_0201F25C
sub_0201F25C: ; 0x0201F25C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	add r1, r5, #0
	mov r0, #0x2c
	add r1, #8
	mul r0, r4
	add r0, r1, r0
	add r1, r2, #0
	add r2, r3, #0
	bl sub_0201F280
	mov r0, #1
	ldrh r1, [r5, #4]
	lsl r0, r4
	orr r0, r1
	strh r0, [r5, #4]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0201F25C

	thumb_func_start sub_0201F280
sub_0201F280: ; 0x0201F280
	cmp r1, #8
	bhi _0201F2C8
	add r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add pc, r1
_0201F290: ; jump table
	.short _0201F2C8 - _0201F290 - 2 ; case 0
	.short _0201F2C8 - _0201F290 - 2 ; case 1
	.short _0201F2C8 - _0201F290 - 2 ; case 2
	.short _0201F2A2 - _0201F290 - 2 ; case 3
	.short _0201F2A6 - _0201F290 - 2 ; case 4
	.short _0201F2AE - _0201F290 - 2 ; case 5
	.short _0201F2B6 - _0201F290 - 2 ; case 6
	.short _0201F2BA - _0201F290 - 2 ; case 7
	.short _0201F2C2 - _0201F290 - 2 ; case 8
_0201F2A2:
	str r2, [r0, #0x1c]
	bx lr
_0201F2A6:
	ldr r1, [r0, #0x1c]
	add r1, r1, r2
	str r1, [r0, #0x1c]
	bx lr
_0201F2AE:
	ldr r1, [r0, #0x1c]
	sub r1, r1, r2
	str r1, [r0, #0x1c]
	bx lr
_0201F2B6:
	str r2, [r0, #0x20]
	bx lr
_0201F2BA:
	ldr r1, [r0, #0x20]
	add r1, r1, r2
	str r1, [r0, #0x20]
	bx lr
_0201F2C2:
	ldr r1, [r0, #0x20]
	sub r1, r1, r2
	str r1, [r0, #0x20]
_0201F2C8:
	bx lr
	.align 2, 0
	thumb_func_end sub_0201F280

	thumb_func_start sub_0201F2CC
sub_0201F2CC: ; 0x0201F2CC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	str r1, [sp]
	add r6, r0, #0
	str r2, [sp, #4]
	ldr r0, [sp, #0x38]
	str r3, [sp, #8]
	str r0, [sp, #0x38]
	ldr r0, [sp]
	add r4, r6, #0
	mov r1, #0x2c
	add r5, r0, #0
	mul r5, r1
	add r4, #8
	ldr r0, [r4, r5]
	cmp r0, #0
	bne _0201F2F4
	add sp, #0x20
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0201F2F4:
	add r0, r6, #0
	str r0, [sp, #0x18]
	add r0, #0x1c
	str r0, [sp, #0x18]
	ldr r3, [sp, #0x18]
	ldr r0, [sp, #4]
	ldr r1, [sp, #8]
	add r2, r6, r5
	lsl r0, r0, #0x15
	lsl r1, r1, #0x15
	ldrb r2, [r2, #0x1d]
	ldrb r3, [r3, r5]
	lsr r0, r0, #0x18
	lsr r1, r1, #0x18
	bl sub_0201C2F0
	add r7, r0, #0
	ldr r0, [sp]
	bl sub_0201CB4C
	str r0, [sp, #0x1c]
	ldr r1, [sp, #4]
	mov r0, #7
	and r1, r0
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	str r1, [sp, #0x14]
	ldr r1, [sp, #8]
	and r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [sp, #0x10]
	add r0, r6, r5
	ldrb r0, [r0, #0x1e]
	cmp r0, #0
	bne _0201F3B2
	ldr r0, [r4, r5]
	mov r1, #0x40
	str r0, [sp, #0xc]
	ldr r0, [r6]
	bl sub_0201AACC
	add r4, r0, #0
	lsl r0, r7, #1
	ldr r1, [sp, #0xc]
	mov ip, r0
	ldrh r0, [r1, r0]
	mov r3, #0
	mov r7, #0xf
	lsl r0, r0, #0x16
	lsr r1, r0, #0x11
	ldr r0, [sp, #0x1c]
	add r2, r0, r1
_0201F35E:
	ldrb r5, [r2, r3]
	lsl r0, r3, #1
	add r1, r4, r0
	and r5, r7
	strb r5, [r4, r0]
	ldrb r0, [r2, r3]
	asr r0, r0, #4
	strb r0, [r1, #1]
	add r0, r3, #1
	lsl r0, r0, #0x18
	lsr r3, r0, #0x18
	cmp r3, #0x20
	blo _0201F35E
	ldr r2, [sp, #0xc]
	mov r1, ip
	ldrh r1, [r2, r1]
	add r0, r6, #0
	asr r2, r1, #0xa
	mov r1, #3
	and r1, r2
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	add r2, r4, #0
	bl sub_0201F434
	ldr r0, [sp, #0x10]
	lsl r1, r0, #3
	ldr r0, [sp, #0x14]
	add r0, r0, r1
	ldrb r5, [r4, r0]
	add r0, r4, #0
	bl sub_0201AB0C
	ldr r0, [sp, #0x38]
	ldrh r2, [r0]
	mov r0, #1
	add r1, r0, #0
	lsl r1, r5
	tst r1, r2
	beq _0201F42A
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
_0201F3B2:
	ldr r0, [sp, #0x18]
	ldrb r0, [r0, r5]
	cmp r0, #1
	beq _0201F3FE
	ldr r0, [r6]
	ldr r4, [r4, r5]
	mov r1, #0x40
	bl sub_0201AACC
	lsl r7, r7, #1
	ldrh r1, [r4, r7]
	add r5, r0, #0
	lsl r1, r1, #0x16
	lsr r2, r1, #0x10
	ldr r1, [sp, #0x1c]
	add r1, r1, r2
	mov r2, #0x40
	bl sub_020E5AD8
	ldrh r1, [r4, r7]
	add r0, r6, #0
	asr r2, r1, #0xa
	mov r1, #3
	and r1, r2
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	add r2, r5, #0
	bl sub_0201F434
	ldr r0, [sp, #0x10]
	lsl r1, r0, #3
	ldr r0, [sp, #0x14]
	add r0, r0, r1
	ldrb r4, [r5, r0]
	add r0, r5, #0
	bl sub_0201AB0C
	b _0201F412
_0201F3FE:
	ldr r1, [r4, r5]
	ldr r0, [sp, #0x10]
	ldrb r1, [r1, r7]
	lsl r0, r0, #3
	lsl r2, r1, #6
	ldr r1, [sp, #0x14]
	add r1, r1, r2
	add r1, r0, r1
	ldr r0, [sp, #0x1c]
	ldrb r4, [r0, r1]
_0201F412:
	ldr r0, [sp, #0x38]
	ldrh r2, [r0]
	lsl r0, r2, #0x18
	lsr r1, r0, #0x18
	ldr r0, _0201F430 ; =0x0000FFFF
_0201F41C:
	cmp r2, r0
	beq _0201F42A
	cmp r4, r1
	bne _0201F41C
	add sp, #0x20
	mov r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0201F42A:
	mov r0, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0201F430: .word 0x0000FFFF
	thumb_func_end sub_0201F2CC

	thumb_func_start sub_0201F434
sub_0201F434: ; 0x0201F434
	push {r3, r4, r5, r6, r7, lr}
	str r1, [sp]
	ldr r1, [sp]
	add r7, r2, #0
	cmp r1, #0
	beq _0201F4C0
	ldr r0, [r0]
	mov r1, #0x40
	bl sub_0201AACC
	add r4, r0, #0
	ldr r0, [sp]
	mov r1, #1
	tst r0, r1
	beq _0201F482
	mov r0, #0
	mov r5, #7
_0201F456:
	lsl r3, r0, #3
	add r2, r7, r3
	mov r1, #0
	add r3, r4, r3
_0201F45E:
	sub r6, r5, r1
	ldrb r6, [r2, r6]
	strb r6, [r3, r1]
	add r1, r1, #1
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	cmp r1, #8
	blo _0201F45E
	add r0, r0, #1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	cmp r0, #8
	blo _0201F456
	add r0, r7, #0
	add r1, r4, #0
	mov r2, #0x40
	bl sub_020E5AD8
_0201F482:
	ldr r0, [sp]
	mov r1, #2
	tst r0, r1
	beq _0201F4BA
	mov r5, #0
	mov r6, #7
_0201F48E:
	lsl r0, r5, #3
	add r3, r4, r0
	sub r0, r6, r5
	lsl r0, r0, #3
	add r2, r7, r0
	mov r1, #8
_0201F49A:
	ldrb r0, [r2]
	add r2, r2, #1
	strb r0, [r3]
	add r3, r3, #1
	sub r1, r1, #1
	bne _0201F49A
	add r0, r5, #1
	lsl r0, r0, #0x18
	lsr r5, r0, #0x18
	cmp r5, #8
	blo _0201F48E
	add r0, r7, #0
	add r1, r4, #0
	mov r2, #0x40
	bl sub_020E5AD8
_0201F4BA:
	add r0, r4, #0
	bl sub_0201AB0C
_0201F4C0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0201F434

	thumb_func_start sub_0201F4C4
sub_0201F4C4: ; 0x0201F4C4
	push {r3, r4, r5, lr}
	add r5, r1, #0
	add r4, r0, #0
	ldr r0, [r5]
	bl sub_020C3B50
	cmp r0, #0
	beq _0201F4EA
	bl sub_0201F53C
	cmp r0, #0
	bne _0201F4EA
	ldr r0, [r5]
	ldr r1, [r0, #8]
	bl DC_FlushRange
	ldr r0, [r5]
	bl sub_020C26C0
_0201F4EA:
	ldr r0, [r5]
	bl sub_020C3B40
	cmp r0, #0
	beq _0201F514
	add r2, r0, #0
	add r2, #8
	beq _0201F508
	ldrb r1, [r0, #9]
	cmp r1, #0
	bls _0201F508
	ldrh r1, [r0, #0xe]
	add r1, r2, r1
	add r1, r1, #4
	b _0201F50A
_0201F508:
	mov r1, #0
_0201F50A:
	cmp r1, #0
	beq _0201F514
	ldr r1, [r1]
	add r0, r0, r1
	b _0201F516
_0201F514:
	mov r0, #0
_0201F516:
	str r0, [r4]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0201F4C4

	thumb_func_start sub_0201F51C
sub_0201F51C: ; 0x0201F51C
	push {r3, r4, r5, lr}
	add r4, r1, #0
	add r5, r0, #0
	add r0, r4, #0
	add r1, r2, #0
	bl sub_0201F4C4
	cmp r4, #0
	bne _0201F532
	bl GF_AssertFail
_0201F532:
	ldr r1, [r4]
	add r0, r5, #0
	bl sub_020BE120
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0201F51C

	thumb_func_start sub_0201F53C
sub_0201F53C: ; 0x0201F53C
	ldrh r2, [r0, #0x10]
	mov r1, #1
	tst r2, r1
	bne _0201F54A
	ldrh r0, [r0, #0x20]
	tst r0, r1
	beq _0201F54E
_0201F54A:
	mov r0, #1
	bx lr
_0201F54E:
	mov r0, #0
	bx lr
	.align 2, 0
	thumb_func_end sub_0201F53C

	thumb_func_start sub_0201F554
sub_0201F554: ; 0x0201F554
	push {r4, r5, r6, lr}
	add r5, r0, #0
	add r0, r1, #0
	add r4, r2, #0
	add r6, r3, #0
	bl sub_020BEFD4
	ldr r1, _0201F588 ; =0x021DA558
	add r0, r4, #0
	bl sub_020D4928
	ldr r1, _0201F58C ; =0x021DA51C
	mov r0, #0xa4
	ldr r2, [r1, #0x7c]
	bic r2, r0
	add r0, r6, #0
	str r2, [r1, #0x7c]
	bl sub_020BF004
	bl sub_020BEF98
	add r0, r5, #0
	bl sub_020BFCC8
	pop {r4, r5, r6, pc}
	nop
_0201F588: .word 0x021DA558
_0201F58C: .word 0x021DA51C
	thumb_func_end sub_0201F554

	thumb_func_start sub_0201F590
sub_0201F590: ; 0x0201F590
	push {r3, lr}
	sub sp, #8
	mov r1, #4
	str r1, [sp]
	ldr r1, _0201F5B0 ; =sub_0201F5B8
	mov r2, #2
	str r1, [sp, #4]
	mov r1, #0
	add r3, r1, #0
	bl sub_02026EB4
	ldr r1, _0201F5B4 ; =0x021D15A0
	str r0, [r1]
	add sp, #8
	pop {r3, pc}
	nop
_0201F5B0: .word sub_0201F5B8
_0201F5B4: .word 0x021D15A0
	thumb_func_end sub_0201F590

	thumb_func_start sub_0201F5B8
sub_0201F5B8: ; 0x0201F5B8
	push {r3, lr}
	mov r0, #1
	add r1, r0, #0
	bl sub_02022C60
	ldr r0, _0201F624 ; =0x04000008
	mov r1, #3
	ldrh r2, [r0]
	bic r2, r1
	mov r1, #1
	orr r1, r2
	strh r1, [r0]
	add r0, #0x58
	ldrh r2, [r0]
	ldr r1, _0201F628 ; =0xFFFFCFFD
	and r2, r1
	strh r2, [r0]
	add r2, r1, #2
	ldrh r3, [r0]
	add r1, r1, #2
	and r3, r2
	mov r2, #0x10
	orr r2, r3
	strh r2, [r0]
	ldrh r3, [r0]
	ldr r2, _0201F62C ; =0x0000CFFB
	and r3, r2
	strh r3, [r0]
	ldrh r3, [r0]
	sub r2, #0x1c
	and r3, r1
	mov r1, #8
	orr r1, r3
	strh r1, [r0]
	ldrh r1, [r0]
	and r1, r2
	strh r1, [r0]
	mov r0, #0
	add r1, r0, #0
	add r2, r0, #0
	add r3, r0, #0
	bl sub_020CF82C
	mov r0, #0
	ldr r2, _0201F630 ; =0x00007FFF
	add r1, r0, #0
	mov r3, #0x3f
	str r0, [sp]
	bl sub_020CF910
	ldr r1, _0201F634 ; =0xBFFF0000
	ldr r0, _0201F638 ; =0x04000580
	str r1, [r0]
	pop {r3, pc}
	.align 2, 0
_0201F624: .word 0x04000008
_0201F628: .word 0xFFFFCFFD
_0201F62C: .word 0x0000CFFB
_0201F630: .word 0x00007FFF
_0201F634: .word 0xBFFF0000
_0201F638: .word 0x04000580
	thumb_func_end sub_0201F5B8

	thumb_func_start sub_0201F63C
sub_0201F63C: ; 0x0201F63C
	ldr r0, _0201F644 ; =0x021D15A0
	ldr r3, _0201F648 ; =sub_02026F54
	ldr r0, [r0]
	bx r3
	.align 2, 0
_0201F644: .word 0x021D15A0
_0201F648: .word sub_02026F54
	thumb_func_end sub_0201F63C

	thumb_func_start sub_0201F64C
sub_0201F64C: ; 0x0201F64C
	push {r4, lr}
	add r4, r1, #0
	bl sub_020C3B40
	cmp r4, #0
	beq _0201F662
	add r1, r4, #0
	bl sub_020BED00
	mov r0, #1
	pop {r4, pc}
_0201F662:
	mov r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0201F64C

	thumb_func_start sub_0201F668
sub_0201F668: ; 0x0201F668
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r5, r0, #0
	bne _0201F676
	add sp, #0x10
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0201F676:
	mov r1, #0
	str r1, [r5, #8]
	mov r1, #1
	str r1, [sp, #8]
	str r1, [sp, #4]
	str r1, [sp]
	cmp r5, #0
	beq _0201F774
	bl sub_020BE3DC
	add r6, r0, #0
	add r0, r5, #0
	bl sub_020BE3F0
	add r4, r0, #0
	add r0, r5, #0
	bl sub_020BE51C
	str r0, [sp, #0xc]
	cmp r6, #0
	beq _0201F6B6
	ldr r3, _0201F77C ; =0x02110924
	mov r1, #0
	ldr r3, [r3]
	add r0, r6, #0
	add r2, r1, #0
	blx r3
	add r7, r0, #0
	bne _0201F6B8
	mov r0, #0
	str r0, [sp, #8]
	b _0201F6B8
_0201F6B6:
	mov r7, #0
_0201F6B8:
	cmp r4, #0
	beq _0201F6D2
	ldr r3, _0201F77C ; =0x02110924
	add r0, r4, #0
	ldr r3, [r3]
	mov r1, #1
	mov r2, #0
	blx r3
	add r6, r0, #0
	bne _0201F6D4
	mov r0, #0
	str r0, [sp, #4]
	b _0201F6D4
_0201F6D2:
	mov r6, #0
_0201F6D4:
	ldr r0, [sp, #0xc]
	cmp r0, #0
	beq _0201F6F4
	ldr r3, _0201F780 ; =0x0211092C
	mov r1, #2
	ldrh r2, [r5, #0x20]
	lsl r1, r1, #0xe
	ldr r3, [r3]
	and r1, r2
	mov r2, #0
	blx r3
	add r4, r0, #0
	bne _0201F6F6
	mov r0, #0
	str r0, [sp]
	b _0201F6F6
_0201F6F4:
	mov r4, #0
_0201F6F6:
	ldr r0, [sp, #8]
	cmp r0, #0
	bne _0201F712
	ldr r1, _0201F784 ; =0x02110928
	add r0, r7, #0
	ldr r1, [r1]
	blx r1
	cmp r0, #0
	beq _0201F70C
	bl GF_AssertFail
_0201F70C:
	add sp, #0x10
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0201F712:
	ldr r0, [sp, #4]
	cmp r0, #0
	bne _0201F72E
	ldr r1, _0201F784 ; =0x02110928
	add r0, r6, #0
	ldr r1, [r1]
	blx r1
	cmp r0, #0
	beq _0201F728
	bl GF_AssertFail
_0201F728:
	add sp, #0x10
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0201F72E:
	ldr r0, [sp]
	cmp r0, #0
	bne _0201F74A
	ldr r1, _0201F788 ; =0x02110930
	add r0, r4, #0
	ldr r1, [r1]
	blx r1
	cmp r0, #0
	beq _0201F744
	bl GF_AssertFail
_0201F744:
	add sp, #0x10
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0201F74A:
	add r0, r5, #0
	add r1, r7, #0
	add r2, r6, #0
	bl sub_020BE404
	add r0, r5, #0
	add r1, r4, #0
	bl sub_020BE530
	ldr r1, [r5, #4]
	add r0, r5, #0
	bl DC_FlushRange
	add r0, r5, #0
	mov r1, #1
	bl sub_0201F78C
	add r0, r5, #0
	mov r1, #1
	bl sub_0201F794
_0201F774:
	mov r0, #1
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0201F77C: .word 0x02110924
_0201F780: .word 0x0211092C
_0201F784: .word 0x02110928
_0201F788: .word 0x02110930
	thumb_func_end sub_0201F668

	thumb_func_start sub_0201F78C
sub_0201F78C: ; 0x0201F78C
	ldr r3, _0201F790 ; =sub_020BE418
	bx r3
	.align 2, 0
_0201F790: .word sub_020BE418
	thumb_func_end sub_0201F78C

	thumb_func_start sub_0201F794
sub_0201F794: ; 0x0201F794
	ldr r3, _0201F798 ; =sub_020BE538
	bx r3
	.align 2, 0
_0201F798: .word sub_020BE538
	thumb_func_end sub_0201F794

	thumb_func_start sub_0201F79C
sub_0201F79C: ; 0x0201F79C
	str r0, [r1]
	add r0, r0, #4
	str r0, [r1, #8]
	str r0, [r1, #4]
	mov r0, #0
	str r0, [r1, #0xc]
	str r0, [r1, #0x10]
	str r0, [r1, #0x14]
	bx lr
	.align 2, 0
	thumb_func_end sub_0201F79C

	thumb_func_start sub_0201F7B0
sub_0201F7B0: ; 0x0201F7B0
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldrh r0, [r5]
	mov r7, #0
	cmp r0, #0
	ble _0201F7DE
	add r4, r7, #0
	add r6, r7, #0
_0201F7C0:
	ldr r1, [r5, #0x24]
	add r0, r5, #0
	add r1, r1, r4
	bl sub_0201F79C
	ldr r0, [r5, #0x24]
	add r7, r7, #1
	add r1, r0, r4
	ldr r0, [r5, #0x20]
	add r4, #0x1c
	str r1, [r0, r6]
	ldrh r0, [r5]
	add r6, r6, #4
	cmp r7, r0
	blt _0201F7C0
_0201F7DE:
	mov r0, #0
	strh r0, [r5, #2]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0201F7B0

	thumb_func_start sub_0201F7E4
sub_0201F7E4: ; 0x0201F7E4
	ldrh r3, [r0, #2]
	ldrh r1, [r0]
	cmp r3, r1
	bne _0201F7F0
	mov r0, #0
	bx lr
_0201F7F0:
	ldr r2, [r0, #0x20]
	lsl r1, r3, #2
	ldr r2, [r2, r1]
	add r1, r3, #1
	strh r1, [r0, #2]
	add r0, r2, #0
	bx lr
	.align 2, 0
	thumb_func_end sub_0201F7E4

	thumb_func_start sub_0201F800
sub_0201F800: ; 0x0201F800
	ldrh r2, [r0, #2]
	cmp r2, #0
	bne _0201F80A
	mov r0, #0
	bx lr
_0201F80A:
	str r0, [r1]
	add r2, r0, #4
	str r2, [r1, #8]
	str r2, [r1, #4]
	mov r2, #0
	str r2, [r1, #0xc]
	str r2, [r1, #0x10]
	str r2, [r1, #0x14]
	ldrh r2, [r0, #2]
	sub r2, r2, #1
	strh r2, [r0, #2]
	ldr r2, [r0, #0x20]
	ldrh r0, [r0, #2]
	lsl r0, r0, #2
	str r1, [r2, r0]
	mov r0, #1
	bx lr
	thumb_func_end sub_0201F800

	thumb_func_start sub_0201F82C
sub_0201F82C: ; 0x0201F82C
	lsl r0, r0, #5
	add r0, #0x34
	bx lr
	.align 2, 0
	thumb_func_end sub_0201F82C

	thumb_func_start sub_0201F834
sub_0201F834: ; 0x0201F834
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	bne _0201F840
	bl GF_AssertFail
_0201F840:
	add r1, r4, #0
	add r1, #0x34
	lsl r0, r5, #2
	str r1, [r4, #0x20]
	add r0, r1, r0
	str r0, [r4, #0x24]
	strh r5, [r4]
	mov r0, #0
	strh r0, [r4, #2]
	str r0, [r4, #0x28]
	add r0, r4, #0
	bl sub_0201F860
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0201F834

	thumb_func_start sub_0201F860
sub_0201F860: ; 0x0201F860
	push {r4, lr}
	add r4, r0, #0
	bl sub_0201F7B0
	str r4, [r4, #4]
	add r0, r4, #4
	str r0, [r4, #0xc]
	str r0, [r4, #8]
	mov r0, #0
	str r0, [r4, #0x10]
	str r0, [r4, #0x14]
	str r0, [r4, #0x18]
	ldr r0, [r4, #0xc]
	str r0, [r4, #0x2c]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_0201F860

	thumb_func_start sub_0201F880
sub_0201F880: ; 0x0201F880
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #0x28]
	cmp r0, #0
	bne _0201F8BC
	ldr r1, [r5, #0xc]
	add r4, r5, #4
	str r1, [r5, #0x2c]
	cmp r1, r4
	beq _0201F8B8
	mov r6, #0
_0201F896:
	ldr r0, [r1, #8]
	str r0, [r5, #0x30]
	ldr r0, [r5, #0x2c]
	ldr r1, [r0, #0x18]
	cmp r1, #0
	bne _0201F8AE
	ldr r2, [r0, #0x14]
	cmp r2, #0
	beq _0201F8B0
	ldr r1, [r0, #0x10]
	blx r2
	b _0201F8B0
_0201F8AE:
	str r6, [r0, #0x18]
_0201F8B0:
	ldr r1, [r5, #0x30]
	str r1, [r5, #0x2c]
	cmp r1, r4
	bne _0201F896
_0201F8B8:
	mov r0, #0
	str r0, [r1, #0x14]
_0201F8BC:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_0201F880

	thumb_func_start sub_0201F8C0
sub_0201F8C0: ; 0x0201F8C0
	push {r3, r4, r5, lr}
	add r4, r0, #0
	mov r5, #1
	str r5, [r4, #0x28]
	bl sub_0201F8D4
	mov r1, #0
	str r1, [r4, #0x28]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0201F8C0

	thumb_func_start sub_0201F8D4
sub_0201F8D4: ; 0x0201F8D4
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r1, #0
	add r7, r2, #0
	add r4, r3, #0
	bl sub_0201F7E4
	cmp r0, #0
	bne _0201F8EA
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0201F8EA:
	str r4, [r0, #0xc]
	str r7, [r0, #0x10]
	str r6, [r0, #0x14]
	ldr r2, [r5, #0x2c]
	ldr r1, [r2, #0x14]
	cmp r1, #0
	beq _0201F90A
	ldr r1, [r2, #0xc]
	cmp r1, r4
	bhi _0201F904
	mov r1, #1
	str r1, [r0, #0x18]
	b _0201F90E
_0201F904:
	mov r1, #0
	str r1, [r0, #0x18]
	b _0201F90E
_0201F90A:
	mov r1, #0
	str r1, [r0, #0x18]
_0201F90E:
	ldr r3, [r5, #0xc]
	add r2, r5, #4
	cmp r3, r2
	beq _0201F93A
	ldr r4, [r0, #0xc]
_0201F918:
	ldr r1, [r3, #0xc]
	cmp r1, r4
	bls _0201F934
	ldr r1, [r3, #4]
	str r1, [r0, #4]
	str r3, [r0, #8]
	ldr r1, [r3, #4]
	str r0, [r1, #8]
	str r0, [r3, #4]
	ldr r1, [r5, #0x30]
	cmp r3, r1
	bne _0201F952
	str r0, [r5, #0x30]
	pop {r3, r4, r5, r6, r7, pc}
_0201F934:
	ldr r3, [r3, #8]
	cmp r3, r2
	bne _0201F918
_0201F93A:
	ldr r2, [r5, #0x30]
	add r1, r5, #4
	cmp r2, r1
	bne _0201F944
	str r0, [r5, #0x30]
_0201F944:
	ldr r1, [r5, #8]
	str r1, [r0, #4]
	add r1, r5, #4
	str r1, [r0, #8]
	ldr r1, [r5, #8]
	str r0, [r1, #8]
	str r0, [r5, #8]
_0201F952:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0201F8D4

	thumb_func_start sub_0201F954
sub_0201F954: ; 0x0201F954
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x14]
	cmp r0, #0
	bne _0201F962
	bl GF_AssertFail
_0201F962:
	ldr r1, [r4]
	ldr r0, [r1, #0x30]
	cmp r0, r4
	bne _0201F96E
	ldr r0, [r4, #8]
	str r0, [r1, #0x30]
_0201F96E:
	ldr r1, [r4, #8]
	ldr r0, [r4, #4]
	str r1, [r0, #8]
	ldr r1, [r4, #4]
	ldr r0, [r4, #8]
	str r1, [r0, #4]
	ldr r0, [r4]
	add r1, r4, #0
	bl sub_0201F800
	pop {r4, pc}
	thumb_func_end sub_0201F954

	thumb_func_start sub_0201F984
sub_0201F984: ; 0x0201F984
	str r1, [r0, #0x14]
	bx lr
	thumb_func_end sub_0201F984

	thumb_func_start sub_0201F988
sub_0201F988: ; 0x0201F988
	ldr r0, [r0, #0x10]
	bx lr
	thumb_func_end sub_0201F988

	thumb_func_start sub_0201F98C
sub_0201F98C: ; 0x0201F98C
	ldr r0, [r0, #0xc]
	bx lr
	thumb_func_end sub_0201F98C

	thumb_func_start sub_0201F990
sub_0201F990: ; 0x0201F990
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	add r6, r1, #0
	add r4, r0, #0
	add r5, r2, #0
	ldmia r6!, {r0, r1}
	add r2, sp, #0x1c
	stmia r2!, {r0, r1}
	ldr r0, [r6]
	add r7, r3, #0
	str r0, [r2]
	cmp r4, #0
	beq _0201F9AE
	add r4, #0x14
	b _0201F9B0
_0201F9AE:
	mov r4, #0
_0201F9B0:
	mov r0, #0x20
	ldrsh r0, [r4, r0]
	mov r1, #0x1a
	mov r2, #0x1c
	str r0, [sp]
	mov r0, #0x22
	ldrsh r0, [r4, r0]
	mov r3, #0x1e
	str r0, [sp, #4]
	add r0, sp, #0x28
	str r0, [sp, #8]
	mov r0, #0x18
	ldrsh r0, [r4, r0]
	ldrsh r1, [r4, r1]
	ldrsh r2, [r4, r2]
	ldrsh r3, [r4, r3]
	bl sub_0201FAA4
	add r0, sp, #0x1c
	bl sub_020BEFD4
	ldr r1, _0201FA2C ; =0x021DA558
	add r0, r5, #0
	bl sub_020D4928
	ldr r1, _0201FA30 ; =0x021DA51C
	mov r0, #0xa4
	ldr r2, [r1, #0x7c]
	bic r2, r0
	add r0, r7, #0
	str r2, [r1, #0x7c]
	bl sub_020BF004
	bl sub_020BEF98
	mov r1, #0
	mov r0, #0x11
	add r2, r1, #0
	bl sub_020C2528
	ldr r0, [r4, #0x24]
	add r1, sp, #0x10
	str r0, [sp, #0x10]
	str r0, [sp, #0x14]
	str r0, [sp, #0x18]
	mov r0, #0x1b
	mov r2, #3
	bl sub_020C2528
	add r0, sp, #0x28
	bl sub_0201FAC8
	add r4, r0, #0
	mov r2, #1
	mov r0, #0x12
	add r1, sp, #0xc
	str r2, [sp, #0xc]
	bl sub_020C2528
	add r0, r4, #0
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0201FA2C: .word 0x021DA558
_0201FA30: .word 0x021DA51C
	thumb_func_end sub_0201F990

	thumb_func_start sub_0201FA34
sub_0201FA34: ; 0x0201FA34
	push {r3, r4, r5, lr}
	sub sp, #0x28
	add r5, r0, #0
	add r4, r1, #0
	mov r0, #2
	ldrsh r0, [r4, r0]
	str r0, [sp]
	mov r0, #4
	ldrsh r0, [r4, r0]
	str r0, [sp, #4]
	add r0, sp, #0x1c
	str r0, [sp, #8]
	mov r0, #0
	ldrsh r3, [r4, r0]
	add r1, r0, #0
	add r2, r0, #0
	bl sub_0201FAA4
	add r0, r5, #0
	bl sub_020BEFD4
	bl sub_020BEF98
	mov r1, #0
	mov r0, #0x11
	add r2, r1, #0
	bl sub_020C2528
	ldr r0, [r4, #0x10]
	lsl r2, r0, #0xc
	ldr r0, [r4, #0xc]
	lsl r1, r0, #0xc
	ldr r0, [r4, #8]
	lsl r0, r0, #0xc
	str r0, [sp, #0x10]
	str r1, [sp, #0x14]
	str r2, [sp, #0x18]
	mov r0, #0x1b
	add r1, sp, #0x10
	mov r2, #3
	bl sub_020C2528
	add r0, sp, #0x1c
	bl sub_0201FAC8
	add r4, r0, #0
	mov r2, #1
	mov r0, #0x12
	add r1, sp, #0xc
	str r2, [sp, #0xc]
	bl sub_020C2528
	add r0, r4, #0
	add sp, #0x28
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0201FA34

	thumb_func_start sub_0201FAA4
sub_0201FAA4: ; 0x0201FAA4
	push {r3, r4}
	ldr r4, [sp, #0x10]
	strh r0, [r4]
	strh r1, [r4, #2]
	ldr r1, _0201FAC4 ; =0xFFFFFFF8
	strh r2, [r4, #4]
	strh r3, [r4, #6]
	add r1, sp
	mov r0, #0x10
	ldrsh r0, [r1, r0]
	strh r0, [r4, #8]
	mov r0, #0x14
	ldrsh r0, [r1, r0]
	strh r0, [r4, #0xa]
	pop {r3, r4}
	bx lr
	.align 2, 0
_0201FAC4: .word 0xFFFFFFF8
	thumb_func_end sub_0201FAA4

	thumb_func_start sub_0201FAC8
sub_0201FAC8: ; 0x0201FAC8
	push {r3, r4, lr}
	sub sp, #0xc
	add r4, r0, #0
	ldr r0, _0201FB18 ; =0x000030C1
	mov r2, #1
	str r0, [sp, #4]
	mov r0, #0x29
	add r1, sp, #4
	str r2, [sp, #8]
	bl sub_020C2528
	mov r0, #0
	str r0, [sp]
	mov r0, #0x40
	add r1, sp, #0
	mov r2, #1
	bl sub_020C2528
	mov r1, #0
	mov r0, #0x41
	add r2, r1, #0
	bl sub_020C2528
	mov r0, #0x70
	add r1, r4, #0
	mov r2, #3
	bl sub_020C2528
	bl sub_020C23F4
	add r4, sp, #8
_0201FB06:
	add r0, r4, #0
	bl sub_020CFA38
	cmp r0, #0
	bne _0201FB06
	ldr r0, [sp, #8]
	add sp, #0xc
	pop {r3, r4, pc}
	nop
_0201FB18: .word 0x000030C1
	thumb_func_end sub_0201FAC8

	thumb_func_start sub_0201FB1C
sub_0201FB1C: ; 0x0201FB1C
	push {r4, lr}
	add r4, r0, #0
	ldrh r1, [r4]
	ldr r0, _0201FB40 ; =0x0000FFFE
	cmp r1, r0
	beq _0201FB2C
	bl GF_AssertFail
_0201FB2C:
	ldrh r1, [r4]
	ldr r0, _0201FB40 ; =0x0000FFFE
	cmp r1, r0
	bne _0201FB3C
	ldrh r0, [r4, #4]
	add r1, r4, #6
	lsl r0, r0, #1
	add r4, r1, r0
_0201FB3C:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_0201FB40: .word 0x0000FFFE
	thumb_func_end sub_0201FB1C

	thumb_func_start sub_0201FB44
sub_0201FB44: ; 0x0201FB44
	push {r4, lr}
	add r4, r0, #0
	ldrh r1, [r4]
	ldr r0, _0201FB58 ; =0x0000FFFE
	cmp r1, r0
	beq _0201FB54
	bl GF_AssertFail
_0201FB54:
	ldrh r0, [r4, #2]
	pop {r4, pc}
	.align 2, 0
_0201FB58: .word 0x0000FFFE
	thumb_func_end sub_0201FB44

	thumb_func_start sub_0201FB5C
sub_0201FB5C: ; 0x0201FB5C
	push {r3, lr}
	bl sub_0201FB44
	mov r1, #0xff
	lsl r1, r1, #8
	add r2, r0, #0
	and r2, r1
	mov r1, #1
	lsl r1, r1, #8
	cmp r2, r1
	beq _0201FB88
	mov r0, #3
	lsl r0, r0, #8
	cmp r2, r0
	beq _0201FB88
	lsl r0, r1, #2
	cmp r2, r0
	beq _0201FB88
	mov r0, #0xd
	lsl r0, r0, #0xa
	cmp r2, r0
	bne _0201FB8C
_0201FB88:
	mov r0, #1
	pop {r3, pc}
_0201FB8C:
	mov r0, #0
	pop {r3, pc}
	thumb_func_end sub_0201FB5C

	thumb_func_start sub_0201FB90
sub_0201FB90: ; 0x0201FB90
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	ldrh r1, [r5]
	ldr r0, _0201FBB4 ; =0x0000FFFE
	cmp r1, r0
	beq _0201FBA2
	bl GF_AssertFail
_0201FBA2:
	ldrh r0, [r5, #4]
	cmp r4, r0
	blo _0201FBAC
	bl GF_AssertFail
_0201FBAC:
	lsl r0, r4, #1
	add r0, r5, r0
	ldrh r0, [r0, #6]
	pop {r3, r4, r5, pc}
	.align 2, 0
_0201FBB4: .word 0x0000FFFE
	thumb_func_end sub_0201FB90

	thumb_func_start sub_0201FBB8
sub_0201FBB8: ; 0x0201FBB8
	push {r4, lr}
	mov r1, #0x5a
	lsl r1, r1, #2
	cmp r0, r1
	blo _0201FBC6
	mov r0, #0
	pop {r4, pc}
_0201FBC6:
	bl sub_0201FCD4
	asr r0, r0, #4
	lsl r1, r0, #2
	ldr r0, _0201FC28 ; =0x021094DC
	ldrsh r4, [r0, r1]
	add r0, r4, #0
	bl sub_020F2178
	ldr r1, _0201FC2C ; =0x45800000
	bl sub_020F1CC8
	mov r1, #0
	bl sub_020F1ACC
	bls _0201FC06
	add r0, r4, #0
	bl sub_020F2178
	ldr r1, _0201FC2C ; =0x45800000
	bl sub_020F1CC8
	add r1, r0, #0
	ldr r0, _0201FC2C ; =0x45800000
	bl sub_020F22DC
	add r1, r0, #0
	mov r0, #0x3f
	lsl r0, r0, #0x18
	bl sub_020F1520
	b _0201FC22
_0201FC06:
	add r0, r4, #0
	bl sub_020F2178
	ldr r1, _0201FC2C ; =0x45800000
	bl sub_020F1CC8
	add r1, r0, #0
	ldr r0, _0201FC2C ; =0x45800000
	bl sub_020F22DC
	mov r1, #0x3f
	lsl r1, r1, #0x18
	bl sub_020F24C8
_0201FC22:
	bl sub_020F2104
	pop {r4, pc}
	.align 2, 0
_0201FC28: .word 0x021094DC
_0201FC2C: .word 0x45800000
	thumb_func_end sub_0201FBB8

	thumb_func_start sub_0201FC30
sub_0201FC30: ; 0x0201FC30
	push {r4, lr}
	mov r1, #0x5a
	lsl r1, r1, #2
	cmp r0, r1
	blo _0201FC3E
	mov r0, #0
	pop {r4, pc}
_0201FC3E:
	bl sub_0201FCD4
	asr r0, r0, #4
	lsl r0, r0, #1
	add r0, r0, #1
	lsl r1, r0, #1
	ldr r0, _0201FCA4 ; =0x021094DC
	ldrsh r4, [r0, r1]
	add r0, r4, #0
	bl sub_020F2178
	ldr r1, _0201FCA8 ; =0x45800000
	bl sub_020F1CC8
	mov r1, #0
	bl sub_020F1ACC
	bls _0201FC82
	add r0, r4, #0
	bl sub_020F2178
	ldr r1, _0201FCA8 ; =0x45800000
	bl sub_020F1CC8
	add r1, r0, #0
	ldr r0, _0201FCA8 ; =0x45800000
	bl sub_020F22DC
	add r1, r0, #0
	mov r0, #0x3f
	lsl r0, r0, #0x18
	bl sub_020F1520
	b _0201FC9E
_0201FC82:
	add r0, r4, #0
	bl sub_020F2178
	ldr r1, _0201FCA8 ; =0x45800000
	bl sub_020F1CC8
	add r1, r0, #0
	ldr r0, _0201FCA8 ; =0x45800000
	bl sub_020F22DC
	mov r1, #0x3f
	lsl r1, r1, #0x18
	bl sub_020F24C8
_0201FC9E:
	bl sub_020F2104
	pop {r4, pc}
	.align 2, 0
_0201FCA4: .word 0x021094DC
_0201FCA8: .word 0x45800000
	thumb_func_end sub_0201FC30

	thumb_func_start sub_0201FCAC
sub_0201FCAC: ; 0x0201FCAC
	push {r3, lr}
	mov r1, #0x5a
	lsl r1, r1, #2
	bl sub_020F2998
	lsl r0, r1, #0x10
	lsr r0, r0, #0x10
	bl sub_0201FBB8
	pop {r3, pc}
	thumb_func_end sub_0201FCAC

	thumb_func_start sub_0201FCC0
sub_0201FCC0: ; 0x0201FCC0
	push {r3, lr}
	mov r1, #0x5a
	lsl r1, r1, #2
	bl sub_020F2998
	lsl r0, r1, #0x10
	lsr r0, r0, #0x10
	bl sub_0201FC30
	pop {r3, pc}
	thumb_func_end sub_0201FCC0

	thumb_func_start sub_0201FCD4
sub_0201FCD4: ; 0x0201FCD4
	push {r3, lr}
	mov r1, #0x5a
	lsl r1, r1, #2
	cmp r0, r1
	blo _0201FCE2
	mov r0, #0
	pop {r3, pc}
_0201FCE2:
	lsl r0, r0, #0xc
	ldr r2, _0201FCF8 ; =0x0B60B60B
	asr r1, r0, #0x1f
	mov r3, #0xb6
	bl sub_020F2948
	ldr r0, _0201FCFC ; =0x00000800
	adc r1, r0
	lsl r0, r1, #4
	lsr r0, r0, #0x10
	pop {r3, pc}
	.align 2, 0
_0201FCF8: .word 0x0B60B60B
_0201FCFC: .word 0x00000800
	thumb_func_end sub_0201FCD4

	thumb_func_start sub_0201FD00
sub_0201FD00: ; 0x0201FD00
	push {r3, lr}
	mov r1, #0x5a
	lsl r1, r1, #2
	bl sub_020F2998
	lsl r0, r1, #0x10
	lsr r0, r0, #0x10
	bl sub_0201FCD4
	pop {r3, pc}
	thumb_func_end sub_0201FD00

	thumb_func_start sub_0201FD14
sub_0201FD14: ; 0x0201FD14
	ldr r3, _0201FD1C ; =sub_0201FCAC
	lsl r0, r0, #4
	lsr r0, r0, #0x10
	bx r3
	.align 2, 0
_0201FD1C: .word sub_0201FCAC
	thumb_func_end sub_0201FD14

	thumb_func_start sub_0201FD20
sub_0201FD20: ; 0x0201FD20
	ldr r3, _0201FD28 ; =sub_0201FCC0
	lsl r0, r0, #4
	lsr r0, r0, #0x10
	bx r3
	.align 2, 0
_0201FD28: .word sub_0201FCC0
	thumb_func_end sub_0201FD20

	thumb_func_start sub_0201FD2C
sub_0201FD2C: ; 0x0201FD2C
	ldr r0, _0201FD34 ; =0x021D15A4
	ldr r0, [r0, #4]
	bx lr
	nop
_0201FD34: .word 0x021D15A4
	thumb_func_end sub_0201FD2C

	thumb_func_start SetLCRNGSeed
SetLCRNGSeed: ; 0x0201FD38
	ldr r1, _0201FD40 ; =0x021D15A4
	str r0, [r1, #4]
	bx lr
	nop
_0201FD40: .word 0x021D15A4
	thumb_func_end SetLCRNGSeed

	thumb_func_start sub_0201FD44
sub_0201FD44: ; 0x0201FD44
	ldr r1, _0201FD5C ; =0x021D15A4
	ldr r0, _0201FD60 ; =0x41C64E6D
	ldr r2, [r1, #4]
	add r3, r2, #0
	mul r3, r0
	ldr r0, _0201FD64 ; =0x00006073
	add r0, r3, r0
	str r0, [r1, #4]
	lsr r0, r0, #0x10
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	bx lr
	.align 2, 0
_0201FD5C: .word 0x021D15A4
_0201FD60: .word 0x41C64E6D
_0201FD64: .word 0x00006073
	thumb_func_end sub_0201FD44

	thumb_func_start sub_0201FD68
sub_0201FD68: ; 0x0201FD68
	ldr r1, _0201FD70 ; =0x6C078965
	mul r1, r0
	add r0, r1, #1
	bx lr
	.align 2, 0
_0201FD70: .word 0x6C078965
	thumb_func_end sub_0201FD68

	thumb_func_start SetMTRNGSeed
SetMTRNGSeed: ; 0x0201FD74
	push {r4, r5}
	ldr r1, _0201FDA8 ; =0x021D15A4
	mov r4, #0x27
	str r0, [r1, #8]
	ldr r1, _0201FDAC ; =0x0210F6CC
	mov r0, #1
	str r0, [r1]
	ldr r1, _0201FDB0 ; =0x021D15B0
	ldr r3, _0201FDB4 ; =0x6C078965
	lsl r4, r4, #4
_0201FD88:
	sub r2, r1, #4
	ldr r5, [r2]
	lsr r2, r5, #0x1e
	eor r2, r5
	add r5, r2, #0
	mul r5, r3
	add r2, r0, r5
	add r0, r0, #1
	stmia r1!, {r2}
	cmp r0, r4
	blt _0201FD88
	ldr r1, _0201FDAC ; =0x0210F6CC
	str r0, [r1]
	pop {r4, r5}
	bx lr
	nop
_0201FDA8: .word 0x021D15A4
_0201FDAC: .word 0x0210F6CC
_0201FDB0: .word 0x021D15B0
_0201FDB4: .word 0x6C078965
	thumb_func_end SetMTRNGSeed

	thumb_func_start sub_0201FDB8
sub_0201FDB8: ; 0x0201FDB8
	push {r3, r4, r5, r6, r7, lr}
	ldr r0, _0201FE9C ; =0x0210F6CC
	ldr r1, [r0]
	mov r0, #0x27
	lsl r0, r0, #4
	cmp r1, r0
	blt _0201FE70
	add r0, r0, #1
	cmp r1, r0
	bne _0201FDD2
	ldr r0, _0201FEA0 ; =0x00001571
	bl SetMTRNGSeed
_0201FDD2:
	ldr r4, _0201FEA4 ; =0x021D15AC
	ldr r1, _0201FEA8 ; =0x0210F6D0
	ldr r5, _0201FEAC ; =0x7FFFFFFF
	ldr r6, _0201FEB0 ; =0x00000634
	mov r0, #0
_0201FDDC:
	mov r2, #2
	ldr r3, [r4]
	lsl r2, r2, #0x1e
	and r3, r2
	ldr r2, [r4, #4]
	add r0, r0, #1
	and r2, r5
	orr r3, r2
	lsr r7, r3, #1
	lsl r3, r3, #0x1f
	ldr r2, [r4, r6]
	lsr r3, r3, #0x1d
	ldr r3, [r1, r3]
	eor r2, r7
	eor r2, r3
	stmia r4!, {r2}
	cmp r0, #0xe3
	blt _0201FDDC
	ldr r1, _0201FEB4 ; =0x0000026F
	cmp r0, r1
	bge _0201FE3C
	ldr r2, _0201FEA4 ; =0x021D15AC
	lsl r1, r0, #2
	add r1, r2, r1
	mov r2, #0xe3
	ldr r4, _0201FEA8 ; =0x0210F6D0
	ldr r3, _0201FEB4 ; =0x0000026F
	lsl r2, r2, #2
_0201FE14:
	mov r5, #2
	ldr r6, [r1]
	lsl r5, r5, #0x1e
	and r5, r6
	ldr r7, [r1, #4]
	ldr r6, _0201FEAC ; =0x7FFFFFFF
	add r0, r0, #1
	and r6, r7
	orr r6, r5
	lsr r5, r6, #1
	sub r7, r1, r2
	lsl r6, r6, #0x1f
	ldr r7, [r7]
	lsr r6, r6, #0x1d
	ldr r6, [r4, r6]
	eor r5, r7
	eor r5, r6
	stmia r1!, {r5}
	cmp r0, r3
	blt _0201FE14
_0201FE3C:
	ldr r2, _0201FEB8 ; =0x021D1F24
	mov r0, #2
	ldr r1, [r2, #0x44]
	lsl r0, r0, #0x1e
	add r3, r1, #0
	ldr r1, _0201FEBC ; =0x021D15A4
	and r3, r0
	ldr r1, [r1, #8]
	sub r0, r0, #1
	and r0, r1
	add r4, r3, #0
	orr r4, r0
	ldr r0, _0201FEC0 ; =0x021D1BA4
	ldr r1, [r0, #0x38]
	lsr r0, r4, #1
	add r3, r1, #0
	eor r3, r0
	lsl r0, r4, #0x1f
	lsr r1, r0, #0x1d
	ldr r0, _0201FEA8 ; =0x0210F6D0
	ldr r0, [r0, r1]
	mov r1, #0
	eor r0, r3
	str r0, [r2, #0x44]
	ldr r0, _0201FE9C ; =0x0210F6CC
	str r1, [r0]
_0201FE70:
	ldr r0, _0201FE9C ; =0x0210F6CC
	ldr r2, [r0]
	add r1, r2, #1
	str r1, [r0]
	ldr r0, _0201FEA4 ; =0x021D15AC
	lsl r1, r2, #2
	ldr r1, [r0, r1]
	lsr r0, r1, #0xb
	add r2, r1, #0
	eor r2, r0
	ldr r0, _0201FEC4 ; =0x9D2C5680
	lsl r1, r2, #7
	and r0, r1
	eor r2, r0
	ldr r0, _0201FEC8 ; =0xEFC60000
	lsl r1, r2, #0xf
	and r0, r1
	add r1, r2, #0
	eor r1, r0
	lsr r0, r1, #0x12
	eor r0, r1
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0201FE9C: .word 0x0210F6CC
_0201FEA0: .word 0x00001571
_0201FEA4: .word 0x021D15AC
_0201FEA8: .word 0x0210F6D0
_0201FEAC: .word 0x7FFFFFFF
_0201FEB0: .word 0x00000634
_0201FEB4: .word 0x0000026F
_0201FEB8: .word 0x021D1F24
_0201FEBC: .word 0x021D15A4
_0201FEC0: .word 0x021D1BA4
_0201FEC4: .word 0x9D2C5680
_0201FEC8: .word 0xEFC60000
	thumb_func_end sub_0201FDB8

	thumb_func_start sub_0201FECC
sub_0201FECC: ; 0x0201FECC
	push {r4, r5, r6, lr}
	add r5, r0, #0
	add r0, sp, #0
	ldrb r0, [r0, #0x10]
	add r4, r2, #0
	add r6, r3, #0
	cmp r0, #1
	bne _0201FEE6
	ldr r0, _0201FF20 ; =0x0000FFFF
	mul r0, r1
	lsl r0, r0, #8
	lsr r1, r0, #0x10
	b _0201FEFA
_0201FEE6:
	cmp r0, #2
	bne _0201FEFA
	ldr r0, _0201FF20 ; =0x0000FFFF
	mul r0, r1
	mov r1, #0x5a
	lsl r1, r1, #2
	bl sub_020F2BA4
	lsl r0, r0, #0x10
	lsr r1, r0, #0x10
_0201FEFA:
	asr r0, r1, #4
	lsl r3, r0, #1
	lsl r1, r3, #1
	ldr r2, _0201FF24 ; =0x021094DC
	add r3, r3, #1
	lsl r3, r3, #1
	ldrsh r1, [r2, r1]
	ldrsh r2, [r2, r3]
	add r0, r5, #0
	bl sub_020CAF88
	add r0, r5, #0
	add r1, r5, #0
	add r2, r4, #0
	add r3, r6, #0
	bl sub_020CAF94
	pop {r4, r5, r6, pc}
	nop
_0201FF20: .word 0x0000FFFF
_0201FF24: .word 0x021094DC
	thumb_func_end sub_0201FECC

	thumb_func_start sub_0201FF28
sub_0201FF28: ; 0x0201FF28
	push {r3, r4}
	mov r3, #0
	add r4, r3, #0
	cmp r1, #0
	bls _0201FF3E
_0201FF32:
	ldrb r2, [r0]
	add r4, r4, #1
	add r0, r0, #1
	add r3, r3, r2
	cmp r4, r1
	blo _0201FF32
_0201FF3E:
	add r0, r3, #0
	pop {r3, r4}
	bx lr
	thumb_func_end sub_0201FF28

	thumb_func_start sub_0201FF44
sub_0201FF44: ; 0x0201FF44
	push {r0, r1, r2, r3}
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	mov r4, #0
	lsr r6, r1, #1
	beq _0201FF66
	add r7, sp, #0x20
_0201FF52:
	add r0, r7, #0
	bl sub_0201FF78
	ldrh r1, [r5]
	add r4, r4, #1
	eor r0, r1
	strh r0, [r5]
	add r5, r5, #2
	cmp r4, r6
	blo _0201FF52
_0201FF66:
	pop {r3, r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
	.align 2, 0
	thumb_func_end sub_0201FF44

	thumb_func_start sub_0201FF70
sub_0201FF70: ; 0x0201FF70
	ldr r3, _0201FF74 ; =sub_0201FF44
	bx r3
	.align 2, 0
_0201FF74: .word sub_0201FF44
	thumb_func_end sub_0201FF70

	thumb_func_start sub_0201FF78
sub_0201FF78: ; 0x0201FF78
	ldr r2, [r0]
	ldr r1, _0201FF90 ; =0x41C64E6D
	add r3, r2, #0
	mul r3, r1
	ldr r1, _0201FF94 ; =0x00006073
	add r1, r3, r1
	str r1, [r0]
	lsr r0, r1, #0x10
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	bx lr
	nop
_0201FF90: .word 0x41C64E6D
_0201FF94: .word 0x00006073
	thumb_func_end sub_0201FF78

	thumb_func_start sub_0201FF98
sub_0201FF98: ; 0x0201FF98
	add r3, r0, #0
	add r2, r1, #0
	ldr r0, _0201FFA8 ; =0x021D15A4
	add r1, r3, #0
	ldr r3, _0201FFAC ; =sub_020E3A2C
	ldr r0, [r0]
	bx r3
	nop
_0201FFA8: .word 0x021D15A4
_0201FFAC: .word sub_020E3A2C
	thumb_func_end sub_0201FF98

	thumb_func_start sub_0201FFB0
sub_0201FFB0: ; 0x0201FFB0
	push {r4, lr}
	add r4, r0, #0
	ldr r0, _0201FFD8 ; =0x021D15A4
	ldr r0, [r0]
	cmp r0, #0
	beq _0201FFC0
	bl GF_AssertFail
_0201FFC0:
	mov r1, #2
	add r0, r4, #0
	lsl r1, r1, #8
	bl sub_0201AA8C
	ldr r1, _0201FFD8 ; =0x021D15A4
	str r0, [r1]
	ldr r1, _0201FFDC ; =0x00001021
	bl sub_020E3850
	pop {r4, pc}
	nop
_0201FFD8: .word 0x021D15A4
_0201FFDC: .word 0x00001021
	thumb_func_end sub_0201FFB0

	thumb_func_start sub_0201FFE0
sub_0201FFE0: ; 0x0201FFE0
	ldr r1, _0201FFE8 ; =0x0210F6D8
	str r0, [r1]
	bx lr
	nop
_0201FFE8: .word 0x0210F6D8
	thumb_func_end sub_0201FFE0

	thumb_func_start sub_0201FFEC
sub_0201FFEC: ; 0x0201FFEC
	push {r4, r5, r6, lr}
	ldr r4, _0202001C ; =0x021D1F74
	mov r5, #0
_0201FFF2:
	ldr r3, [r4]
	cmp r3, #0
	bne _0202000C
	ldr r6, _0202001C ; =0x021D1F74
	lsl r4, r5, #2
	bl sub_0200E358
	str r0, [r6, r4]
	ldr r0, [r6, r4]
	cmp r0, #0
	bne _02020014
	mov r5, #8
	b _02020014
_0202000C:
	add r5, r5, #1
	add r4, r4, #4
	cmp r5, #8
	blt _0201FFF2
_02020014:
	lsl r0, r5, #0x18
	lsr r0, r0, #0x18
	pop {r4, r5, r6, pc}
	nop
_0202001C: .word 0x021D1F74
	thumb_func_end sub_0201FFEC

	thumb_func_start sub_02020020
sub_02020020: ; 0x02020020
	push {r4, r5, r6, lr}
	add r5, r0, #0
	cmp r5, #8
	blo _0202002C
	bl GF_AssertFail
_0202002C:
	ldr r6, _02020064 ; =0x021D1F74
	lsl r4, r5, #2
	ldr r0, [r6, r4]
	cmp r0, #0
	bne _0202003A
	bl GF_AssertFail
_0202003A:
	cmp r5, #8
	bhs _02020060
	ldr r0, [r6, r4]
	cmp r0, #0
	beq _02020060
	bl sub_0201F988
	add r5, r0, #0
	beq _02020056
	bl sub_02020548
	add r0, r5, #0
	bl sub_0201AB0C
_02020056:
	ldr r0, [r6, r4]
	bl sub_0200E390
	mov r0, #0
	str r0, [r6, r4]
_02020060:
	pop {r4, r5, r6, pc}
	nop
_02020064: .word 0x021D1F74
	thumb_func_end sub_02020020

	thumb_func_start sub_02020068
sub_02020068: ; 0x02020068
	lsl r1, r0, #2
	ldr r0, _0202007C ; =0x021D1F74
	ldr r0, [r0, r1]
	cmp r0, #0
	beq _02020076
	mov r0, #1
	bx lr
_02020076:
	mov r0, #0
	bx lr
	nop
_0202007C: .word 0x021D1F74
	thumb_func_end sub_02020068

	thumb_func_start sub_02020080
sub_02020080: ; 0x02020080
	mov r1, #0
	ldr r2, _02020090 ; =0x021D1F74
	add r0, r1, #0
_02020086:
	add r1, r1, #1
	stmia r2!, {r0}
	cmp r1, #8
	blt _02020086
	bx lr
	.align 2, 0
_02020090: .word 0x021D1F74
	thumb_func_end sub_02020080

	thumb_func_start sub_02020094
sub_02020094: ; 0x02020094
	push {r3, lr}
	bl sub_02020068
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	pop {r3, pc}
	thumb_func_end sub_02020094

	thumb_func_start sub_020200A0
sub_020200A0: ; 0x020200A0
	ldr r3, _020200A4 ; =sub_02020020
	bx r3
	.align 2, 0
_020200A4: .word sub_02020020
	thumb_func_end sub_020200A0

	thumb_func_start sub_020200A8
sub_020200A8: ; 0x020200A8
	push {lr}
	sub sp, #0x1c
	str r2, [sp]
	str r0, [sp, #4]
	add r2, sp, #0
	strb r1, [r2, #9]
	ldr r0, [sp, #0x20]
	strb r3, [r2, #0xa]
	strb r0, [r2, #0xb]
	strh r3, [r2, #0xc]
	strh r0, [r2, #0xe]
	ldr r0, _020200F8 ; =0x0210F6D8
	lsl r1, r1, #3
	ldr r0, [r0]
	add r1, r0, r1
	ldrb r0, [r1, #2]
	strh r0, [r2, #0x10]
	ldrb r0, [r1, #3]
	strh r0, [r2, #0x12]
	ldrb r0, [r1, #4]
	strb r0, [r2, #0x14]
	ldrb r0, [r1, #5]
	strb r0, [r2, #0x15]
	ldrb r0, [r1, #6]
	strb r0, [r2, #0x16]
	ldrb r0, [r1, #7]
	ldr r1, [sp, #0x24]
	strb r0, [r2, #0x17]
	mov r0, #0
	strh r0, [r2, #0x18]
	strb r0, [r2, #0x1a]
	mov r0, #0xff
	strb r0, [r2, #0x1b]
	ldr r2, [sp, #0x28]
	add r0, sp, #0
	bl sub_020201A4
	add sp, #0x1c
	pop {pc}
	nop
_020200F8: .word 0x0210F6D8
	thumb_func_end sub_020200A8

	thumb_func_start sub_020200FC
sub_020200FC: ; 0x020200FC
	push {lr}
	sub sp, #0x1c
	str r2, [sp]
	str r0, [sp, #4]
	add r2, sp, #0
	strb r1, [r2, #9]
	ldr r0, [sp, #0x20]
	strb r3, [r2, #0xa]
	strb r0, [r2, #0xb]
	strh r3, [r2, #0xc]
	strh r0, [r2, #0xe]
	ldr r0, _0202014C ; =0x0210F6D8
	lsl r1, r1, #3
	ldr r0, [r0]
	add r1, r0, r1
	ldrb r0, [r1, #2]
	strh r0, [r2, #0x10]
	ldrb r0, [r1, #3]
	strh r0, [r2, #0x12]
	ldrb r0, [r1, #4]
	ldr r1, [sp, #0x28]
	strb r0, [r2, #0x14]
	lsr r0, r1, #0x10
	strb r0, [r2, #0x15]
	lsr r0, r1, #8
	strb r0, [r2, #0x17]
	strb r1, [r2, #0x16]
	mov r0, #0
	strh r0, [r2, #0x18]
	strb r0, [r2, #0x1a]
	mov r0, #0xff
	strb r0, [r2, #0x1b]
	ldr r1, [sp, #0x24]
	ldr r2, [sp, #0x2c]
	add r0, sp, #0
	bl sub_020201A4
	add sp, #0x1c
	pop {pc}
	nop
_0202014C: .word 0x0210F6D8
	thumb_func_end sub_020200FC

	thumb_func_start sub_02020150
sub_02020150: ; 0x02020150
	push {lr}
	sub sp, #0x1c
	str r2, [sp]
	str r0, [sp, #4]
	add r2, sp, #0
	strb r1, [r2, #9]
	ldr r0, [sp, #0x20]
	strb r3, [r2, #0xa]
	strb r0, [r2, #0xb]
	strh r3, [r2, #0xc]
	strh r0, [r2, #0xe]
	ldr r0, [sp, #0x2c]
	strh r0, [r2, #0x10]
	ldr r0, [sp, #0x30]
	strh r0, [r2, #0x12]
	ldr r0, _020201A0 ; =0x0210F6D8
	ldr r3, [r0]
	lsl r0, r1, #3
	add r0, r3, r0
	ldrb r0, [r0, #4]
	ldr r1, [sp, #0x28]
	strb r0, [r2, #0x14]
	lsr r0, r1, #0x10
	strb r0, [r2, #0x15]
	lsr r0, r1, #8
	strb r0, [r2, #0x17]
	strb r1, [r2, #0x16]
	mov r0, #0
	strh r0, [r2, #0x18]
	strb r0, [r2, #0x1a]
	mov r0, #0xff
	strb r0, [r2, #0x1b]
	ldr r1, [sp, #0x24]
	ldr r2, [sp, #0x34]
	add r0, sp, #0
	bl sub_020201A4
	add sp, #0x1c
	pop {pc}
	nop
_020201A0: .word 0x0210F6D8
	thumb_func_end sub_02020150

	thumb_func_start sub_020201A4
sub_020201A4: ; 0x020201A4
	push {r3, r4, r5, r6, r7, lr}
	add r7, r0, #0
	ldr r0, _020202E0 ; =0x0210F6D8
	add r6, r1, #0
	ldr r0, [r0]
	add r5, r2, #0
	cmp r0, #0
	bne _020201B8
	mov r0, #0xff
	pop {r3, r4, r5, r6, r7, pc}
_020201B8:
	mov r0, #0
	mov r1, #0x34
	bl sub_0201AA8C
	add r4, r0, #0
	mov r1, #1
	add r0, #0x27
	strb r1, [r0]
	add r0, r4, #0
	mov r3, #0
	add r0, #0x28
	strb r3, [r0]
	add r0, r4, #0
	add r0, #0x29
	ldrb r2, [r0]
	mov r0, #0x7f
	bic r2, r0
	lsl r0, r6, #0x18
	lsr r1, r0, #0x18
	mov r0, #0x7f
	and r0, r1
	add r1, r2, #0
	orr r1, r0
	add r0, r4, #0
	add r0, #0x29
	strb r1, [r0]
	add r0, r4, #0
	add r0, #0x2a
	strb r3, [r0]
	add r0, r4, #0
	add r0, #0x2b
	strb r3, [r0]
	add r0, r4, #0
	add r0, #0x2d
	strb r3, [r0]
	add r1, r3, #0
_02020200:
	add r0, r4, r3
	add r0, #0x20
	add r3, r3, #1
	strb r1, [r0]
	cmp r3, #7
	blt _02020200
	add r3, r7, #0
	ldmia r3!, {r0, r1}
	add r2, r4, #0
	stmia r2!, {r0, r1}
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	ldr r0, [r4]
	bl sub_02026AA4
	str r0, [r4]
	ldr r0, _020202E4 ; =0x021D1F6C
	str r5, [r4, #0x1c]
	mov r1, #0
	strb r1, [r0]
	add r0, r4, #0
	bl sub_020204B8
	cmp r6, #0xff
	beq _02020286
	cmp r6, #0
	beq _02020286
	add r0, r4, #0
	add r0, #0x29
	ldrb r2, [r0]
	mov r1, #0x7f
	add r0, r2, #0
	bic r0, r1
	lsl r1, r2, #0x19
	lsr r1, r1, #0x19
	add r1, #0xff
	lsl r1, r1, #0x18
	lsr r2, r1, #0x18
	mov r1, #0x7f
	and r1, r2
	orr r1, r0
	add r0, r4, #0
	add r0, #0x29
	strb r1, [r0]
	add r0, r4, #0
	add r0, #0x29
	ldrb r1, [r0]
	mov r0, #0x80
	mov r2, #1
	orr r1, r0
	add r0, r4, #0
	add r0, #0x29
	strb r1, [r0]
	ldr r0, _020202E8 ; =sub_020202EC
	add r1, r4, #0
	bl sub_0201FFEC
	add r1, r4, #0
	add r1, #0x2c
	strb r0, [r1]
	add r4, #0x2c
	ldrb r0, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_02020286:
	add r0, r4, #0
	add r0, #0x29
	ldrb r1, [r0]
	mov r0, #0x7f
	mov r5, #0
	bic r1, r0
	add r0, r4, #0
	add r0, #0x29
	strb r1, [r0]
	add r0, r4, #0
	add r0, #0x29
	ldrb r1, [r0]
	mov r0, #0x80
	bic r1, r0
	add r0, r4, #0
	add r0, #0x29
	strb r1, [r0]
	ldrb r0, [r7, #0x15]
	ldrb r1, [r7, #0x16]
	ldrb r2, [r7, #0x17]
	bl sub_0202036C
	mov r7, #1
	lsl r7, r7, #0xa
_020202B6:
	add r0, r4, #0
	bl sub_02020358
	cmp r0, #1
	beq _020202C6
	add r5, r5, #1
	cmp r5, r7
	blo _020202B6
_020202C6:
	cmp r6, #0xff
	beq _020202D0
	ldr r0, [r4, #4]
	bl sub_0201D578
_020202D0:
	add r0, r4, #0
	bl sub_02020548
	add r0, r4, #0
	bl sub_0201AB0C
	mov r0, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_020202E0: .word 0x0210F6D8
_020202E4: .word 0x021D1F6C
_020202E8: .word sub_020202EC
	thumb_func_end sub_020201A4

	thumb_func_start sub_020202EC
sub_020202EC: ; 0x020202EC
	push {r4, lr}
	ldr r0, _02020354 ; =0x021D1F6C
	add r4, r1, #0
	ldrb r0, [r0]
	cmp r0, #0
	bne _02020352
	add r0, r4, #0
	add r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #0
	bne _02020346
	mov r0, #0
	strh r0, [r4, #0x2e]
	ldrb r0, [r4, #0x15]
	ldrb r1, [r4, #0x16]
	ldrb r2, [r4, #0x17]
	bl sub_0202036C
	add r0, r4, #0
	bl sub_02020358
	cmp r0, #0
	beq _02020324
	cmp r0, #1
	beq _0202033C
	cmp r0, #3
	beq _0202032A
	pop {r4, pc}
_02020324:
	ldr r0, [r4, #4]
	bl sub_0201D578
_0202032A:
	ldr r2, [r4, #0x1c]
	cmp r2, #0
	beq _02020352
	ldrh r1, [r4, #0x2e]
	add r0, r4, #0
	blx r2
	add r4, #0x2d
	strb r0, [r4]
	pop {r4, pc}
_0202033C:
	add r4, #0x2c
	ldrb r0, [r4]
	bl sub_02020020
	pop {r4, pc}
_02020346:
	ldrh r1, [r4, #0x2e]
	ldr r2, [r4, #0x1c]
	add r0, r4, #0
	blx r2
	add r4, #0x2d
	strb r0, [r4]
_02020352:
	pop {r4, pc}
	.align 2, 0
_02020354: .word 0x021D1F6C
	thumb_func_end sub_020202EC

	thumb_func_start sub_02020358
sub_02020358: ; 0x02020358
	push {r4, lr}
	add r4, r0, #0
_0202035C:
	ldrb r0, [r4, #9]
	add r1, r4, #0
	bl sub_02002E98
	cmp r0, #2
	beq _0202035C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02020358

	thumb_func_start sub_0202036C
sub_0202036C: ; 0x0202036C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x30
	ldr r3, _02020408 ; =0x021D1F6C
	mov r5, #0
	str r5, [sp, #0x20]
	str r0, [sp, #0x24]
	str r2, [sp, #0x28]
	str r1, [sp, #0x2c]
	strh r1, [r3, #6]
	strh r0, [r3, #2]
	add r0, sp, #0x20
	strh r2, [r3, #4]
	str r5, [sp, #0x14]
	str r0, [sp, #8]
	mov ip, r0
	mov lr, r0
	str r0, [sp, #0x18]
_0202038E:
	mov r0, #0
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x18]
	str r0, [sp, #4]
	ldr r0, [sp, #8]
	ldr r0, [r0]
	str r0, [sp, #0x1c]
_0202039C:
	mov r0, #0
	str r0, [sp, #0xc]
	mov r0, lr
	str r0, [sp]
	ldr r0, [sp, #4]
	ldr r0, [r0]
	lsl r7, r0, #4
_020203AA:
	ldr r0, [sp]
	mov r3, #0
	ldr r0, [r0]
	mov r4, ip
	lsl r6, r0, #8
_020203B4:
	ldr r0, [r4]
	add r1, r7, #0
	lsl r0, r0, #0xc
	orr r0, r6
	orr r1, r0
	ldr r0, [sp, #0x1c]
	add r3, r3, #1
	add r2, r0, #0
	orr r2, r1
	lsl r1, r5, #1
	ldr r0, _0202040C ; =0x021D1F94
	add r5, r5, #1
	add r4, r4, #4
	strh r2, [r0, r1]
	cmp r3, #4
	blt _020203B4
	ldr r0, [sp]
	add r0, r0, #4
	str r0, [sp]
	ldr r0, [sp, #0xc]
	add r0, r0, #1
	str r0, [sp, #0xc]
	cmp r0, #4
	blt _020203AA
	ldr r0, [sp, #4]
	add r0, r0, #4
	str r0, [sp, #4]
	ldr r0, [sp, #0x10]
	add r0, r0, #1
	str r0, [sp, #0x10]
	cmp r0, #4
	blt _0202039C
	ldr r0, [sp, #8]
	add r0, r0, #4
	str r0, [sp, #8]
	ldr r0, [sp, #0x14]
	add r0, r0, #1
	str r0, [sp, #0x14]
	cmp r0, #4
	blt _0202038E
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02020408: .word 0x021D1F6C
_0202040C: .word 0x021D1F94
	thumb_func_end sub_0202036C

	thumb_func_start sub_02020410
sub_02020410: ; 0x02020410
	ldrh r2, [r0]
	lsr r2, r2, #8
	lsl r3, r2, #1
	ldr r2, _020204B4 ; =0x021D1F94
	ldrh r3, [r2, r3]
	strh r3, [r1]
	ldrh r3, [r0]
	lsl r3, r3, #0x18
	lsr r3, r3, #0x17
	ldrh r3, [r2, r3]
	strh r3, [r1, #2]
	ldrh r3, [r0, #2]
	lsr r3, r3, #8
	lsl r3, r3, #1
	ldrh r3, [r2, r3]
	strh r3, [r1, #4]
	ldrh r3, [r0, #2]
	lsl r3, r3, #0x18
	lsr r3, r3, #0x17
	ldrh r3, [r2, r3]
	strh r3, [r1, #6]
	ldrh r3, [r0, #4]
	lsr r3, r3, #8
	lsl r3, r3, #1
	ldrh r3, [r2, r3]
	strh r3, [r1, #8]
	ldrh r3, [r0, #4]
	lsl r3, r3, #0x18
	lsr r3, r3, #0x17
	ldrh r3, [r2, r3]
	strh r3, [r1, #0xa]
	ldrh r3, [r0, #6]
	lsr r3, r3, #8
	lsl r3, r3, #1
	ldrh r3, [r2, r3]
	strh r3, [r1, #0xc]
	ldrh r3, [r0, #6]
	lsl r3, r3, #0x18
	lsr r3, r3, #0x17
	ldrh r3, [r2, r3]
	strh r3, [r1, #0xe]
	ldrh r3, [r0, #8]
	lsr r3, r3, #8
	lsl r3, r3, #1
	ldrh r3, [r2, r3]
	strh r3, [r1, #0x10]
	ldrh r3, [r0, #8]
	lsl r3, r3, #0x18
	lsr r3, r3, #0x17
	ldrh r3, [r2, r3]
	strh r3, [r1, #0x12]
	ldrh r3, [r0, #0xa]
	lsr r3, r3, #8
	lsl r3, r3, #1
	ldrh r3, [r2, r3]
	strh r3, [r1, #0x14]
	ldrh r3, [r0, #0xa]
	lsl r3, r3, #0x18
	lsr r3, r3, #0x17
	ldrh r3, [r2, r3]
	strh r3, [r1, #0x16]
	ldrh r3, [r0, #0xc]
	lsr r3, r3, #8
	lsl r3, r3, #1
	ldrh r3, [r2, r3]
	strh r3, [r1, #0x18]
	ldrh r3, [r0, #0xc]
	lsl r3, r3, #0x18
	lsr r3, r3, #0x17
	ldrh r3, [r2, r3]
	strh r3, [r1, #0x1a]
	ldrh r3, [r0, #0xe]
	lsr r3, r3, #8
	lsl r3, r3, #1
	ldrh r3, [r2, r3]
	strh r3, [r1, #0x1c]
	ldrh r0, [r0, #0xe]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x17
	ldrh r0, [r2, r0]
	strh r0, [r1, #0x1e]
	bx lr
	.align 2, 0
_020204B4: .word 0x021D1F94
	thumb_func_end sub_02020410

	thumb_func_start sub_020204B8
sub_020204B8: ; 0x020204B8
	mov r1, #0
	str r1, [r0, #0x30]
	bx lr
	.align 2, 0
	thumb_func_end sub_020204B8

	thumb_func_start sub_020204C0
sub_020204C0: ; 0x020204C0
	push {r3, r4, r5, lr}
	sub sp, #8
	mov r1, #6
	mov r0, #0
	lsl r1, r1, #8
	bl sub_0201AA8C
	mov r2, #0
	add r5, r0, #0
	str r2, [sp]
	mov r0, #0x10
	mov r1, #6
	add r3, sp, #4
	bl sub_020079BC
	add r4, r0, #0
	ldr r0, [sp, #4]
	mov r2, #6
	ldr r0, [r0, #0x14]
	add r1, r5, #0
	lsl r2, r2, #8
	bl sub_020D4808
	add r0, r4, #0
	bl sub_0201AB0C
	add r0, r5, #0
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_020204C0

	thumb_func_start sub_020204FC
sub_020204FC: ; 0x020204FC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	add r4, r0, #0
	ldr r0, [r4, #0x30]
	add r7, r3, #0
	ldr r5, [r4, #4]
	cmp r0, #0
	bne _02020512
	bl sub_020204C0
	str r0, [r4, #0x30]
_02020512:
	mov r0, #6
	lsl r0, r0, #6
	add r6, r7, #0
	mul r6, r0
	add r0, r5, #0
	ldr r4, [r4, #0x30]
	bl sub_0201EE90
	sub r0, r0, #3
	lsl r0, r0, #0x13
	mov r1, #0x18
	lsr r2, r0, #0x10
	str r1, [sp]
	mov r0, #0x20
	str r0, [sp, #4]
	str r2, [sp, #8]
	mov r2, #0
	str r2, [sp, #0xc]
	str r1, [sp, #0x10]
	str r0, [sp, #0x14]
	add r0, r5, #0
	add r1, r4, r6
	add r3, r2, #0
	bl sub_0201D9D8
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_020204FC

	thumb_func_start sub_02020548
sub_02020548: ; 0x02020548
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x30]
	cmp r0, #0
	beq _0202055A
	bl sub_0201AB0C
	mov r0, #0
	str r0, [r4, #0x30]
_0202055A:
	pop {r4, pc}
	thumb_func_end sub_02020548

	thumb_func_start sub_0202055C
sub_0202055C: ; 0x0202055C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, _020205A8 ; =0x021D2194
	add r4, r1, #0
	ldr r0, [r0]
	cmp r0, #0
	beq _0202056E
	bl GF_AssertFail
_0202056E:
	add r0, r4, #0
	mov r1, #0xc
	bl sub_0201AA8C
	ldr r1, _020205A8 ; =0x021D2194
	cmp r0, #0
	str r0, [r1]
	bne _02020582
	bl GF_AssertFail
_02020582:
	add r0, r4, #0
	lsl r1, r5, #4
	bl sub_0201AA8C
	ldr r1, _020205A8 ; =0x021D2194
	ldr r2, [r1]
	str r0, [r2, #8]
	ldr r0, [r1]
	mov r2, #0
	str r5, [r0]
	ldr r0, [r1]
	str r2, [r0, #4]
	ldr r1, [r1]
	ldr r0, [r1, #8]
	ldr r1, [r1]
	bl sub_020B62C8
	pop {r3, r4, r5, pc}
	nop
_020205A8: .word 0x021D2194
	thumb_func_end sub_0202055C

	thumb_func_start sub_020205AC
sub_020205AC: ; 0x020205AC
	push {r3, lr}
	ldr r0, _020205D4 ; =0x021D2194
	ldr r0, [r0]
	cmp r0, #0
	bne _020205BA
	bl GF_AssertFail
_020205BA:
	ldr r0, _020205D4 ; =0x021D2194
	ldr r0, [r0]
	ldr r0, [r0, #8]
	bl sub_0201AB0C
	ldr r0, _020205D4 ; =0x021D2194
	ldr r0, [r0]
	bl sub_0201AB0C
	ldr r0, _020205D4 ; =0x021D2194
	mov r1, #0
	str r1, [r0]
	pop {r3, pc}
	.align 2, 0
_020205D4: .word 0x021D2194
	thumb_func_end sub_020205AC

	thumb_func_start sub_020205D8
sub_020205D8: ; 0x020205D8
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r0, _02020618 ; =0x021D2194
	add r4, r1, #0
	ldr r0, [r0]
	add r6, r2, #0
	add r7, r3, #0
	cmp r0, #0
	bne _020205EE
	bl GF_AssertFail
_020205EE:
	ldr r1, _02020618 ; =0x021D2194
	ldr r0, [r1]
	ldr r2, [r0, #4]
	add r2, r2, #1
	str r2, [r0, #4]
	ldr r0, [r1]
	ldr r1, [r0, #4]
	ldr r0, [r0]
	cmp r1, r0
	blo _0202060A
	bl GF_AssertFail
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0202060A:
	add r0, r5, #0
	add r1, r4, #0
	add r2, r6, #0
	add r3, r7, #0
	bl sub_020B634C
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02020618: .word 0x021D2194
	thumb_func_end sub_020205D8

	thumb_func_start sub_0202061C
sub_0202061C: ; 0x0202061C
	push {r3, lr}
	ldr r0, _02020634 ; =0x021D2194
	ldr r0, [r0]
	cmp r0, #0
	beq _02020632
	bl sub_020B62EC
	ldr r0, _02020634 ; =0x021D2194
	mov r1, #0
	ldr r0, [r0]
	str r1, [r0, #4]
_02020632:
	pop {r3, pc}
	.align 2, 0
_02020634: .word 0x021D2194
	thumb_func_end sub_0202061C

	thumb_func_start sub_02020638
sub_02020638: ; 0x02020638
	push {r3, lr}
	ldr r0, _02020650 ; =0x021D2194
	ldr r0, [r0]
	cmp r0, #0
	bne _02020646
	bl GF_AssertFail
_02020646:
	ldr r0, _02020650 ; =0x021D2194
	ldr r0, [r0]
	ldr r0, [r0, #4]
	pop {r3, pc}
	nop
_02020650: .word 0x021D2194
	thumb_func_end sub_02020638

	thumb_func_start sub_02020654
sub_02020654: ; 0x02020654
	push {r3, r4, r5, lr}
	add r4, r0, #0
	add r0, r1, #0
	mov r1, #0x30
	mul r1, r4
	bl sub_0201AA8C
	ldr r2, _02020670 ; =sub_02020684
	add r1, r4, #0
	add r5, r0, #0
	bl sub_020BAD38
	add r0, r5, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_02020670: .word sub_02020684
	thumb_func_end sub_02020654

	thumb_func_start sub_02020674
sub_02020674: ; 0x02020674
	ldr r3, _02020678 ; =sub_020BAD9C
	bx r3
	.align 2, 0
_02020678: .word sub_020BAD9C
	thumb_func_end sub_02020674

	thumb_func_start sub_0202067C
sub_0202067C: ; 0x0202067C
	ldr r3, _02020680 ; =sub_0201AB0C
	bx r3
	.align 2, 0
_02020680: .word sub_0201AB0C
	thumb_func_end sub_0202067C

	thumb_func_start sub_02020684
sub_02020684: ; 0x02020684
	push {r3, lr}
	bl sub_020205D8
	pop {r3, pc}
	thumb_func_end sub_02020684

	thumb_func_start sub_0202068C
sub_0202068C: ; 0x0202068C
	push {r4, r5, r6, lr}
	add r6, r1, #0
	add r5, r0, #0
	add r0, r6, #0
	mov r1, #8
	bl sub_0201AA8C
	mov r1, #0x14
	add r4, r0, #0
	add r0, r6, #0
	mul r1, r5
	bl sub_0201AA8C
	str r0, [r4]
	mov r6, #0
	str r5, [r4, #4]
	cmp r5, #0
	ble _020206C4
	add r5, r6, #0
_020206B2:
	ldr r0, [r4]
	add r0, r0, r5
	bl sub_02020770
	ldr r0, [r4, #4]
	add r6, r6, #1
	add r5, #0x14
	cmp r6, r0
	blt _020206B2
_020206C4:
	add r0, r4, #0
	pop {r4, r5, r6, pc}
	thumb_func_end sub_0202068C

	thumb_func_start sub_020206C8
sub_020206C8: ; 0x020206C8
	push {r4, lr}
	add r4, r0, #0
	bl sub_02020740
	ldr r0, [r4]
	bl sub_0201AB0C
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020206C8

	thumb_func_start sub_020206E0
sub_020206E0: ; 0x020206E0
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r0, [r5, #4]
	mov r4, #0
	add r7, r2, #0
	mov ip, r1
	add r6, r3, #0
	add r2, r4, #0
	cmp r0, #0
	ble _0202070E
	ldr r5, [r5]
	add r3, r5, #0
_020206F8:
	ldr r1, [r3]
	cmp r1, #0
	bne _02020706
	mov r0, #0x14
	mul r0, r2
	add r4, r5, r0
	b _0202070E
_02020706:
	add r2, r2, #1
	add r3, #0x14
	cmp r2, r0
	blt _020206F8
_0202070E:
	cmp r4, #0
	bne _02020716
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02020716:
	mov r0, ip
	str r0, [r4]
	str r7, [r4, #4]
	ldr r1, [sp, #0x1c]
	ldr r0, [sp, #0x18]
	str r6, [r4, #8]
	str r0, [r4, #0xc]
	mov r0, #0xff
	strb r0, [r4, #0x10]
	lsl r1, r1, #4
	strb r0, [r4, #0x11]
	add r0, r4, #0
	lsr r1, r1, #0x10
	bl sub_02020780
	add r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_020206E0

	thumb_func_start sub_02020738
sub_02020738: ; 0x02020738
	ldr r3, _0202073C ; =sub_02020770
	bx r3
	.align 2, 0
_0202073C: .word sub_02020770
	thumb_func_end sub_02020738

	thumb_func_start sub_02020740
sub_02020740: ; 0x02020740
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #4]
	mov r6, #0
	cmp r0, #0
	ble _02020760
	add r4, r6, #0
_0202074E:
	ldr r0, [r5]
	add r0, r0, r4
	bl sub_02020770
	ldr r0, [r5, #4]
	add r6, r6, #1
	add r4, #0x14
	cmp r6, r0
	blt _0202074E
_02020760:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_02020740

	thumb_func_start sub_02020764
sub_02020764: ; 0x02020764
	ldr r3, _0202076C ; =sub_02020780
	lsl r1, r1, #4
	lsr r1, r1, #0x10
	bx r3
	.align 2, 0
_0202076C: .word sub_02020780
	thumb_func_end sub_02020764

	thumb_func_start sub_02020770
sub_02020770: ; 0x02020770
	mov r1, #0
	str r1, [r0]
	str r1, [r0, #4]
	str r1, [r0, #8]
	str r1, [r0, #0xc]
	strb r1, [r0, #0x10]
	strb r1, [r0, #0x11]
	bx lr
	thumb_func_end sub_02020770

	thumb_func_start sub_02020780
sub_02020780: ; 0x02020780
	push {r3, r4, lr}
	sub sp, #4
	add r4, r0, #0
	ldr r0, [r4]
	bl sub_02026DE0
	add r2, sp, #0
	strb r0, [r2]
	lsr r0, r0, #8
	strb r0, [r2, #1]
	ldrb r0, [r2]
	add r1, sp, #0
	add r1, #2
	strb r0, [r2, #2]
	ldrb r0, [r2, #1]
	strb r0, [r2, #3]
	ldrb r3, [r4, #0x10]
	ldrb r0, [r2, #2]
	cmp r3, r0
	beq _020207AE
	add r0, r4, #0
	bl sub_020207C8
_020207AE:
	add r0, sp, #0
	ldrb r1, [r4, #0x11]
	ldrb r0, [r0, #3]
	cmp r1, r0
	beq _020207C2
	add r1, sp, #0
	add r0, r4, #0
	add r1, #2
	bl sub_020207F4
_020207C2:
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_02020780

	thumb_func_start sub_020207C8
sub_020207C8: ; 0x020207C8
	push {r4, r5, r6, lr}
	add r5, r0, #0
	add r4, r1, #0
	bl sub_02020820
	ldr r3, [r5, #8]
	add r2, r0, #0
	lsl r1, r3, #0x10
	ldr r6, _020207F0 ; =0x7FFF0000
	mov r0, #0
	and r3, r6
	lsr r3, r3, #0x10
	lsr r1, r1, #0xd
	lsl r3, r3, #4
	bl sub_020205D8
	ldrb r0, [r4]
	strb r0, [r5, #0x10]
	pop {r4, r5, r6, pc}
	nop
_020207F0: .word 0x7FFF0000
	thumb_func_end sub_020207C8

	thumb_func_start sub_020207F4
sub_020207F4: ; 0x020207F4
	push {r4, r5, r6, lr}
	add r5, r0, #0
	add r4, r1, #0
	bl sub_0202082C
	ldr r3, [r5, #0xc]
	add r2, r0, #0
	lsl r1, r3, #0x10
	ldr r6, _0202081C ; =0xFFFF0000
	mov r0, #1
	and r3, r6
	lsr r3, r3, #0x10
	lsr r1, r1, #0xd
	lsl r3, r3, #3
	bl sub_020205D8
	ldrb r0, [r4, #1]
	strb r0, [r5, #0x11]
	pop {r4, r5, r6, pc}
	nop
_0202081C: .word 0xFFFF0000
	thumb_func_end sub_020207F4

	thumb_func_start sub_02020820
sub_02020820: ; 0x02020820
	ldr r3, _02020828 ; =sub_02020838
	ldr r0, [r0, #4]
	ldrb r1, [r1]
	bx r3
	.align 2, 0
_02020828: .word sub_02020838
	thumb_func_end sub_02020820

	thumb_func_start sub_0202082C
sub_0202082C: ; 0x0202082C
	ldr r3, _02020834 ; =sub_02020888
	ldr r0, [r0, #4]
	ldrb r1, [r1, #1]
	bx r3
	.align 2, 0
_02020834: .word sub_02020888
	thumb_func_end sub_0202082C

	thumb_func_start sub_02020838
sub_02020838: ; 0x02020838
	push {r3, r4}
	cmp r0, #0
	beq _02020864
	add r2, r0, #0
	add r2, #0x3c
	beq _02020860
	add r3, r0, #0
	add r3, #0x3d
	ldrb r3, [r3]
	cmp r1, r3
	bhs _02020860
	add r3, r0, #0
	add r3, #0x42
	ldrh r4, [r3]
	add r3, r2, r4
	ldrh r2, [r2, r4]
	add r3, r3, #4
	mul r1, r2
	add r3, r3, r1
	b _02020866
_02020860:
	mov r3, #0
	b _02020866
_02020864:
	mov r3, #0
_02020866:
	cmp r3, #0
	bne _02020870
	mov r0, #0
	pop {r3, r4}
	bx lr
_02020870:
	ldr r1, [r0, #0x14]
	add r2, r0, r1
	ldr r1, [r3]
	ldr r0, [r0, #8]
	lsl r1, r1, #0x10
	lsr r1, r1, #0x10
	add r0, r1, r0
	lsl r0, r0, #3
	add r0, r2, r0
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end sub_02020838

	thumb_func_start sub_02020888
sub_02020888: ; 0x02020888
	push {r3, r4}
	cmp r0, #0
	beq _020208B0
	ldrh r2, [r0, #0x34]
	cmp r2, #0
	beq _020208B0
	add r4, r0, r2
	beq _020208AC
	ldrb r2, [r4, #1]
	cmp r1, r2
	bhs _020208AC
	ldrh r2, [r4, #6]
	add r3, r4, r2
	ldrh r2, [r4, r2]
	add r3, r3, #4
	mul r1, r2
	add r2, r3, r1
	b _020208B2
_020208AC:
	mov r2, #0
	b _020208B2
_020208B0:
	mov r2, #0
_020208B2:
	cmp r2, #0
	bne _020208BC
	mov r0, #0
	pop {r3, r4}
	bx lr
_020208BC:
	ldr r1, [r0, #0x38]
	add r1, r0, r1
	ldrh r0, [r2]
	lsl r0, r0, #3
	add r0, r1, r0
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end sub_02020888

	thumb_func_start sub_020208CC
sub_020208CC: ; 0x020208CC
	ldr r1, [r1]
	ldr r0, [r0, #8]
	lsl r1, r1, #0x10
	lsl r0, r0, #0x10
	lsr r1, r1, #0xd
	lsr r0, r0, #0xd
	add r0, r1, r0
	bx lr
	thumb_func_end sub_020208CC

	thumb_func_start sub_020208DC
sub_020208DC: ; 0x020208DC
	push {r4, lr}
	sub sp, #0x10
	add r4, r0, #0
	add r0, sp, #0
	bl sub_02020B3C
	cmp r4, #0
	beq _020208FA
	add r0, r4, #0
	add r0, #0x3c
	add r1, sp, #0
	bl sub_020C3818
	add r1, r0, #0
	b _020208FC
_020208FA:
	mov r1, #0
_020208FC:
	cmp r1, #0
	bne _02020906
	add sp, #0x10
	mov r0, #0
	pop {r4, pc}
_02020906:
	add r0, r4, #0
	bl sub_020208CC
	add sp, #0x10
	pop {r4, pc}
	thumb_func_end sub_020208DC

	thumb_func_start sub_02020910
sub_02020910: ; 0x02020910
	push {r4, lr}
	cmp r0, #0
	beq _0202093C
	add r2, r0, #0
	add r2, #0x3c
	beq _02020938
	add r3, r0, #0
	add r3, #0x3d
	ldrb r3, [r3]
	cmp r1, r3
	bhs _02020938
	add r3, r0, #0
	add r3, #0x42
	ldrh r4, [r3]
	add r3, r2, r4
	ldrh r2, [r2, r4]
	add r3, r3, #4
	mul r1, r2
	add r1, r3, r1
	b _0202093E
_02020938:
	mov r1, #0
	b _0202093E
_0202093C:
	mov r1, #0
_0202093E:
	cmp r1, #0
	bne _02020946
	mov r0, #0
	pop {r4, pc}
_02020946:
	bl sub_020208CC
	pop {r4, pc}
	thumb_func_end sub_02020910

	thumb_func_start sub_0202094C
sub_0202094C: ; 0x0202094C
	push {r3, lr}
	ldr r0, [r1]
	mov r1, #7
	lsl r1, r1, #0x1a
	and r1, r0
	lsr r1, r1, #0x1a
	cmp r1, #6
	bhi _0202098A
	add r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add pc, r1
_02020968: ; jump table
	.short _0202098A - _02020968 - 2 ; case 0
	.short _02020982 - _02020968 - 2 ; case 1
	.short _02020976 - _02020968 - 2 ; case 2
	.short _0202097A - _02020968 - 2 ; case 3
	.short _0202097E - _02020968 - 2 ; case 4
	.short _0202098A - _02020968 - 2 ; case 5
	.short _02020986 - _02020968 - 2 ; case 6
_02020976:
	mov r1, #4
	b _0202098E
_0202097A:
	mov r1, #2
	b _0202098E
_0202097E:
	mov r1, #1
	b _0202098E
_02020982:
	mov r1, #1
	b _0202098E
_02020986:
	mov r1, #1
	b _0202098E
_0202098A:
	mov r0, #0
	pop {r3, pc}
_0202098E:
	mov r3, #7
	lsl r3, r3, #0x14
	add r2, r0, #0
	and r2, r3
	lsl r3, r3, #3
	and r0, r3
	lsr r2, r2, #0x14
	lsr r0, r0, #0x17
	lsl r2, r2, #4
	lsl r0, r0, #4
	mul r0, r2
	bl sub_020F2BA4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_0202094C

	thumb_func_start sub_020209AC
sub_020209AC: ; 0x020209AC
	push {r4, lr}
	cmp r0, #0
	beq _020209D8
	add r2, r0, #0
	add r2, #0x3c
	beq _020209D4
	add r3, r0, #0
	add r3, #0x3d
	ldrb r3, [r3]
	cmp r1, r3
	bhs _020209D4
	add r3, r0, #0
	add r3, #0x42
	ldrh r4, [r3]
	add r3, r2, r4
	ldrh r2, [r2, r4]
	add r3, r3, #4
	mul r1, r2
	add r1, r3, r1
	b _020209DA
_020209D4:
	mov r1, #0
	b _020209DA
_020209D8:
	mov r1, #0
_020209DA:
	bl sub_0202094C
	pop {r4, pc}
	thumb_func_end sub_020209AC

	thumb_func_start sub_020209E0
sub_020209E0: ; 0x020209E0
	push {r4, lr}
	sub sp, #0x10
	add r4, r0, #0
	add r0, sp, #0
	bl sub_02020B3C
	cmp r4, #0
	beq _020209FE
	add r0, r4, #0
	add r0, #0x3c
	add r1, sp, #0
	bl sub_020C3818
	add r1, r0, #0
	b _02020A00
_020209FE:
	mov r1, #0
_02020A00:
	add r0, r4, #0
	bl sub_0202094C
	add sp, #0x10
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020209E0

	thumb_func_start sub_02020A0C
sub_02020A0C: ; 0x02020A0C
	ldrb r3, [r0]
	strb r3, [r1]
	ldrb r0, [r0, #1]
	strb r0, [r2]
	bx lr
	.align 2, 0
	thumb_func_end sub_02020A0C

	thumb_func_start sub_02020A18
sub_02020A18: ; 0x02020A18
	ldrb r3, [r0, #2]
	strb r3, [r1]
	ldrb r0, [r0, #3]
	strb r0, [r2]
	bx lr
	.align 2, 0
	thumb_func_end sub_02020A18

	thumb_func_start sub_02020A24
sub_02020A24: ; 0x02020A24
	push {r4, r5}
	ldr r5, _02020A9C ; =0xFFFFFFF8
	ldr r4, [sp, #0xc]
	add r5, sp
	ldrb r5, [r5, #0x18]
	cmp r5, #3
	bhi _02020A64
	add r5, r5, r5
	add r5, pc
	ldrh r5, [r5, #6]
	lsl r5, r5, #0x10
	asr r5, r5, #0x10
	add pc, r5
_02020A3E: ; jump table
	.short _02020A46 - _02020A3E - 2 ; case 0
	.short _02020A4E - _02020A3E - 2 ; case 1
	.short _02020A56 - _02020A3E - 2 ; case 2
	.short _02020A5E - _02020A3E - 2 ; case 3
_02020A46:
	lsl r4, r4, #3
	add r4, r0, r4
	ldrb r4, [r4, #4]
	b _02020A64
_02020A4E:
	lsl r4, r4, #3
	add r4, r0, r4
	ldrb r4, [r4, #5]
	b _02020A64
_02020A56:
	lsl r4, r4, #3
	add r4, r0, r4
	ldrb r4, [r4, #6]
	b _02020A64
_02020A5E:
	lsl r4, r4, #3
	add r4, r0, r4
	ldrb r4, [r4, #7]
_02020A64:
	cmp r1, #0
	beq _02020A6E
	lsl r5, r4, #3
	ldrb r5, [r0, r5]
	strb r5, [r1]
_02020A6E:
	cmp r2, #0
	beq _02020A7A
	lsl r1, r4, #3
	add r1, r0, r1
	ldrb r1, [r1, #1]
	strb r1, [r2]
_02020A7A:
	cmp r3, #0
	beq _02020A86
	lsl r1, r4, #3
	add r1, r0, r1
	ldrb r1, [r1, #2]
	strb r1, [r3]
_02020A86:
	ldr r2, [sp, #8]
	cmp r2, #0
	beq _02020A94
	lsl r1, r4, #3
	add r0, r0, r1
	ldrb r0, [r0, #3]
	strb r0, [r2]
_02020A94:
	add r0, r4, #0
	pop {r4, r5}
	bx lr
	nop
_02020A9C: .word 0xFFFFFFF8
	thumb_func_end sub_02020A24

	thumb_func_start sub_02020AA0
sub_02020AA0: ; 0x02020AA0
	mov r2, #0
	ldrsb r1, [r0, r2]
	cmp r1, #0
	beq _02020AB0
_02020AA8:
	add r2, r2, #1
	ldrsb r1, [r0, r2]
	cmp r1, #0
	bne _02020AA8
_02020AB0:
	add r0, r2, #0
	bx lr
	thumb_func_end sub_02020AA0

	thumb_func_start sub_02020AB4
sub_02020AB4: ; 0x02020AB4
	push {r4, r5}
	mov r4, #1
	mov r3, #0
	lsl r4, r4, #8
_02020ABC:
	ldrsb r5, [r0, r3]
	strb r5, [r1, r3]
	ldrsb r5, [r0, r3]
	cmp r2, r5
	beq _02020ACA
	cmp r5, #0
	bne _02020AEA
_02020ACA:
	mov r4, #0
	strb r4, [r1, r3]
	cmp r2, #0xd
	bne _02020AE2
	add r1, r3, #1
	ldrsb r1, [r0, r1]
	cmp r1, #0xa
	bne _02020AE2
	add r1, r3, #2
	add r0, r0, r1
	pop {r4, r5}
	bx lr
_02020AE2:
	add r1, r3, #1
	add r0, r0, r1
	pop {r4, r5}
	bx lr
_02020AEA:
	add r3, r3, #1
	cmp r3, r4
	blt _02020ABC
	mov r0, #0
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end sub_02020AB4

	thumb_func_start sub_02020AF8
sub_02020AF8: ; 0x02020AF8
	push {r4, r5, r6, lr}
	add r4, r0, #0
	bl sub_02020AA0
	mov r5, #1
	mov r6, #0
	sub r3, r0, #1
	bmi _02020B36
	sub r1, r6, #1
	mov r0, #0xa
_02020B0C:
	ldrsb r2, [r4, r3]
	cmp r2, #0x30
	blt _02020B1E
	cmp r2, #0x39
	bgt _02020B1E
	sub r2, #0x30
	mul r2, r5
	add r6, r6, r2
	b _02020B30
_02020B1E:
	cmp r3, #0
	bne _02020B2A
	cmp r2, #0x2d
	bne _02020B30
	mul r6, r1
	b _02020B30
_02020B2A:
	mov r0, #0
	mvn r0, r0
	pop {r4, r5, r6, pc}
_02020B30:
	mul r5, r0
	sub r3, r3, #1
	bpl _02020B0C
_02020B36:
	add r0, r6, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_02020AF8

	thumb_func_start sub_02020B3C
sub_02020B3C: ; 0x02020B3C
	push {r3, r4, r5, lr}
	mov r2, #0
	add r4, r1, #0
	add r5, r0, #0
	add r1, r2, #0
_02020B46:
	lsl r0, r2, #2
	str r1, [r5, r0]
	add r0, r2, #1
	lsl r0, r0, #0x18
	lsr r2, r0, #0x18
	cmp r2, #4
	blo _02020B46
	add r0, r4, #0
	bl sub_02020AA0
	lsl r0, r0, #0x18
	lsr r1, r0, #0x18
	ldr r2, _02020B74 ; =0x00000000
	beq _02020B70
_02020B62:
	ldrsb r0, [r4, r2]
	strb r0, [r5, r2]
	add r0, r2, #1
	lsl r0, r0, #0x18
	lsr r2, r0, #0x18
	cmp r2, r1
	blo _02020B62
_02020B70:
	pop {r3, r4, r5, pc}
	nop
_02020B74: .word 0x00000000
	thumb_func_end sub_02020B3C

	thumb_func_start sub_02020B78
sub_02020B78: ; 0x02020B78
	ldr r1, _02020B88 ; =0x00000121
	cmp r0, r1
	bhs _02020B82
	mov r0, #1
	bx lr
_02020B82:
	mov r0, #0
	bx lr
	nop
_02020B88: .word 0x00000121
	thumb_func_end sub_02020B78

	thumb_func_start sub_02020B8C
sub_02020B8C: ; 0x02020B8C
	cmp r0, r1
	blt _02020B92
	add r0, r1, #0
_02020B92:
	bx lr
	thumb_func_end sub_02020B8C

	thumb_func_start sub_02020B94
sub_02020B94: ; 0x02020B94
	cmp r0, r1
	bgt _02020B9A
	add r0, r1, #0
_02020B9A:
	bx lr
	thumb_func_end sub_02020B94

	thumb_func_start sub_02020B9C
sub_02020B9C: ; 0x02020B9C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x50
	add r5, r0, #0
	add r3, sp, #0x14
	mov r0, #0
	str r0, [r3]
	str r0, [r3, #4]
	str r0, [r3, #8]
	add r0, r2, #0
	add r4, r1, #0
	add r2, sp, #0x44
	bl sub_020CCDAC
	add r0, r5, #0
	add r1, r4, #0
	add r2, sp, #0x38
	bl sub_020CCDAC
	ldr r0, [sp, #0x48]
	ldr r5, [sp, #0x4c]
	str r0, [sp]
	asr r0, r0, #0x1f
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x44]
	asr r4, r5, #0x1f
	str r0, [sp, #4]
	asr r7, r0, #0x1f
	add r0, sp, #0x44
	add r1, sp, #0x38
	bl sub_020CCE14
	str r0, [sp, #8]
	add r0, r5, #0
	add r1, r4, #0
	add r2, r5, #0
	add r3, r4, #0
	bl sub_020F2948
	add r6, r0, #0
	ldr r0, [sp, #4]
	add r4, r1, #0
	add r1, r7, #0
	add r2, r0, #0
	add r3, r7, #0
	bl sub_020F2948
	str r0, [sp, #0xc]
	add r5, r1, #0
	ldr r0, [sp]
	ldr r1, [sp, #0x10]
	add r2, r0, #0
	add r3, r1, #0
	bl sub_020F2948
	mov r2, #2
	add r3, r1, #0
	add r7, r0, #0
	mov r1, #0
	lsl r2, r2, #0xa
	add r2, r6, r2
	adc r4, r1
	lsl r4, r4, #0x14
	lsr r2, r2, #0xc
	orr r2, r4
	mov r4, #2
	ldr r6, [sp, #0xc]
	lsl r4, r4, #0xa
	add r4, r6, r4
	adc r5, r1
	lsl r5, r5, #0x14
	lsr r4, r4, #0xc
	orr r4, r5
	mov r5, #2
	lsl r5, r5, #0xa
	add r5, r7, r5
	adc r3, r1
	lsl r1, r3, #0x14
	lsr r3, r5, #0xc
	orr r3, r1
	add r1, r4, r3
	ldr r0, [sp, #8]
	add r1, r2, r1
	bl sub_020CCBA0
	add r1, sp, #0x44
	add r2, sp, #0x14
	add r3, sp, #0x20
	bl sub_020CD224
	add r0, sp, #0x20
	add r1, sp, #0x38
	add r2, sp, #0x2c
	bl sub_020CCDAC
	add r0, sp, #0x2c
	bl sub_020CCF80
	add sp, #0x50
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02020B9C

	thumb_func_start sub_02020C64
sub_02020C64: ; 0x02020C64
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x30
	add r4, r1, #0
	add r1, sp, #0x24
	bl sub_020CCFE0
	add r0, r4, #0
	add r1, sp, #0x18
	bl sub_020CCFE0
	ldr r0, [sp, #0x24]
	ldr r4, [sp, #0x18]
	str r0, [sp]
	asr r0, r0, #0x1f
	str r0, [sp, #4]
	ldr r0, [sp, #0x20]
	asr r6, r4, #0x1f
	str r0, [sp, #8]
	asr r0, r0, #0x1f
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x2c]
	ldr r2, [sp, #8]
	asr r7, r0, #0x1f
	ldr r3, [sp, #0xc]
	add r1, r7, #0
	str r0, [sp, #0x10]
	bl sub_020F2948
	str r0, [sp, #0x14]
	add r5, r1, #0
	ldr r0, [sp]
	ldr r1, [sp, #4]
	add r2, r4, #0
	add r3, r6, #0
	bl sub_020F2948
	mov r2, #2
	ldr r3, [sp, #0x14]
	lsl r2, r2, #0xa
	add r3, r3, r2
	ldr r2, _02020D28 ; =0x00000000
	adc r5, r2
	lsl r2, r5, #0x14
	lsr r3, r3, #0xc
	orr r3, r2
	mov r2, #2
	lsl r2, r2, #0xa
	add r0, r0, r2
	ldr r2, _02020D28 ; =0x00000000
	adc r1, r2
	lsl r1, r1, #0x14
	lsr r0, r0, #0xc
	orr r0, r1
	add r5, r3, r0
	ldr r0, [sp, #0x10]
	add r1, r7, #0
	add r2, r4, #0
	add r3, r6, #0
	bl sub_020F2948
	add r6, r0, #0
	add r4, r1, #0
	ldr r0, [sp]
	ldr r1, [sp, #4]
	ldr r2, [sp, #8]
	ldr r3, [sp, #0xc]
	bl sub_020F2948
	mov r2, #2
	mov r3, #0
	lsl r2, r2, #0xa
	add r6, r6, r2
	adc r4, r3
	lsl r4, r4, #0x14
	lsr r6, r6, #0xc
	orr r6, r4
	add r4, r0, r2
	adc r1, r3
	lsl r0, r1, #0x14
	lsr r1, r4, #0xc
	orr r1, r0
	sub r0, r6, r1
	cmp r5, #0
	bne _02020D1E
	cmp r0, #0
	ble _02020D16
	add sp, #0x30
	lsl r0, r2, #3
	pop {r3, r4, r5, r6, r7, pc}
_02020D16:
	mov r0, #3
	add sp, #0x30
	lsl r0, r0, #0xe
	pop {r3, r4, r5, r6, r7, pc}
_02020D1E:
	add r1, r5, #0
	bl sub_020CD5DC
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02020D28: .word 0x00000000
	thumb_func_end sub_02020C64

	thumb_func_start sub_02020D2C
sub_02020D2C: ; 0x02020D2C
	push {r4, r5, lr}
	sub sp, #0x24
	add r4, r1, #0
	ldr r1, [r4]
	ldr r3, _02020DA0 ; =0x021094DC
	lsl r1, r1, #0x10
	lsr r1, r1, #0x10
	asr r1, r1, #4
	lsl r2, r1, #1
	lsl r1, r2, #1
	add r2, r2, #1
	lsl r2, r2, #1
	ldrsh r1, [r3, r1]
	ldrsh r2, [r3, r2]
	add r5, r0, #0
	bl sub_020CB0D0
	ldr r0, [r4, #4]
	ldr r3, _02020DA0 ; =0x021094DC
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	asr r0, r0, #4
	lsl r2, r0, #1
	lsl r1, r2, #1
	add r2, r2, #1
	lsl r2, r2, #1
	ldrsh r1, [r3, r1]
	ldrsh r2, [r3, r2]
	add r0, sp, #0
	bl sub_020CB0EC
	add r0, r5, #0
	add r1, sp, #0
	add r2, r5, #0
	bl sub_020CB410
	ldr r0, [r4, #8]
	ldr r3, _02020DA0 ; =0x021094DC
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	asr r0, r0, #4
	lsl r2, r0, #1
	lsl r1, r2, #1
	add r2, r2, #1
	lsl r2, r2, #1
	ldrsh r1, [r3, r1]
	ldrsh r2, [r3, r2]
	add r0, sp, #0
	bl sub_020CB108
	add r0, r5, #0
	add r1, sp, #0
	add r2, r5, #0
	bl sub_020CB410
	add sp, #0x24
	pop {r4, r5, pc}
	nop
_02020DA0: .word 0x021094DC
	thumb_func_end sub_02020D2C

	thumb_func_start sub_02020DA4
sub_02020DA4: ; 0x02020DA4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	add r5, r1, #0
	str r0, [sp]
	add r0, r5, #0
	add r4, r2, #0
	add r6, r3, #0
	bl sub_0201FC30
	add r7, r0, #0
	add r0, r5, #0
	bl sub_0201FBB8
	add r1, r0, #0
	ldr r0, [sp]
	add r2, r7, #0
	bl sub_020CB0D0
	add r0, r4, #0
	bl sub_0201FC30
	add r5, r0, #0
	add r0, r4, #0
	bl sub_0201FBB8
	add r1, r0, #0
	add r0, sp, #4
	add r2, r5, #0
	bl sub_020CB0EC
	ldr r0, [sp]
	add r1, sp, #4
	add r2, r0, #0
	bl sub_020CB410
	add r0, r6, #0
	bl sub_0201FC30
	add r4, r0, #0
	add r0, r6, #0
	bl sub_0201FBB8
	add r1, r0, #0
	add r0, sp, #4
	add r2, r4, #0
	bl sub_020CB108
	ldr r0, [sp]
	add r1, sp, #4
	add r2, r0, #0
	bl sub_020CB410
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02020DA4

	thumb_func_start sub_02020E10
sub_02020E10: ; 0x02020E10
	push {r3, r4, r5, r6, r7, lr}
	asr r0, r0, #4
	add r7, r2, #0
	lsl r2, r0, #1
	add r6, r1, #0
	lsl r0, r2, #1
	ldr r1, _02020E7C ; =0x021094DC
	add r2, r2, #1
	lsl r2, r2, #1
	ldrsh r0, [r1, r0]
	ldrsh r1, [r1, r2]
	add r5, r3, #0
	ldr r4, [sp, #0x18]
	bl sub_020CCBA0
	add r2, r0, #0
	asr r1, r6, #0x1f
	add r0, r6, #0
	asr r3, r2, #0x1f
	bl sub_020F2948
	mov r6, #2
	mov r2, #0
	lsl r6, r6, #0xa
	add r0, r0, r6
	adc r1, r2
	lsl r1, r1, #0x14
	lsr r0, r0, #0xc
	orr r0, r1
	asr r3, r0, #0x1f
	lsr r1, r0, #0x13
	lsl r3, r3, #0xd
	orr r3, r1
	lsl r0, r0, #0xd
	add r0, r0, r6
	adc r3, r2
	lsl r1, r3, #0x14
	lsr r0, r0, #0xc
	orr r0, r1
	asr r1, r0, #0x1f
	asr r3, r7, #0x1f
	add r2, r7, #0
	str r0, [r4]
	bl sub_020F2948
	mov r3, #0
	add r2, r6, #0
	add r2, r0, r2
	adc r1, r3
	lsl r0, r1, #0x14
	lsr r1, r2, #0xc
	orr r1, r0
	str r1, [r5]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02020E7C: .word 0x021094DC
	thumb_func_end sub_02020E10

	thumb_func_start sub_02020E80
sub_02020E80: ; 0x02020E80
	push {r4, r5, r6, r7}
	ldr r6, [r2, #4]
	ldr r7, [r1]
	ldr r4, [r0, #4]
	ldr r5, [r1, #4]
	sub r1, r6, r4
	add r3, r7, #0
	mul r3, r1
	ldr r2, [r2]
	sub r1, r4, r5
	mul r1, r2
	ldr r2, [r0]
	sub r0, r5, r6
	mul r0, r2
	add r0, r1, r0
	add r0, r3, r0
	bmi _02020EA8
	mov r0, #1
	pop {r4, r5, r6, r7}
	bx lr
_02020EA8:
	mov r0, #0
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end sub_02020E80

	thumb_func_start sub_02020EB0
sub_02020EB0: ; 0x02020EB0
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r7, r1, #0
	add r4, r3, #0
	str r2, [sp]
	bl sub_02020E80
	add r6, r0, #0
	add r0, r5, #0
	add r1, r7, #0
	add r2, r4, #0
	bl sub_02020E80
	eor r0, r6
	cmp r0, #1
	bne _02020EF0
	ldr r0, [sp]
	add r1, r4, #0
	add r2, r5, #0
	bl sub_02020E80
	add r5, r0, #0
	ldr r0, [sp]
	add r1, r4, #0
	add r2, r7, #0
	bl sub_02020E80
	eor r0, r5
	cmp r0, #1
	bne _02020EF0
	mov r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_02020EF0:
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02020EB0

	thumb_func_start sub_02020EF4
sub_02020EF4: ; 0x02020EF4
	push {r4, r5, r6, lr}
	sub sp, #8
	add r5, r0, #0
	add r4, r1, #0
	sub r1, r3, r4
	ldr r0, [sp, #0x18]
	add r6, r2, #0
	sub r0, r0, r6
	lsl r0, r0, #0x10
	lsl r1, r1, #0x10
	asr r0, r0, #0x10
	asr r1, r1, #0x10
	beq _02020F1A
	lsl r0, r0, #0xc
	lsl r1, r1, #0xc
	bl sub_020CCBA0
	str r0, [sp]
	b _02020F20
_02020F1A:
	mov r0, #0xff
	lsl r0, r0, #0xc
	str r0, [sp]
_02020F20:
	ldr r0, [sp]
	lsl r2, r4, #0xc
	asr r1, r0, #0x1f
	asr r3, r2, #0x1f
	bl sub_020F2948
	mov r3, #2
	mov r4, #0
	lsl r3, r3, #0xa
	lsl r2, r6, #0xc
	add r3, r0, r3
	adc r1, r4
	lsl r0, r1, #0x14
	lsr r1, r3, #0xc
	orr r1, r0
	ldr r0, [sp]
	sub r1, r2, r1
	str r0, [r5]
	str r1, [sp, #4]
	str r1, [r5, #4]
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end sub_02020EF4

	thumb_func_start sub_02020F4C
sub_02020F4C: ; 0x02020F4C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	ldr r4, [sp, #0x48]
	add r7, r0, #0
	add r5, r1, #0
	add r6, r3, #0
	str r2, [sp, #4]
	cmp r4, #0
	beq _02020F64
	ldr r0, _0202109C ; =0x0000FFFF
	str r0, [r4]
	str r0, [r4, #4]
_02020F64:
	ldr r2, [sp, #4]
	add r0, r7, #0
	add r1, r5, #0
	add r3, r6, #0
	bl sub_02020EB0
	cmp r0, #0
	bne _02020F7A
	add sp, #0x34
	mov r0, #0
	pop {r4, r5, r6, r7, pc}
_02020F7A:
	ldr r0, [r5, #4]
	str r0, [sp]
	ldr r1, [r7]
	ldr r2, [r7, #4]
	ldr r3, [r5]
	add r0, sp, #0x24
	bl sub_02020EF4
	ldr r0, [r6, #4]
	ldr r1, [sp, #4]
	str r0, [sp]
	ldr r2, [sp, #4]
	ldr r1, [r1]
	ldr r2, [r2, #4]
	ldr r3, [r6]
	add r0, sp, #0x1c
	bl sub_02020EF4
	ldr r1, [sp, #0x1c]
	ldr r3, [sp, #0x24]
	cmp r3, r1
	bne _02020FAC
	add sp, #0x34
	mov r0, #0
	pop {r4, r5, r6, r7, pc}
_02020FAC:
	ldr r2, [sp, #0x20]
	ldr r0, [sp, #0x28]
	sub r1, r3, r1
	sub r0, r2, r0
	bl sub_020CCBA0
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x1c]
	ldr r2, [sp, #0xc]
	asr r1, r0, #0x1f
	asr r3, r2, #0x1f
	bl sub_020F2948
	add r2, r0, #0
	ldr r0, [sp, #0x20]
	mov r3, #0
	str r0, [sp, #0x10]
	mov r0, #2
	lsl r0, r0, #0xa
	add r0, r2, r0
	adc r1, r3
	lsr r0, r0, #0xc
	lsl r1, r1, #0x14
	str r0, [sp, #0x14]
	orr r0, r1
	str r0, [sp, #0x14]
	ldr r0, [sp, #0xc]
	add r1, sp, #0x30
	bl sub_020CD788
	mov r1, #2
	lsl r1, r1, #0xa
	cmp r0, r1
	blt _02020FF8
	ldr r2, [sp, #0x30]
	lsl r0, r1, #1
	add r0, r2, r0
	str r0, [sp, #0x30]
_02020FF8:
	ldr r0, [sp, #0x30]
	ldr r1, [sp, #0x10]
	asr r0, r0, #0xc
	str r0, [r4]
	ldr r0, [sp, #0x14]
	add r0, r1, r0
	add r1, sp, #0x2c
	bl sub_020CD788
	mov r1, #2
	lsl r1, r1, #0xa
	cmp r0, r1
	blt _0202101A
	ldr r2, [sp, #0x2c]
	lsl r0, r1, #1
	add r0, r2, r0
	str r0, [sp, #0x2c]
_0202101A:
	ldr r0, [sp, #0x2c]
	asr r0, r0, #0xc
	str r0, [r4, #4]
	ldr r1, [r5]
	ldr r0, [r7]
	cmp r0, r1
	blt _0202102C
	mov ip, r0
	b _02021030
_0202102C:
	mov ip, r1
	add r1, r0, #0
_02021030:
	ldr r2, [r5, #4]
	ldr r0, [r7, #4]
	cmp r0, r2
	blt _0202103C
	str r0, [sp, #8]
	b _02021040
_0202103C:
	str r2, [sp, #8]
	add r2, r0, #0
_02021040:
	ldr r0, [sp, #4]
	ldr r3, [r6]
	ldr r0, [r0]
	cmp r0, r3
	blt _0202104E
	str r0, [sp, #0x18]
	b _02021052
_0202104E:
	str r3, [sp, #0x18]
	add r3, r0, #0
_02021052:
	ldr r0, [sp, #4]
	ldr r5, [r6, #4]
	ldr r0, [r0, #4]
	cmp r0, r5
	blt _02021060
	add r7, r0, #0
	b _02021064
_02021060:
	add r7, r5, #0
	add r5, r0, #0
_02021064:
	ldr r0, [r4]
	mov r6, ip
	cmp r6, r0
	blt _02021094
	cmp r1, r0
	bgt _02021094
	ldr r1, [r4, #4]
	ldr r4, [sp, #8]
	cmp r4, r1
	blt _02021094
	cmp r2, r1
	bgt _02021094
	ldr r2, [sp, #0x18]
	cmp r2, r0
	blt _02021094
	cmp r3, r0
	bgt _02021094
	cmp r7, r1
	blt _02021094
	cmp r5, r1
	bgt _02021094
	add sp, #0x34
	mov r0, #1
	pop {r4, r5, r6, r7, pc}
_02021094:
	mov r0, #0
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	nop
_0202109C: .word 0x0000FFFF
	thumb_func_end sub_02020F4C

	thumb_func_start sub_020210A0
sub_020210A0: ; 0x020210A0
	mov r0, #0
	ldr r3, _020210B8 ; =0x021D2198
	add r1, r0, #0
	mov r2, #5
_020210A8:
	stmia r3!, {r0, r1}
	stmia r3!, {r0, r1}
	sub r2, r2, #1
	bne _020210A8
	stmia r3!, {r0, r1}
	str r0, [r3]
	bx lr
	nop
_020210B8: .word 0x021D2198
	thumb_func_end sub_020210A0

	thumb_func_start sub_020210BC
sub_020210BC: ; 0x020210BC
	push {r3, lr}
	ldr r0, _020210D4 ; =0x021D21D8
	ldrh r0, [r0, #0x18]
	cmp r0, #0
	beq _020210CA
	bl GF_AssertFail
_020210CA:
	ldr r0, _020210D4 ; =0x021D21D8
	mov r1, #0
	strh r1, [r0, #0x18]
	pop {r3, pc}
	nop
_020210D4: .word 0x021D21D8
	thumb_func_end sub_020210BC

	thumb_func_start sub_020210D8
sub_020210D8: ; 0x020210D8
	push {r4, r5, r6, lr}
	sub sp, #8
	add r5, r0, #0
	ldr r0, _02021144 ; =0x021D21D8
	add r6, r1, #0
	ldrh r1, [r0, #0x1a]
	add r4, r2, #0
	cmp r1, #0
	beq _02021104
	mov r0, #0
	str r0, [sp]
	lsl r0, r4, #1
	str r0, [sp, #4]
	mov r0, #1
	add r1, r0, #0
	add r2, r5, #0
	add r3, r6, #0
	bl sub_020211AC
	add sp, #8
	mov r0, #1
	pop {r4, r5, r6, pc}
_02021104:
	cmp r4, #5
	bhs _0202110C
	cmp r4, #0
	bne _02021112
_0202110C:
	add sp, #8
	mov r0, #0
	pop {r4, r5, r6, pc}
_02021112:
	ldrh r0, [r0, #0x18]
	cmp r0, #0
	beq _0202111E
	add sp, #8
	mov r0, #0
	pop {r4, r5, r6, pc}
_0202111E:
	add r0, r4, #0
	bl sub_02021384
	cmp r0, #1
	bne _0202113E
	mov r0, #0
	str r0, [sp]
	lsl r0, r4, #1
	str r0, [sp, #4]
	mov r0, #1
	add r1, r0, #0
	add r2, r5, #0
	add r3, r6, #0
	bl sub_020211AC
	mov r0, #1
_0202113E:
	add sp, #8
	pop {r4, r5, r6, pc}
	nop
_02021144: .word 0x021D21D8
	thumb_func_end sub_020210D8

	thumb_func_start sub_02021148
sub_02021148: ; 0x02021148
	push {r4, lr}
	sub sp, #8
	ldr r1, _020211A8 ; =0x021D21D8
	add r4, r0, #0
	ldrh r2, [r1, #0x1a]
	cmp r2, #0
	beq _0202116E
	mov r2, #0
	str r2, [sp]
	lsl r0, r4, #1
	str r0, [sp, #4]
	mov r0, #2
	mov r1, #1
	add r3, r2, #0
	bl sub_020211AC
	add sp, #8
	mov r0, #1
	pop {r4, pc}
_0202116E:
	cmp r4, #5
	bhs _02021176
	cmp r4, #0
	bne _0202117C
_02021176:
	add sp, #8
	mov r0, #0
	pop {r4, pc}
_0202117C:
	ldrh r1, [r1, #0x18]
	cmp r1, #0
	beq _02021188
	add sp, #8
	mov r0, #0
	pop {r4, pc}
_02021188:
	bl sub_02021384
	cmp r0, #1
	bne _020211A4
	mov r2, #0
	str r2, [sp]
	lsl r0, r4, #1
	str r0, [sp, #4]
	mov r0, #2
	mov r1, #1
	add r3, r2, #0
	bl sub_020211AC
	mov r0, #1
_020211A4:
	add sp, #8
	pop {r4, pc}
	.align 2, 0
_020211A8: .word 0x021D21D8
	thumb_func_end sub_02021148

	thumb_func_start sub_020211AC
sub_020211AC: ; 0x020211AC
	push {r4, lr}
	ldr r4, _020211D0 ; =0x021D21D8
	strh r0, [r4, #0x18]
	ldr r0, _020211D4 ; =0x021D116C
	strb r1, [r0, #8]
	ldr r0, _020211D8 ; =0x021D2198
	ldr r1, [sp, #0xc]
	str r2, [r0]
	str r3, [r0, #4]
	str r1, [r0, #8]
	ldr r1, [sp, #8]
	str r1, [r0, #0x54]
	ldr r0, _020211DC ; =0x021D21A4
	mov r1, #9
	bl sub_020211E0
	pop {r4, pc}
	nop
_020211D0: .word 0x021D21D8
_020211D4: .word 0x021D116C
_020211D8: .word 0x021D2198
_020211DC: .word 0x021D21A4
	thumb_func_end sub_020211AC

	thumb_func_start sub_020211E0
sub_020211E0: ; 0x020211E0
	mov r3, #0
	cmp r1, #0
	ble _020211F2
	add r2, r3, #0
_020211E8:
	add r3, r3, #1
	strh r2, [r0, #4]
	add r0, #8
	cmp r3, r1
	blt _020211E8
_020211F2:
	bx lr
	thumb_func_end sub_020211E0

	thumb_func_start sub_020211F4
sub_020211F4: ; 0x020211F4
	push {r4, r5, r6, lr}
	ldr r0, _02021234 ; =0x021D21D8
	mov r5, #0
	ldrh r0, [r0, #0x18]
	cmp r0, #0
	bne _02021204
	mov r0, #1
	pop {r4, r5, r6, pc}
_02021204:
	mov r4, #4
	add r6, r4, #0
_02021208:
	bl sub_020DA308
	add r0, r4, #0
	bl sub_020DA804
	add r0, r6, #0
	bl sub_020DA81C
	cmp r0, #0
	beq _0202121E
	add r5, r5, #1
_0202121E:
	cmp r0, #0
	beq _02021226
	cmp r5, #5
	bls _02021208
_02021226:
	cmp r5, #5
	bls _0202122E
	mov r0, #2
	pop {r4, r5, r6, pc}
_0202122E:
	mov r0, #1
	pop {r4, r5, r6, pc}
	nop
_02021234: .word 0x021D21D8
	thumb_func_end sub_020211F4

	thumb_func_start sub_02021238
sub_02021238: ; 0x02021238
	push {r4, lr}
	sub sp, #8
	ldr r0, _0202127C ; =0x021D21D8
	ldrh r0, [r0, #0x1a]
	cmp r0, #0
	beq _0202125A
	mov r0, #0
	str r0, [sp]
	add r1, r0, #0
	add r2, r0, #0
	add r3, r0, #0
	str r0, [sp, #4]
	bl sub_020211AC
	add sp, #8
	mov r0, #1
	pop {r4, pc}
_0202125A:
	bl sub_020211F4
	add r4, r0, #0
	cmp r4, #1
	bne _02021274
	mov r0, #0
	str r0, [sp]
	add r1, r0, #0
	add r2, r0, #0
	add r3, r0, #0
	str r0, [sp, #4]
	bl sub_020211AC
_02021274:
	add r0, r4, #0
	add sp, #8
	pop {r4, pc}
	nop
_0202127C: .word 0x021D21D8
	thumb_func_end sub_02021238

	thumb_func_start sub_02021280
sub_02021280: ; 0x02021280
	push {r3, r4, r5, r6, r7, lr}
	add r7, r2, #0
	ldr r2, _020212E4 ; =0x021D21D8
	add r4, r1, #0
	ldrh r3, [r2, #0x1a]
	add r5, r0, #0
	mov r1, #3
	cmp r3, #0
	beq _020212A6
	cmp r5, #0
	beq _0202129A
	bl sub_02021528
_0202129A:
	cmp r4, #2
	bne _020212A2
	mov r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_020212A2:
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_020212A6:
	ldrh r0, [r2, #0x18]
	cmp r0, #0
	beq _020212DE
	bl sub_020DA4E4
	add r6, r0, #0
	ldr r0, _020212E8 ; =0x021D21A4
	mov r1, #9
	bl sub_020212EC
	cmp r5, #0
	beq _020212C6
	add r0, r5, #0
	add r1, r6, #0
	bl sub_02021540
_020212C6:
	ldr r0, _020212E4 ; =0x021D21D8
	ldrh r0, [r0, #0x18]
	cmp r0, #1
	bne _020212DC
	add r0, r4, #0
	add r1, r6, #0
	add r2, r7, #0
	bl sub_020213C8
	add r1, r0, #0
	b _020212DE
_020212DC:
	mov r1, #1
_020212DE:
	add r0, r1, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020212E4: .word 0x021D21D8
_020212E8: .word 0x021D21A4
	thumb_func_end sub_02021280

	thumb_func_start sub_020212EC
sub_020212EC: ; 0x020212EC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r5, r0, #0
	mov r7, #0
	str r1, [sp]
	add r0, r1, #0
	beq _02021322
	add r4, r5, #0
	add r6, sp, #4
_020212FE:
	add r0, sp, #4
	add r1, r5, #0
	bl sub_020DA6E0
	ldrh r0, [r6]
	add r7, r7, #1
	add r5, #8
	strh r0, [r4]
	ldrh r0, [r6, #2]
	strh r0, [r4, #2]
	ldrh r0, [r6, #4]
	strh r0, [r4, #4]
	ldrh r0, [r6, #6]
	strh r0, [r4, #6]
	ldr r0, [sp]
	add r4, #8
	cmp r7, r0
	blo _020212FE
_02021322:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_020212EC

	thumb_func_start sub_02021328
sub_02021328: ; 0x02021328
	push {r3, lr}
	ldr r0, _02021354 ; =0x021D21D8
	ldrh r1, [r0, #0x1a]
	cmp r1, #0
	beq _02021350
	ldrh r0, [r0, #0x18]
	cmp r0, #0
	beq _02021350
	ldr r0, _02021358 ; =0x021D2198
	ldr r0, [r0, #8]
	lsr r0, r0, #1
	bl sub_02021384
	cmp r0, #1
	beq _0202134A
	bl GF_AssertFail
_0202134A:
	ldr r0, _02021354 ; =0x021D21D8
	mov r1, #0
	strh r1, [r0, #0x1a]
_02021350:
	pop {r3, pc}
	nop
_02021354: .word 0x021D21D8
_02021358: .word 0x021D2198
	thumb_func_end sub_02021328

	thumb_func_start sub_0202135C
sub_0202135C: ; 0x0202135C
	push {r3, lr}
	ldr r0, _02021380 ; =0x021D21D8
	ldrh r1, [r0, #0x1a]
	cmp r1, #1
	beq _0202137E
	ldrh r0, [r0, #0x18]
	cmp r0, #0
	beq _0202137E
	bl sub_020211F4
	cmp r0, #1
	beq _02021378
	bl GF_AssertFail
_02021378:
	ldr r0, _02021380 ; =0x021D21D8
	mov r1, #1
	strh r1, [r0, #0x1a]
_0202137E:
	pop {r3, pc}
	.align 2, 0
_02021380: .word 0x021D21D8
	thumb_func_end sub_0202135C

	thumb_func_start sub_02021384
sub_02021384: ; 0x02021384
	push {r3, r4, r5, r6, r7, lr}
	mov r5, #0
	lsl r0, r0, #0x10
	ldr r7, _020213C4 ; =0x021D21A4
	add r6, r5, #0
	lsr r4, r0, #0x10
_02021390:
	add r0, r6, #0
	add r1, r4, #0
	add r2, r7, #0
	mov r3, #9
	bl sub_020DA208
	mov r0, #2
	bl sub_020DA804
	mov r0, #2
	bl sub_020DA81C
	cmp r0, #0
	beq _020213AE
	add r5, r5, #1
_020213AE:
	cmp r0, #0
	beq _020213B6
	cmp r5, #5
	ble _02021390
_020213B6:
	cmp r5, #5
	ble _020213BE
	mov r0, #2
	pop {r3, r4, r5, r6, r7, pc}
_020213BE:
	mov r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020213C4: .word 0x021D21A4
	thumb_func_end sub_02021384

	thumb_func_start sub_020213C8
sub_020213C8: ; 0x020213C8
	push {r3, lr}
	cmp r0, #5
	bhi _020213F2
	add r3, r0, r0
	add r3, pc
	ldrh r3, [r3, #6]
	lsl r3, r3, #0x10
	asr r3, r3, #0x10
	add pc, r3
_020213DA: ; jump table
	.short _020213F2 - _020213DA - 2 ; case 0
	.short _020213E6 - _020213DA - 2 ; case 1
	.short _020213F2 - _020213DA - 2 ; case 2
	.short _020213E6 - _020213DA - 2 ; case 3
	.short _020213EC - _020213DA - 2 ; case 4
	.short _020213EC - _020213DA - 2 ; case 5
_020213E6:
	bl sub_020213F8
	pop {r3, pc}
_020213EC:
	bl sub_020214B0
	pop {r3, pc}
_020213F2:
	mov r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_020213C8

	thumb_func_start sub_020213F8
sub_020213F8: ; 0x020213F8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	ldr r5, _020214A8 ; =0x021D2198
	str r1, [sp, #4]
	ldr r1, [r5, #8]
	str r0, [sp]
	add r7, r2, #0
	mov r4, #0
	cmp r1, #0
	bls _0202149E
_0202140C:
	ldr r0, [sp, #4]
	sub r0, r0, r1
	add r0, r4, r0
	add r0, r0, #1
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	bpl _02021420
	add r0, #9
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
_02021420:
	lsl r1, r0, #3
	ldr r0, _020214AC ; =0x021D2198
	add r1, r0, r1
	ldrh r0, [r1, #0x10]
	cmp r0, #1
	bne _02021496
	ldrh r0, [r1, #0x12]
	cmp r0, #0
	bne _02021496
	ldr r2, [r5, #0x54]
	ldr r0, [r5]
	lsl r2, r2, #3
	add r2, r0, r2
	add r0, r2, #0
	sub r0, #8
	ldrh r3, [r1, #0xc]
	ldrh r0, [r0]
	cmp r0, r3
	blt _0202144A
	sub r3, r0, r3
	b _0202144C
_0202144A:
	sub r3, r3, r0
_0202144C:
	sub r6, r2, #6
	ldrh r0, [r1, #0xe]
	ldrh r6, [r6]
	cmp r6, r0
	blt _0202145A
	sub r0, r6, r0
	b _0202145C
_0202145A:
	sub r0, r0, r6
_0202145C:
	cmp r3, r7
	bhs _02021464
	cmp r0, r7
	blo _02021496
_02021464:
	ldrh r0, [r1, #0xc]
	strh r0, [r2]
	ldrh r0, [r1, #0xe]
	strh r0, [r2, #2]
	ldrh r0, [r1, #0x10]
	strh r0, [r2, #4]
	ldrh r0, [r1, #0x12]
	strh r0, [r2, #6]
	ldr r0, [r5, #0x54]
	add r0, r0, #1
	str r0, [r5, #0x54]
	ldr r1, [r5, #4]
	cmp r0, r1
	blo _02021496
	ldr r2, [sp]
	cmp r2, #1
	bne _0202148E
	bl sub_020F2BA4
	str r1, [r5, #0x54]
	b _02021496
_0202148E:
	mov r0, #0
	add sp, #8
	mvn r0, r0
	pop {r3, r4, r5, r6, r7, pc}
_02021496:
	ldr r1, [r5, #8]
	add r4, r4, #1
	cmp r4, r1
	blo _0202140C
_0202149E:
	ldr r0, _020214A8 ; =0x021D2198
	ldr r0, [r0, #0x54]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020214A8: .word 0x021D2198
_020214AC: .word 0x021D2198
	thumb_func_end sub_020213F8

	thumb_func_start sub_020214B0
sub_020214B0: ; 0x020214B0
	push {r3, r4, r5, r6, r7, lr}
	ldr r5, _02021520 ; =0x021D2198
	str r1, [sp]
	ldr r1, [r5, #8]
	add r7, r0, #0
	mov r4, #0
	cmp r1, #0
	bls _02021518
_020214C0:
	ldr r0, [sp]
	sub r0, r0, r1
	add r0, r4, r0
	add r0, r0, #1
	lsl r0, r0, #0x10
	asr r1, r0, #0x10
	bpl _020214D4
	add r1, #9
	lsl r0, r1, #0x10
	asr r1, r0, #0x10
_020214D4:
	ldr r0, [r5, #0x54]
	lsl r1, r1, #3
	lsl r3, r0, #3
	ldr r0, _02021524 ; =0x021D2198
	ldr r6, [r5]
	add r2, r0, r1
	ldrh r0, [r2, #0xc]
	add r1, r6, r3
	strh r0, [r6, r3]
	ldrh r0, [r2, #0xe]
	strh r0, [r1, #2]
	ldrh r0, [r2, #0x10]
	strh r0, [r1, #4]
	ldrh r0, [r2, #0x12]
	strh r0, [r1, #6]
	ldr r0, [r5, #0x54]
	add r0, r0, #1
	str r0, [r5, #0x54]
	ldr r1, [r5, #4]
	cmp r0, r1
	blo _02021510
	cmp r7, #4
	bne _0202150A
	bl sub_020F2BA4
	str r1, [r5, #0x54]
	b _02021510
_0202150A:
	mov r0, #0
	mvn r0, r0
	pop {r3, r4, r5, r6, r7, pc}
_02021510:
	ldr r1, [r5, #8]
	add r4, r4, #1
	cmp r4, r1
	blo _020214C0
_02021518:
	ldr r0, _02021520 ; =0x021D2198
	ldr r0, [r0, #0x54]
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02021520: .word 0x021D2198
_02021524: .word 0x021D2198
	thumb_func_end sub_020214B0

	thumb_func_start sub_02021528
sub_02021528: ; 0x02021528
	mov r2, #0
	strh r2, [r0]
	add r1, r2, #0
_0202152E:
	strh r1, [r0, #8]
	strh r1, [r0, #6]
	strh r1, [r0, #2]
	strh r1, [r0, #4]
	add r2, r2, #1
	add r0, #8
	cmp r2, #8
	blt _0202152E
	bx lr
	thumb_func_end sub_02021528

	thumb_func_start sub_02021540
sub_02021540: ; 0x02021540
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r4, r1, #0
	bl sub_02021528
	ldr r0, _02021598 ; =0x021D2198
	mov r6, #0
	ldr r1, [r0, #8]
	cmp r1, #0
	bls _02021596
	ldr r2, _0202159C ; =0x021D2198
_02021556:
	sub r1, r4, r1
	add r1, r6, r1
	add r1, r1, #1
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	bpl _02021568
	add r1, #9
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
_02021568:
	lsl r1, r1, #3
	add r3, r2, r1
	ldrh r1, [r3, #0x12]
	cmp r1, #0
	bne _0202158E
	ldrh r1, [r5]
	ldrh r7, [r3, #0xc]
	lsl r1, r1, #3
	add r1, r5, r1
	strh r7, [r1, #2]
	ldrh r7, [r3, #0xe]
	strh r7, [r1, #4]
	ldrh r7, [r3, #0x10]
	strh r7, [r1, #6]
	ldrh r3, [r3, #0x12]
	strh r3, [r1, #8]
	ldrh r1, [r5]
	add r1, r1, #1
	strh r1, [r5]
_0202158E:
	ldr r1, [r0, #8]
	add r6, r6, #1
	cmp r6, r1
	blo _02021556
_02021596:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02021598: .word 0x021D2198
_0202159C: .word 0x021D2198
	thumb_func_end sub_02021540

	thumb_func_start sub_020215A0
sub_020215A0: ; 0x020215A0
	ldr r1, _020215B4 ; =0x04001000
	ldr r2, [r1]
	ldr r1, _020215B8 ; =0x00300010
	lsl r3, r1, #0x16
	ldr r3, [r3]
	and r2, r1
	and r1, r3
	ldr r3, _020215BC ; =sub_020215C0
	bx r3
	nop
_020215B4: .word 0x04001000
_020215B8: .word 0x00300010
_020215BC: .word sub_020215C0
	thumb_func_end sub_020215A0

	thumb_func_start sub_020215C0
sub_020215C0: ; 0x020215C0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r5, r0, #0
	ldr r0, _02021680 ; =0x021D21F4
	str r1, [sp]
	ldr r0, [r0]
	str r2, [sp, #4]
	cmp r0, #0
	bne _0202167A
	ldr r0, [r5, #0xc]
	mov r1, #0x3c
	bl sub_0201AA8C
	add r1, r0, #0
	ldr r0, _02021680 ; =0x021D21F4
	mov r2, #0x3c
	str r1, [r0]
	mov r0, #0
	bl sub_020D47EC
	ldr r1, _02021680 ; =0x021D21F4
	ldr r2, [r5]
	ldr r0, [r1]
	str r2, [r0, #4]
	ldr r1, [r1]
	ldr r0, [r5, #0xc]
	ldr r2, [r1, #4]
	mov r1, #0x54
	mul r1, r2
	bl sub_0201AA8C
	ldr r7, _02021680 ; =0x021D21F4
	mov r6, #0
	ldr r1, [r7]
	str r0, [r1]
	ldr r0, [r5]
	cmp r0, #0
	ble _02021622
	add r4, r6, #0
_0202160E:
	ldr r0, [r7]
	ldr r0, [r0]
	add r0, r0, r4
	bl sub_02021C08
	ldr r0, [r5]
	add r6, r6, #1
	add r4, #0x54
	cmp r6, r0
	blt _0202160E
_02021622:
	ldr r0, [sp]
	bl sub_02022448
	ldr r1, _02021680 ; =0x021D21F4
	ldr r1, [r1]
	str r0, [r1, #0x2c]
	ldr r0, [sp, #4]
	bl sub_02022448
	ldr r2, _02021680 ; =0x021D21F4
	mov r3, #1
	ldr r1, [r2]
	lsl r3, r3, #0x1a
	str r0, [r1, #0x30]
	ldr r0, [r3]
	ldr r1, _02021684 ; =0xFFCFFFEF
	add r4, r0, #0
	ldr r0, [sp]
	and r4, r1
	orr r0, r4
	str r0, [r3]
	ldr r3, _02021688 ; =0x04001000
	ldr r0, [r3]
	and r1, r0
	ldr r0, [sp, #4]
	orr r0, r1
	str r0, [r3]
	ldr r1, [r2]
	ldr r0, [r5, #4]
	ldr r1, [r1, #0x2c]
	bl sub_020224A8
	ldr r1, _02021680 ; =0x021D21F4
	add r4, r0, #0
	ldr r1, [r1]
	ldr r0, [r5, #8]
	ldr r1, [r1, #0x30]
	bl sub_020224A8
	add r1, r0, #0
	ldr r2, [r5, #0xc]
	add r0, r4, #0
	bl sub_020221D0
_0202167A:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02021680: .word 0x021D21F4
_02021684: .word 0xFFCFFFEF
_02021688: .word 0x04001000
	thumb_func_end sub_020215C0

	thumb_func_start sub_0202168C
sub_0202168C: ; 0x0202168C
	push {r3, lr}
	ldr r0, _020216C4 ; =0x021D21F4
	ldr r0, [r0]
	cmp r0, #0
	beq _020216C2
	ldr r0, [r0, #0x34]
	bl sub_02022238
	ldr r0, _020216C4 ; =0x021D21F4
	ldr r0, [r0]
	ldr r0, [r0, #0x38]
	bl sub_02022238
	bl sub_020218D4
	ldr r0, _020216C4 ; =0x021D21F4
	ldr r0, [r0]
	ldr r0, [r0]
	bl sub_0201AB0C
	ldr r0, _020216C4 ; =0x021D21F4
	ldr r0, [r0]
	bl sub_0201AB0C
	ldr r0, _020216C4 ; =0x021D21F4
	mov r1, #0
	str r1, [r0]
_020216C2:
	pop {r3, pc}
	.align 2, 0
_020216C4: .word 0x021D21F4
	thumb_func_end sub_0202168C

	thumb_func_start sub_020216C8
sub_020216C8: ; 0x020216C8
	push {r3, lr}
	ldr r0, _020216F0 ; =0x021D21F4
	mov r2, #0
	ldr r1, [r0]
	str r2, [r1, #0xc]
	ldr r1, [r0]
	str r2, [r1, #0x10]
	ldr r0, [r0]
	ldr r0, [r0, #0x34]
	bl sub_02022278
	ldr r0, _020216F0 ; =0x021D21F4
	ldr r0, [r0]
	ldr r0, [r0, #0x38]
	bl sub_02022278
	bl sub_02022060
	pop {r3, pc}
	nop
_020216F0: .word 0x021D21F4
	thumb_func_end sub_020216C8

	thumb_func_start sub_020216F4
sub_020216F4: ; 0x020216F4
	push {r3, r4, lr}
	sub sp, #0xc
	add r4, r0, #0
	add r3, r1, #0
	cmp r2, #1
	add r0, sp, #4
	bne _0202172A
	str r0, [sp]
	ldr r0, _02021754 ; =0x021D21F4
	add r2, r3, #0
	ldr r0, [r0]
	add r1, r4, #0
	ldr r0, [r0, #0x1c]
	add r3, sp, #8
	bl sub_0202256C
	ldr r3, [sp, #4]
	cmp r3, #0
	ble _02021750
	mov r2, #0
	str r2, [sp]
	ldr r1, [sp, #8]
	mov r0, #1
	bl sub_02021EC0
	add sp, #0xc
	pop {r3, r4, pc}
_0202172A:
	str r0, [sp]
	ldr r0, _02021754 ; =0x021D21F4
	add r2, r3, #0
	ldr r0, [r0]
	add r1, r4, #0
	ldr r0, [r0, #0x20]
	add r3, sp, #8
	bl sub_0202256C
	ldr r0, [sp, #4]
	cmp r0, #0
	ble _02021750
	str r0, [sp]
	mov r1, #0
	ldr r2, [sp, #8]
	mov r0, #2
	add r3, r1, #0
	bl sub_02021EC0
_02021750:
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
_02021754: .word 0x021D21F4
	thumb_func_end sub_020216F4

	thumb_func_start sub_02021758
sub_02021758: ; 0x02021758
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [r5, #8]
	bl sub_0202180C
	cmp r0, #1
	bne _0202176A
	bl GF_AssertFail
_0202176A:
	bl sub_02022024
	add r4, r0, #0
	bne _0202177A
	bl GF_AssertFail
	mov r0, #0
	pop {r3, r4, r5, pc}
_0202177A:
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02021C2C
	cmp r0, #0
	bne _0202178A
	mov r0, #0
	pop {r3, r4, r5, pc}
_0202178A:
	add r0, r4, #0
	bl sub_02021C9C
	cmp r0, #0
	bne _0202179E
	ldr r0, [r4, #0xc]
	bl sub_02021884
	mov r0, #0
	pop {r3, r4, r5, pc}
_0202179E:
	ldr r0, _020217AC ; =0x021D21F4
	ldr r1, [r0]
	ldr r0, [r1, #8]
	add r0, r0, #1
	str r0, [r1, #8]
	mov r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
_020217AC: .word 0x021D21F4
	thumb_func_end sub_02021758

	thumb_func_start sub_020217B0
sub_020217B0: ; 0x020217B0
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [r5, #8]
	bl sub_0202180C
	cmp r0, #1
	bne _020217C2
	bl GF_AssertFail
_020217C2:
	bl sub_02022024
	add r4, r0, #0
	bne _020217D2
	bl GF_AssertFail
	mov r0, #0
	pop {r3, r4, r5, pc}
_020217D2:
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02021C2C
	cmp r0, #0
	bne _020217E2
	mov r0, #0
	pop {r3, r4, r5, pc}
_020217E2:
	mov r0, #1
	str r0, [r4, #0x40]
	add r0, r4, #0
	bl sub_02021C9C
	cmp r0, #0
	bne _020217FA
	ldr r0, [r4, #0xc]
	bl sub_02021884
	mov r0, #0
	pop {r3, r4, r5, pc}
_020217FA:
	ldr r0, _02021808 ; =0x021D21F4
	ldr r1, [r0]
	ldr r0, [r1, #8]
	add r0, r0, #1
	str r0, [r1, #8]
	mov r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
_02021808: .word 0x021D21F4
	thumb_func_end sub_020217B0

	thumb_func_start sub_0202180C
sub_0202180C: ; 0x0202180C
	push {r3, r4}
	ldr r1, _02021838 ; =0x021D21F4
	mov r2, #0
	ldr r4, [r1]
	ldr r1, [r4, #4]
	cmp r1, #0
	ble _02021832
	ldr r3, [r4]
_0202181C:
	ldr r1, [r3, #0xc]
	cmp r0, r1
	bne _02021828
	mov r0, #1
	pop {r3, r4}
	bx lr
_02021828:
	ldr r1, [r4, #4]
	add r2, r2, #1
	add r3, #0x54
	cmp r2, r1
	blt _0202181C
_02021832:
	mov r0, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
_02021838: .word 0x021D21F4
	thumb_func_end sub_0202180C

	thumb_func_start sub_0202183C
sub_0202183C: ; 0x0202183C
	push {r3, r4, r5, lr}
	add r4, r0, #0
	add r5, r1, #0
	bne _02021848
	bl GF_AssertFail
_02021848:
	add r0, r4, #0
	bl sub_02021D70
	add r4, r0, #0
	bne _02021856
	bl GF_AssertFail
_02021856:
	str r5, [r4]
	ldr r1, [r4, #4]
	mov r0, #1
	tst r0, r1
	beq _0202186C
	ldr r1, [r4, #0x34]
	ldr r2, [r5, #0x14]
	ldr r3, [r5, #0x10]
	mov r0, #0x13
	bl sub_020205D8
_0202186C:
	ldr r1, [r4, #4]
	mov r0, #2
	tst r0, r1
	beq _02021880
	ldr r1, [r4, #0x38]
	ldr r2, [r5, #0x14]
	ldr r3, [r5, #0x10]
	mov r0, #0x23
	bl sub_020205D8
_02021880:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0202183C

	thumb_func_start sub_02021884
sub_02021884: ; 0x02021884
	push {r3, r4, r5, r6, r7, lr}
	add r6, r0, #0
	mov r5, #1
	mov r7, #0
_0202188C:
	add r0, r6, #0
	bl sub_02021D70
	add r4, r0, #0
	bne _0202189A
	bl GF_AssertFail
_0202189A:
	add r0, r4, #0
	add r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #4
	bne _020218AE
	add r0, r4, #0
	add r0, #0x10
	bl sub_02021A50
	b _020218B0
_020218AE:
	add r5, r7, #0
_020218B0:
	cmp r5, #0
	bne _0202188C
	add r0, r4, #0
	add r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #0
	beq _020218CE
	add r0, r4, #0
	bl sub_02021D58
	ldr r0, _020218D0 ; =0x021D21F4
	ldr r1, [r0]
	ldr r0, [r1, #8]
	sub r0, r0, #1
	str r0, [r1, #8]
_020218CE:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_020218D0: .word 0x021D21F4
	thumb_func_end sub_02021884

	thumb_func_start sub_020218D4
sub_020218D4: ; 0x020218D4
	push {r4, r5, r6, lr}
	ldr r6, _0202190C ; =0x021D21F4
	mov r4, #0
	ldr r1, [r6]
	ldr r0, [r1, #4]
	cmp r0, #0
	ble _0202190A
	add r5, r4, #0
_020218E4:
	ldr r1, [r1]
	add r0, r1, r5
	add r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #0
	beq _020218FE
	add r0, r1, r5
	bl sub_02021D58
	ldr r1, [r6]
	ldr r0, [r1, #8]
	sub r0, r0, #1
	str r0, [r1, #8]
_020218FE:
	ldr r1, [r6]
	add r4, r4, #1
	ldr r0, [r1, #4]
	add r5, #0x54
	cmp r4, r0
	blt _020218E4
_0202190A:
	pop {r4, r5, r6, pc}
	.align 2, 0
_0202190C: .word 0x021D21F4
	thumb_func_end sub_020218D4

	thumb_func_start sub_02021910
sub_02021910: ; 0x02021910
	push {r4, lr}
	bl sub_02021D70
	add r4, r0, #0
	bne _0202191E
	bl GF_AssertFail
_0202191E:
	add r0, r4, #0
	add r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #0
	bne _0202192C
	mov r0, #0
	pop {r4, pc}
_0202192C:
	add r4, #0x10
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02021910

	thumb_func_start sub_02021934
sub_02021934: ; 0x02021934
	push {r3, r4, r5, lr}
	sub sp, #0x18
	add r5, r1, #0
	bl sub_02021D70
	add r4, r0, #0
	bne _02021946
	bl GF_AssertFail
_02021946:
	add r0, r4, #0
	add r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #0
	bne _02021956
	add sp, #0x18
	mov r0, #0
	pop {r3, r4, r5, pc}
_02021956:
	add r0, sp, #0xc
	str r0, [sp]
	add r0, sp, #8
	str r0, [sp, #4]
	ldr r0, [r4, #4]
	add r1, sp, #0x14
	add r2, sp, #0x10
	add r3, r5, #0
	bl sub_02021DE4
	add r0, r4, #0
	add r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #3
	bne _0202197A
	add sp, #0x18
	mov r0, #0
	pop {r3, r4, r5, pc}
_0202197A:
	add r0, r4, #0
	mov r1, #3
	add r0, #0x3c
	strb r1, [r0]
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	add r0, r4, #0
	bl sub_02021E90
	mov r0, #1
	str r0, [r4, #0x48]
	ldr r0, [sp, #0xc]
	str r0, [r4, #0x4c]
	ldr r0, [sp, #8]
	str r0, [r4, #0x50]
	add r0, r4, #0
	bl sub_02021FB0
	ldr r0, [sp, #8]
	str r0, [sp]
	ldr r0, [r4, #4]
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #0xc]
	bl sub_02021EC0
	add r4, #0x10
	add r0, r4, #0
	add sp, #0x18
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02021934

	thumb_func_start sub_020219B8
sub_020219B8: ; 0x020219B8
	push {r3, r4, r5, lr}
	sub sp, #0x18
	bl sub_02021C50
	add r4, r0, #0
	bne _020219C8
	bl GF_AssertFail
_020219C8:
	bl sub_02022024
	add r5, r0, #0
	bne _020219D4
	bl GF_AssertFail
_020219D4:
	add r0, r4, #0
	add r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #3
	beq _020219E4
	add sp, #0x18
	mov r0, #0
	pop {r3, r4, r5, pc}
_020219E4:
	add r3, r5, #0
	mov r2, #0xa
_020219E8:
	ldmia r4!, {r0, r1}
	stmia r3!, {r0, r1}
	sub r2, r2, #1
	bne _020219E8
	ldr r0, [r4]
	mov r1, #4
	str r0, [r3]
	add r0, r5, #0
	add r0, #0x3c
	strb r1, [r0]
	ldr r0, [r5, #4]
	mov r1, #1
	tst r1, r0
	beq _02021A08
	ldr r3, [r5, #0x4c]
	b _02021A0A
_02021A08:
	ldr r3, [r5, #0x50]
_02021A0A:
	add r1, sp, #0xc
	str r1, [sp]
	add r1, sp, #8
	str r1, [sp, #4]
	add r1, sp, #0x14
	add r2, sp, #0x10
	bl sub_02021DE4
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	add r0, r5, #0
	bl sub_02021E90
	mov r0, #1
	str r0, [r5, #0x48]
	ldr r0, [sp, #0xc]
	str r0, [r5, #0x4c]
	ldr r0, [sp, #8]
	str r0, [r5, #0x50]
	add r0, r5, #0
	bl sub_02021FB0
	ldr r0, [sp, #8]
	str r0, [sp]
	ldr r0, [r5, #4]
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #0xc]
	bl sub_02021EC0
	add r5, #0x10
	add r0, r5, #0
	add sp, #0x18
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_020219B8

	thumb_func_start sub_02021A50
sub_02021A50: ; 0x02021A50
	push {r4, r5, r6, lr}
	ldr r2, _02021AC4 ; =0x021D21F4
	mov r1, #0
	ldr r5, [r2]
	ldr r4, [r5, #4]
	cmp r4, #0
	ble _02021A8E
	ldr r2, [r5]
	add r3, r1, #0
_02021A62:
	add r6, r2, #0
	add r6, #0x3c
	ldrb r6, [r6]
	cmp r6, #3
	beq _02021A78
	ldr r6, [r5]
	add r6, r6, r3
	add r6, #0x3c
	ldrb r6, [r6]
	cmp r6, #4
	bne _02021A82
_02021A78:
	ldr r6, [r5]
	add r6, r6, r3
	add r6, #0x10
	cmp r6, r0
	beq _02021A8E
_02021A82:
	ldr r6, [r5, #4]
	add r1, r1, #1
	add r2, #0x54
	add r3, #0x54
	cmp r1, r6
	blt _02021A62
_02021A8E:
	cmp r1, r4
	bge _02021AC2
	mov r0, #0x54
	add r4, r1, #0
	mul r4, r0
	ldr r0, [r5]
	add r0, r0, r4
	bl sub_020223C4
	ldr r0, _02021AC4 ; =0x021D21F4
	ldr r1, [r0]
	ldr r2, [r1]
	add r2, #0x3c
	ldrb r1, [r2, r4]
	cmp r1, #3
	bne _02021AB4
	mov r0, #2
	strb r0, [r2, r4]
	pop {r4, r5, r6, pc}
_02021AB4:
	mov r1, #0
	strb r1, [r2, r4]
	ldr r0, [r0]
	ldr r0, [r0]
	add r0, r0, r4
	bl sub_02021C08
_02021AC2:
	pop {r4, r5, r6, pc}
	.align 2, 0
_02021AC4: .word 0x021D21F4
	thumb_func_end sub_02021A50

	thumb_func_start sub_02021AC8
sub_02021AC8: ; 0x02021AC8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	add r6, r0, #0
	add r5, r2, #0
	add r4, r3, #0
	cmp r1, #0
	bne _02021B02
	add r1, r5, #0
	add r2, sp, #0x14
	add r3, sp, #0x10
	bl sub_020224C0
	add r7, r0, #0
	beq _02021B52
	add r0, r6, #0
	add r1, r5, #0
	bl sub_02022510
	strh r5, [r4, #8]
	str r6, [r4]
	cmp r5, #1
	bne _02021AF8
	ldr r0, [sp, #0x14]
	b _02021AFA
_02021AF8:
	ldr r0, [sp, #0x10]
_02021AFA:
	str r0, [r4, #4]
	mov r0, #0
	strh r0, [r4, #0xa]
	b _02021B52
_02021B02:
	add r0, sp, #0xc
	str r0, [sp]
	add r0, sp, #8
	str r0, [sp, #4]
	add r0, r5, #0
	add r1, sp, #0x14
	add r2, sp, #0x10
	add r3, r6, #0
	bl sub_02021DE4
	add r7, r0, #0
	beq _02021B52
	ldr r0, [sp, #8]
	str r0, [sp]
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #0xc]
	add r0, r5, #0
	bl sub_02021EC0
	strh r5, [r4, #8]
	cmp r5, #1
	bne _02021B3E
	ldr r0, [sp, #0xc]
	str r0, [r4]
	ldr r0, _02021B58 ; =0x021D21F4
	ldr r1, [sp, #0x14]
	ldr r0, [r0]
	ldr r0, [r0, #0x1c]
	b _02021B4A
_02021B3E:
	ldr r0, [sp, #8]
	str r0, [r4]
	ldr r0, _02021B58 ; =0x021D21F4
	ldr r1, [sp, #0x10]
	ldr r0, [r0]
	ldr r0, [r0, #0x20]
_02021B4A:
	add r0, r1, r0
	str r0, [r4, #4]
	mov r0, #1
	strh r0, [r4, #0xa]
_02021B52:
	add r0, r7, #0
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02021B58: .word 0x021D21F4
	thumb_func_end sub_02021AC8

	thumb_func_start sub_02021B5C
sub_02021B5C: ; 0x02021B5C
	push {r3, r4, r5, lr}
	add r4, r0, #0
	ldrh r0, [r4, #0xa]
	cmp r0, #0
	beq _02021BCA
	ldrh r1, [r4, #8]
	mov r0, #1
	tst r0, r1
	beq _02021B98
	ldr r1, _02021BCC ; =0x021D21F4
	ldr r0, [r4]
	ldr r1, [r1]
	ldr r1, [r1, #0x2c]
	bl sub_020224A8
	add r5, r0, #0
	ldr r0, _02021BCC ; =0x021D21F4
	ldr r1, [r4, #4]
	ldr r2, [r0]
	ldr r0, [r2, #0x1c]
	sub r0, r1, r0
	ldr r1, [r2, #0x2c]
	bl sub_020224A8
	ldr r2, _02021BCC ; =0x021D21F4
	add r1, r5, #0
	ldr r2, [r2]
	ldr r2, [r2, #0x34]
	bl sub_02022374
_02021B98:
	ldrh r1, [r4, #8]
	mov r0, #2
	tst r0, r1
	beq _02021BCA
	ldr r1, _02021BCC ; =0x021D21F4
	ldr r0, [r4]
	ldr r1, [r1]
	ldr r1, [r1, #0x30]
	bl sub_020224A8
	add r5, r0, #0
	ldr r0, _02021BCC ; =0x021D21F4
	ldr r1, [r4, #4]
	ldr r2, [r0]
	ldr r0, [r2, #0x20]
	sub r0, r1, r0
	ldr r1, [r2, #0x30]
	bl sub_020224A8
	ldr r2, _02021BCC ; =0x021D21F4
	add r1, r5, #0
	ldr r2, [r2]
	ldr r2, [r2, #0x38]
	bl sub_02022374
_02021BCA:
	pop {r3, r4, r5, pc}
	.align 2, 0
_02021BCC: .word 0x021D21F4
	thumb_func_end sub_02021B5C

	thumb_func_start sub_02021BD0
sub_02021BD0: ; 0x02021BD0
	push {r3, lr}
	ldr r0, _02021BE8 ; =0x021D21F4
	ldr r0, [r0]
	cmp r0, #0
	bne _02021BDE
	bl GF_AssertFail
_02021BDE:
	ldr r1, _02021BE8 ; =0x021D21F4
	mov r2, #0
	ldr r0, [r1]
	str r2, [r1]
	pop {r3, pc}
	.align 2, 0
_02021BE8: .word 0x021D21F4
	thumb_func_end sub_02021BD0

	thumb_func_start sub_02021BEC
sub_02021BEC: ; 0x02021BEC
	push {r4, lr}
	add r4, r0, #0
	ldr r0, _02021C04 ; =0x021D21F4
	ldr r0, [r0]
	cmp r0, #0
	beq _02021BFC
	bl GF_AssertFail
_02021BFC:
	ldr r0, _02021C04 ; =0x021D21F4
	str r4, [r0]
	pop {r4, pc}
	nop
_02021C04: .word 0x021D21F4
	thumb_func_end sub_02021BEC

	thumb_func_start sub_02021C08
sub_02021C08: ; 0x02021C08
	mov r2, #0
	str r2, [r0]
	str r2, [r0, #4]
	strb r2, [r0, #8]
	sub r1, r2, #1
	str r1, [r0, #0xc]
	str r2, [r0, #0x34]
	add r1, r0, #0
	str r2, [r0, #0x38]
	add r1, #0x3c
	strb r2, [r1]
	str r2, [r0, #0x40]
	ldr r3, _02021C28 ; =sub_020B8008
	add r0, #0x10
	bx r3
	nop
_02021C28: .word sub_020B8008
	thumb_func_end sub_02021C08

	thumb_func_start sub_02021C2C
sub_02021C2C: ; 0x02021C2C
	ldr r2, [r0]
	str r2, [r1]
	ldr r2, [r0, #8]
	str r2, [r1, #0xc]
	ldr r2, [r0, #4]
	str r2, [r1, #4]
	ldr r2, [r1]
	ldr r2, [r2, #0xc]
	lsr r2, r2, #8
	strb r2, [r1, #8]
	ldr r0, [r0, #0xc]
	str r0, [r1, #0x44]
	mov r0, #0
	str r0, [r1, #0x48]
	str r0, [r1, #0x4c]
	str r0, [r1, #0x50]
	mov r0, #1
	bx lr
	thumb_func_end sub_02021C2C

	thumb_func_start sub_02021C50
sub_02021C50: ; 0x02021C50
	push {r3, r4, r5, r6}
	ldr r2, _02021C98 ; =0x021D21F4
	mov r1, #0
	ldr r5, [r2]
	ldr r4, [r5, #4]
	cmp r4, #0
	ble _02021C82
	ldr r2, [r5]
	add r3, r1, #0
_02021C62:
	add r6, r2, #0
	add r6, #0x3c
	ldrb r6, [r6]
	cmp r6, #0
	beq _02021C76
	ldr r6, [r5]
	add r6, r6, r3
	add r6, #0x10
	cmp r6, r0
	beq _02021C82
_02021C76:
	ldr r6, [r5, #4]
	add r1, r1, #1
	add r2, #0x54
	add r3, #0x54
	cmp r1, r6
	blt _02021C62
_02021C82:
	cmp r1, r4
	blt _02021C8C
	mov r0, #0
	pop {r3, r4, r5, r6}
	bx lr
_02021C8C:
	mov r0, #0x54
	ldr r2, [r5]
	mul r0, r1
	add r0, r2, r0
	pop {r3, r4, r5, r6}
	bx lr
	.align 2, 0
_02021C98: .word 0x021D21F4
	thumb_func_end sub_02021C50

	thumb_func_start sub_02021C9C
sub_02021C9C: ; 0x02021C9C
	push {r3, lr}
	ldrb r1, [r0, #8]
	mov r2, #1
	cmp r1, #0
	beq _02021CAE
	mov r1, #2
	add r0, #0x3c
	strb r1, [r0]
	b _02021CC8
_02021CAE:
	add r1, r0, #0
	add r1, #0x3c
	strb r2, [r1]
	ldr r1, [r0, #0x44]
	cmp r1, #0
	bne _02021CC2
	bl sub_02021CCC
	add r2, r0, #0
	b _02021CC8
_02021CC2:
	bl sub_02021D00
	add r2, r0, #0
_02021CC8:
	add r0, r2, #0
	pop {r3, pc}
	thumb_func_end sub_02021C9C

	thumb_func_start sub_02021CCC
sub_02021CCC: ; 0x02021CCC
	push {r3, r4, r5, lr}
	sub sp, #8
	add r5, r0, #0
	ldr r0, [r5]
	ldr r1, [r5, #4]
	ldr r0, [r0, #0x10]
	add r2, sp, #4
	add r3, sp, #0
	bl sub_020224C0
	add r4, r0, #0
	beq _02021CF8
	ldr r1, [sp, #4]
	ldr r2, [sp]
	add r0, r5, #0
	bl sub_02021DD0
	ldr r0, [r5]
	ldr r1, [r5, #4]
	ldr r0, [r0, #0x10]
	bl sub_02022510
_02021CF8:
	add r0, r4, #0
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02021CCC

	thumb_func_start sub_02021D00
sub_02021D00: ; 0x02021D00
	push {r4, lr}
	sub sp, #0x18
	add r4, r0, #0
	add r0, sp, #0xc
	str r0, [sp]
	add r0, sp, #8
	str r0, [sp, #4]
	ldr r3, [r4]
	ldr r0, [r4, #4]
	ldr r3, [r3, #0x10]
	add r1, sp, #0x14
	add r2, sp, #0x10
	bl sub_02021DE4
	cmp r0, #0
	bne _02021D26
	add sp, #0x18
	mov r0, #0
	pop {r4, pc}
_02021D26:
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	add r0, r4, #0
	bl sub_02021E90
	mov r0, #1
	str r0, [r4, #0x48]
	ldr r0, [sp, #0xc]
	str r0, [r4, #0x4c]
	ldr r0, [sp, #8]
	str r0, [r4, #0x50]
	add r0, r4, #0
	bl sub_02021F28
	ldr r0, [sp, #8]
	str r0, [sp]
	ldr r0, [r4, #4]
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #0xc]
	bl sub_02021EC0
	mov r0, #1
	add sp, #0x18
	pop {r4, pc}
	thumb_func_end sub_02021D00

	thumb_func_start sub_02021D58
sub_02021D58: ; 0x02021D58
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #0x48]
	cmp r1, #0
	beq _02021D66
	bl sub_020223C4
_02021D66:
	add r0, r4, #0
	bl sub_02021C08
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02021D58

	thumb_func_start sub_02021D70
sub_02021D70: ; 0x02021D70
	push {r4, r5}
	ldr r2, _02021DA4 ; =0x021D21F4
	mov r1, #0
	ldr r5, [r2]
	ldr r2, [r5, #4]
	cmp r2, #0
	ble _02021D9C
	ldr r2, [r5]
	add r4, r2, #0
_02021D82:
	ldr r3, [r4, #0xc]
	cmp r0, r3
	bne _02021D92
	mov r0, #0x54
	mul r0, r1
	add r0, r2, r0
	pop {r4, r5}
	bx lr
_02021D92:
	ldr r3, [r5, #4]
	add r1, r1, #1
	add r4, #0x54
	cmp r1, r3
	blt _02021D82
_02021D9C:
	mov r0, #0
	pop {r4, r5}
	bx lr
	nop
_02021DA4: .word 0x021D21F4
	thumb_func_end sub_02021D70

	thumb_func_start sub_02021DA8
sub_02021DA8: ; 0x02021DA8
	cmp r1, #1
	bne _02021DB4
	mov r1, #1
	lsl r1, r1, #0x1a
	ldr r2, [r1]
	b _02021DB8
_02021DB4:
	ldr r1, _02021DC8 ; =0x04001000
	ldr r2, [r1]
_02021DB8:
	ldr r1, _02021DCC ; =0x00300010
	and r2, r1
	ldr r1, [r0]
	str r2, [r1, #8]
	ldr r0, [r0]
	ldr r0, [r0, #8]
	bx lr
	nop
_02021DC8: .word 0x04001000
_02021DCC: .word 0x00300010
	thumb_func_end sub_02021DA8

	thumb_func_start sub_02021DD0
sub_02021DD0: ; 0x02021DD0
	push {r3, lr}
	str r1, [r0, #0x34]
	str r2, [r0, #0x38]
	ldrb r1, [r0, #8]
	cmp r1, #0
	bne _02021DE0
	bl sub_02021F28
_02021DE0:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_02021DD0

	thumb_func_start sub_02021DE4
sub_02021DE4: ; 0x02021DE4
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r0, [sp, #0x1c]
	add r6, r2, #0
	str r0, [sp, #0x1c]
	mov r2, #1
	add r0, r5, #0
	add r4, r1, #0
	str r3, [sp]
	ldr r7, [sp, #0x18]
	tst r0, r2
	beq _02021E3C
	ldr r1, _02021E8C ; =0x021D21F4
	add r0, r3, #0
	ldr r1, [r1]
	ldr r1, [r1, #0x2c]
	bl sub_02022488
	ldr r1, _02021E8C ; =0x021D21F4
	str r0, [r7]
	ldr r1, [r1]
	ldr r1, [r1, #0x2c]
	bl sub_020224A8
	ldr r1, _02021E8C ; =0x021D21F4
	ldr r1, [r1]
	ldr r1, [r1, #0x34]
	bl sub_020222EC
	mov r1, #0
	mvn r1, r1
	str r0, [r4]
	cmp r0, r1
	bne _02021E30
	bl GF_AssertFail
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02021E30:
	ldr r1, _02021E8C ; =0x021D21F4
	ldr r1, [r1]
	ldr r1, [r1, #0x2c]
	bl sub_020224B8
	str r0, [r4]
_02021E3C:
	mov r0, #2
	tst r0, r5
	beq _02021E86
	ldr r1, _02021E8C ; =0x021D21F4
	ldr r0, [sp]
	ldr r1, [r1]
	mov r2, #1
	ldr r1, [r1, #0x30]
	bl sub_02022488
	ldr r1, [sp, #0x1c]
	str r0, [r1]
	ldr r1, _02021E8C ; =0x021D21F4
	ldr r1, [r1]
	ldr r1, [r1, #0x30]
	bl sub_020224A8
	ldr r1, _02021E8C ; =0x021D21F4
	ldr r1, [r1]
	ldr r1, [r1, #0x38]
	bl sub_020222EC
	mov r1, #0
	mvn r1, r1
	str r0, [r6]
	cmp r0, r1
	bne _02021E7A
	bl GF_AssertFail
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02021E7A:
	ldr r1, _02021E8C ; =0x021D21F4
	ldr r1, [r1]
	ldr r1, [r1, #0x30]
	bl sub_020224B8
	str r0, [r6]
_02021E86:
	mov r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02021E8C: .word 0x021D21F4
	thumb_func_end sub_02021DE4

	thumb_func_start sub_02021E90
sub_02021E90: ; 0x02021E90
	push {r3, r4}
	ldr r4, [r0, #4]
	mov r3, #1
	tst r3, r4
	beq _02021EA4
	ldr r3, _02021EBC ; =0x021D21F4
	ldr r3, [r3]
	ldr r3, [r3, #0x1c]
	add r1, r1, r3
	str r1, [r0, #0x34]
_02021EA4:
	ldr r3, [r0, #4]
	mov r1, #2
	tst r1, r3
	beq _02021EB6
	ldr r1, _02021EBC ; =0x021D21F4
	ldr r1, [r1]
	ldr r1, [r1, #0x20]
	add r1, r2, r1
	str r1, [r0, #0x38]
_02021EB6:
	pop {r3, r4}
	bx lr
	nop
_02021EBC: .word 0x021D21F4
	thumb_func_end sub_02021E90

	thumb_func_start sub_02021EC0
sub_02021EC0: ; 0x02021EC0
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	mov r0, #1
	add r4, r1, #0
	add r6, r2, #0
	tst r0, r5
	beq _02021EF4
	ldr r1, _02021F24 ; =0x021D21F4
	add r0, r3, #0
	ldr r1, [r1]
	ldr r1, [r1, #0x2c]
	bl sub_020224A8
	ldr r1, _02021F24 ; =0x021D21F4
	add r7, r0, #0
	ldr r1, [r1]
	add r0, r4, #0
	ldr r1, [r1, #0x2c]
	bl sub_020224A8
	ldr r2, _02021F24 ; =0x021D21F4
	add r1, r7, #0
	ldr r2, [r2]
	ldr r2, [r2, #0x34]
	bl sub_02022290
_02021EF4:
	mov r0, #2
	tst r0, r5
	beq _02021F20
	ldr r1, _02021F24 ; =0x021D21F4
	ldr r0, [sp, #0x18]
	ldr r1, [r1]
	ldr r1, [r1, #0x30]
	bl sub_020224A8
	ldr r1, _02021F24 ; =0x021D21F4
	add r4, r0, #0
	ldr r1, [r1]
	add r0, r6, #0
	ldr r1, [r1, #0x30]
	bl sub_020224A8
	ldr r2, _02021F24 ; =0x021D21F4
	add r1, r4, #0
	ldr r2, [r2]
	ldr r2, [r2, #0x38]
	bl sub_02022290
_02021F20:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02021F24: .word 0x021D21F4
	thumb_func_end sub_02021EC0

	thumb_func_start sub_02021F28
sub_02021F28: ; 0x02021F28
	push {r4, lr}
	add r4, r0, #0
	add r0, #0x10
	bl sub_020B8008
	ldr r1, [r4, #4]
	cmp r1, #3
	beq _02021F40
	add r0, r4, #0
	bl sub_02021F54
	pop {r4, pc}
_02021F40:
	add r0, r4, #0
	mov r1, #1
	bl sub_02021F54
	add r0, r4, #0
	mov r1, #2
	bl sub_02021F54
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02021F28

	thumb_func_start sub_02021F54
sub_02021F54: ; 0x02021F54
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r2, [r5, #0x40]
	add r4, r1, #0
	cmp r2, #0
	beq _02021F66
	bl sub_02021DA8
	b _02021F68
_02021F66:
	add r0, r4, #0
_02021F68:
	cmp r4, #1
	bne _02021F76
	mov r2, #1
	lsl r2, r2, #0x1a
	ldr r1, [r5, #0x34]
	ldr r2, [r2]
	b _02021F7C
_02021F76:
	ldr r2, _02021FAC ; =0x04001000
	ldr r1, [r5, #0x38]
	ldr r2, [r2]
_02021F7C:
	cmp r0, #0
	ldr r0, [r5]
	bne _02021F8E
	add r5, #0x10
	add r2, r4, #0
	add r3, r5, #0
	bl sub_020B82CC
	b _02021F98
_02021F8E:
	add r5, #0x10
	add r2, r4, #0
	add r3, r5, #0
	bl sub_020B80A0
_02021F98:
	cmp r4, #1
	bne _02021FA4
	mov r0, #1
	lsl r0, r0, #0x1a
	ldr r0, [r0]
	pop {r3, r4, r5, pc}
_02021FA4:
	ldr r0, _02021FAC ; =0x04001000
	ldr r0, [r0]
	pop {r3, r4, r5, pc}
	nop
_02021FAC: .word 0x04001000
	thumb_func_end sub_02021F54

	thumb_func_start sub_02021FB0
sub_02021FB0: ; 0x02021FB0
	push {r4, lr}
	add r4, r0, #0
	add r0, #0x10
	bl sub_020B8008
	ldr r1, [r4, #4]
	cmp r1, #3
	beq _02021FC8
	add r0, r4, #0
	bl sub_02021FDC
	pop {r4, pc}
_02021FC8:
	add r0, r4, #0
	mov r1, #1
	bl sub_02021FDC
	add r0, r4, #0
	mov r1, #2
	bl sub_02021FDC
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02021FB0

	thumb_func_start sub_02021FDC
sub_02021FDC: ; 0x02021FDC
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r2, [r5, #0x40]
	add r4, r1, #0
	cmp r2, #0
	beq _02021FEC
	bl sub_02021DA8
_02021FEC:
	cmp r4, #1
	bne _02021FFA
	mov r0, #1
	lsl r0, r0, #0x1a
	ldr r1, [r5, #0x34]
	ldr r0, [r0]
	b _02022000
_02021FFA:
	ldr r0, _02022020 ; =0x04001000
	ldr r1, [r5, #0x38]
	ldr r0, [r0]
_02022000:
	ldr r0, [r5]
	add r5, #0x10
	add r2, r4, #0
	add r3, r5, #0
	bl sub_020B84F8
	cmp r4, #1
	bne _02022018
	mov r0, #1
	lsl r0, r0, #0x1a
	ldr r0, [r0]
	pop {r3, r4, r5, pc}
_02022018:
	ldr r0, _02022020 ; =0x04001000
	ldr r0, [r0]
	pop {r3, r4, r5, pc}
	nop
_02022020: .word 0x04001000
	thumb_func_end sub_02021FDC

	thumb_func_start sub_02022024
sub_02022024: ; 0x02022024
	push {r3, r4}
	ldr r1, _0202205C ; =0x021D21F4
	mov r0, #0
	ldr r4, [r1]
	ldr r1, [r4, #4]
	cmp r1, #0
	ble _02022054
	ldr r1, [r4]
	add r3, r1, #0
_02022036:
	add r2, r3, #0
	add r2, #0x3c
	ldrb r2, [r2]
	cmp r2, #0
	bne _0202204A
	mov r2, #0x54
	mul r2, r0
	add r0, r1, r2
	pop {r3, r4}
	bx lr
_0202204A:
	ldr r2, [r4, #4]
	add r0, r0, #1
	add r3, #0x54
	cmp r0, r2
	blt _02022036
_02022054:
	mov r0, #0
	pop {r3, r4}
	bx lr
	nop
_0202205C: .word 0x021D21F4
	thumb_func_end sub_02022024

	thumb_func_start sub_02022060
sub_02022060: ; 0x02022060
	push {r3, lr}
	bl sub_020CEBEC
	cmp r0, #0x30
	bgt _02022090
	bge _020220D8
	cmp r0, #0x10
	bgt _0202208A
	bge _020220CC
	cmp r0, #3
	bhi _02022108
	add r1, r0, r0
	add r1, pc
	ldrh r1, [r1, #6]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add pc, r1
_02022082: ; jump table
	.short _020220AA - _02022082 - 2 ; case 0
	.short _020220F0 - _02022082 - 2 ; case 1
	.short _020220F0 - _02022082 - 2 ; case 2
	.short _020220FC - _02022082 - 2 ; case 3
_0202208A:
	cmp r0, #0x20
	beq _020220B4
	b _02022108
_02022090:
	cmp r0, #0x50
	bgt _0202209C
	bge _020220D8
	cmp r0, #0x40
	beq _020220B4
	b _02022108
_0202209C:
	cmp r0, #0x60
	bgt _020220A4
	beq _020220C0
	b _02022108
_020220A4:
	cmp r0, #0x70
	beq _020220E4
	b _02022108
_020220AA:
	ldr r0, _020221B0 ; =0x021D21F4
	mov r1, #0
	ldr r0, [r0]
	str r1, [r0, #0x14]
	b _02022110
_020220B4:
	ldr r0, _020221B0 ; =0x021D21F4
	mov r1, #1
	ldr r0, [r0]
	lsl r1, r1, #0xe
	str r1, [r0, #0x14]
	b _02022110
_020220C0:
	ldr r0, _020221B0 ; =0x021D21F4
	mov r1, #2
	ldr r0, [r0]
	lsl r1, r1, #0xe
	str r1, [r0, #0x14]
	b _02022110
_020220CC:
	ldr r0, _020221B0 ; =0x021D21F4
	mov r1, #1
	ldr r0, [r0]
	lsl r1, r1, #0x10
	str r1, [r0, #0x14]
	b _02022110
_020220D8:
	ldr r0, _020221B0 ; =0x021D21F4
	mov r1, #5
	ldr r0, [r0]
	lsl r1, r1, #0xe
	str r1, [r0, #0x14]
	b _02022110
_020220E4:
	ldr r0, _020221B0 ; =0x021D21F4
	mov r1, #6
	ldr r0, [r0]
	lsl r1, r1, #0xe
	str r1, [r0, #0x14]
	b _02022110
_020220F0:
	ldr r0, _020221B0 ; =0x021D21F4
	mov r1, #2
	ldr r0, [r0]
	lsl r1, r1, #0x10
	str r1, [r0, #0x14]
	b _02022110
_020220FC:
	ldr r0, _020221B0 ; =0x021D21F4
	mov r1, #1
	ldr r0, [r0]
	lsl r1, r1, #0x12
	str r1, [r0, #0x14]
	b _02022110
_02022108:
	ldr r0, _020221B0 ; =0x021D21F4
	mov r1, #0
	ldr r0, [r0]
	str r1, [r0, #0x14]
_02022110:
	bl sub_020CEC1C
	cmp r0, #0
	beq _02022126
	cmp r0, #8
	beq _0202213A
	mov r1, #1
	lsl r1, r1, #8
	cmp r0, r1
	beq _02022130
	b _02022146
_02022126:
	ldr r0, _020221B0 ; =0x021D21F4
	mov r1, #0
	ldr r0, [r0]
	str r1, [r0, #0x18]
	b _0202214E
_02022130:
	ldr r0, _020221B0 ; =0x021D21F4
	lsl r1, r1, #6
	ldr r0, [r0]
	str r1, [r0, #0x18]
	b _0202214E
_0202213A:
	ldr r0, _020221B0 ; =0x021D21F4
	mov r1, #2
	ldr r0, [r0]
	lsl r1, r1, #0x10
	str r1, [r0, #0x18]
	b _0202214E
_02022146:
	ldr r0, _020221B0 ; =0x021D21F4
	mov r1, #0
	ldr r0, [r0]
	str r1, [r0, #0x18]
_0202214E:
	ldr r0, _020221B0 ; =0x021D21F4
	ldr r1, [r0]
	ldr r0, [r1, #0x24]
	ldr r1, [r1, #0x2c]
	bl sub_020224B8
	ldr r1, _020221B0 ; =0x021D21F4
	ldr r3, [r1]
	ldr r2, [r3, #0x14]
	sub r0, r2, r0
	str r0, [r3, #0x1c]
	ldr r1, [r1]
	ldr r0, [r1, #0x28]
	ldr r1, [r1, #0x30]
	bl sub_020224B8
	ldr r1, _020221B0 ; =0x021D21F4
	ldr r3, [r1]
	ldr r2, [r3, #0x18]
	sub r0, r2, r0
	str r0, [r3, #0x20]
	ldr r1, [r1]
	mov r2, #0
	ldr r0, [r1, #0x1c]
	cmp r0, #0
	blt _0202218A
	ldr r0, [r1, #0x20]
	cmp r0, #0
	blt _0202218A
	mov r2, #1
_0202218A:
	cmp r2, #0
	bne _02022192
	bl GF_AssertFail
_02022192:
	ldr r0, _020221B0 ; =0x021D21F4
	mov r2, #0
	ldr r1, [r0]
	ldr r0, [r1, #0x1c]
	cmp r0, #0
	blt _020221A6
	ldr r0, [r1, #0x20]
	cmp r0, #0
	blt _020221A6
	mov r2, #1
_020221A6:
	cmp r2, #0
	bne _020221AE
	bl GF_AssertFail
_020221AE:
	pop {r3, pc}
	.align 2, 0
_020221B0: .word 0x021D21F4
	thumb_func_end sub_02022060

	thumb_func_start sub_020221B4
sub_020221B4: ; 0x020221B4
	push {r3, lr}
	ldr r0, _020221CC ; =0x021D21F4
	ldr r0, [r0]
	ldr r0, [r0, #0x34]
	bl sub_02022278
	ldr r0, _020221CC ; =0x021D21F4
	ldr r0, [r0]
	ldr r0, [r0, #0x38]
	bl sub_02022278
	pop {r3, pc}
	.align 2, 0
_020221CC: .word 0x021D21F4
	thumb_func_end sub_020221B4

	thumb_func_start sub_020221D0
sub_020221D0: ; 0x020221D0
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, _02022234 ; =0x021D21F4
	add r4, r1, #0
	ldr r1, [r0]
	add r6, r2, #0
	str r5, [r1, #0x24]
	ldr r1, [r0]
	str r4, [r1, #0x28]
	ldr r0, [r0]
	ldr r0, [r0, #0x34]
	cmp r0, #0
	beq _020221EE
	bl sub_0201AB0C
_020221EE:
	ldr r0, _02022234 ; =0x021D21F4
	ldr r0, [r0]
	ldr r0, [r0, #0x38]
	cmp r0, #0
	beq _020221FC
	bl sub_0201AB0C
_020221FC:
	ldr r0, _02022234 ; =0x021D21F4
	ldr r0, [r0]
	ldr r0, [r0, #0x24]
	cmp r0, #0
	beq _02022214
	add r0, r6, #0
	lsr r1, r5, #3
	bl sub_0201AA8C
	ldr r1, _02022234 ; =0x021D21F4
	ldr r1, [r1]
	str r0, [r1, #0x34]
_02022214:
	ldr r0, _02022234 ; =0x021D21F4
	ldr r0, [r0]
	ldr r0, [r0, #0x28]
	cmp r0, #0
	beq _0202222C
	add r0, r6, #0
	lsr r1, r4, #3
	bl sub_0201AA8C
	ldr r1, _02022234 ; =0x021D21F4
	ldr r1, [r1]
	str r0, [r1, #0x38]
_0202222C:
	bl sub_020221B4
	pop {r4, r5, r6, pc}
	nop
_02022234: .word 0x021D21F4
	thumb_func_end sub_020221D0

	thumb_func_start sub_02022238
sub_02022238: ; 0x02022238
	push {r3, lr}
	cmp r0, #0
	beq _0202225A
	ldr r1, _0202225C ; =0x021D21F4
	ldr r2, [r1]
	ldr r1, [r2, #0x34]
	cmp r0, r1
	bne _02022252
	mov r1, #0
	str r1, [r2, #0x24]
	bl sub_0201AB0C
	pop {r3, pc}
_02022252:
	mov r1, #0
	str r1, [r2, #0x28]
	bl sub_0201AB0C
_0202225A:
	pop {r3, pc}
	.align 2, 0
_0202225C: .word 0x021D21F4
	thumb_func_end sub_02022238

	thumb_func_start sub_02022260
sub_02022260: ; 0x02022260
	ldr r1, _02022274 ; =0x021D21F4
	ldr r2, [r1]
	ldr r1, [r2, #0x34]
	cmp r0, r1
	bne _0202226E
	ldr r0, [r2, #0x24]
	bx lr
_0202226E:
	ldr r0, [r2, #0x28]
	bx lr
	nop
_02022274: .word 0x021D21F4
	thumb_func_end sub_02022260

	thumb_func_start sub_02022278
sub_02022278: ; 0x02022278
	push {r4, lr}
	add r4, r0, #0
	beq _0202228E
	bl sub_02022260
	add r2, r0, #0
	add r0, r4, #0
	mov r1, #0
	lsr r2, r2, #3
	bl sub_020E5B44
_0202228E:
	pop {r4, pc}
	thumb_func_end sub_02022278

	thumb_func_start sub_02022290
sub_02022290: ; 0x02022290
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r5, r0, #0
	add r6, r1, #0
	add r4, r2, #0
	beq _020222E6
	add r0, r4, #0
	bl sub_02022260
	add r6, r5, r6
	add r7, r0, #0
	cmp r5, r6
	bhs _020222E6
_020222AA:
	cmp r5, r7
	bhs _020222E6
	add r0, r5, #0
	add r1, sp, #4
	add r2, sp, #0
	bl sub_02022560
	add r0, sp, #0
	ldrb r1, [r0]
	mov r0, #1
	lsl r0, r1
	ldr r1, [sp, #4]
	ldrb r1, [r4, r1]
	tst r0, r1
	beq _020222CC
	bl GF_AssertFail
_020222CC:
	add r2, sp, #0
	ldrb r3, [r2]
	ldr r1, [sp, #4]
	mov r2, #1
	lsl r2, r3
	lsl r2, r2, #0x18
	ldrb r0, [r4, r1]
	lsr r2, r2, #0x18
	add r5, r5, #1
	orr r0, r2
	strb r0, [r4, r1]
	cmp r5, r6
	blo _020222AA
_020222E6:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02022290

	thumb_func_start sub_020222EC
sub_020222EC: ; 0x020222EC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r7, r0, #0
	str r1, [sp]
	cmp r1, #0
	beq _0202236A
	add r0, r1, #0
	bl sub_02022260
	mov r6, #0
	str r0, [sp, #4]
	cmp r0, #0
	bls _0202236A
_02022306:
	add r0, r6, #0
	add r1, sp, #0xc
	add r2, sp, #8
	bl sub_02022560
	add r0, sp, #8
	ldrb r1, [r0]
	mov r0, #1
	mov r4, #0
	lsl r0, r1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	b _02022348
_02022320:
	add r5, r6, r4
	add r0, r5, #0
	add r1, sp, #0xc
	add r2, sp, #8
	bl sub_02022560
	add r0, sp, #8
	ldrb r1, [r0]
	mov r0, #1
	lsl r0, r1
	lsl r0, r0, #0x18
	ldr r1, [sp, #4]
	lsr r0, r0, #0x18
	cmp r5, r1
	blo _02022346
	mov r0, #0
	add sp, #0x10
	mvn r0, r0
	pop {r3, r4, r5, r6, r7, pc}
_02022346:
	add r4, r4, #1
_02022348:
	ldr r2, [sp, #0xc]
	ldr r1, [sp]
	ldrb r1, [r1, r2]
	tst r0, r1
	bne _02022356
	cmp r4, r7
	bls _02022320
_02022356:
	cmp r4, r7
	bls _02022360
	add sp, #0x10
	add r0, r6, #0
	pop {r3, r4, r5, r6, r7, pc}
_02022360:
	add r0, r6, r4
	add r6, r0, #1
	ldr r0, [sp, #4]
	cmp r6, r0
	blo _02022306
_0202236A:
	mov r0, #0
	mvn r0, r0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_020222EC

	thumb_func_start sub_02022374
sub_02022374: ; 0x02022374
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r5, r0, #0
	add r4, r2, #0
	beq _020223BE
	add r6, r5, r1
	cmp r5, r6
	bhs _020223BE
	add r7, sp, #0
_02022386:
	add r0, r5, #0
	add r1, sp, #4
	add r2, sp, #0
	bl sub_02022560
	ldrb r1, [r7]
	mov r0, #1
	lsl r0, r1
	ldr r1, [sp, #4]
	ldrb r1, [r4, r1]
	tst r0, r1
	bne _020223A2
	bl GF_AssertFail
_020223A2:
	ldrb r0, [r7]
	mov r1, #1
	ldr r3, [sp, #4]
	lsl r1, r0
	mov r0, #0xff
	eor r0, r1
	lsl r0, r0, #0x18
	ldrb r2, [r4, r3]
	lsr r0, r0, #0x18
	add r5, r5, #1
	and r0, r2
	strb r0, [r4, r3]
	cmp r5, r6
	blo _02022386
_020223BE:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02022374

	thumb_func_start sub_020223C4
sub_020223C4: ; 0x020223C4
	push {r3, r4, r5, lr}
	add r4, r0, #0
	ldr r0, [r4, #4]
	mov r1, #1
	tst r0, r1
	beq _02022402
	add r0, r4, #0
	add r0, #0x10
	bl sub_020B802C
	ldr r1, _02022444 ; =0x021D21F4
	ldr r2, [r1]
	ldr r1, [r2, #0x1c]
	sub r0, r0, r1
	ldr r1, [r2, #0x2c]
	bl sub_020224A8
	ldr r1, _02022444 ; =0x021D21F4
	add r5, r0, #0
	ldr r1, [r1]
	ldr r0, [r4, #0x4c]
	ldr r1, [r1, #0x2c]
	bl sub_020224A8
	ldr r2, _02022444 ; =0x021D21F4
	add r1, r0, #0
	ldr r2, [r2]
	add r0, r5, #0
	ldr r2, [r2, #0x34]
	bl sub_02022374
_02022402:
	ldr r0, [r4, #4]
	mov r1, #2
	tst r0, r1
	beq _0202243C
	add r0, r4, #0
	add r0, #0x10
	bl sub_020B802C
	ldr r1, _02022444 ; =0x021D21F4
	ldr r2, [r1]
	ldr r1, [r2, #0x20]
	sub r0, r0, r1
	ldr r1, [r2, #0x30]
	bl sub_020224A8
	ldr r1, _02022444 ; =0x021D21F4
	add r5, r0, #0
	ldr r1, [r1]
	ldr r0, [r4, #0x50]
	ldr r1, [r1, #0x30]
	bl sub_020224A8
	ldr r2, _02022444 ; =0x021D21F4
	add r1, r0, #0
	ldr r2, [r2]
	add r0, r5, #0
	ldr r2, [r2, #0x38]
	bl sub_02022374
_0202243C:
	mov r0, #0
	str r0, [r4, #0x48]
	pop {r3, r4, r5, pc}
	nop
_02022444: .word 0x021D21F4
	thumb_func_end sub_020223C4

	thumb_func_start sub_02022448
sub_02022448: ; 0x02022448
	ldr r1, _0202247C ; =0x00100010
	cmp r0, r1
	bgt _02022456
	bge _0202246C
	cmp r0, #0x10
	beq _02022468
	b _02022478
_02022456:
	ldr r1, _02022480 ; =0x00200010
	cmp r0, r1
	bgt _02022460
	beq _02022470
	b _02022478
_02022460:
	ldr r1, _02022484 ; =0x00300010
	cmp r0, r1
	beq _02022474
	b _02022478
_02022468:
	mov r0, #1
	bx lr
_0202246C:
	mov r0, #2
	bx lr
_02022470:
	mov r0, #4
	bx lr
_02022474:
	mov r0, #8
	bx lr
_02022478:
	mov r0, #1
	bx lr
	.align 2, 0
_0202247C: .word 0x00100010
_02022480: .word 0x00200010
_02022484: .word 0x00300010
	thumb_func_end sub_02022448

	thumb_func_start sub_02022488
sub_02022488: ; 0x02022488
	push {r4, r5, r6, lr}
	add r4, r1, #0
	lsl r4, r4, #5
	add r1, r4, #0
	add r5, r0, #0
	add r6, r2, #0
	bl sub_020F2998
	cmp r1, #0
	beq _020224A4
	sub r5, r5, r1
	cmp r6, #1
	bne _020224A4
	add r5, r5, r4
_020224A4:
	add r0, r5, #0
	pop {r4, r5, r6, pc}
	thumb_func_end sub_02022488

	thumb_func_start sub_020224A8
sub_020224A8: ; 0x020224A8
	asr r2, r0, #4
	lsr r2, r2, #0x1b
	add r2, r0, r2
	ldr r3, _020224B4 ; =sub_020F2998
	asr r0, r2, #5
	bx r3
	.align 2, 0
_020224B4: .word sub_020F2998
	thumb_func_end sub_020224A8

	thumb_func_start sub_020224B8
sub_020224B8: ; 0x020224B8
	mul r1, r0
	lsl r0, r1, #5
	bx lr
	.align 2, 0
	thumb_func_end sub_020224B8

	thumb_func_start sub_020224C0
sub_020224C0: ; 0x020224C0
	push {r3, r4, r5, r6, r7, lr}
	add r4, r1, #0
	add r5, r0, #0
	add r1, r2, #0
	mov r0, #1
	add r2, r4, #0
	add r7, r3, #0
	tst r2, r0
	beq _020224EA
	ldr r2, _0202250C ; =0x021D21F4
	ldr r2, [r2]
	ldr r6, [r2, #0xc]
	ldr r2, [r2, #0x1c]
	add r3, r6, r5
	cmp r3, r2
	bls _020224E8
	bl GF_AssertFail
	mov r0, #0
	b _020224EA
_020224E8:
	str r6, [r1]
_020224EA:
	mov r1, #2
	tst r1, r4
	beq _02022508
	ldr r1, _0202250C ; =0x021D21F4
	ldr r1, [r1]
	ldr r3, [r1, #0x10]
	ldr r1, [r1, #0x20]
	add r2, r3, r5
	cmp r2, r1
	bls _02022506
	bl GF_AssertFail
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02022506:
	str r3, [r7]
_02022508:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0202250C: .word 0x021D21F4
	thumb_func_end sub_020224C0

	thumb_func_start sub_02022510
sub_02022510: ; 0x02022510
	push {r3, r4, r5, lr}
	add r4, r1, #0
	add r5, r0, #0
	mov r2, #1
	add r0, r4, #0
	tst r0, r2
	beq _02022538
	ldr r0, _0202255C ; =0x021D21F4
	ldr r3, [r0]
	ldr r1, [r3, #0xc]
	add r1, r1, r5
	str r1, [r3, #0xc]
	ldr r1, [r0]
	ldr r0, [r1, #0xc]
	ldr r1, [r1, #0x2c]
	bl sub_02022488
	ldr r1, _0202255C ; =0x021D21F4
	ldr r1, [r1]
	str r0, [r1, #0xc]
_02022538:
	mov r0, #2
	tst r0, r4
	beq _0202255A
	ldr r0, _0202255C ; =0x021D21F4
	ldr r2, [r0]
	ldr r1, [r2, #0x10]
	add r1, r1, r5
	str r1, [r2, #0x10]
	ldr r1, [r0]
	mov r2, #1
	ldr r0, [r1, #0x10]
	ldr r1, [r1, #0x30]
	bl sub_02022488
	ldr r1, _0202255C ; =0x021D21F4
	ldr r1, [r1]
	str r0, [r1, #0x10]
_0202255A:
	pop {r3, r4, r5, pc}
	.align 2, 0
_0202255C: .word 0x021D21F4
	thumb_func_end sub_02022510

	thumb_func_start sub_02022560
sub_02022560: ; 0x02022560
	asr r3, r0, #3
	str r3, [r1]
	mov r1, #7
	and r0, r1
	strb r0, [r2]
	bx lr
	thumb_func_end sub_02022560

	thumb_func_start sub_0202256C
sub_0202256C: ; 0x0202256C
	push {r3, r4}
	sub r0, r1, r0
	ldr r4, [sp, #8]
	str r0, [r3]
	bpl _02022582
	add r0, r2, r0
	str r0, [r4]
	mov r0, #0
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02022582:
	str r2, [r4]
	pop {r3, r4}
	bx lr
	thumb_func_end sub_0202256C

	thumb_func_start sub_02022588
sub_02022588: ; 0x02022588
	push {r3, r4, r5, r6, r7, lr}
	add r6, r0, #0
	ldr r0, _020225E0 ; =0x021D21F8
	add r4, r1, #0
	ldr r0, [r0]
	cmp r0, #0
	bne _020225DC
	add r0, r4, #0
	mov r1, #0x28
	bl sub_0201AA8C
	add r1, r0, #0
	ldr r0, _020225E0 ; =0x021D21F8
	mov r2, #0x28
	str r1, [r0]
	mov r0, #0
	bl sub_020D47EC
	ldr r0, _020225E0 ; =0x021D21F8
	mov r1, #0x30
	ldr r0, [r0]
	mul r1, r6
	str r6, [r0, #4]
	add r0, r4, #0
	bl sub_0201AA8C
	ldr r7, _020225E0 ; =0x021D21F8
	mov r4, #0
	ldr r1, [r7]
	cmp r6, #0
	str r0, [r1]
	ble _020225DC
	add r5, r4, #0
_020225CA:
	ldr r0, [r7]
	ldr r0, [r0]
	add r0, r0, r5
	bl sub_02022874
	add r4, r4, #1
	add r5, #0x30
	cmp r4, r6
	blt _020225CA
_020225DC:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020225E0: .word 0x021D21F8
	thumb_func_end sub_02022588

	thumb_func_start sub_020225E4
sub_020225E4: ; 0x020225E4
	cmp r1, #1
	bne _020225F4
	ldr r1, _02022604 ; =0x021D21F8
	ldr r2, [r1]
	ldrh r1, [r2, #0x24]
	orr r0, r1
	strh r0, [r2, #0x24]
	bx lr
_020225F4:
	cmp r1, #2
	bne _02022602
	ldr r1, _02022604 ; =0x021D21F8
	ldr r2, [r1]
	ldrh r1, [r2, #0x26]
	orr r0, r1
	strh r0, [r2, #0x26]
_02022602:
	bx lr
	.align 2, 0
_02022604: .word 0x021D21F8
	thumb_func_end sub_020225E4

	thumb_func_start sub_02022608
sub_02022608: ; 0x02022608
	push {r3, lr}
	ldr r0, _02022630 ; =0x021D21F8
	ldr r0, [r0]
	cmp r0, #0
	beq _0202262E
	bl sub_0202276C
	ldr r0, _02022630 ; =0x021D21F8
	ldr r0, [r0]
	ldr r0, [r0]
	bl sub_0201AB0C
	ldr r0, _02022630 ; =0x021D21F8
	ldr r0, [r0]
	bl sub_0201AB0C
	ldr r0, _02022630 ; =0x021D21F8
	mov r1, #0
	str r1, [r0]
_0202262E:
	pop {r3, pc}
	.align 2, 0
_02022630: .word 0x021D21F8
	thumb_func_end sub_02022608

	thumb_func_start sub_02022634
sub_02022634: ; 0x02022634
	bx lr
	.align 2, 0
	thumb_func_end sub_02022634

	thumb_func_start sub_02022638
sub_02022638: ; 0x02022638
	push {r3, lr}
	ldr r0, _0202265C ; =0x021D21F8
	mov r2, #0
	ldr r1, [r0]
	str r2, [r1, #0xc]
	ldr r1, [r0]
	str r2, [r1, #0x10]
	ldr r1, [r0]
	str r2, [r1, #0x14]
	ldr r0, [r0]
	str r2, [r0, #0x18]
	bl sub_020229E0
	ldr r0, _0202265C ; =0x021D21F8
	ldr r0, [r0]
	bl sub_02022AF0
	pop {r3, pc}
	.align 2, 0
_0202265C: .word 0x021D21F8
	thumb_func_end sub_02022638

	thumb_func_start sub_02022660
sub_02022660: ; 0x02022660
	push {r3, r4, r5, lr}
	add r5, r0, #0
	bl sub_020229A4
	add r4, r0, #0
	bne _02022674
	bl GF_AssertFail
	mov r0, #0
	pop {r3, r4, r5, pc}
_02022674:
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02022840
	cmp r0, #0
	bne _02022684
	mov r0, #0
	pop {r3, r4, r5, pc}
_02022684:
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02022890
	cmp r0, #0
	bne _0202269A
	ldr r0, [r5, #0xc]
	bl sub_02022744
	mov r0, #0
	pop {r3, r4, r5, pc}
_0202269A:
	add r0, r4, #0
	bl sub_02022AF8
	mov r0, #1
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02022660

	thumb_func_start sub_020226A4
sub_020226A4: ; 0x020226A4
	push {r3, r4, r5, lr}
	add r5, r0, #0
	bl sub_020229A4
	add r4, r0, #0
	bne _020226B8
	bl GF_AssertFail
	mov r0, #0
	pop {r3, r4, r5, pc}
_020226B8:
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02022840
	cmp r0, #0
	bne _020226C8
	mov r0, #0
	pop {r3, r4, r5, pc}
_020226C8:
	add r0, r5, #0
	add r1, r4, #0
	bl sub_020228E8
	cmp r0, #0
	bne _020226DE
	ldr r0, [r5, #0xc]
	bl sub_02022744
	mov r0, #0
	pop {r3, r4, r5, pc}
_020226DE:
	mov r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_020226A4

	thumb_func_start sub_020226E4
sub_020226E4: ; 0x020226E4
	push {r3, r4, r5, lr}
	add r4, r0, #0
	add r5, r1, #0
	bne _020226F0
	bl GF_AssertFail
_020226F0:
	add r0, r4, #0
	bl sub_0202296C
	add r4, r0, #0
	bne _020226FE
	bl GF_AssertFail
_020226FE:
	str r5, [r4]
	ldr r1, [r4, #4]
	mov r0, #1
	tst r0, r1
	beq _02022716
	ldr r3, [r4, #8]
	ldr r1, [r4, #0x24]
	ldr r2, [r5, #0xc]
	mov r0, #0xe
	lsl r3, r3, #5
	bl sub_020205D8
_02022716:
	ldr r1, [r4, #4]
	mov r0, #2
	tst r0, r1
	beq _0202272C
	ldr r3, [r4, #8]
	ldr r1, [r4, #0x28]
	ldr r2, [r5, #0xc]
	mov r0, #0x1e
	lsl r3, r3, #5
	bl sub_020205D8
_0202272C:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_020226E4

	thumb_func_start sub_02022730
sub_02022730: ; 0x02022730
	push {r3, lr}
	bl sub_0202296C
	cmp r0, #0
	beq _0202273E
	mov r0, #1
	pop {r3, pc}
_0202273E:
	mov r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_02022730

	thumb_func_start sub_02022744
sub_02022744: ; 0x02022744
	push {r4, lr}
	bl sub_0202296C
	add r4, r0, #0
	bne _02022752
	bl GF_AssertFail
_02022752:
	add r0, r4, #0
	add r0, #0x2c
	ldrb r0, [r0]
	cmp r0, #1
	bne _02022768
	add r0, r4, #0
	bl sub_02022B34
	add r0, r4, #0
	bl sub_02022838
_02022768:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02022744

	thumb_func_start sub_0202276C
sub_0202276C: ; 0x0202276C
	push {r4, r5, r6, lr}
	ldr r6, _020227A8 ; =0x021D21F8
	mov r4, #0
	ldr r1, [r6]
	ldr r0, [r1, #4]
	cmp r0, #0
	ble _020227A4
	add r5, r4, #0
_0202277C:
	ldr r1, [r1]
	add r0, r1, r5
	add r0, #0x2c
	ldrb r0, [r0]
	cmp r0, #1
	bne _02022798
	add r0, r1, r5
	bl sub_02022B34
	ldr r0, [r6]
	ldr r0, [r0]
	add r0, r0, r5
	bl sub_02022838
_02022798:
	ldr r1, [r6]
	add r4, r4, #1
	ldr r0, [r1, #4]
	add r5, #0x30
	cmp r4, r0
	blt _0202277C
_020227A4:
	pop {r4, r5, r6, pc}
	nop
_020227A8: .word 0x021D21F8
	thumb_func_end sub_0202276C

	thumb_func_start sub_020227AC
sub_020227AC: ; 0x020227AC
	push {r3, lr}
	bl sub_0202296C
	cmp r0, #0
	bne _020227C0
	bne _020227BC
	bl GF_AssertFail
_020227BC:
	mov r0, #0
	pop {r3, pc}
_020227C0:
	add r1, r0, #0
	add r1, #0x2c
	ldrb r1, [r1]
	cmp r1, #1
	bne _020227CE
	add r0, #0x10
	pop {r3, pc}
_020227CE:
	mov r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_020227AC

	thumb_func_start sub_020227D4
sub_020227D4: ; 0x020227D4
	push {r4, lr}
	add r4, r1, #0
	bl sub_0202296C
	cmp r0, #0
	bne _020227EA
	bne _020227E6
	bl GF_AssertFail
_020227E6:
	mov r0, #0
	pop {r4, pc}
_020227EA:
	add r1, r0, #0
	add r1, #0x2c
	ldrb r1, [r1]
	cmp r1, #1
	beq _020227F8
	mov r0, #0
	pop {r4, pc}
_020227F8:
	ldr r1, [r0]
	ldr r1, [r1, #4]
	cmp r1, #0
	beq _02022804
	mov r1, #1
	str r1, [r4, #0x18]
_02022804:
	add r0, #0x10
	pop {r4, pc}
	thumb_func_end sub_020227D4

	thumb_func_start sub_02022808
sub_02022808: ; 0x02022808
	push {r4, lr}
	ldr r2, [r0, #4]
	cmp r2, #0
	beq _02022816
	mov r4, #2
	lsl r4, r4, #8
	b _02022822
_02022816:
	ldr r2, [r0]
	cmp r2, #4
	bne _02022820
	mov r4, #0
	b _02022822
_02022820:
	mov r4, #0x20
_02022822:
	cmp r4, #0
	beq _02022832
	bl sub_020B8078
	add r1, r4, #0
	bl sub_020F2BA4
	pop {r4, pc}
_02022832:
	mov r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02022808

	thumb_func_start sub_02022838
sub_02022838: ; 0x02022838
	ldr r3, _0202283C ; =sub_02022874
	bx r3
	.align 2, 0
_0202283C: .word sub_02022874
	thumb_func_end sub_02022838

	thumb_func_start sub_02022840
sub_02022840: ; 0x02022840
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [r5]
	add r4, r1, #0
	str r0, [r4]
	ldr r0, [r5, #0xc]
	bl sub_02022730
	cmp r0, #1
	bne _0202285C
	bl GF_AssertFail
	mov r0, #0
	pop {r3, r4, r5, pc}
_0202285C:
	ldr r0, [r5, #0xc]
	add r1, r4, #0
	str r0, [r4, #0xc]
	ldr r0, [r5, #4]
	add r1, #0x2c
	str r0, [r4, #4]
	mov r0, #1
	strb r0, [r1]
	ldr r1, [r5, #8]
	str r1, [r4, #8]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02022840

	thumb_func_start sub_02022874
sub_02022874: ; 0x02022874
	push {r4, lr}
	mov r1, #0
	mov r2, #0x30
	add r4, r0, #0
	bl sub_020E5B44
	mov r0, #0
	mvn r0, r0
	str r0, [r4, #0xc]
	add r4, #0x10
	add r0, r4, #0
	bl sub_020B804C
	pop {r4, pc}
	thumb_func_end sub_02022874

	thumb_func_start sub_02022890
sub_02022890: ; 0x02022890
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	add r6, r1, #0
	ldr r0, [r6]
	ldr r0, [r0, #4]
	cmp r0, #0
	beq _020228B0
	ldr r0, _020228E4 ; =0x021D21F8
	ldr r0, [r0]
	add r4, r0, #0
	add r5, r0, #0
	ldr r3, [r0, #0x1c]
	add r4, #0x14
	add r5, #0x18
	ldr r0, [r0, #0x20]
	b _020228C0
_020228B0:
	ldr r0, _020228E4 ; =0x021D21F8
	mov r3, #2
	ldr r5, [r0]
	lsl r3, r3, #8
	add r4, r5, #0
	add r4, #0xc
	add r5, #0x10
	add r0, r3, #0
_020228C0:
	str r0, [sp]
	ldr r1, [r4]
	ldr r2, [r5]
	add r0, r6, #0
	bl sub_02022B70
	add r0, r6, #0
	bl sub_02022A28
	add r0, r6, #0
	add r1, r4, #0
	add r2, r5, #0
	bl sub_02022BBC
	mov r0, #1
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	nop
_020228E4: .word 0x021D21F8
	thumb_func_end sub_02022890

	thumb_func_start sub_020228E8
sub_020228E8: ; 0x020228E8
	push {r4, r5, r6, lr}
	add r5, r1, #0
	ldr r0, [r5]
	ldr r0, [r0, #4]
	cmp r0, #0
	beq _020228F8
	bl GF_AssertFail
_020228F8:
	ldr r1, [r5, #4]
	mov r0, #1
	tst r0, r1
	beq _0202291A
	ldr r0, _02022968 ; =0x021D21F8
	ldr r1, [r5, #8]
	ldr r0, [r0]
	ldrh r0, [r0, #0x24]
	bl sub_02022AB0
	add r6, r0, #0
	mov r0, #0
	mvn r0, r0
	cmp r6, r0
	bne _0202291A
	mov r0, #0
	pop {r4, r5, r6, pc}
_0202291A:
	ldr r1, [r5, #4]
	mov r0, #2
	tst r0, r1
	beq _0202293C
	ldr r0, _02022968 ; =0x021D21F8
	ldr r1, [r5, #8]
	ldr r0, [r0]
	ldrh r0, [r0, #0x26]
	bl sub_02022AB0
	add r4, r0, #0
	mov r0, #0
	mvn r0, r0
	cmp r4, r0
	bne _0202293C
	mov r0, #0
	pop {r4, r5, r6, pc}
_0202293C:
	ldr r1, [r5, #4]
	mov r0, #1
	tst r0, r1
	beq _02022946
	str r6, [r5, #0x24]
_02022946:
	ldr r1, [r5, #4]
	mov r0, #2
	tst r0, r1
	beq _02022950
	str r4, [r5, #0x28]
_02022950:
	ldr r0, [r5, #8]
	lsl r1, r0, #5
	ldr r0, [r5]
	str r1, [r0, #8]
	add r0, r5, #0
	bl sub_02022A38
	add r0, r5, #0
	bl sub_02022AF8
	mov r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
_02022968: .word 0x021D21F8
	thumb_func_end sub_020228E8

	thumb_func_start sub_0202296C
sub_0202296C: ; 0x0202296C
	push {r4, r5}
	ldr r2, _020229A0 ; =0x021D21F8
	mov r1, #0
	ldr r5, [r2]
	ldr r2, [r5, #4]
	cmp r2, #0
	ble _02022998
	ldr r2, [r5]
	add r4, r2, #0
_0202297E:
	ldr r3, [r4, #0xc]
	cmp r0, r3
	bne _0202298E
	mov r0, #0x30
	mul r0, r1
	add r0, r2, r0
	pop {r4, r5}
	bx lr
_0202298E:
	ldr r3, [r5, #4]
	add r1, r1, #1
	add r4, #0x30
	cmp r1, r3
	blt _0202297E
_02022998:
	mov r0, #0
	pop {r4, r5}
	bx lr
	nop
_020229A0: .word 0x021D21F8
	thumb_func_end sub_0202296C

	thumb_func_start sub_020229A4
sub_020229A4: ; 0x020229A4
	push {r3, r4}
	ldr r1, _020229DC ; =0x021D21F8
	mov r0, #0
	ldr r4, [r1]
	ldr r1, [r4, #4]
	cmp r1, #0
	ble _020229D4
	ldr r1, [r4]
	add r3, r1, #0
_020229B6:
	add r2, r3, #0
	add r2, #0x2c
	ldrb r2, [r2]
	cmp r2, #0
	bne _020229CA
	mov r2, #0x30
	mul r2, r0
	add r0, r1, r2
	pop {r3, r4}
	bx lr
_020229CA:
	ldr r2, [r4, #4]
	add r0, r0, #1
	add r3, #0x30
	cmp r0, r2
	blt _020229B6
_020229D4:
	mov r0, #0
	pop {r3, r4}
	bx lr
	nop
_020229DC: .word 0x021D21F8
	thumb_func_end sub_020229A4

	thumb_func_start sub_020229E0
sub_020229E0: ; 0x020229E0
	push {r3, lr}
	bl sub_020CEBFC
	cmp r0, #0x20
	beq _020229EE
	cmp r0, #0x40
	bne _020229FA
_020229EE:
	ldr r0, _02022A24 ; =0x021D21F8
	mov r1, #2
	ldr r0, [r0]
	lsl r1, r1, #0xc
	str r1, [r0, #0x1c]
	b _02022A02
_020229FA:
	ldr r0, _02022A24 ; =0x021D21F8
	mov r1, #0
	ldr r0, [r0]
	str r1, [r0, #0x1c]
_02022A02:
	bl sub_020CEC2C
	mov r1, #1
	lsl r1, r1, #8
	cmp r0, r1
	bne _02022A18
	ldr r0, _02022A24 ; =0x021D21F8
	lsl r1, r1, #5
	ldr r0, [r0]
	str r1, [r0, #0x20]
	pop {r3, pc}
_02022A18:
	ldr r0, _02022A24 ; =0x021D21F8
	mov r1, #0
	ldr r0, [r0]
	str r1, [r0, #0x20]
	pop {r3, pc}
	nop
_02022A24: .word 0x021D21F8
	thumb_func_end sub_020229E0

	thumb_func_start sub_02022A28
sub_02022A28: ; 0x02022A28
	ldr r1, [r0, #8]
	ldr r3, _02022A34 ; =sub_02022A38
	lsl r2, r1, #5
	ldr r1, [r0]
	str r2, [r1, #8]
	bx r3
	.align 2, 0
_02022A34: .word sub_02022A38
	thumb_func_end sub_02022A28

	thumb_func_start sub_02022A38
sub_02022A38: ; 0x02022A38
	push {r4, lr}
	add r4, r0, #0
	add r0, #0x10
	bl sub_020B804C
	ldr r0, [r4, #4]
	mov r2, #1
	tst r0, r2
	beq _02022A56
	add r3, r4, #0
	ldr r0, [r4]
	ldr r1, [r4, #0x24]
	add r3, #0x10
	bl sub_020B86CC
_02022A56:
	ldr r0, [r4, #4]
	mov r2, #2
	tst r0, r2
	beq _02022A6A
	ldr r0, [r4]
	ldr r1, [r4, #0x28]
	add r4, #0x10
	add r3, r4, #0
	bl sub_020B86CC
_02022A6A:
	pop {r4, pc}
	thumb_func_end sub_02022A38

	thumb_func_start sub_02022A6C
sub_02022A6C: ; 0x02022A6C
	push {r4, r5, r6, r7}
	mov r3, #0
	cmp r1, #0
	ble _02022A8A
	mov r5, #1
_02022A76:
	ldrh r7, [r0]
	add r4, r2, r3
	add r6, r5, #0
	lsl r6, r4
	add r4, r7, #0
	orr r4, r6
	add r3, r3, #1
	strh r4, [r0]
	cmp r3, r1
	blt _02022A76
_02022A8A:
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end sub_02022A6C

	thumb_func_start sub_02022A90
sub_02022A90: ; 0x02022A90
	push {r4, r5, r6, r7}
	mov r4, #0
	cmp r1, #0
	ble _02022AAC
	mov r6, #1
_02022A9A:
	add r5, r2, r4
	add r7, r6, #0
	ldrh r3, [r0]
	lsl r7, r5
	bic r3, r7
	add r4, r4, #1
	strh r3, [r0]
	cmp r4, r1
	blt _02022A9A
_02022AAC:
	pop {r4, r5, r6, r7}
	bx lr
	thumb_func_end sub_02022A90

	thumb_func_start sub_02022AB0
sub_02022AB0: ; 0x02022AB0
	push {r4, r5, r6, r7}
	mov r3, #0
	mov r6, #1
	add r2, r3, #0
_02022AB8:
	add r4, r2, #0
	b _02022AC2
_02022ABC:
	cmp r5, #0x10
	bge _02022AD0
	add r4, r4, #1
_02022AC2:
	add r5, r3, r4
	add r7, r6, #0
	lsl r7, r5
	tst r7, r0
	bne _02022AD0
	cmp r4, r1
	blt _02022ABC
_02022AD0:
	cmp r4, r1
	bge _02022ADC
	add r3, r3, r4
	add r3, r3, #1
	cmp r3, #0x10
	blt _02022AB8
_02022ADC:
	cmp r3, #0x10
	blt _02022AE8
	mov r0, #0
	mvn r0, r0
	pop {r4, r5, r6, r7}
	bx lr
_02022AE8:
	lsl r0, r3, #5
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end sub_02022AB0

	thumb_func_start sub_02022AF0
sub_02022AF0: ; 0x02022AF0
	mov r1, #0
	strh r1, [r0, #0x24]
	strh r1, [r0, #0x26]
	bx lr
	thumb_func_end sub_02022AF0

	thumb_func_start sub_02022AF8
sub_02022AF8: ; 0x02022AF8
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #4]
	mov r0, #1
	tst r0, r1
	beq _02022B14
	ldr r0, _02022B30 ; =0x021D21F8
	ldr r2, [r4, #0x24]
	ldr r0, [r0]
	ldr r1, [r4, #8]
	add r0, #0x24
	lsr r2, r2, #5
	bl sub_02022A6C
_02022B14:
	ldr r1, [r4, #4]
	mov r0, #2
	tst r0, r1
	beq _02022B2C
	ldr r0, _02022B30 ; =0x021D21F8
	ldr r2, [r4, #0x28]
	ldr r0, [r0]
	ldr r1, [r4, #8]
	add r0, #0x26
	lsr r2, r2, #5
	bl sub_02022A6C
_02022B2C:
	pop {r4, pc}
	nop
_02022B30: .word 0x021D21F8
	thumb_func_end sub_02022AF8

	thumb_func_start sub_02022B34
sub_02022B34: ; 0x02022B34
	push {r4, lr}
	add r4, r0, #0
	ldr r1, [r4, #4]
	mov r0, #1
	tst r0, r1
	beq _02022B50
	ldr r0, _02022B6C ; =0x021D21F8
	ldr r2, [r4, #0x24]
	ldr r0, [r0]
	ldr r1, [r4, #8]
	add r0, #0x24
	lsr r2, r2, #5
	bl sub_02022A90
_02022B50:
	ldr r1, [r4, #4]
	mov r0, #2
	tst r0, r1
	beq _02022B68
	ldr r0, _02022B6C ; =0x021D21F8
	ldr r2, [r4, #0x28]
	ldr r0, [r0]
	ldr r1, [r4, #8]
	add r0, #0x26
	lsr r2, r2, #5
	bl sub_02022A90
_02022B68:
	pop {r4, pc}
	nop
_02022B6C: .word 0x021D21F8
	thumb_func_end sub_02022B34

	thumb_func_start sub_02022B70
sub_02022B70: ; 0x02022B70
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r2, #0
	ldr r2, [r5, #4]
	mov r0, #1
	tst r2, r0
	beq _02022B96
	ldr r2, [r5, #8]
	lsl r2, r2, #5
	add r2, r1, r2
	cmp r2, r3
	bls _02022B94
	bl GF_AssertFail
	bl sub_02022634
	mov r0, #0
	b _02022B96
_02022B94:
	str r1, [r5, #0x24]
_02022B96:
	ldr r2, [r5, #4]
	mov r1, #2
	tst r1, r2
	beq _02022BB8
	ldr r1, [r5, #8]
	lsl r1, r1, #5
	add r2, r4, r1
	ldr r1, [sp, #0x10]
	cmp r2, r1
	bls _02022BB6
	bl GF_AssertFail
	bl sub_02022634
	mov r0, #0
	pop {r3, r4, r5, pc}
_02022BB6:
	str r4, [r5, #0x28]
_02022BB8:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02022B70

	thumb_func_start sub_02022BBC
sub_02022BBC: ; 0x02022BBC
	push {r3, r4}
	ldr r4, [r0, #4]
	mov r3, #1
	tst r3, r4
	beq _02022BD0
	ldr r3, [r0, #8]
	ldr r4, [r1]
	lsl r3, r3, #5
	add r3, r4, r3
	str r3, [r1]
_02022BD0:
	ldr r3, [r0, #4]
	mov r1, #2
	tst r1, r3
	beq _02022BE2
	ldr r0, [r0, #8]
	ldr r1, [r2]
	lsl r0, r0, #5
	add r0, r1, r0
	str r0, [r2]
_02022BE2:
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end sub_02022BBC

	thumb_func_start sub_02022BE8
sub_02022BE8: ; 0x02022BE8
	push {r4, lr}
	add r4, r0, #0
	bl sub_020CE89C
	bl sub_020CE8C4
	bl sub_020CE948
	bl sub_020CE970
	bl sub_020CE8B0
	bl sub_020CE8E8
	bl sub_020CE95C
	bl sub_020CE998
	bl sub_020CE90C
	bl sub_020CE920
	ldr r0, [r4]
	bl sub_020CDC04
	ldr r0, [r4, #4]
	bl sub_020CDFE4
	ldr r0, [r4, #8]
	bl sub_020CE650
	ldr r0, [r4, #0xc]
	bl sub_020CE768
	ldr r0, [r4, #0x10]
	bl sub_020CDE94
	ldr r0, [r4, #0x14]
	bl sub_020CE0E4
	ldr r0, [r4, #0x18]
	bl sub_020CE6F8
	ldr r0, [r4, #0x1c]
	bl sub_020CE7E8
	ldr r0, [r4, #0x20]
	bl sub_020CE190
	ldr r0, [r4, #0x24]
	bl sub_020CE368
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02022BE8

	thumb_func_start sub_02022C54
sub_02022C54: ; 0x02022C54
	ldr r0, _02022C5C ; =0x021D21FC
	mov r1, #0
	str r1, [r0, #4]
	bx lr
	.align 2, 0
_02022C5C: .word 0x021D21FC
	thumb_func_end sub_02022C54

	thumb_func_start sub_02022C60
sub_02022C60: ; 0x02022C60
	cmp r1, #1
	bne _02022C6E
	ldr r1, _02022C94 ; =0x021D21FC
	ldr r1, [r1, #4]
	tst r1, r0
	beq _02022C76
	bx lr
_02022C6E:
	ldr r1, _02022C94 ; =0x021D21FC
	ldr r1, [r1, #4]
	tst r1, r0
	beq _02022C90
_02022C76:
	ldr r1, _02022C94 ; =0x021D21FC
	ldr r2, [r1, #4]
	add r3, r2, #0
	eor r3, r0
	mov r2, #1
	lsl r2, r2, #0x1a
	str r3, [r1, #4]
	ldr r1, [r2]
	ldr r0, _02022C98 ; =0xFFFFE0FF
	and r1, r0
	lsl r0, r3, #8
	orr r0, r1
	str r0, [r2]
_02022C90:
	bx lr
	nop
_02022C94: .word 0x021D21FC
_02022C98: .word 0xFFFFE0FF
	thumb_func_end sub_02022C60

	thumb_func_start sub_02022C9C
sub_02022C9C: ; 0x02022C9C
	ldr r1, _02022CB4 ; =0x021D21FC
	mov r3, #1
	str r0, [r1, #4]
	lsl r3, r3, #0x1a
	ldr r2, [r3]
	ldr r1, _02022CB8 ; =0xFFFFE0FF
	lsl r0, r0, #8
	and r1, r2
	orr r0, r1
	str r0, [r3]
	bx lr
	nop
_02022CB4: .word 0x021D21FC
_02022CB8: .word 0xFFFFE0FF
	thumb_func_end sub_02022C9C

	thumb_func_start sub_02022CBC
sub_02022CBC: ; 0x02022CBC
	ldr r0, _02022CC4 ; =0x021D21FC
	mov r1, #0
	str r1, [r0]
	bx lr
	.align 2, 0
_02022CC4: .word 0x021D21FC
	thumb_func_end sub_02022CBC

	thumb_func_start sub_02022CC8
sub_02022CC8: ; 0x02022CC8
	cmp r1, #1
	bne _02022CD6
	ldr r1, _02022CF8 ; =0x021D21FC
	ldr r1, [r1]
	tst r1, r0
	beq _02022CDE
	bx lr
_02022CD6:
	ldr r1, _02022CF8 ; =0x021D21FC
	ldr r1, [r1]
	tst r1, r0
	beq _02022CF6
_02022CDE:
	ldr r1, _02022CF8 ; =0x021D21FC
	ldr r2, [r1]
	add r3, r2, #0
	eor r3, r0
	ldr r2, _02022CFC ; =0x04001000
	str r3, [r1]
	ldr r1, [r2]
	ldr r0, _02022D00 ; =0xFFFFE0FF
	and r1, r0
	lsl r0, r3, #8
	orr r0, r1
	str r0, [r2]
_02022CF6:
	bx lr
	.align 2, 0
_02022CF8: .word 0x021D21FC
_02022CFC: .word 0x04001000
_02022D00: .word 0xFFFFE0FF
	thumb_func_end sub_02022CC8

	thumb_func_start sub_02022D04
sub_02022D04: ; 0x02022D04
	ldr r1, _02022D18 ; =0x021D21FC
	ldr r3, _02022D1C ; =0x04001000
	str r0, [r1]
	ldr r2, [r3]
	ldr r1, _02022D20 ; =0xFFFFE0FF
	lsl r0, r0, #8
	and r1, r2
	orr r0, r1
	str r0, [r3]
	bx lr
	.align 2, 0
_02022D18: .word 0x021D21FC
_02022D1C: .word 0x04001000
_02022D20: .word 0xFFFFE0FF
	thumb_func_end sub_02022D04

	thumb_func_start sub_02022D24
sub_02022D24: ; 0x02022D24
	push {r3, lr}
	bl sub_020CD9B4
	ldr r2, _02022D38 ; =0x04001000
	mov r0, #1
	ldr r1, [r2]
	lsl r0, r0, #0x10
	orr r0, r1
	str r0, [r2]
	pop {r3, pc}
	.align 2, 0
_02022D38: .word 0x04001000
	thumb_func_end sub_02022D24

	thumb_func_start sub_02022D3C
sub_02022D3C: ; 0x02022D3C
	ldr r0, _02022D5C ; =0x021D116C
	ldr r2, _02022D60 ; =0x04000304
	ldrb r0, [r0, #9]
	cmp r0, #0
	bne _02022D50
	ldrh r1, [r2]
	lsr r0, r2, #0xb
	orr r0, r1
	strh r0, [r2]
	bx lr
_02022D50:
	ldrh r1, [r2]
	ldr r0, _02022D64 ; =0xFFFF7FFF
	and r0, r1
	strh r0, [r2]
	bx lr
	nop
_02022D5C: .word 0x021D116C
_02022D60: .word 0x04000304
_02022D64: .word 0xFFFF7FFF
	thumb_func_end sub_02022D3C

	thumb_func_start sub_02022D68
sub_02022D68: ; 0x02022D68
	ldr r0, _02022D70 ; =0x021D21FC
	ldr r0, [r0, #4]
	bx lr
	nop
_02022D70: .word 0x021D21FC
	thumb_func_end sub_02022D68

	thumb_func_start sub_02022D74
sub_02022D74: ; 0x02022D74
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldrh r0, [r5, #0x3e]
	ldr r2, [r5, #0x38]
	ldrh r4, [r5, #0x3c]
	asr r0, r0, #4
	lsl r1, r0, #2
	ldr r0, _02022E50 ; =0x021094DC
	asr r3, r2, #0x1f
	ldrsh r0, [r0, r1]
	asr r1, r0, #0x1f
	bl sub_020F2948
	mov r2, #2
	mov r3, #0
	lsl r2, r2, #0xa
	add r0, r0, r2
	adc r1, r3
	asr r2, r4, #4
	lsl r2, r2, #1
	add r2, r2, #1
	lsl r3, r2, #1
	ldr r2, _02022E50 ; =0x021094DC
	lsl r1, r1, #0x14
	ldrsh r2, [r2, r3]
	lsr r0, r0, #0xc
	orr r0, r1
	asr r1, r0, #0x1f
	asr r3, r2, #0x1f
	bl sub_020F2948
	mov r2, #2
	mov r3, #0
	lsl r2, r2, #0xa
	add r2, r0, r2
	adc r1, r3
	lsl r0, r1, #0x14
	lsr r1, r2, #0xc
	orr r1, r0
	str r1, [r5, #0x14]
	ldrh r0, [r5, #0x3e]
	ldr r2, [r5, #0x38]
	asr r0, r0, #4
	lsl r0, r0, #1
	add r0, r0, #1
	lsl r1, r0, #1
	ldr r0, _02022E50 ; =0x021094DC
	asr r3, r2, #0x1f
	ldrsh r0, [r0, r1]
	asr r1, r0, #0x1f
	bl sub_020F2948
	mov r2, #2
	lsl r2, r2, #0xa
	mov r3, #0
	add r0, r0, r2
	adc r1, r3
	ldrh r2, [r5, #0x3c]
	lsl r1, r1, #0x14
	lsr r0, r0, #0xc
	asr r2, r2, #4
	lsl r2, r2, #1
	add r2, r2, #1
	lsl r3, r2, #1
	ldr r2, _02022E50 ; =0x021094DC
	orr r0, r1
	ldrsh r2, [r2, r3]
	asr r1, r0, #0x1f
	asr r3, r2, #0x1f
	bl sub_020F2948
	mov r2, #2
	mov r3, #0
	lsl r2, r2, #0xa
	add r2, r0, r2
	adc r1, r3
	lsl r0, r1, #0x14
	lsr r1, r2, #0xc
	orr r1, r0
	neg r0, r4
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	str r1, [r5, #0x1c]
	asr r0, r0, #4
	lsl r1, r0, #2
	ldr r0, _02022E50 ; =0x021094DC
	ldr r2, [r5, #0x38]
	ldrsh r0, [r0, r1]
	asr r3, r2, #0x1f
	asr r1, r0, #0x1f
	bl sub_020F2948
	mov r2, #2
	mov r3, #0
	lsl r2, r2, #0xa
	add r2, r0, r2
	adc r1, r3
	lsl r0, r1, #0x14
	lsr r1, r2, #0xc
	orr r1, r0
	add r0, r5, #0
	str r1, [r5, #0x18]
	add r0, #0x14
	add r5, #0x20
	add r1, r5, #0
	add r2, r0, #0
	bl sub_020CCD78
	pop {r3, r4, r5, pc}
	nop
_02022E50: .word 0x021094DC
	thumb_func_end sub_02022D74

	thumb_func_start sub_02022E54
sub_02022E54: ; 0x02022E54
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldrh r0, [r5, #0x3e]
	ldr r2, [r5, #0x38]
	ldrh r4, [r5, #0x3c]
	asr r0, r0, #4
	lsl r1, r0, #2
	ldr r0, _02022F34 ; =0x021094DC
	asr r3, r2, #0x1f
	ldrsh r0, [r0, r1]
	asr r1, r0, #0x1f
	bl sub_020F2948
	mov r2, #2
	mov r3, #0
	lsl r2, r2, #0xa
	add r0, r0, r2
	adc r1, r3
	asr r2, r4, #4
	lsl r2, r2, #1
	add r2, r2, #1
	lsl r3, r2, #1
	ldr r2, _02022F34 ; =0x021094DC
	lsl r1, r1, #0x14
	ldrsh r2, [r2, r3]
	lsr r0, r0, #0xc
	orr r0, r1
	asr r1, r0, #0x1f
	asr r3, r2, #0x1f
	bl sub_020F2948
	mov r2, #2
	mov r3, #0
	lsl r2, r2, #0xa
	add r2, r0, r2
	adc r1, r3
	lsl r0, r1, #0x14
	lsr r1, r2, #0xc
	orr r1, r0
	neg r0, r1
	str r0, [r5, #0x20]
	ldrh r0, [r5, #0x3e]
	ldr r2, [r5, #0x38]
	asr r0, r0, #4
	lsl r0, r0, #1
	add r0, r0, #1
	lsl r1, r0, #1
	ldr r0, _02022F34 ; =0x021094DC
	asr r3, r2, #0x1f
	ldrsh r0, [r0, r1]
	asr r1, r0, #0x1f
	bl sub_020F2948
	mov r2, #2
	lsl r2, r2, #0xa
	mov r3, #0
	add r0, r0, r2
	adc r1, r3
	ldrh r2, [r5, #0x3c]
	lsl r1, r1, #0x14
	lsr r0, r0, #0xc
	asr r2, r2, #4
	lsl r2, r2, #1
	add r2, r2, #1
	lsl r3, r2, #1
	ldr r2, _02022F34 ; =0x021094DC
	orr r0, r1
	ldrsh r2, [r2, r3]
	asr r1, r0, #0x1f
	asr r3, r2, #0x1f
	bl sub_020F2948
	mov r2, #2
	mov r3, #0
	lsl r2, r2, #0xa
	add r2, r0, r2
	adc r1, r3
	lsl r0, r1, #0x14
	lsr r1, r2, #0xc
	orr r1, r0
	neg r0, r1
	str r0, [r5, #0x28]
	neg r0, r4
	lsl r0, r0, #0x10
	lsr r0, r0, #0x10
	asr r0, r0, #4
	lsl r1, r0, #2
	ldr r0, _02022F34 ; =0x021094DC
	ldr r2, [r5, #0x38]
	ldrsh r0, [r0, r1]
	asr r3, r2, #0x1f
	asr r1, r0, #0x1f
	bl sub_020F2948
	mov r2, #2
	mov r3, #0
	lsl r2, r2, #0xa
	add r2, r0, r2
	adc r1, r3
	lsl r0, r1, #0x14
	lsr r1, r2, #0xc
	orr r1, r0
	neg r0, r1
	str r0, [r5, #0x24]
	add r0, r5, #0
	add r0, #0x20
	add r5, #0x14
	add r1, r5, #0
	add r2, r0, #0
	bl sub_020CCD78
	pop {r3, r4, r5, pc}
	.align 2, 0
_02022F34: .word 0x021094DC
	thumb_func_end sub_02022E54

	thumb_func_start sub_02022F38
sub_02022F38: ; 0x02022F38
	add r2, r1, #0
	add r2, #0x46
	strh r0, [r2]
	asr r0, r0, #4
	lsl r3, r0, #1
	ldr r2, _02022F7C ; =0x021094DC
	lsl r0, r3, #1
	ldrsh r0, [r2, r0]
	str r0, [r1]
	add r0, r3, #1
	lsl r0, r0, #1
	ldrsh r0, [r2, r0]
	mov r2, #0
	str r0, [r1, #4]
	ldr r0, _02022F80 ; =0x00001555
	str r0, [r1, #8]
	mov r0, #0x96
	lsl r0, r0, #0xc
	str r0, [r1, #0xc]
	mov r0, #0xe1
	lsl r0, r0, #0xe
	str r0, [r1, #0x10]
	mov r0, #1
	str r2, [r1, #0x2c]
	lsl r0, r0, #0xc
	str r0, [r1, #0x30]
	str r2, [r1, #0x34]
	str r2, [r1, #0x54]
	str r2, [r1, #0x58]
	str r2, [r1, #0x5c]
	str r2, [r1, #0x60]
	str r2, [r1, #0x64]
	bx lr
	nop
_02022F7C: .word 0x021094DC
_02022F80: .word 0x00001555
	thumb_func_end sub_02022F38

	thumb_func_start sub_02022F84
sub_02022F84: ; 0x02022F84
	ldr r2, [r0, #0x58]
	cmp r2, #0
	bne _02022F8E
	mov r2, #0
	str r2, [r1]
_02022F8E:
	ldr r2, [r0, #0x5c]
	cmp r2, #0
	bne _02022F98
	mov r2, #0
	str r2, [r1, #4]
_02022F98:
	ldr r0, [r0, #0x60]
	cmp r0, #0
	bne _02022FA2
	mov r0, #0
	str r0, [r1, #8]
_02022FA2:
	bx lr
	thumb_func_end sub_02022F84

	thumb_func_start sub_02022FA4
sub_02022FA4: ; 0x02022FA4
	push {r3, r4, r5, r6, r7, lr}
	add r6, r0, #0
	ldr r7, [r6, #0x64]
	add r5, r1, #0
	add r4, r2, #0
	cmp r7, #0
	bne _02022FBC
	ldmia r5!, {r0, r1}
	stmia r4!, {r0, r1}
	ldr r0, [r5]
	str r0, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_02022FBC:
	ldr r0, [r7, #0x24]
	cmp r0, #0
	bne _02022FCC
	ldmia r5!, {r0, r1}
	stmia r4!, {r0, r1}
	ldr r0, [r5]
	str r0, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_02022FCC:
	add r0, r7, #0
	str r0, [sp]
	add r0, #8
	str r0, [sp]
	ldr r0, [r7, #0x10]
	cmp r0, #0
	bne _02022FF6
	add r2, r5, #0
	ldmia r2!, {r0, r1}
	add r3, r4, #0
	stmia r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
	ldr r0, [r6, #0x64]
	ldr r2, [r7, #4]
	ldr r1, [r0, #0xc]
	cmp r2, r1
	bne _0202300A
	mov r1, #1
	str r1, [r0, #0x10]
	b _0202300A
_02022FF6:
	ldr r2, [r7, #4]
	mov r1, #0xc
	ldr r0, [r7, #0x20]
	mul r1, r2
	add r2, r0, r1
	ldmia r2!, {r0, r1}
	add r3, r4, #0
	stmia r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
_0202300A:
	ldr r1, [r6, #0x64]
	ldr r0, [r7, #4]
	ldr r1, [r1]
	add r0, r0, #1
	bl sub_020F2998
	str r1, [r7, #4]
	ldr r1, [sp]
	ldr r0, [r6, #0x64]
	ldr r2, [r1]
	mov r1, #0xc
	ldr r0, [r0, #0x20]
	mul r1, r2
	add r3, r5, #0
	add r2, r0, r1
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	ldr r0, [sp]
	ldr r1, [r6, #0x64]
	ldr r0, [r0]
	ldr r1, [r1]
	add r0, r0, #1
	bl sub_020F2998
	ldr r0, [sp]
	str r1, [r0]
	ldr r0, [r6, #0x64]
	ldr r0, [r0, #0x14]
	cmp r0, #0
	bne _0202304E
	ldr r0, [r5]
	str r0, [r4]
_0202304E:
	ldr r0, [r6, #0x64]
	ldr r0, [r0, #0x18]
	cmp r0, #0
	bne _0202305A
	ldr r0, [r5, #4]
	str r0, [r4, #4]
_0202305A:
	ldr r0, [r6, #0x64]
	ldr r0, [r0, #0x1c]
	cmp r0, #0
	bne _02023066
	ldr r0, [r5, #8]
	str r0, [r4, #8]
_02023066:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02022FA4

	thumb_func_start sub_02023068
sub_02023068: ; 0x02023068
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r0, [sp, #0x18]
	add r7, r1, #0
	str r0, [sp, #0x18]
	ldr r0, [r0, #0x54]
	add r6, r2, #0
	str r3, [sp]
	cmp r0, #0
	beq _020230F6
	add r0, r7, #1
	cmp r0, r5
	ble _02023086
	bl GF_AssertFail
_02023086:
	ldr r0, [sp]
	mov r1, #0x28
	bl sub_0201AA8C
	add r4, r0, #0
	mov r1, #0xc
	ldr r0, [sp]
	mul r1, r5
	bl sub_0201AA8C
	mov r1, #0
	str r0, [r4, #0x20]
	cmp r5, #0
	ble _020230BE
	add r2, r1, #0
	add r0, r1, #0
_020230A6:
	ldr r3, [r4, #0x20]
	add r1, r1, #1
	str r0, [r3, r2]
	ldr r3, [r4, #0x20]
	add r3, r3, r2
	str r0, [r3, #4]
	ldr r3, [r4, #0x20]
	add r3, r3, r2
	str r0, [r3, #8]
	add r2, #0xc
	cmp r1, r5
	blt _020230A6
_020230BE:
	str r5, [r4]
	mov r0, #0
	str r0, [r4, #4]
	str r7, [r4, #8]
	str r7, [r4, #0xc]
	str r0, [r4, #0x10]
	str r0, [r4, #0x14]
	str r0, [r4, #0x18]
	str r0, [r4, #0x1c]
	mov r0, #1
	add r1, r6, #0
	tst r1, r0
	beq _020230DA
	str r0, [r4, #0x14]
_020230DA:
	mov r0, #2
	tst r0, r6
	beq _020230E4
	mov r0, #1
	str r0, [r4, #0x18]
_020230E4:
	mov r0, #4
	tst r0, r6
	beq _020230EE
	mov r0, #1
	str r0, [r4, #0x1c]
_020230EE:
	mov r0, #1
	str r0, [r4, #0x24]
	ldr r0, [sp, #0x18]
	str r4, [r0, #0x64]
_020230F6:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02023068

	thumb_func_start sub_020230F8
sub_020230F8: ; 0x020230F8
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x64]
	cmp r0, #0
	beq _02023112
	ldr r0, [r0, #0x20]
	bl sub_0201AB0C
	ldr r0, [r4, #0x64]
	bl sub_0201AB0C
	mov r0, #0
	str r0, [r4, #0x64]
_02023112:
	pop {r4, pc}
	thumb_func_end sub_020230F8

	thumb_func_start sub_02023114
sub_02023114: ; 0x02023114
	ldr r3, _0202311C ; =sub_0201AA8C
	mov r1, #0x68
	bx r3
	nop
_0202311C: .word sub_0201AA8C
	thumb_func_end sub_02023114

	thumb_func_start sub_02023120
sub_02023120: ; 0x02023120
	ldr r3, _02023124 ; =sub_0201AB0C
	bx r3
	.align 2, 0
_02023124: .word sub_0201AB0C
	thumb_func_end sub_02023120

	thumb_func_start sub_02023128
sub_02023128: ; 0x02023128
	push {r3, r4}
	add r4, r0, #0
	add r3, r1, #0
	mov r2, #0xd
_02023130:
	ldmia r4!, {r0, r1}
	stmia r3!, {r0, r1}
	sub r2, r2, #1
	bne _02023130
	pop {r3, r4}
	bx lr
	thumb_func_end sub_02023128

	thumb_func_start sub_0202313C
sub_0202313C: ; 0x0202313C
	ldr r1, _02023144 ; =0x021D2204
	str r0, [r1]
	bx lr
	nop
_02023144: .word 0x021D2204
	thumb_func_end sub_0202313C

	thumb_func_start sub_02023148
sub_02023148: ; 0x02023148
	ldr r0, _02023150 ; =0x021D2204
	mov r1, #0
	str r1, [r0]
	bx lr
	.align 2, 0
_02023150: .word 0x021D2204
	thumb_func_end sub_02023148

	thumb_func_start sub_02023154
sub_02023154: ; 0x02023154
	push {r4, r5, r6, lr}
	sub sp, #0x18
	ldr r0, _020231EC ; =0x021D2204
	ldr r1, [r0]
	cmp r1, #0
	beq _020231E6
	ldr r0, [r1, #0x54]
	cmp r0, #0
	beq _0202319E
	add r1, #0x48
	add r2, sp, #0xc
	bl sub_020CCDAC
	ldr r0, _020231EC ; =0x021D2204
	add r1, sp, #0xc
	ldr r0, [r0]
	bl sub_02022F84
	ldr r0, _020231EC ; =0x021D2204
	add r1, sp, #0xc
	ldr r0, [r0]
	add r2, sp, #0
	bl sub_02022FA4
	ldr r1, _020231EC ; =0x021D2204
	add r0, sp, #0
	ldr r1, [r1]
	bl sub_02023514
	ldr r0, _020231EC ; =0x021D2204
	ldr r3, [r0]
	ldr r2, [r3, #0x54]
	add r3, #0x48
	ldmia r2!, {r0, r1}
	stmia r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
_0202319E:
	ldr r0, _020231EC ; =0x021D2204
	ldr r5, _020231F0 ; =0x021DA6DC
	ldr r4, [r0]
	add r3, r4, #0
	add r2, r4, #0
	add r4, #0x14
	add r6, r4, #0
	ldmia r6!, {r0, r1}
	stmia r5!, {r0, r1}
	ldr r0, [r6]
	add r2, #0x2c
	str r0, [r5]
	add r6, r2, #0
	ldr r5, _020231F4 ; =0x021DA6E8
	ldmia r6!, {r0, r1}
	stmia r5!, {r0, r1}
	ldr r0, [r6]
	add r3, #0x20
	str r0, [r5]
	add r6, r3, #0
	ldr r5, _020231F8 ; =0x021DA6F4
	ldmia r6!, {r0, r1}
	stmia r5!, {r0, r1}
	ldr r0, [r6]
	add r1, r2, #0
	add r2, r3, #0
	str r0, [r5]
	ldr r3, _020231FC ; =0x021DA4E8
	add r0, r4, #0
	bl sub_020CBF3C
	ldr r1, _02023200 ; =0x021DA51C
	mov r0, #0xe8
	ldr r2, [r1, #0x7c]
	bic r2, r0
	str r2, [r1, #0x7c]
_020231E6:
	add sp, #0x18
	pop {r4, r5, r6, pc}
	nop
_020231EC: .word 0x021D2204
_020231F0: .word 0x021DA6DC
_020231F4: .word 0x021DA6E8
_020231F8: .word 0x021DA6F4
_020231FC: .word 0x021DA4E8
_02023200: .word 0x021DA51C
	thumb_func_end sub_02023154

	thumb_func_start sub_02023204
sub_02023204: ; 0x02023204
	add r3, r0, #0
	add r2, r1, #0
	ldmia r3!, {r0, r1}
	add r2, #0x2c
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	bx lr
	thumb_func_end sub_02023204

	thumb_func_start sub_02023214
sub_02023214: ; 0x02023214
	push {r3, r4}
	add r3, r1, #0
	add r4, r0, #0
	str r4, [r3, #0x54]
	add r2, r3, #0
	ldmia r4!, {r0, r1}
	add r2, #0x48
	stmia r2!, {r0, r1}
	ldr r0, [r4]
	str r0, [r2]
	mov r0, #1
	str r0, [r3, #0x58]
	str r0, [r3, #0x5c]
	str r0, [r3, #0x60]
	pop {r3, r4}
	bx lr
	thumb_func_end sub_02023214

	thumb_func_start sub_02023234
sub_02023234: ; 0x02023234
	mov r1, #0
	str r1, [r0, #0x54]
	str r1, [r0, #0x58]
	str r1, [r0, #0x5c]
	str r1, [r0, #0x60]
	bx lr
	thumb_func_end sub_02023234

	thumb_func_start sub_02023240
sub_02023240: ; 0x02023240
	str r0, [r2, #0xc]
	add r0, r2, #0
	str r1, [r2, #0x10]
	add r0, #0x44
	ldr r3, _02023250 ; =sub_020233D8
	ldrb r0, [r0]
	add r1, r2, #0
	bx r3
	.align 2, 0
_02023250: .word sub_020233D8
	thumb_func_end sub_02023240

	thumb_func_start sub_02023254
sub_02023254: ; 0x02023254
	push {r3, r4, r5, r6, r7, lr}
	ldr r4, [sp, #0x20]
	add r6, r0, #0
	add r7, r1, #0
	add r0, r3, #0
	add r1, r4, #0
	add r5, r2, #0
	bl sub_02022F38
	add r3, r6, #0
	add r2, r4, #0
	ldmia r3!, {r0, r1}
	add r2, #0x20
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	str r7, [r4, #0x38]
	ldrh r0, [r5]
	strh r0, [r4, #0x3c]
	ldrh r0, [r5, #2]
	strh r0, [r4, #0x3e]
	add r0, r4, #0
	ldrh r1, [r5, #4]
	add r0, #0x40
	strh r1, [r0]
	add r0, r4, #0
	ldrh r1, [r5, #6]
	add r0, #0x42
	strh r1, [r0]
	add r0, r4, #0
	bl sub_02022D74
	add r0, sp, #8
	ldrb r0, [r0, #0x10]
	add r1, r4, #0
	bl sub_020233D8
	ldr r0, [sp, #0x1c]
	cmp r0, #0
	beq _020232BA
	str r6, [r4, #0x54]
	add r2, r4, #0
	ldmia r6!, {r0, r1}
	add r2, #0x48
	stmia r2!, {r0, r1}
	ldr r0, [r6]
	str r0, [r2]
	mov r0, #1
	str r0, [r4, #0x58]
	str r0, [r4, #0x5c]
	str r0, [r4, #0x60]
_020232BA:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02023254

	thumb_func_start sub_020232BC
sub_020232BC: ; 0x020232BC
	push {r3, r4, r5, r6, r7, lr}
	ldr r4, [sp, #0x1c]
	add r6, r0, #0
	add r7, r1, #0
	add r0, r3, #0
	add r1, r4, #0
	add r5, r2, #0
	bl sub_02022F38
	add r2, r4, #0
	ldmia r6!, {r0, r1}
	add r2, #0x14
	stmia r2!, {r0, r1}
	ldr r0, [r6]
	str r0, [r2]
	str r7, [r4, #0x38]
	ldrh r0, [r5]
	strh r0, [r4, #0x3c]
	ldrh r0, [r5, #2]
	strh r0, [r4, #0x3e]
	add r0, r4, #0
	ldrh r1, [r5, #4]
	add r0, #0x40
	strh r1, [r0]
	add r0, r4, #0
	ldrh r1, [r5, #6]
	add r0, #0x42
	strh r1, [r0]
	add r0, r4, #0
	bl sub_02022E54
	add r0, sp, #8
	ldrb r0, [r0, #0x10]
	add r1, r4, #0
	bl sub_020233D8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_020232BC

	thumb_func_start sub_02023308
sub_02023308: ; 0x02023308
	push {r4, r5, r6, r7, lr}
	sub sp, #0x3c
	ldr r4, [sp, #0x54]
	add r5, r0, #0
	add r6, r1, #0
	add r0, r2, #0
	add r1, r4, #0
	add r7, r3, #0
	bl sub_02022F38
	add r3, r5, #0
	add r2, r4, #0
	ldmia r3!, {r0, r1}
	add r2, #0x20
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	add r3, r6, #0
	str r0, [r2]
	add r2, r4, #0
	ldmia r3!, {r0, r1}
	add r2, #0x14
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	add r1, r5, #0
	str r0, [r2]
	add r0, r6, #0
	add r2, sp, #0x30
	bl sub_020CCDAC
	add r0, sp, #0x30
	bl sub_020CCF80
	str r0, [r4, #0x38]
	mov r6, #0
	add r0, sp, #0x24
	str r6, [r0]
	str r6, [r0, #4]
	str r6, [r0, #8]
	add r0, sp, #0x18
	str r6, [r0]
	str r6, [r0, #4]
	str r6, [r0, #8]
	add r0, sp, #0xc
	str r6, [r0]
	str r6, [r0, #4]
	str r6, [r0, #8]
	mov r0, #1
	lsl r0, r0, #0xc
	add r3, sp, #0x30
	str r0, [sp, #8]
	ldmia r3!, {r0, r1}
	add r2, sp, #0xc
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	str r6, [sp]
	str r0, [r2]
	str r6, [sp, #4]
	str r6, [sp, #0x10]
	add r0, sp, #0
	add r1, sp, #0xc
	bl sub_02020C64
	strh r0, [r4, #0x3e]
	add r1, r6, #0
	mov r0, #1
	lsl r0, r0, #0xc
	str r0, [sp]
	ldr r0, [sp, #0x38]
	str r1, [sp, #4]
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x34]
	str r1, [sp, #8]
	str r0, [sp, #0x14]
	str r1, [sp, #0x10]
	add r0, sp, #0
	add r1, sp, #0xc
	bl sub_02020C64
	strh r0, [r4, #0x3c]
	add r0, r4, #0
	add r1, r6, #0
	add r0, #0x40
	strh r1, [r0]
	add r0, r7, #0
	add r1, r4, #0
	bl sub_020233D8
	ldr r0, [sp, #0x50]
	cmp r0, #0
	beq _020233D2
	str r5, [r4, #0x54]
	add r2, r4, #0
	ldmia r5!, {r0, r1}
	add r2, #0x48
	stmia r2!, {r0, r1}
	ldr r0, [r5]
	str r0, [r2]
	mov r0, #1
	str r0, [r4, #0x58]
	str r0, [r4, #0x5c]
	str r0, [r4, #0x60]
_020233D2:
	add sp, #0x3c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02023308

	thumb_func_start sub_020233D8
sub_020233D8: ; 0x020233D8
	push {r4, r5, r6, lr}
	sub sp, #0x10
	add r5, r1, #0
	cmp r0, #0
	bne _02023414
	ldr r0, [r5, #0x10]
	str r0, [sp]
	mov r0, #1
	lsl r0, r0, #0xc
	str r0, [sp, #4]
	ldr r0, _02023488 ; =0x021DA4A4
	str r0, [sp, #8]
	ldr r0, [r5]
	ldr r1, [r5, #4]
	ldr r2, [r5, #8]
	ldr r3, [r5, #0xc]
	bl sub_020CC84C
	ldr r1, _0202348C ; =0x021DA51C
	mov r0, #0x50
	ldr r2, [r1, #0x7c]
	add r5, #0x44
	bic r2, r0
	str r2, [r1, #0x7c]
	mov r1, #0
	ldr r0, _02023490 ; =0x0210F6DC
	strb r1, [r5]
	str r1, [r0]
	add sp, #0x10
	pop {r4, r5, r6, pc}
_02023414:
	ldr r4, [r5, #0x38]
	ldr r0, [r5]
	ldr r1, [r5, #4]
	bl sub_020CCBA0
	asr r1, r0, #0x1f
	asr r3, r4, #0x1f
	add r2, r4, #0
	bl sub_020F2948
	mov r2, #2
	mov r3, #0
	lsl r2, r2, #0xa
	add r2, r0, r2
	adc r1, r3
	lsr r4, r2, #0xc
	lsl r0, r1, #0x14
	orr r4, r0
	ldr r2, [r5, #8]
	asr r1, r4, #0x1f
	add r0, r4, #0
	asr r3, r2, #0x1f
	bl sub_020F2948
	mov r2, #2
	mov r3, #0
	lsl r2, r2, #0xa
	add r6, r0, r2
	adc r1, r3
	lsl r0, r1, #0x14
	lsr r3, r6, #0xc
	orr r3, r0
	ldr r0, [r5, #0xc]
	neg r1, r4
	str r0, [sp]
	ldr r0, [r5, #0x10]
	str r0, [sp, #4]
	lsl r0, r2, #1
	str r0, [sp, #8]
	ldr r0, _02023488 ; =0x021DA4A4
	neg r2, r3
	str r0, [sp, #0xc]
	add r0, r4, #0
	bl sub_020CC998
	ldr r1, _0202348C ; =0x021DA51C
	mov r0, #0x50
	ldr r2, [r1, #0x7c]
	add r5, #0x44
	bic r2, r0
	str r2, [r1, #0x7c]
	mov r0, #1
	strb r0, [r5]
	ldr r0, _02023490 ; =0x0210F6DC
	mov r1, #0
	str r1, [r0]
	add sp, #0x10
	pop {r4, r5, r6, pc}
	.align 2, 0
_02023488: .word 0x021DA4A4
_0202348C: .word 0x021DA51C
_02023490: .word 0x0210F6DC
	thumb_func_end sub_020233D8

	thumb_func_start sub_02023494
sub_02023494: ; 0x02023494
	add r2, r1, #0
	add r2, #0x46
	strh r0, [r2]
	add r0, r1, #0
	add r0, #0x46
	ldrh r0, [r0]
	ldr r3, _020234C8 ; =sub_020233D8
	asr r0, r0, #4
	lsl r2, r0, #2
	ldr r0, _020234CC ; =0x021094DC
	ldrsh r2, [r0, r2]
	str r2, [r1]
	add r2, r1, #0
	add r2, #0x46
	ldrh r2, [r2]
	asr r2, r2, #4
	lsl r2, r2, #1
	add r2, r2, #1
	lsl r2, r2, #1
	ldrsh r0, [r0, r2]
	str r0, [r1, #4]
	add r0, r1, #0
	add r0, #0x44
	ldrb r0, [r0]
	bx r3
	nop
_020234C8: .word sub_020233D8
_020234CC: .word 0x021094DC
	thumb_func_end sub_02023494

	thumb_func_start sub_020234D0
sub_020234D0: ; 0x020234D0
	add r2, r1, #0
	add r2, #0x46
	ldrh r2, [r2]
	ldr r3, _0202350C ; =sub_020233D8
	add r2, r2, r0
	add r0, r1, #0
	add r0, #0x46
	strh r2, [r0]
	add r0, r1, #0
	add r0, #0x46
	ldrh r0, [r0]
	asr r0, r0, #4
	lsl r2, r0, #2
	ldr r0, _02023510 ; =0x021094DC
	ldrsh r2, [r0, r2]
	str r2, [r1]
	add r2, r1, #0
	add r2, #0x46
	ldrh r2, [r2]
	asr r2, r2, #4
	lsl r2, r2, #1
	add r2, r2, #1
	lsl r2, r2, #1
	ldrsh r0, [r0, r2]
	str r0, [r1, #4]
	add r0, r1, #0
	add r0, #0x44
	ldrb r0, [r0]
	bx r3
	nop
_0202350C: .word sub_020233D8
_02023510: .word 0x021094DC
	thumb_func_end sub_020234D0

	thumb_func_start sub_02023514
sub_02023514: ; 0x02023514
	push {r3, r4, r5, lr}
	add r4, r1, #0
	add r5, r0, #0
	add r0, r4, #0
	add r0, #0x14
	add r1, r5, #0
	add r2, r0, #0
	bl sub_020CCD78
	add r4, #0x20
	add r0, r4, #0
	add r1, r5, #0
	add r2, r4, #0
	bl sub_020CCD78
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02023514

	thumb_func_start sub_02023534
sub_02023534: ; 0x02023534
	ldrh r2, [r0]
	strh r2, [r1, #0x3c]
	ldrh r2, [r0, #2]
	strh r2, [r1, #0x3e]
	add r2, r1, #0
	ldrh r3, [r0, #4]
	add r2, #0x40
	strh r3, [r2]
	ldrh r2, [r0, #6]
	add r0, r1, #0
	add r0, #0x42
	strh r2, [r0]
	ldr r3, _02023554 ; =sub_02022E54
	add r0, r1, #0
	bx r3
	nop
_02023554: .word sub_02022E54
	thumb_func_end sub_02023534

	thumb_func_start sub_02023558
sub_02023558: ; 0x02023558
	ldrh r2, [r0]
	strh r2, [r1, #0x3c]
	ldrh r2, [r0, #2]
	strh r2, [r1, #0x3e]
	add r2, r1, #0
	ldrh r3, [r0, #4]
	add r2, #0x40
	strh r3, [r2]
	ldrh r2, [r0, #6]
	add r0, r1, #0
	add r0, #0x42
	strh r2, [r0]
	ldr r3, _02023578 ; =sub_02022D74
	add r0, r1, #0
	bx r3
	nop
_02023578: .word sub_02022D74
	thumb_func_end sub_02023558

	thumb_func_start sub_0202357C
sub_0202357C: ; 0x0202357C
	ldrh r3, [r1, #0x3c]
	ldrh r2, [r0]
	add r2, r3, r2
	strh r2, [r1, #0x3c]
	ldrh r3, [r1, #0x3e]
	ldrh r2, [r0, #2]
	add r2, r3, r2
	strh r2, [r1, #0x3e]
	add r2, r1, #0
	add r2, #0x40
	ldrh r2, [r2]
	ldrh r0, [r0, #4]
	ldr r3, _020235A4 ; =sub_02022E54
	add r2, r2, r0
	add r0, r1, #0
	add r0, #0x40
	strh r2, [r0]
	add r0, r1, #0
	bx r3
	nop
_020235A4: .word sub_02022E54
	thumb_func_end sub_0202357C

	thumb_func_start sub_020235A8
sub_020235A8: ; 0x020235A8
	ldrh r3, [r1, #0x3c]
	ldrh r2, [r0]
	add r2, r3, r2
	strh r2, [r1, #0x3c]
	ldrh r3, [r1, #0x3e]
	ldrh r2, [r0, #2]
	add r2, r3, r2
	strh r2, [r1, #0x3e]
	add r2, r1, #0
	add r2, #0x40
	ldrh r2, [r2]
	ldrh r0, [r0, #4]
	ldr r3, _020235D0 ; =sub_02022D74
	add r2, r2, r0
	add r0, r1, #0
	add r0, #0x40
	strh r2, [r0]
	add r0, r1, #0
	bx r3
	nop
_020235D0: .word sub_02022D74
	thumb_func_end sub_020235A8

	thumb_func_start sub_020235D4
sub_020235D4: ; 0x020235D4
	ldr r3, _020235DC ; =sub_02022D74
	str r0, [r1, #0x38]
	add r0, r1, #0
	bx r3
	.align 2, 0
_020235DC: .word sub_02022D74
	thumb_func_end sub_020235D4

	thumb_func_start sub_020235E0
sub_020235E0: ; 0x020235E0
	push {r4, lr}
	add r3, r1, #0
	add r4, r0, #0
	add r2, r3, #0
	ldmia r4!, {r0, r1}
	add r2, #0x20
	stmia r2!, {r0, r1}
	ldr r0, [r4]
	str r0, [r2]
	add r0, r3, #0
	bl sub_02022D74
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020235E0

	thumb_func_start sub_020235FC
sub_020235FC: ; 0x020235FC
	ldr r2, [r1, #0x38]
	ldr r3, _02023608 ; =sub_02022D74
	add r0, r2, r0
	str r0, [r1, #0x38]
	add r0, r1, #0
	bx r3
	.align 2, 0
_02023608: .word sub_02022D74
	thumb_func_end sub_020235FC

	thumb_func_start sub_0202360C
sub_0202360C: ; 0x0202360C
	add r0, #0x46
	ldrh r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_0202360C

	thumb_func_start sub_02023614
sub_02023614: ; 0x02023614
	ldr r0, [r0, #0x38]
	bx lr
	thumb_func_end sub_02023614

	thumb_func_start sub_02023618
sub_02023618: ; 0x02023618
	ldrh r2, [r1, #0x3c]
	strh r2, [r0]
	ldrh r2, [r1, #0x3e]
	strh r2, [r0, #2]
	add r2, r1, #0
	add r2, #0x40
	ldrh r2, [r2]
	add r1, #0x42
	strh r2, [r0, #4]
	ldrh r1, [r1]
	strh r1, [r0, #6]
	bx lr
	thumb_func_end sub_02023618

	thumb_func_start sub_02023630
sub_02023630: ; 0x02023630
	add r2, r1, #0
	add r2, #0x20
	add r3, r0, #0
	ldmia r2!, {r0, r1}
	stmia r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
	bx lr
	thumb_func_end sub_02023630

	thumb_func_start sub_02023640
sub_02023640: ; 0x02023640
	add r2, r1, #0
	add r2, #0x14
	add r3, r0, #0
	ldmia r2!, {r0, r1}
	stmia r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
	bx lr
	thumb_func_end sub_02023640

	thumb_func_start sub_02023650
sub_02023650: ; 0x02023650
	ldr r0, [r0, #0x10]
	bx lr
	thumb_func_end sub_02023650

	thumb_func_start sub_02023654
sub_02023654: ; 0x02023654
	ldr r0, [r0, #0xc]
	bx lr
	thumb_func_end sub_02023654

	thumb_func_start sub_02023658
sub_02023658: ; 0x02023658
	ldr r0, [r0, #0x54]
	bx lr
	thumb_func_end sub_02023658

	thumb_func_start sub_0202365C
sub_0202365C: ; 0x0202365C
	add r3, r0, #0
	add r2, r1, #0
	ldmia r3!, {r0, r1}
	add r2, #0x20
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	bx lr
	thumb_func_end sub_0202365C

	thumb_func_start sub_0202366C
sub_0202366C: ; 0x0202366C
	add r3, r0, #0
	add r2, r1, #0
	ldmia r3!, {r0, r1}
	add r2, #0x14
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	bx lr
	thumb_func_end sub_0202366C

	thumb_func_start sub_0202367C
sub_0202367C: ; 0x0202367C
	ldr r2, [r0, #0x64]
	cmp r2, #0
	beq _02023690
	cmp r1, #0
	beq _0202368C
	mov r0, #1
	str r0, [r2, #0x24]
	bx lr
_0202368C:
	mov r0, #0
	str r0, [r2, #0x24]
_02023690:
	bx lr
	.align 2, 0
	thumb_func_end sub_0202367C

	thumb_func_start sub_02023694
sub_02023694: ; 0x02023694
	mov r2, #0
	strb r2, [r0]
	strb r2, [r0, #1]
	str r2, [r0, #4]
	add r1, r0, #0
	str r2, [r0, #8]
	add r1, #0xd0
	str r2, [r1]
	add r1, r0, #0
	add r1, #0xd4
	str r2, [r1]
	add r1, r0, #0
	add r1, #0xd8
	str r2, [r1]
	add r1, r0, #0
	add r1, #0xdc
	str r2, [r1]
	strb r2, [r0, #3]
	bx lr
	.align 2, 0
	thumb_func_end sub_02023694

	thumb_func_start sub_020236BC
sub_020236BC: ; 0x020236BC
	mov r3, #0
	str r3, [r0, #0x28]
	add r1, r0, #0
	str r3, [r0, #0x2c]
	add r1, #0x84
	str r3, [r1]
	add r1, r0, #0
	add r1, #0x88
	str r3, [r1]
	add r1, r0, #0
	add r1, #0x8c
	str r3, [r1]
	add r1, r0, #0
	add r1, #0x90
	add r2, r0, #0
	str r3, [r1]
	add r2, #0xa0
	mov r1, #0x10
_020236E0:
	strb r3, [r2]
	add r2, r2, #1
	sub r1, r1, #1
	bne _020236E0
	add r2, r0, #0
	mov r1, #0
	add r2, #0x94
	str r1, [r2]
	add r2, r0, #0
	add r2, #0x98
	str r1, [r2]
	add r2, r0, #0
	add r2, #0x9c
	str r1, [r2]
	add r2, r0, #0
	add r2, #0xb0
	str r1, [r2]
	str r1, [r0]
	str r1, [r0, #4]
	mov r2, #1
	str r1, [r0, #8]
	lsl r2, r2, #0xc
	str r2, [r0, #0xc]
	str r2, [r0, #0x10]
	str r2, [r0, #0x14]
	add r2, r0, #0
	str r1, [r0, #0x18]
	add r2, #0xb6
	strh r1, [r2]
	add r2, r0, #0
	add r2, #0xb4
	strb r1, [r2]
	add r2, r0, #0
	add r2, #0xbc
	str r1, [r2]
	add r2, r0, #0
	add r2, #0xc0
	str r1, [r2]
	add r2, r0, #0
	add r2, #0x24
	strb r1, [r2]
	str r1, [r0, #0x20]
	bx lr
	.align 2, 0
	thumb_func_end sub_020236BC

	thumb_func_start sub_02023738
sub_02023738: ; 0x02023738
	push {r3, r4, r5, r6, r7, lr}
	add r6, r0, #0
	ldr r0, _02023774 ; =0x021D2208
	add r4, r1, #0
	ldr r0, [r0]
	cmp r0, #0
	beq _0202374A
	bl GF_AssertFail
_0202374A:
	mov r1, #0xe0
	add r0, r4, #0
	mul r1, r6
	bl sub_0201AA8C
	ldr r7, _02023774 ; =0x021D2208
	mov r4, #0
	str r0, [r7]
	str r6, [r7, #4]
	cmp r6, #0
	ble _02023772
	add r5, r4, #0
_02023762:
	ldr r0, [r7]
	add r0, r0, r5
	bl sub_02023694
	add r4, r4, #1
	add r5, #0xe0
	cmp r4, r6
	blt _02023762
_02023772:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02023774: .word 0x021D2208
	thumb_func_end sub_02023738

	thumb_func_start sub_02023778
sub_02023778: ; 0x02023778
	push {r4, r5, r6, lr}
	ldr r6, _020237AC ; =0x021D2208
	mov r4, #0
	ldr r0, [r6, #4]
	cmp r0, #0
	ble _02023798
	add r5, r4, #0
_02023786:
	ldr r0, [r6]
	add r0, r0, r5
	bl sub_02023874
	ldr r0, [r6, #4]
	add r4, r4, #1
	add r5, #0xe0
	cmp r4, r0
	blt _02023786
_02023798:
	ldr r0, _020237AC ; =0x021D2208
	ldr r0, [r0]
	bl sub_0201AB0C
	ldr r0, _020237AC ; =0x021D2208
	mov r1, #0
	str r1, [r0]
	str r1, [r0, #4]
	pop {r4, r5, r6, pc}
	nop
_020237AC: .word 0x021D2208
	thumb_func_end sub_02023778

	thumb_func_start sub_020237B0
sub_020237B0: ; 0x020237B0
	push {r3, r4, r5, r6, r7, lr}
	ldr r6, _020237E8 ; =0x021D2208
	mov r4, #0
	ldr r0, [r6, #4]
	cmp r0, #0
	ble _020237E4
	add r5, r4, #0
	mov r7, #2
_020237C0:
	ldr r0, [r6]
	add r0, r0, r5
	ldrb r1, [r0, #1]
	cmp r1, #1
	bne _020237CE
	bl sub_02023950
_020237CE:
	ldr r0, [r6]
	add r1, r0, r5
	ldrb r0, [r1, #3]
	cmp r0, #1
	bne _020237DA
	strb r7, [r1, #3]
_020237DA:
	ldr r0, [r6, #4]
	add r4, r4, #1
	add r5, #0xe0
	cmp r4, r0
	blt _020237C0
_020237E4:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020237E8: .word 0x021D2208
	thumb_func_end sub_020237B0

	thumb_func_start sub_020237EC
sub_020237EC: ; 0x020237EC
	push {r3, r4, r5, lr}
	add r5, r0, #0
	bl sub_0202391C
	add r4, r0, #0
	bne _02023800
	bl GF_AssertFail
	mov r0, #0
	pop {r3, r4, r5, pc}
_02023800:
	mov r0, #1
	strb r0, [r4]
	strb r0, [r4, #1]
	ldr r2, [r5]
	mov r1, #0xc4
	ldr r0, [r5, #4]
	mul r1, r2
	bl sub_0201AA8C
	str r0, [r4, #4]
	ldr r0, [r5]
	str r0, [r4, #8]
	add r0, r4, #0
	add r0, #0xc
	bl sub_020236BC
	add r1, r4, #0
	add r0, r4, #0
	add r1, #0xc
	add r0, #0xc8
	str r1, [r0]
	add r0, r4, #0
	add r0, #0xcc
	str r1, [r0]
	ldr r1, [r5]
	ldr r0, [r5, #4]
	lsl r1, r1, #2
	bl sub_0201AA8C
	add r1, r4, #0
	add r1, #0xd0
	str r0, [r1]
	add r0, r4, #0
	bl sub_02024248
	ldr r0, [r5, #4]
	mov r1, #0x10
	bl sub_0201AA8C
	add r1, r4, #0
	add r1, #0xd8
	str r0, [r1]
	add r0, r4, #0
	add r0, #0xd8
	ldr r0, [r0]
	ldr r1, [r5, #4]
	mov r2, #4
	bl sub_0201AC14
	ldr r0, [r5]
	ldr r1, [r5, #4]
	bl sub_0202068C
	add r1, r4, #0
	add r1, #0xdc
	str r0, [r1]
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end sub_020237EC

	thumb_func_start sub_02023874
sub_02023874: ; 0x02023874
	push {r4, lr}
	add r4, r0, #0
	bne _02023882
	bl GF_AssertFail
	mov r0, #0
	pop {r4, pc}
_02023882:
	ldrb r1, [r4]
	cmp r1, #0
	beq _020238B6
	bl sub_020238BC
	ldr r0, [r4, #4]
	bl sub_0201AB0C
	add r0, r4, #0
	add r0, #0xd0
	ldr r0, [r0]
	bl sub_0201AB0C
	add r0, r4, #0
	add r0, #0xd8
	ldr r0, [r0]
	bl sub_0201AB0C
	add r0, r4, #0
	add r0, #0xdc
	ldr r0, [r0]
	bl sub_020206C8
	add r0, r4, #0
	bl sub_02023694
_020238B6:
	mov r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02023874

	thumb_func_start sub_020238BC
sub_020238BC: ; 0x020238BC
	push {r3, r4, r5, lr}
	cmp r0, #0
	bne _020238CC
	bne _020238C8
	bl GF_AssertFail
_020238C8:
	mov r0, #0
	pop {r3, r4, r5, pc}
_020238CC:
	ldrb r1, [r0]
	cmp r1, #0
	beq _020238F2
	add r1, r0, #0
	add r1, #0xc8
	add r4, r0, #0
	ldr r1, [r1]
	add r4, #0xc
	cmp r1, r4
	beq _020238F2
_020238E0:
	add r0, r1, #0
	add r0, #0xbc
	ldr r5, [r0]
	add r0, r1, #0
	bl sub_02023DA4
	add r1, r5, #0
	cmp r5, r4
	bne _020238E0
_020238F2:
	mov r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_020238BC

	thumb_func_start sub_020238F8
sub_020238F8: ; 0x020238F8
	push {r4, lr}
	add r4, r0, #0
	bne _02023902
	bl GF_AssertFail
_02023902:
	ldrb r0, [r4, #3]
	cmp r0, #0
	bne _0202390C
	mov r0, #0
	pop {r4, pc}
_0202390C:
	mov r0, #1
	pop {r4, pc}
	thumb_func_end sub_020238F8

	thumb_func_start sub_02023910
sub_02023910: ; 0x02023910
	ldrb r1, [r0, #3]
	cmp r1, #2
	bne _0202391A
	mov r1, #0
	strb r1, [r0, #3]
_0202391A:
	bx lr
	thumb_func_end sub_02023910

	thumb_func_start sub_0202391C
sub_0202391C: ; 0x0202391C
	push {r3, r4}
	ldr r0, _0202394C ; =0x021D2208
	mov r1, #0
	ldr r3, [r0, #4]
	cmp r3, #0
	ble _02023944
	ldr r4, [r0]
	add r2, r4, #0
_0202392C:
	ldrb r0, [r2]
	cmp r0, #0
	bne _0202393C
	mov r0, #0xe0
	mul r0, r1
	add r0, r4, r0
	pop {r3, r4}
	bx lr
_0202393C:
	add r1, r1, #1
	add r2, #0xe0
	cmp r1, r3
	blt _0202392C
_02023944:
	mov r0, #0
	pop {r3, r4}
	bx lr
	nop
_0202394C: .word 0x021D2208
	thumb_func_end sub_0202391C

	thumb_func_start sub_02023950
sub_02023950: ; 0x02023950
	push {r3, r4, r5, r6, lr}
	sub sp, #0x24
	add r5, r0, #0
	bne _0202395C
	bl GF_AssertFail
_0202395C:
	add r0, sp, #0
	bl sub_020CAFEC
	add r0, r5, #0
	add r0, #0xc8
	ldr r4, [r0]
	add r5, #0xc
	cmp r4, r5
	beq _020239CC
	add r6, sp, #0
_02023970:
	add r0, r4, #0
	add r0, #0x24
	ldrb r0, [r0]
	cmp r0, #1
	bne _020239C4
	ldr r2, [r4, #0x20]
	cmp r2, #0
	beq _02023986
	ldr r1, [r4, #0x1c]
	add r0, r4, #0
	blx r2
_02023986:
	add r0, r4, #0
	bl sub_020243FC
	add r0, r4, #0
	add r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #3
	bne _0202399E
	add r0, r4, #0
	bl sub_02023FEC
	b _020239A8
_0202399E:
	cmp r0, #2
	bne _020239A8
	add r0, r4, #0
	bl sub_02023FC0
_020239A8:
	ldr r2, [r4, #0x18]
	cmp r2, #0
	bne _020239B0
	add r2, r6, #0
_020239B0:
	add r0, r4, #0
	add r3, r4, #0
	add r0, #0x30
	add r1, r4, #0
	add r3, #0xc
	bl sub_0201F554
	add r0, r4, #0
	bl sub_0202441C
_020239C4:
	add r4, #0xbc
	ldr r4, [r4]
	cmp r4, r5
	bne _02023970
_020239CC:
	add sp, #0x24
	pop {r3, r4, r5, r6, pc}
	thumb_func_end sub_02023950

	thumb_func_start sub_020239D0
sub_020239D0: ; 0x020239D0
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r6, [r5, #0x28]
	add r4, r1, #0
	add r0, r6, #0
	add r1, r5, #0
	bl sub_02023C04
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02023C20
	add r0, r6, #0
	add r1, r5, #0
	add r2, r4, #0
	bl sub_02023C9C
	add r0, r5, #0
	add r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #1
	bne _02023A06
	add r6, #0xc
	add r0, r6, #0
	add r1, r5, #0
	bl sub_020242E4
_02023A06:
	add r0, r5, #0
	mov r1, #2
	add r0, #0xb4
	strb r1, [r0]
	ldr r0, [r4, #8]
	mov r1, #0
	str r0, [r5, #0x2c]
	add r0, r5, #0
	add r0, #0xb6
	strh r1, [r0]
	add r5, #0xb8
	str r1, [r5]
	pop {r4, r5, r6, pc}
	thumb_func_end sub_020239D0

	thumb_func_start sub_02023A20
sub_02023A20: ; 0x02023A20
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r6, [r5, #0x28]
	add r4, r1, #0
	add r0, r6, #0
	add r1, r5, #0
	bl sub_02023C04
	add r0, r5, #0
	add r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #2
	bne _02023A4A
	add r0, r5, #0
	add r1, r5, #0
	add r2, r5, #0
	add r0, #0x94
	add r1, #0x98
	add r2, #0x9c
	bl sub_02023B70
_02023A4A:
	add r0, r5, #0
	ldr r1, [r4, #0x1c]
	add r0, #0x94
	str r1, [r0]
	add r0, r5, #0
	ldr r1, [r4, #0x20]
	add r0, #0x98
	str r1, [r0]
	add r0, r5, #0
	ldr r1, [r4, #0x24]
	add r0, #0x9c
	str r1, [r0]
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02023CF0
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02023D24
	add r0, r5, #0
	add r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #1
	bne _02023A86
	add r6, #0xc
	add r0, r6, #0
	add r1, r5, #0
	bl sub_020242E4
_02023A86:
	add r0, r5, #0
	mov r1, #3
	add r0, #0xb4
	strb r1, [r0]
	ldr r0, [r4, #8]
	mov r1, #0
	str r0, [r5, #0x2c]
	add r0, r5, #0
	add r0, #0xb6
	strh r1, [r0]
	add r5, #0xb8
	str r1, [r5]
	pop {r4, r5, r6, pc}
	thumb_func_end sub_02023A20

	thumb_func_start sub_02023AA0
sub_02023AA0: ; 0x02023AA0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r5, r0, #0
	add r4, r1, #0
	add r6, r2, #0
	add r7, r3, #0
	bl sub_020BE3DC
	str r0, [sp, #8]
	add r0, r5, #0
	bl sub_020BE3F0
	str r0, [sp, #4]
	add r0, r5, #0
	bl sub_020BE51C
	str r0, [sp]
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _02023ADE
	ldr r3, _02023B30 ; =0x02110924
	mov r1, #0
	ldr r3, [r3]
	add r2, r1, #0
	blx r3
	str r0, [r4]
	cmp r0, #0
	bne _02023AE2
	bl GF_AssertFail
	b _02023AE2
_02023ADE:
	mov r0, #0
	str r0, [r4]
_02023AE2:
	ldr r0, [sp, #4]
	cmp r0, #0
	beq _02023AFE
	ldr r3, _02023B30 ; =0x02110924
	mov r1, #1
	ldr r3, [r3]
	mov r2, #0
	blx r3
	str r0, [r6]
	cmp r0, #0
	bne _02023B02
	bl GF_AssertFail
	b _02023B02
_02023AFE:
	mov r0, #0
	str r0, [r6]
_02023B02:
	ldr r0, [sp]
	cmp r0, #0
	beq _02023B26
	ldr r3, _02023B34 ; =0x0211092C
	mov r1, #2
	ldrh r2, [r5, #0x20]
	lsl r1, r1, #0xe
	ldr r3, [r3]
	and r1, r2
	mov r2, #0
	blx r3
	str r0, [r7]
	cmp r0, #0
	bne _02023B2A
	bl GF_AssertFail
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_02023B26:
	mov r0, #0
	str r0, [r7]
_02023B2A:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_02023B30: .word 0x02110924
_02023B34: .word 0x0211092C
	thumb_func_end sub_02023AA0

	thumb_func_start sub_02023B38
sub_02023B38: ; 0x02023B38
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r3, #0
	bl sub_020BE4D0
	add r0, r5, #0
	bl sub_020BE588
	str r0, [r4]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02023B38

	thumb_func_start sub_02023B4C
sub_02023B4C: ; 0x02023B4C
	push {r3, r4, r5, lr}
	add r4, r1, #0
	ldr r1, [r2]
	ldr r2, [r3]
	add r5, r0, #0
	bl sub_020BE404
	ldr r1, [sp, #0x10]
	add r0, r5, #0
	ldr r1, [r1]
	bl sub_020BE530
	add r0, r4, #0
	add r1, r5, #0
	bl sub_020BED00
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02023B4C

	thumb_func_start sub_02023B70
sub_02023B70: ; 0x02023B70
	push {r3, r4, r5, lr}
	ldr r0, [r0]
	add r5, r1, #0
	add r4, r2, #0
	cmp r0, #0
	beq _02023B82
	ldr r1, _02023B9C ; =0x02110928
	ldr r1, [r1]
	blx r1
_02023B82:
	ldr r0, [r5]
	cmp r0, #0
	beq _02023B8E
	ldr r1, _02023B9C ; =0x02110928
	ldr r1, [r1]
	blx r1
_02023B8E:
	ldr r0, [r4]
	cmp r0, #0
	beq _02023B9A
	ldr r1, _02023BA0 ; =0x02110930
	ldr r1, [r1]
	blx r1
_02023B9A:
	pop {r3, r4, r5, pc}
	.align 2, 0
_02023B9C: .word 0x02110928
_02023BA0: .word 0x02110930
	thumb_func_end sub_02023B70

	thumb_func_start sub_02023BA4
sub_02023BA4: ; 0x02023BA4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r4, r0, #0
	add r5, r1, #0
	cmp r4, #0
	beq _02023BB4
	cmp r5, #0
	bne _02023BBA
_02023BB4:
	add sp, #8
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02023BBA:
	bl sub_020BE3DC
	str r0, [sp]
	add r0, r4, #0
	bl sub_020BE3F0
	str r0, [sp, #4]
	add r0, r4, #0
	bl sub_020BE51C
	add r4, r0, #0
	add r0, r5, #0
	bl sub_020BE3DC
	add r6, r0, #0
	add r0, r5, #0
	bl sub_020BE3F0
	add r7, r0, #0
	add r0, r5, #0
	bl sub_020BE51C
	ldr r1, [sp]
	cmp r1, r6
	bne _02023BF6
	ldr r1, [sp, #4]
	cmp r1, r7
	bne _02023BF6
	cmp r4, r0
	beq _02023BFC
_02023BF6:
	add sp, #8
	mov r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02023BFC:
	mov r0, #1
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02023BA4

	thumb_func_start sub_02023C04
sub_02023C04: ; 0x02023C04
	push {r4, lr}
	add r4, r1, #0
	add r0, r4, #0
	add r0, #0xb0
	ldr r0, [r0]
	cmp r0, #0
	beq _02023C1C
	bl sub_02020738
	mov r0, #0
	add r4, #0xb0
	str r0, [r4]
_02023C1C:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02023C04

	thumb_func_start sub_02023C20
sub_02023C20: ; 0x02023C20
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, #0x8c
	ldr r4, [r0]
	add r0, r1, #0
	add r1, r5, #0
	add r2, r5, #0
	add r1, #0x88
	add r2, #0x8c
	bl sub_02024328
	add r1, r5, #0
	add r1, #0x84
	str r0, [r1]
	add r1, r5, #0
	add r1, #0x88
	add r0, r5, #0
	ldr r1, [r1]
	add r0, #0x30
	bl sub_020BE120
	add r0, r5, #0
	add r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #3
	beq _02023C62
	add r1, r5, #0
	add r1, #0x8c
	ldr r1, [r1]
	add r0, r4, #0
	bl sub_02023BA4
	b _02023C64
_02023C62:
	mov r0, #0
_02023C64:
	cmp r0, #0
	bne _02023C98
	add r0, r5, #0
	add r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #2
	bne _02023C82
	add r0, r5, #0
	add r1, r5, #0
	add r2, r5, #0
	add r0, #0x94
	add r1, #0x98
	add r2, #0x9c
	bl sub_02023B70
_02023C82:
	add r0, r5, #0
	add r0, #0x8c
	add r1, r5, #0
	add r2, r5, #0
	add r5, #0x9c
	ldr r0, [r0]
	add r1, #0x94
	add r2, #0x98
	add r3, r5, #0
	bl sub_02023AA0
_02023C98:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02023C20

	thumb_func_start sub_02023C9C
sub_02023C9C: ; 0x02023C9C
	push {r4, r5, r6, lr}
	sub sp, #8
	add r4, r2, #0
	add r6, r0, #0
	add r5, r1, #0
	add r0, r4, #0
	bl sub_02024374
	add r1, r5, #0
	add r1, #0x90
	add r3, r5, #0
	add r3, #0xa0
	str r0, [r1]
	add r4, #0xc
	add r2, r3, #0
	ldmia r4!, {r0, r1}
	stmia r3!, {r0, r1}
	ldmia r4!, {r0, r1}
	stmia r3!, {r0, r1}
	add r0, r5, #0
	add r0, #0x9c
	ldr r0, [r0]
	add r1, r2, #0
	str r0, [sp]
	add r0, r5, #0
	add r0, #0xb8
	ldr r0, [r0]
	add r2, r5, #0
	add r3, r5, #0
	str r0, [sp, #4]
	add r6, #0xdc
	add r2, #0x90
	add r3, #0x94
	ldr r0, [r6]
	ldr r2, [r2]
	ldr r3, [r3]
	bl sub_020206E0
	add r5, #0xb0
	str r0, [r5]
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end sub_02023C9C

	thumb_func_start sub_02023CF0
sub_02023CF0: ; 0x02023CF0
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	add r1, r5, #0
	add r2, r5, #0
	add r0, r4, #0
	add r1, #0x88
	add r2, #0x8c
	bl sub_02024328
	add r1, r5, #0
	add r1, #0x84
	str r0, [r1]
	add r1, r5, #0
	add r1, #0x88
	add r0, r5, #0
	ldr r1, [r1]
	add r0, #0x30
	bl sub_020BE120
	add r0, r4, #0
	bl sub_02024374
	add r5, #0x90
	str r0, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02023CF0

	thumb_func_start sub_02023D24
sub_02023D24: ; 0x02023D24
	push {r3, r4}
	add r4, r0, #0
	add r2, r4, #0
	add r3, r1, #0
	add r3, #0xc
	add r2, #0xa0
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	mov r0, #0
	add r4, #0xb0
	str r0, [r4]
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end sub_02023D24

	thumb_func_start sub_02023D44
sub_02023D44: ; 0x02023D44
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r6, [r5]
	cmp r6, #0
	bne _02023D52
	mov r0, #0
	pop {r4, r5, r6, pc}
_02023D52:
	add r0, r6, #0
	bl sub_02024280
	add r4, r0, #0
	bne _02023D60
	mov r0, #0
	pop {r4, r5, r6, pc}
_02023D60:
	add r3, r5, #0
	str r6, [r4, #0x28]
	add r3, #8
	ldmia r3!, {r0, r1}
	add r2, r4, #0
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	add r3, r5, #0
	str r0, [r2]
	add r3, #0x14
	add r2, r4, #0
	ldmia r3!, {r0, r1}
	add r2, #0xc
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	mov r1, #0
	str r0, [r2]
	add r0, r4, #0
	add r0, #0xb6
	strh r1, [r0]
	add r0, r4, #0
	mov r1, #1
	add r0, #0x24
	strb r1, [r0]
	add r0, r4, #0
	add r0, #0xb4
	strb r1, [r0]
	ldr r1, [r5, #4]
	add r0, r4, #0
	bl sub_02024380
	add r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_02023D44

	thumb_func_start sub_02023DA4
sub_02023DA4: ; 0x02023DA4
	push {r3, r4, r5, lr}
	add r5, r0, #0
	bne _02023DAE
	bl GF_AssertFail
_02023DAE:
	add r0, r5, #0
	add r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #1
	bne _02023DBC
	bl GF_AssertFail
_02023DBC:
	add r0, r5, #0
	add r0, #0xb4
	ldrb r0, [r0]
	ldr r4, [r5, #0x28]
	cmp r0, #0
	bne _02023DCC
	mov r0, #0
	pop {r3, r4, r5, pc}
_02023DCC:
	add r0, r5, #0
	bl sub_02024308
	add r0, r5, #0
	add r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #2
	bne _02023DEC
	add r0, r5, #0
	add r1, r5, #0
	add r2, r5, #0
	add r0, #0x94
	add r1, #0x98
	add r2, #0x9c
	bl sub_02023B70
_02023DEC:
	add r0, r4, #0
	add r1, r5, #0
	bl sub_02023C04
	add r0, r4, #0
	add r1, r5, #0
	bl sub_020242AC
	mov r0, #1
	strb r0, [r4, #3]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02023DA4

	thumb_func_start sub_02023E04
sub_02023E04: ; 0x02023E04
	push {r3, r4}
	add r4, r0, #0
	str r1, [r4]
	str r2, [r4, #4]
	str r3, [r4, #8]
	ldr r3, [sp, #8]
	add r2, r4, #0
	add r2, #0xc
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	ldr r0, [sp, #0xc]
	str r0, [r4, #0x1c]
	ldr r0, [sp, #0x10]
	str r0, [r4, #0x20]
	ldr r0, [sp, #0x14]
	str r0, [r4, #0x24]
	pop {r3, r4}
	bx lr
	thumb_func_end sub_02023E04

	thumb_func_start sub_02023E2C
sub_02023E2C: ; 0x02023E2C
	push {r3, r4}
	add r4, r0, #0
	str r1, [r4]
	str r2, [r4, #4]
	str r3, [r4, #8]
	ldr r3, [sp, #8]
	add r2, r4, #0
	add r2, #0xc
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	mov r0, #0
	str r0, [r4, #0x1c]
	str r0, [r4, #0x20]
	str r0, [r4, #0x24]
	pop {r3, r4}
	bx lr
	thumb_func_end sub_02023E2C

	thumb_func_start sub_02023E50
sub_02023E50: ; 0x02023E50
	push {r3, r4, r5, lr}
	add r4, r0, #0
	add r5, r1, #0
	cmp r4, #0
	bne _02023E5E
	bl GF_AssertFail
_02023E5E:
	ldmia r5!, {r0, r1}
	stmia r4!, {r0, r1}
	ldr r0, [r5]
	str r0, [r4]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02023E50

	thumb_func_start sub_02023E68
sub_02023E68: ; 0x02023E68
	push {r4, lr}
	add r4, r0, #0
	bne _02023E72
	bl GF_AssertFail
_02023E72:
	add r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02023E68

	thumb_func_start sub_02023E78
sub_02023E78: ; 0x02023E78
	push {r3, r4, r5, lr}
	add r4, r0, #0
	add r5, r1, #0
	cmp r4, #0
	bne _02023E86
	bl GF_AssertFail
_02023E86:
	ldmia r5!, {r0, r1}
	add r4, #0xc
	stmia r4!, {r0, r1}
	ldr r0, [r5]
	str r0, [r4]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02023E78

	thumb_func_start sub_02023E94
sub_02023E94: ; 0x02023E94
	push {r4, lr}
	add r4, r0, #0
	bne _02023E9E
	bl GF_AssertFail
_02023E9E:
	add r4, #0xc
	add r0, r4, #0
	pop {r4, pc}
	thumb_func_end sub_02023E94

	thumb_func_start sub_02023EA4
sub_02023EA4: ; 0x02023EA4
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _02023EB2
	bl GF_AssertFail
_02023EB2:
	add r5, #0x24
	strb r4, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02023EA4

	thumb_func_start sub_02023EB8
sub_02023EB8: ; 0x02023EB8
	push {r4, lr}
	add r4, r0, #0
	bne _02023EC2
	bl GF_AssertFail
_02023EC2:
	add r4, #0x24
	ldrb r0, [r4]
	pop {r4, pc}
	thumb_func_end sub_02023EB8

	thumb_func_start sub_02023EC8
sub_02023EC8: ; 0x02023EC8
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _02023ED6
	bl GF_AssertFail
_02023ED6:
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02024380
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02023EC8

	thumb_func_start sub_02023EE0
sub_02023EE0: ; 0x02023EE0
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _02023EEE
	bl GF_AssertFail
_02023EEE:
	add r5, #0xb6
	strh r4, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02023EE0

	thumb_func_start sub_02023EF4
sub_02023EF4: ; 0x02023EF4
	push {r4, lr}
	add r4, r0, #0
	bne _02023EFE
	bl GF_AssertFail
_02023EFE:
	add r4, #0xb6
	ldrh r0, [r4]
	pop {r4, pc}
	thumb_func_end sub_02023EF4

	thumb_func_start sub_02023F04
sub_02023F04: ; 0x02023F04
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _02023F12
	bl GF_AssertFail
_02023F12:
	add r0, r5, #0
	add r1, r4, #0
	bl sub_020243A4
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02023F04

	thumb_func_start sub_02023F1C
sub_02023F1C: ; 0x02023F1C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _02023F2A
	bl GF_AssertFail
_02023F2A:
	add r5, #0xb8
	str r4, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02023F1C

	thumb_func_start sub_02023F30
sub_02023F30: ; 0x02023F30
	push {r4, lr}
	add r4, r0, #0
	bne _02023F3A
	bl GF_AssertFail
_02023F3A:
	add r4, #0xb8
	ldr r0, [r4]
	pop {r4, pc}
	thumb_func_end sub_02023F30

	thumb_func_start sub_02023F40
sub_02023F40: ; 0x02023F40
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _02023F4E
	bl GF_AssertFail
_02023F4E:
	add r1, r5, #0
	add r1, #0xb6
	ldrh r1, [r1]
	add r0, r5, #0
	bl sub_02024394
	add r1, r5, #0
	add r1, #0xb8
	str r0, [r1]
	add r0, r5, #0
	add r0, #0xb8
	ldr r0, [r0]
	add r5, #0xb8
	add r0, r0, r4
	str r0, [r5]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02023F40

	thumb_func_start sub_02023F70
sub_02023F70: ; 0x02023F70
	push {r4, lr}
	add r4, r0, #0
	bne _02023F7A
	bl GF_AssertFail
_02023F7A:
	add r1, r4, #0
	add r1, #0xb6
	ldrh r1, [r1]
	add r0, r4, #0
	bl sub_02024394
	add r4, #0xb8
	ldr r1, [r4]
	sub r0, r1, r0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02023F70

	thumb_func_start sub_02023F90
sub_02023F90: ; 0x02023F90
	push {r4, lr}
	add r4, r0, #0
	bne _02023F9A
	bl GF_AssertFail
_02023F9A:
	add r4, #0x88
	ldr r0, [r4]
	pop {r4, pc}
	thumb_func_end sub_02023F90

	thumb_func_start sub_02023FA0
sub_02023FA0: ; 0x02023FA0
	push {r4, lr}
	add r4, r0, #0
	bne _02023FAA
	bl GF_AssertFail
_02023FAA:
	add r4, #0x94
	ldr r0, [r4]
	pop {r4, pc}
	thumb_func_end sub_02023FA0

	thumb_func_start sub_02023FB0
sub_02023FB0: ; 0x02023FB0
	push {r4, lr}
	add r4, r0, #0
	bne _02023FBA
	bl GF_AssertFail
_02023FBA:
	add r4, #0x9c
	ldr r0, [r4]
	pop {r4, pc}
	thumb_func_end sub_02023FB0

	thumb_func_start sub_02023FC0
sub_02023FC0: ; 0x02023FC0
	push {r3, lr}
	add r1, r0, #0
	add r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #2
	bne _02023FDA
	add r0, r1, #0
	add r0, #0xb0
	add r1, #0xb8
	ldr r0, [r0]
	ldr r1, [r1]
	bl sub_02020764
_02023FDA:
	pop {r3, pc}
	thumb_func_end sub_02023FC0

	thumb_func_start sub_02023FDC
sub_02023FDC: ; 0x02023FDC
	add r0, #0x88
	ldr r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_02023FDC

	thumb_func_start sub_02023FE4
sub_02023FE4: ; 0x02023FE4
	str r2, [r0, #0x1c]
	str r1, [r0, #0x20]
	bx lr
	.align 2, 0
	thumb_func_end sub_02023FE4

	thumb_func_start sub_02023FEC
sub_02023FEC: ; 0x02023FEC
	push {r3, r4, lr}
	sub sp, #4
	add r4, r0, #0
	add r1, r4, #0
	add r1, #0xb8
	ldr r1, [r1]
	add r0, #0xa0
	lsl r1, r1, #4
	lsr r1, r1, #0x10
	bl sub_02026DE0
	add r2, sp, #0
	strb r0, [r2]
	lsr r0, r0, #8
	strb r0, [r2, #1]
	ldrb r0, [r2]
	add r1, r4, #0
	add r1, #0x90
	strb r0, [r2, #2]
	ldrb r0, [r2, #1]
	strb r0, [r2, #3]
	add r0, r4, #0
	add r0, #0x88
	ldrb r2, [r2, #2]
	ldr r0, [r0]
	ldr r1, [r1]
	bl sub_0202403C
	add r0, r4, #0
	add r2, sp, #0
	add r0, #0x88
	add r4, #0x90
	ldrb r2, [r2, #3]
	ldr r0, [r0]
	ldr r1, [r4]
	bl sub_02024140
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end sub_02023FEC

	thumb_func_start sub_0202403C
sub_0202403C: ; 0x0202403C
	push {r3, r4, r5, r6, r7, lr}
	cmp r0, #0
	beq _0202404C
	ldr r3, [r0, #8]
	cmp r3, #0
	beq _0202404C
	add r6, r0, r3
	b _0202404E
_0202404C:
	mov r6, #0
_0202404E:
	ldrh r0, [r6]
	add r4, r6, r0
	cmp r1, #0
	beq _0202407C
	add r0, r1, #0
	add r0, #0x3c
	beq _02024078
	add r3, r1, #0
	add r3, #0x3d
	ldrb r3, [r3]
	cmp r2, r3
	bhs _02024078
	add r1, #0x42
	ldrh r1, [r1]
	add r3, r0, r1
	ldrh r0, [r0, r1]
	add r3, r3, #4
	add r1, r0, #0
	mul r1, r2
	add r0, r3, r1
	b _0202407E
_02024078:
	mov r0, #0
	b _0202407E
_0202407C:
	mov r0, #0
_0202407E:
	ldr r0, [r0]
	mov r5, #0
	lsl r0, r0, #0x10
	lsr r7, r0, #0x10
	ldrb r0, [r4, #1]
	cmp r0, #0
	ble _020240C0
_0202408C:
	cmp r4, #0
	beq _020240A6
	ldrb r0, [r4, #1]
	cmp r5, r0
	bhs _020240A6
	ldrh r0, [r4, #6]
	add r1, r4, r0
	ldrh r0, [r4, r0]
	add r2, r1, #4
	add r1, r0, #0
	mul r1, r5
	add r1, r2, r1
	b _020240A8
_020240A6:
	mov r1, #0
_020240A8:
	ldrb r2, [r1, #3]
	mov r0, #1
	tst r0, r2
	beq _020240B8
	add r0, r6, #0
	add r2, r7, #0
	bl sub_020240C4
_020240B8:
	ldrb r0, [r4, #1]
	add r5, r5, #1
	cmp r5, r0
	blt _0202408C
_020240C0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_0202403C

	thumb_func_start sub_020240C4
sub_020240C4: ; 0x020240C4
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r5, r0, #0
	add r0, r1, #0
	ldrh r0, [r0]
	str r1, [sp]
	str r2, [sp, #4]
	add r0, r5, r0
	str r0, [sp, #8]
	add r0, r1, #0
	ldrb r0, [r0, #2]
	mov r6, #0
	cmp r0, #0
	ble _02024136
	add r7, r5, #4
_020240E2:
	ldr r0, [sp, #8]
	cmp r5, #0
	ldrb r0, [r0, r6]
	beq _0202410E
	cmp r7, #0
	beq _02024102
	ldrb r1, [r5, #5]
	cmp r0, r1
	bhs _02024102
	ldrh r1, [r5, #0xa]
	add r2, r7, r1
	ldrh r1, [r7, r1]
	add r2, r2, #4
	mul r0, r1
	add r0, r2, r0
	b _02024104
_02024102:
	mov r0, #0
_02024104:
	cmp r0, #0
	beq _0202410E
	ldr r0, [r0]
	add r4, r5, r0
	b _02024110
_0202410E:
	mov r4, #0
_02024110:
	ldr r0, [r4, #0x14]
	lsl r0, r0, #0x10
	lsr r1, r0, #0x10
	ldr r0, [sp, #4]
	add r1, r1, r0
	ldr r0, _0202413C ; =0x0000FFFF
	cmp r1, r0
	bls _02024124
	bl GF_AssertFail
_02024124:
	ldr r1, [r4, #0x14]
	ldr r0, [sp, #4]
	add r6, r6, #1
	add r0, r1, r0
	str r0, [r4, #0x14]
	ldr r0, [sp]
	ldrb r0, [r0, #2]
	cmp r6, r0
	blt _020240E2
_02024136:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_0202413C: .word 0x0000FFFF
	thumb_func_end sub_020240C4

	thumb_func_start sub_02024140
sub_02024140: ; 0x02024140
	push {r3, r4, r5, r6, r7, lr}
	cmp r0, #0
	beq _02024150
	ldr r3, [r0, #8]
	cmp r3, #0
	beq _02024150
	add r6, r0, r3
	b _02024152
_02024150:
	mov r6, #0
_02024152:
	ldrh r0, [r6, #2]
	add r4, r6, r0
	cmp r1, #0
	beq _0202417E
	ldrh r0, [r1, #0x34]
	cmp r0, #0
	beq _0202417E
	add r0, r1, r0
	beq _0202417A
	ldrb r1, [r0, #1]
	cmp r2, r1
	bhs _0202417A
	ldrh r1, [r0, #6]
	add r3, r0, r1
	ldrh r0, [r0, r1]
	add r3, r3, #4
	add r1, r0, #0
	mul r1, r2
	add r0, r3, r1
	b _02024180
_0202417A:
	mov r0, #0
	b _02024180
_0202417E:
	mov r0, #0
_02024180:
	ldrh r1, [r0, #2]
	ldrh r7, [r0]
	mov r0, #1
	tst r0, r1
	bne _0202418C
	lsr r7, r7, #1
_0202418C:
	ldrb r0, [r4, #1]
	mov r5, #0
	cmp r0, #0
	bls _020241C8
_02024194:
	cmp r4, #0
	beq _020241AE
	ldrb r0, [r4, #1]
	cmp r5, r0
	bhs _020241AE
	ldrh r0, [r4, #6]
	add r1, r4, r0
	ldrh r0, [r4, r0]
	add r2, r1, #4
	add r1, r0, #0
	mul r1, r5
	add r1, r2, r1
	b _020241B0
_020241AE:
	mov r1, #0
_020241B0:
	ldrb r2, [r1, #3]
	mov r0, #1
	tst r0, r2
	beq _020241C0
	add r0, r6, #0
	add r2, r7, #0
	bl sub_020241CC
_020241C0:
	ldrb r0, [r4, #1]
	add r5, r5, #1
	cmp r5, r0
	blo _02024194
_020241C8:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02024140

	thumb_func_start sub_020241CC
sub_020241CC: ; 0x020241CC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r5, r0, #0
	add r0, r1, #0
	ldrh r0, [r0]
	str r1, [sp]
	str r2, [sp, #4]
	add r0, r5, r0
	str r0, [sp, #8]
	add r0, r1, #0
	ldrb r0, [r0, #2]
	mov r6, #0
	cmp r0, #0
	bls _0202423E
	add r7, r5, #4
_020241EA:
	ldr r0, [sp, #8]
	cmp r5, #0
	ldrb r0, [r0, r6]
	beq _02024216
	cmp r7, #0
	beq _0202420A
	ldrb r1, [r5, #5]
	cmp r0, r1
	bhs _0202420A
	ldrh r1, [r5, #0xa]
	add r2, r7, r1
	ldrh r1, [r7, r1]
	add r2, r2, #4
	mul r0, r1
	add r0, r2, r0
	b _0202420C
_0202420A:
	mov r0, #0
_0202420C:
	cmp r0, #0
	beq _02024216
	ldr r0, [r0]
	add r4, r5, r0
	b _02024218
_02024216:
	mov r4, #0
_02024218:
	ldrh r1, [r4, #0x1c]
	ldr r0, _02024244 ; =0x00001FFF
	and r1, r0
	ldr r0, [sp, #4]
	add r1, r1, r0
	ldr r0, _02024244 ; =0x00001FFF
	cmp r1, r0
	bls _0202422C
	bl GF_AssertFail
_0202422C:
	ldrh r1, [r4, #0x1c]
	ldr r0, [sp, #4]
	add r6, r6, #1
	add r0, r1, r0
	strh r0, [r4, #0x1c]
	ldr r0, [sp]
	ldrb r0, [r0, #2]
	cmp r6, r0
	blo _020241EA
_0202423E:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_02024244: .word 0x00001FFF
	thumb_func_end sub_020241CC

	thumb_func_start sub_02024248
sub_02024248: ; 0x02024248
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r0, [r5, #8]
	mov r7, #0
	cmp r0, #0
	ble _02024278
	add r4, r7, #0
	add r6, r7, #0
_02024258:
	ldr r0, [r5, #4]
	add r0, r0, r4
	bl sub_020236BC
	ldr r0, [r5, #4]
	add r7, r7, #1
	add r1, r0, r4
	add r0, r5, #0
	add r0, #0xd0
	ldr r0, [r0]
	add r4, #0xc4
	str r1, [r0, r6]
	ldr r0, [r5, #8]
	add r6, r6, #4
	cmp r7, r0
	blt _02024258
_02024278:
	mov r0, #0
	add r5, #0xd4
	str r0, [r5]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02024248

	thumb_func_start sub_02024280
sub_02024280: ; 0x02024280
	add r1, r0, #0
	add r1, #0xd4
	ldr r3, [r1]
	ldr r1, [r0, #8]
	cmp r3, r1
	blt _02024290
	mov r0, #0
	bx lr
_02024290:
	add r1, r0, #0
	add r1, #0xd0
	ldr r2, [r1]
	lsl r1, r3, #2
	ldr r2, [r2, r1]
	add r1, r0, #0
	add r1, #0xd4
	ldr r1, [r1]
	add r0, #0xd4
	add r1, r1, #1
	str r1, [r0]
	add r0, r2, #0
	bx lr
	.align 2, 0
	thumb_func_end sub_02024280

	thumb_func_start sub_020242AC
sub_020242AC: ; 0x020242AC
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, #0xd4
	ldr r0, [r0]
	add r4, r1, #0
	cmp r0, #0
	bgt _020242BE
	mov r0, #0
	pop {r3, r4, r5, pc}
_020242BE:
	add r0, r4, #0
	bl sub_020236BC
	add r0, r5, #0
	add r0, #0xd4
	ldr r0, [r0]
	sub r1, r0, #1
	add r0, r5, #0
	add r0, #0xd4
	str r1, [r0]
	add r0, r5, #0
	add r0, #0xd0
	add r5, #0xd4
	ldr r1, [r0]
	ldr r0, [r5]
	lsl r0, r0, #2
	str r4, [r1, r0]
	mov r0, #1
	pop {r3, r4, r5, pc}
	thumb_func_end sub_020242AC

	thumb_func_start sub_020242E4
sub_020242E4: ; 0x020242E4
	add r2, r0, #0
	add r2, #0xc0
	ldr r3, [r2]
	add r2, r1, #0
	add r2, #0xc0
	str r3, [r2]
	add r2, r0, #0
	add r2, #0xc0
	ldr r2, [r2]
	add r2, #0xbc
	str r1, [r2]
	add r2, r1, #0
	add r2, #0xbc
	str r0, [r2]
	add r0, #0xc0
	str r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_020242E4

	thumb_func_start sub_02024308
sub_02024308: ; 0x02024308
	add r1, r0, #0
	add r1, #0xbc
	ldr r2, [r1]
	add r1, r0, #0
	add r1, #0xc0
	ldr r1, [r1]
	add r1, #0xbc
	str r2, [r1]
	add r1, r0, #0
	add r0, #0xbc
	add r1, #0xc0
	ldr r0, [r0]
	ldr r1, [r1]
	add r0, #0xc0
	str r1, [r0]
	bx lr
	thumb_func_end sub_02024308

	thumb_func_start sub_02024328
sub_02024328: ; 0x02024328
	push {r3, r4, r5, r6, r7, lr}
	add r6, r1, #0
	mov r1, #0
	add r5, r2, #0
	bl sub_0202443C
	add r7, r0, #0
	bl sub_020C3B40
	add r4, r0, #0
	beq _0202435E
	add r1, r4, #0
	add r1, #8
	beq _02024352
	ldrb r0, [r4, #9]
	cmp r0, #0
	bls _02024352
	ldrh r0, [r4, #0xe]
	add r0, r1, r0
	add r0, r0, #4
	b _02024354
_02024352:
	mov r0, #0
_02024354:
	cmp r0, #0
	beq _0202435E
	ldr r0, [r0]
	add r0, r4, r0
	b _02024360
_0202435E:
	mov r0, #0
_02024360:
	str r0, [r6]
	cmp r5, #0
	beq _0202436E
	add r0, r7, #0
	bl sub_020C3B50
	str r0, [r5]
_0202436E:
	add r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02024328

	thumb_func_start sub_02024374
sub_02024374: ; 0x02024374
	ldr r3, _0202437C ; =sub_0202443C
	mov r1, #1
	bx r3
	nop
_0202437C: .word sub_0202443C
	thumb_func_end sub_02024374

	thumb_func_start sub_02024380
sub_02024380: ; 0x02024380
	push {r3, lr}
	ldr r2, [r1, #0x1c]
	cmp r2, #0
	bne _0202438E
	bl sub_020239D0
	pop {r3, pc}
_0202438E:
	bl sub_02023A20
	pop {r3, pc}
	thumb_func_end sub_02024380

	thumb_func_start sub_02024394
sub_02024394: ; 0x02024394
	push {r3, lr}
	ldr r0, [r0, #0x2c]
	bl sub_02024454
	ldr r0, [r0]
	lsl r0, r0, #0xc
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_02024394

	thumb_func_start sub_020243A4
sub_020243A4: ; 0x020243A4
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	add r1, r5, #0
	add r1, #0xb6
	ldrh r1, [r1]
	ldr r0, [r5, #0x2c]
	bl sub_02024454
	add r5, #0xb8
	add r1, r5, #0
	add r2, r4, #0
	bl sub_020243C4
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_020243A4

	thumb_func_start sub_020243C4
sub_020243C4: ; 0x020243C4
	push {r3, r4, r5, r6}
	ldr r4, [r0]
	ldr r6, [r1]
	lsl r4, r4, #0xc
	mov r3, #0
	cmp r4, r6
	bgt _020243DA
	ldr r5, [r0, #4]
	lsl r5, r5, #0xc
	cmp r5, r6
	bge _020243DE
_020243DA:
	str r4, [r1]
	b _020243F6
_020243DE:
	add r2, r6, r2
	cmp r5, r2
	bge _020243F4
	ldr r0, [r0, #8]
	cmp r0, #0
	bne _020243EE
	str r4, [r1]
	b _020243F6
_020243EE:
	mov r3, #1
	str r5, [r1]
	b _020243F6
_020243F4:
	str r2, [r1]
_020243F6:
	add r0, r3, #0
	pop {r3, r4, r5, r6}
	bx lr
	thumb_func_end sub_020243C4

	thumb_func_start sub_020243FC
sub_020243FC: ; 0x020243FC
	push {r3, lr}
	add r3, r0, #0
	add r0, #0x9c
	str r0, [sp]
	add r0, r3, #0
	add r1, r3, #0
	add r2, r3, #0
	add r0, #0x8c
	add r1, #0x84
	ldr r0, [r0]
	ldr r1, [r1]
	add r2, #0x94
	add r3, #0x98
	bl sub_02023B4C
	pop {r3, pc}
	thumb_func_end sub_020243FC

	thumb_func_start sub_0202441C
sub_0202441C: ; 0x0202441C
	push {r3, r4, lr}
	sub sp, #0xc
	add r4, r0, #0
	add r0, #0x84
	ldr r0, [r0]
	bl sub_020BEDB0
	add r4, #0x8c
	ldr r0, [r4]
	add r1, sp, #4
	add r2, sp, #8
	add r3, sp, #0
	bl sub_02023B38
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end sub_0202441C

	thumb_func_start sub_0202443C
sub_0202443C: ; 0x0202443C
	cmp r1, #0
	beq _02024446
	cmp r1, #1
	beq _0202444A
	b _0202444E
_02024446:
	ldr r0, [r0]
	bx lr
_0202444A:
	ldr r0, [r0, #4]
	bx lr
_0202444E:
	mov r0, #0
	bx lr
	.align 2, 0
	thumb_func_end sub_0202443C

	thumb_func_start sub_02024454
sub_02024454: ; 0x02024454
	mov r2, #0xc
	mul r2, r1
	add r0, r0, r2
	bx lr
	thumb_func_end sub_02024454

	thumb_func_start sub_0202445C
sub_0202445C: ; 0x0202445C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	bne _02024466
	bl GF_AssertFail
_02024466:
	ldr r0, [r5, #4]
	cmp r0, #0
	bne _02024470
	bl GF_AssertFail
_02024470:
	mov r1, #0x49
	ldr r0, [r5, #8]
	lsl r1, r1, #2
	bl sub_0201AA8C
	add r4, r0, #0
	bne _02024482
	bl GF_AssertFail
_02024482:
	add r0, r4, #0
	bl sub_020245D4
	ldr r2, [r5]
	ldr r0, [r5, #8]
	lsl r1, r2, #6
	add r1, r2, r1
	lsl r1, r1, #2
	bl sub_0201AA8C
	str r0, [r4]
	cmp r0, #0
	bne _020244A0
	bl GF_AssertFail
_020244A0:
	ldr r0, [r5]
	str r0, [r4, #4]
	ldr r1, [r5]
	ldr r0, [r5, #8]
	lsl r1, r1, #2
	bl sub_0201AA8C
	str r0, [r4, #8]
	cmp r0, #0
	bne _020244B8
	bl GF_AssertFail
_020244B8:
	add r0, r4, #0
	bl sub_020250D8
	add r0, r4, #0
	add r0, #0x10
	bl sub_020245FC
	add r2, r4, #0
	mov r1, #0x43
	lsl r1, r1, #2
	add r2, #0x10
	str r2, [r4, r1]
	add r0, r1, #4
	str r2, [r4, r0]
	ldr r0, [r5, #4]
	add r1, #8
	str r0, [r4, r1]
	ldr r0, [r5, #8]
	ldr r1, _02024500 ; =0x0210F6E0
	bl sub_0201A3A4
	mov r1, #0x46
	lsl r1, r1, #2
	str r0, [r4, r1]
	ldr r0, [r4, r1]
	add r1, r1, #4
	add r1, r4, r1
	bl sub_020B6D18
	mov r0, #0x12
	mov r1, #1
	lsl r0, r0, #4
	str r1, [r4, r0]
	add r0, r4, #0
	pop {r3, r4, r5, pc}
	nop
_02024500: .word 0x0210F6E0
	thumb_func_end sub_0202445C

	thumb_func_start sub_02024504
sub_02024504: ; 0x02024504
	push {r4, lr}
	add r4, r0, #0
	bne _0202450E
	mov r0, #0
	pop {r4, pc}
_0202450E:
	ldr r1, [r4]
	cmp r1, #0
	bne _02024518
	mov r0, #1
	pop {r4, pc}
_02024518:
	bl sub_02024544
	mov r0, #0x46
	lsl r0, r0, #2
	ldr r0, [r4, r0]
	bl sub_0201AB0C
	ldr r0, [r4, #8]
	bl sub_0201AB0C
	ldr r0, [r4]
	bl sub_0201AB0C
	add r0, r4, #0
	bl sub_020245D4
	add r0, r4, #0
	bl sub_0201AB0C
	mov r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02024504

	thumb_func_start sub_02024544
sub_02024544: ; 0x02024544
	push {r4, r5, r6, lr}
	cmp r0, #0
	bne _0202454E
	mov r0, #0
	pop {r4, r5, r6, pc}
_0202454E:
	ldr r1, [r0]
	cmp r1, #0
	bne _02024558
	mov r0, #1
	pop {r4, r5, r6, pc}
_02024558:
	mov r1, #0x11
	lsl r1, r1, #4
	add r4, r0, #0
	ldr r1, [r0, r1]
	add r4, #0x10
	cmp r1, r4
	beq _02024578
	mov r6, #1
	lsl r6, r6, #8
_0202456A:
	ldr r5, [r1, r6]
	add r0, r1, #0
	bl sub_02024758
	add r1, r5, #0
	cmp r5, r4
	bne _0202456A
_02024578:
	mov r0, #1
	pop {r4, r5, r6, pc}
	thumb_func_end sub_02024544

	thumb_func_start sub_0202457C
sub_0202457C: ; 0x0202457C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	bne _02024586
	bl GF_AssertFail
_02024586:
	mov r0, #0x12
	lsl r0, r0, #4
	ldr r1, [r5, r0]
	cmp r1, #0
	beq _020245C8
	sub r0, #0x10
	add r6, r5, #0
	ldr r4, [r5, r0]
	add r6, #0x10
	cmp r4, r6
	beq _020245C8
	ldr r7, _020245CC ; =0x020F6314
_0202459E:
	add r2, r4, #0
	add r2, #0x34
	ldrb r2, [r2]
	add r0, r5, #0
	add r1, r4, #0
	lsl r2, r2, #2
	ldr r2, [r7, r2]
	blx r2
	add r1, r4, #0
	add r1, #0x35
	ldrb r1, [r1]
	add r0, r4, #0
	lsl r2, r1, #2
	ldr r1, _020245D0 ; =0x020F631C
	ldr r1, [r1, r2]
	blx r1
	mov r0, #1
	lsl r0, r0, #8
	ldr r4, [r4, r0]
	cmp r4, r6
	bne _0202459E
_020245C8:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020245CC: .word 0x020F6314
_020245D0: .word 0x020F631C
	thumb_func_end sub_0202457C

	thumb_func_start sub_020245D4
sub_020245D4: ; 0x020245D4
	push {r4, lr}
	add r4, r0, #0
	mov r1, #0
	str r1, [r4]
	str r1, [r4, #4]
	str r1, [r4, #8]
	mov r0, #0x45
	str r1, [r4, #0xc]
	lsl r0, r0, #2
	str r1, [r4, r0]
	add r0, r4, #0
	add r0, #0x10
	bl sub_020245FC
	mov r0, #0x12
	mov r1, #0
	lsl r0, r0, #4
	str r1, [r4, r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020245D4

	thumb_func_start sub_020245FC
sub_020245FC: ; 0x020245FC
	push {r4, lr}
	mov r2, #0x41
	add r4, r0, #0
	mov r1, #0
	lsl r2, r2, #2
	str r1, [r4, #0x3c]
	bl sub_020E5B44
	add r0, r4, #0
	add r0, #0xb4
	bl sub_020B8008
	add r0, r4, #0
	add r0, #0xd8
	bl sub_020B804C
	mov r0, #0
	str r0, [r4, #0x30]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020245FC

	thumb_func_start sub_02024624
sub_02024624: ; 0x02024624
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5]
	bl sub_02025110
	add r4, r0, #0
	bne _02024636
	mov r0, #0
	pop {r4, r5, r6, pc}
_02024636:
	ldr r0, [r5]
	add r6, r5, #0
	str r0, [r4, #0x3c]
	add r0, r4, #0
	mov r2, #0
	add r0, #0xf0
	add r6, #8
	strh r2, [r0]
	ldmia r6!, {r0, r1}
	add r3, r4, #0
	stmia r3!, {r0, r1}
	ldr r0, [r6]
	add r6, r5, #0
	str r0, [r3]
	add r6, #0x14
	add r3, r4, #0
	ldmia r6!, {r0, r1}
	add r3, #0x18
	stmia r3!, {r0, r1}
	ldr r0, [r6]
	str r0, [r3]
	ldrh r0, [r5, #0x20]
	strh r0, [r4, #0x24]
	add r0, r4, #0
	ldr r1, [r5, #0x28]
	add r0, #0xf8
	str r1, [r0]
	add r0, r4, #0
	ldr r1, [r5, #0x24]
	add r0, #0xf4
	strh r1, [r0]
	add r0, r4, #0
	add r0, #0x26
	strb r2, [r0]
	add r0, r4, #0
	add r0, #0x27
	strb r2, [r0]
	str r2, [r4, #0x2c]
	add r0, r4, #0
	str r2, [r4, #0x30]
	mov r1, #0x11
	add r0, #0x28
	strb r1, [r0]
	mov r0, #0x45
	ldr r1, [r5]
	lsl r0, r0, #2
	ldr r0, [r1, r0]
	add r1, r4, #0
	add r1, #0x26
	ldrb r1, [r1]
	bl sub_020BBEC4
	add r0, r4, #0
	add r0, #0x27
	ldrb r2, [r0]
	mov r0, #0x45
	ldr r1, [r5]
	lsl r0, r0, #2
	ldr r0, [r1, r0]
	mov r1, #1
	mov r3, #2
	and r1, r2
	and r2, r3
	bl sub_020BBF84
	add r0, r4, #0
	mov r2, #1
	add r0, #0x34
	strb r2, [r0]
	add r0, r4, #0
	mov r1, #0
	add r0, #0x35
	strb r1, [r0]
	lsl r0, r2, #0xd
	str r0, [r4, #0x38]
	ldr r0, [r5]
	ldr r1, [r5, #4]
	ldr r3, [r5, #0x2c]
	add r2, r4, #0
	bl sub_02024CD0
	cmp r0, #0
	bne _020246E6
	add r0, r4, #0
	bl sub_02024758
	mov r0, #0
	pop {r4, r5, r6, pc}
_020246E6:
	add r1, r4, #0
	add r1, #0xf8
	add r0, r4, #0
	ldr r1, [r1]
	add r0, #0xd8
	bl sub_02024E84
	add r1, r4, #0
	add r1, #0x2a
	strb r0, [r1]
	add r0, r4, #0
	add r0, #0x2a
	ldrb r1, [r0]
	add r0, r4, #0
	add r0, #0x29
	strb r1, [r0]
	ldr r0, [r5]
	add r1, r4, #0
	bl sub_02025024
	add r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end sub_02024624

	thumb_func_start sub_02024714
sub_02024714: ; 0x02024714
	push {r4, lr}
	sub sp, #0x30
	add r2, r0, #0
	ldr r0, [r2]
	add r4, r2, #0
	str r0, [sp]
	ldr r0, [r2, #4]
	add r4, #8
	str r0, [sp, #4]
	ldmia r4!, {r0, r1}
	add r3, sp, #8
	stmia r3!, {r0, r1}
	ldr r0, [r4]
	mov r1, #0
	str r0, [r3]
	mov r0, #1
	lsl r0, r0, #0xc
	str r0, [sp, #0x14]
	str r0, [sp, #0x18]
	str r0, [sp, #0x1c]
	add r0, sp, #0
	strh r1, [r0, #0x20]
	ldr r0, [r2, #0x14]
	str r0, [sp, #0x24]
	ldr r0, [r2, #0x18]
	str r0, [sp, #0x28]
	ldr r0, [r2, #0x1c]
	str r0, [sp, #0x2c]
	add r0, sp, #0
	bl sub_02024624
	add sp, #0x30
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02024714

	thumb_func_start sub_02024758
sub_02024758: ; 0x02024758
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r1, r5, #0
	add r1, #0xec
	ldr r1, [r1]
	cmp r1, #0
	beq _020247D0
	add r1, r5, #0
	add r1, #0xfc
	ldr r1, [r1]
	cmp r1, #0
	beq _02024774
	bl sub_020250BC
_02024774:
	add r0, r5, #0
	add r0, #0xec
	ldr r0, [r0]
	cmp r0, #3
	bne _0202479E
	add r1, r5, #0
	add r1, #0xf8
	add r0, r5, #0
	add r4, r5, #0
	ldr r1, [r1]
	add r0, #0xb4
	add r4, #0x40
	bl sub_020B802C
	mov r1, #0
	mvn r1, r1
	cmp r0, r1
	beq _0202479E
	ldr r0, [r4, #0x60]
	bl sub_020BAF3C
_0202479E:
	add r0, r5, #0
	add r0, #0xec
	ldr r0, [r0]
	cmp r0, #2
	bne _020247C0
	add r4, r5, #0
	add r4, #0x40
	ldr r0, [r4, #0x74]
	cmp r0, #0
	beq _020247B6
	bl sub_0201AB0C
_020247B6:
	ldr r0, [r4, #0x78]
	cmp r0, #0
	beq _020247C0
	bl sub_0201AB0C
_020247C0:
	add r0, r5, #0
	mov r1, #0
	add r0, #0xec
	str r1, [r0]
	ldr r0, [r5, #0x3c]
	add r1, r5, #0
	bl sub_0202512C
_020247D0:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02024758

	thumb_func_start sub_020247D4
sub_020247D4: ; 0x020247D4
	add r2, r1, #0
	add r3, r0, #0
	ldmia r2!, {r0, r1}
	stmia r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
	bx lr
	.align 2, 0
	thumb_func_end sub_020247D4

	thumb_func_start sub_020247E4
sub_020247E4: ; 0x020247E4
	add r3, r1, #0
	add r2, r0, #0
	ldmia r3!, {r0, r1}
	add r2, #0xc
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	bx lr
	thumb_func_end sub_020247E4

	thumb_func_start sub_020247F4
sub_020247F4: ; 0x020247F4
	add r3, r1, #0
	add r2, r0, #0
	ldmia r3!, {r0, r1}
	add r2, #0x18
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	bx lr
	thumb_func_end sub_020247F4

	thumb_func_start sub_02024804
sub_02024804: ; 0x02024804
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r2, #0
	bl sub_020247F4
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0202487C
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02024804

	thumb_func_start sub_02024818
sub_02024818: ; 0x02024818
	strh r1, [r0, #0x24]
	bx lr
	thumb_func_end sub_02024818

	thumb_func_start sub_0202481C
sub_0202481C: ; 0x0202481C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r2, #0
	bl sub_02024818
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0202487C
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0202481C

	thumb_func_start sub_02024830
sub_02024830: ; 0x02024830
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _0202483E
	bl GF_AssertFail
_0202483E:
	cmp r4, #2
	blt _02024846
	bl GF_AssertFail
_02024846:
	add r5, #0x34
	strb r4, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02024830

	thumb_func_start sub_0202484C
sub_0202484C: ; 0x0202484C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _0202485A
	bl GF_AssertFail
_0202485A:
	cmp r4, #2
	blt _02024862
	bl GF_AssertFail
_02024862:
	add r5, #0x35
	strb r4, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0202484C

	thumb_func_start sub_02024868
sub_02024868: ; 0x02024868
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _02024876
	bl GF_AssertFail
_02024876:
	str r4, [r5, #0x38]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02024868

	thumb_func_start sub_0202487C
sub_0202487C: ; 0x0202487C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _0202488A
	bl GF_AssertFail
_0202488A:
	add r5, #0x26
	strb r4, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_0202487C

	thumb_func_start sub_02024890
sub_02024890: ; 0x02024890
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _0202489E
	bl GF_AssertFail
_0202489E:
	add r0, r5, #0
	add r0, #0x27
	strb r4, [r0]
	mov r0, #0
	add r5, #0x26
	strb r0, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02024890

	thumb_func_start sub_020248AC
sub_020248AC: ; 0x020248AC
	bx lr
	.align 2, 0
	thumb_func_end sub_020248AC

	thumb_func_start sub_020248B0
sub_020248B0: ; 0x020248B0
	add r0, #0x18
	bx lr
	thumb_func_end sub_020248B0

	thumb_func_start sub_020248B4
sub_020248B4: ; 0x020248B4
	ldrh r0, [r0, #0x24]
	bx lr
	thumb_func_end sub_020248B4

	thumb_func_start sub_020248B8
sub_020248B8: ; 0x020248B8
	add r0, #0x34
	ldrb r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_020248B8

	thumb_func_start sub_020248C0
sub_020248C0: ; 0x020248C0
	add r0, #0x35
	ldrb r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_020248C0

	thumb_func_start sub_020248C8
sub_020248C8: ; 0x020248C8
	push {r4, lr}
	add r4, r0, #0
	bne _020248D2
	bl GF_AssertFail
_020248D2:
	add r0, r4, #0
	add r0, #0xec
	ldr r0, [r0]
	cmp r0, #1
	beq _020248E0
	cmp r0, #3
	bne _020248E6
_020248E0:
	ldr r0, [r4, #0x44]
	ldrh r0, [r0]
	pop {r4, pc}
_020248E6:
	add r4, #0xb0
	ldr r0, [r4]
	ldrh r0, [r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_020248C8

	thumb_func_start sub_020248F0
sub_020248F0: ; 0x020248F0
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	bl sub_020248C8
	cmp r0, r4
	bhi _02024902
	bl GF_AssertFail
_02024902:
	lsl r0, r4, #0x10
	lsr r1, r0, #0x10
	add r0, r5, #0
	add r0, #0xf0
	strh r1, [r0]
	add r0, r5, #0
	add r0, #0xec
	ldr r0, [r0]
	cmp r0, #1
	beq _0202491A
	cmp r0, #3
	bne _02024936
_0202491A:
	add r5, #0x40
	lsl r1, r4, #0x10
	ldr r0, [r5, #4]
	lsr r1, r1, #0x10
	bl sub_020B6E80
	add r1, r0, #0
	add r0, r5, #0
	add r0, #8
	bl sub_020B8BC4
	mov r0, #1
	str r0, [r5, #0x14]
	pop {r3, r4, r5, pc}
_02024936:
	add r5, #0x40
	ldr r0, [r5, #0x70]
	bl sub_020B6E80
	add r1, r0, #0
	add r0, r5, #0
	add r0, #8
	bl sub_020B8E98
	mov r0, #1
	str r0, [r5, #0x14]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_020248F0

	thumb_func_start sub_02024950
sub_02024950: ; 0x02024950
	push {r3, lr}
	add r2, r0, #0
	add r2, #0xf0
	ldrh r2, [r2]
	cmp r2, r1
	beq _02024960
	bl sub_020248F0
_02024960:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end sub_02024950

	thumb_func_start sub_02024964
sub_02024964: ; 0x02024964
	push {r3, r4, r5, lr}
	add r4, r0, #0
	add r0, #0xec
	ldr r0, [r0]
	cmp r0, #1
	beq _02024974
	cmp r0, #3
	bne _0202498E
_02024974:
	add r5, r4, #0
	add r5, #0x40
	add r0, r5, #0
	add r0, #8
	bl sub_020B781C
	mov r0, #1
	str r0, [r5, #0x14]
	add r0, r4, #0
	mov r1, #0
	bl sub_020249D4
	pop {r3, r4, r5, pc}
_0202498E:
	add r5, r4, #0
	add r5, #0x40
	add r0, r5, #0
	add r0, #8
	bl sub_020B781C
	mov r0, #1
	str r0, [r5, #0x14]
	add r0, r4, #0
	mov r1, #0
	bl sub_020249D4
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02024964

	thumb_func_start sub_020249A8
sub_020249A8: ; 0x020249A8
	add r0, #0xf0
	ldrh r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_020249A8

	thumb_func_start sub_020249B0
sub_020249B0: ; 0x020249B0
	push {r3, lr}
	add r2, r0, #0
	add r2, #0xec
	ldr r2, [r2]
	cmp r2, #1
	beq _020249C0
	cmp r2, #3
	bne _020249CA
_020249C0:
	add r0, #0x40
	add r0, #8
	bl sub_020B8BDC
	pop {r3, pc}
_020249CA:
	add r0, #0x40
	add r0, #8
	bl sub_020B9044
	pop {r3, pc}
	thumb_func_end sub_020249B0

	thumb_func_start sub_020249D4
sub_020249D4: ; 0x020249D4
	push {r3, lr}
	add r2, r0, #0
	add r2, #0xec
	ldr r2, [r2]
	cmp r2, #1
	beq _020249E4
	cmp r2, #3
	bne _020249EE
_020249E4:
	add r0, #0x40
	add r0, #8
	bl sub_020B8BFC
	pop {r3, pc}
_020249EE:
	add r0, #0x40
	add r0, #8
	bl sub_020B9124
	pop {r3, pc}
	thumb_func_end sub_020249D4

	thumb_func_start sub_020249F8
sub_020249F8: ; 0x020249F8
	ldr r3, _02024A00 ; =sub_020B77A8
	add r0, #0x40
	add r0, #8
	bx r3
	.align 2, 0
_02024A00: .word sub_020B77A8
	thumb_func_end sub_020249F8

	thumb_func_start sub_02024A04
sub_02024A04: ; 0x02024A04
	add r0, #0xf2
	strb r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_02024A04

	thumb_func_start sub_02024A0C
sub_02024A0C: ; 0x02024A0C
	add r0, #0xf2
	ldrb r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_02024A0C

	thumb_func_start sub_02024A14
sub_02024A14: ; 0x02024A14
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _02024A22
	bl GF_AssertFail
_02024A22:
	add r0, r5, #0
	add r0, #0x29
	strb r4, [r0]
	add r0, r5, #0
	add r0, #0x28
	ldrb r1, [r0]
	mov r0, #2
	orr r1, r0
	add r0, r5, #0
	add r0, #0x28
	strb r1, [r0]
	add r0, r5, #0
	add r0, #0x28
	ldrb r1, [r0]
	mov r0, #0x10
	add r5, #0x28
	bic r1, r0
	strb r1, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02024A14

	thumb_func_start sub_02024A48
sub_02024A48: ; 0x02024A48
	push {r4, lr}
	add r4, r0, #0
	bl sub_02024A14
	add r1, r4, #0
	add r1, #0xf8
	add r0, r4, #0
	ldr r1, [r1]
	add r0, #0xd8
	bl sub_02024E84
	add r1, r4, #0
	add r1, #0x29
	ldrb r1, [r1]
	add r4, #0x29
	add r0, r1, r0
	strb r0, [r4]
	pop {r4, pc}
	thumb_func_end sub_02024A48

	thumb_func_start sub_02024A6C
sub_02024A6C: ; 0x02024A6C
	add r0, #0x29
	ldrb r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_02024A6C

	thumb_func_start sub_02024A74
sub_02024A74: ; 0x02024A74
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r1, #0
	cmp r5, #0
	bne _02024A82
	bl GF_AssertFail
_02024A82:
	add r0, r5, #0
	add r0, #0x2a
	strb r4, [r0]
	add r0, r5, #0
	add r0, #0x28
	ldrb r1, [r0]
	mov r0, #0x10
	orr r1, r0
	add r0, r5, #0
	add r0, #0x28
	strb r1, [r0]
	add r0, r5, #0
	add r0, #0x28
	ldrb r1, [r0]
	mov r0, #2
	add r5, #0x28
	bic r1, r0
	strb r1, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02024A74

	thumb_func_start sub_02024AA8
sub_02024AA8: ; 0x02024AA8
	push {r4, lr}
	add r4, r0, #0
	bl sub_02024A74
	add r1, r4, #0
	add r1, #0xf8
	add r0, r4, #0
	ldr r1, [r1]
	add r0, #0xd8
	bl sub_02024E84
	add r1, r4, #0
	add r1, #0x2a
	ldrb r1, [r1]
	add r4, #0x2a
	add r0, r1, r0
	strb r0, [r4]
	pop {r4, pc}
	thumb_func_end sub_02024AA8

	thumb_func_start sub_02024ACC
sub_02024ACC: ; 0x02024ACC
	push {r4, lr}
	add r4, r0, #0
	bne _02024AD6
	bl GF_AssertFail
_02024AD6:
	add r4, #0x2a
	ldrb r0, [r4]
	pop {r4, pc}
	thumb_func_end sub_02024ACC

	thumb_func_start sub_02024ADC
sub_02024ADC: ; 0x02024ADC
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r2, r5, #0
	ldr r4, [r5, #0x3c]
	add r2, #0xf4
	strh r1, [r2]
	bl sub_020250BC
	add r0, r4, #0
	add r1, r5, #0
	bl sub_02025024
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02024ADC

	thumb_func_start sub_02024AF8
sub_02024AF8: ; 0x02024AF8
	add r0, #0xf4
	ldrh r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_02024AF8

	thumb_func_start sub_02024B00
sub_02024B00: ; 0x02024B00
	push {r3, r4}
	add r3, r0, #0
	add r4, r1, #0
	add r3, #0xb4
	mov r2, #4
_02024B0A:
	ldmia r4!, {r0, r1}
	stmia r3!, {r0, r1}
	sub r2, r2, #1
	bne _02024B0A
	ldr r0, [r4]
	str r0, [r3]
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end sub_02024B00

	thumb_func_start sub_02024B1C
sub_02024B1C: ; 0x02024B1C
	add r0, #0xb4
	bx lr
	thumb_func_end sub_02024B1C

	thumb_func_start sub_02024B20
sub_02024B20: ; 0x02024B20
	add r3, r1, #0
	add r2, r0, #0
	ldmia r3!, {r0, r1}
	add r2, #0xd8
	stmia r2!, {r0, r1}
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	bx lr
	thumb_func_end sub_02024B20

	thumb_func_start sub_02024B34
sub_02024B34: ; 0x02024B34
	add r0, #0xd8
	bx lr
	thumb_func_end sub_02024B34

	thumb_func_start sub_02024B38
sub_02024B38: ; 0x02024B38
	str r1, [r0, #0x2c]
	cmp r1, #1
	bne _02024B4E
	add r1, r0, #0
	add r1, #0x28
	ldrb r2, [r1]
	mov r1, #4
	add r0, #0x28
	orr r1, r2
	strb r1, [r0]
	bx lr
_02024B4E:
	add r1, r0, #0
	add r1, #0x28
	ldrb r2, [r1]
	mov r1, #4
	eor r1, r2
	add r0, #0x28
	strb r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_02024B38

	thumb_func_start sub_02024B60
sub_02024B60: ; 0x02024B60
	add r0, #0xf8
	ldr r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end sub_02024B60

	thumb_func_start sub_02024B68
sub_02024B68: ; 0x02024B68
	push {r4, lr}
	add r4, r0, #0
	bne _02024B72
	bl GF_AssertFail
_02024B72:
	ldr r0, [r4, #0x54]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02024B68

	thumb_func_start sub_02024B78
sub_02024B78: ; 0x02024B78
	push {r3, r4, r5, lr}
	add r4, r0, #0
	add r5, r1, #0
	cmp r4, #0
	bne _02024B86
	bl GF_AssertFail
_02024B86:
	str r5, [r4, #0x30]
	cmp r5, #0
	bne _02024B9C
	add r0, r4, #0
	add r0, #0x28
	ldrb r1, [r0]
	mov r0, #8
	add r4, #0x28
	eor r0, r1
	strb r0, [r4]
	pop {r3, r4, r5, pc}
_02024B9C:
	add r0, r4, #0
	add r0, #0x28
	ldrb r1, [r0]
	mov r0, #8
	orr r0, r1
	add r4, #0x28
	strb r0, [r4]
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02024B78

	thumb_func_start sub_02024BAC
sub_02024BAC: ; 0x02024BAC
	push {r4, lr}
	add r4, r0, #0
	bne _02024BB6
	bl GF_AssertFail
_02024BB6:
	ldr r0, [r4, #0x30]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02024BAC

	thumb_func_start sub_02024BBC
sub_02024BBC: ; 0x02024BBC
	push {r4, lr}
	mov r1, #1
	lsl r1, r1, #0xa
	bl sub_0201AA8C
	add r4, r0, #0
	mov r0, #0xb
	mov r2, #1
	lsl r0, r0, #6
	add r1, r4, #0
	lsl r2, r2, #0xa
	bl sub_020D4790
	mov r1, #1
	add r0, r4, #0
	lsl r1, r1, #0xa
	bl DC_FlushRange
	mov r2, #1
	add r0, r4, #0
	mov r1, #0
	lsl r2, r2, #0xa
	bl sub_020CFDC8
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	thumb_func_end sub_02024BBC

	thumb_func_start sub_02024BF4
sub_02024BF4: ; 0x02024BF4
	push {r4, lr}
	mov r1, #1
	lsl r1, r1, #0xa
	bl sub_0201AA8C
	add r4, r0, #0
	mov r0, #0xb
	mov r2, #1
	lsl r0, r0, #6
	add r1, r4, #0
	lsl r2, r2, #0xa
	bl sub_020D4790
	mov r2, #1
	add r0, r4, #0
	mov r1, #0
	lsl r2, r2, #0xa
	bl sub_020CFE1C
	add r0, r4, #0
	bl sub_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02024BF4

	thumb_func_start sub_02024C24
sub_02024C24: ; 0x02024C24
	push {r3, r4}
	add r3, r0, #0
	add r3, #0xec
	ldr r3, [r3]
	cmp r3, #1
	beq _02024C34
	cmp r3, #3
	bne _02024C38
_02024C34:
	ldr r0, [r0, #0x44]
	b _02024C3C
_02024C38:
	add r0, #0xb0
	ldr r0, [r0]
_02024C3C:
	ldr r4, [r0, #0x14]
	cmp r4, #0
	beq _02024C4A
	ldr r3, [r4]
	ldr r0, _02024C98 ; =0x55414154
	cmp r3, r0
	beq _02024C4C
_02024C4A:
	mov r4, #0
_02024C4C:
	cmp r4, #0
	beq _02024C54
	add r4, #8
	b _02024C56
_02024C54:
	mov r4, #0
_02024C56:
	cmp r4, #0
	beq _02024C92
	lsl r0, r1, #0x10
	lsr r3, r0, #0x10
	ldrh r0, [r4]
	cmp r3, r0
	bhs _02024C6E
	mov r0, #0xc
	ldr r1, [r4, #4]
	mul r0, r3
	add r1, r1, r0
	b _02024C70
_02024C6E:
	mov r1, #0
_02024C70:
	cmp r1, #0
	beq _02024C92
	ldrh r0, [r1]
	cmp r0, #0
	beq _02024C84
	lsl r0, r2, #0x10
	ldr r1, [r1, #8]
	lsr r0, r0, #0xe
	add r0, r1, r0
	b _02024C86
_02024C84:
	mov r0, #0
_02024C86:
	cmp r0, #0
	beq _02024C92
	ldr r0, [r0]
	ldr r0, [r0]
	pop {r3, r4}
	bx lr
_02024C92:
	mov r0, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
_02024C98: .word 0x55414154
	thumb_func_end sub_02024C24

	thumb_func_start sub_02024C9C
sub_02024C9C: ; 0x02024C9C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	bl sub_020249A8
	add r4, r0, #0
	add r0, r5, #0
	bl sub_020249F8
	add r2, r0, #0
	add r0, r5, #0
	add r1, r4, #0
	bl sub_02024C24
	pop {r3, r4, r5, pc}
	thumb_func_end sub_02024C9C

	thumb_func_start sub_02024CB8
sub_02024CB8: ; 0x02024CB8
	push {r4, lr}
	add r4, r0, #0
	add r0, #0xec
	ldr r0, [r0]
	cmp r0, #2
	bne _02024CC8
	bl GF_AssertFail
_02024CC8:
	add r4, #0x40
	add r4, #8
	add r0, r4, #0
	pop {r4, pc}
	thumb_func_end sub_02024CB8

	thumb_func_start sub_02024CD0
sub_02024CD0: ; 0x02024CD0
	push {r3, r4, r5, r6, r7, lr}
	add r5, r1, #0
	str r0, [sp]
	add r4, r2, #0
	add r0, r5, #0
	add r7, r3, #0
	bl sub_02024D78
	add r1, r4, #0
	add r1, #0xec
	str r0, [r1]
	add r3, r4, #0
	ldr r6, [r5]
	add r3, #0xb4
	mov r2, #4
_02024CEE:
	ldmia r6!, {r0, r1}
	stmia r3!, {r0, r1}
	sub r2, r2, #1
	bne _02024CEE
	ldr r0, [r6]
	add r2, r4, #0
	str r0, [r3]
	ldr r3, [r5, #8]
	add r2, #0xd8
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	ldmia r3!, {r0, r1}
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	add r1, r4, #0
	str r0, [r2]
	ldr r0, [r5, #0xc]
	bl sub_02024D90
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _02024D22
	add r1, r4, #0
	bl sub_02024D94
	b _02024D30
_02024D22:
	mov r1, #0x47
	ldr r0, [sp]
	lsl r1, r1, #2
	ldr r0, [r0, r1]
	add r1, r4, #0
	bl sub_02024D94
_02024D30:
	add r0, r4, #0
	add r0, #0xec
	ldr r0, [r0]
	cmp r0, #2
	bne _02024D54
	ldr r0, [r5, #0x14]
	add r1, r4, #0
	bl sub_02024D98
	ldr r0, [r5, #0x18]
	add r1, r4, #0
	bl sub_02024DA0
	add r0, r4, #0
	add r1, r7, #0
	bl sub_02024E24
	b _02024D6C
_02024D54:
	cmp r0, #3
	bne _02024D64
	add r0, r5, #0
	add r1, r4, #0
	add r2, r7, #0
	bl sub_02024DC8
	b _02024D6C
_02024D64:
	add r0, r4, #0
	add r1, r7, #0
	bl sub_02024DA8
_02024D6C:
	add r5, #0x20
	ldrb r0, [r5]
	add r4, #0xf2
	strb r0, [r4]
	mov r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_02024CD0

	thumb_func_start sub_02024D78
sub_02024D78: ; 0x02024D78
	ldr r1, [r0, #0x14]
	cmp r1, #0
	beq _02024D82
	mov r0, #2
	bx lr
_02024D82:
	ldr r0, [r0, #0x1c]
	cmp r0, #1
	bne _02024D8C
	mov r0, #3
	bx lr
_02024D8C:
	mov r0, #1
	bx lr
	thumb_func_end sub_02024D78

	thumb_func_start sub_02024D90
sub_02024D90: ; 0x02024D90
	str r0, [r1, #0x40]
	bx lr
	thumb_func_end sub_02024D90

	thumb_func_start sub_02024D94
sub_02024D94: ; 0x02024D94
	str r0, [r1, #0x44]
	bx lr
	thumb_func_end sub_02024D94

	thumb_func_start sub_02024D98
sub_02024D98: ; 0x02024D98
	add r1, #0xac
	str r0, [r1]
	bx lr
	.align 2, 0
	thumb_func_end sub_02024D98

	thumb_func_start sub_02024DA0
sub_02024DA0: ; 0x02024DA0
	add r1, #0xb0
	str r0, [r1]
	bx lr
	.align 2, 0
	thumb_func_end sub_02024DA0

	thumb_func_start sub_02024DA8
sub_02024DA8: ; 0x02024DA8
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r4, r5, #0
	add r4, #0x40
	ldr r0, [r4, #4]
	mov r1, #0
	bl sub_020B6E80
	add r4, #8
	add r1, r0, #0
	ldr r2, [r5, #0x40]
	add r0, r4, #0
	bl sub_020B8B04
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_02024DA8

	thumb_func_start sub_02024DC8
sub_02024DC8: ; 0x02024DC8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	add r6, r1, #0
	add r4, r6, #0
	add r4, #0x40
	add r5, r0, #0
	bl sub_020BAEE4
	str r0, [r4, #0x60]
	ldr r0, [r4, #4]
	mov r1, #0
	ldr r5, [r5, #4]
	bl sub_020B6E80
	str r0, [sp, #0x18]
	add r0, r6, #0
	add r0, #0xb4
	mov r1, #1
	bl sub_020B802C
	add r7, r0, #0
	add r0, r6, #0
	add r0, #0xb4
	mov r1, #2
	bl sub_020B802C
	mov r1, #0
	mvn r1, r1
	str r1, [sp]
	str r7, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [r5, #0x14]
	ldr r1, [sp, #0x18]
	str r0, [sp, #0xc]
	mov r0, #0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x10]
	str r0, [sp, #0x14]
	add r0, r4, #0
	ldr r2, [r6, #0x40]
	ldr r3, [r4, #0x60]
	add r0, #8
	bl sub_020B8B40
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end sub_02024DC8

	thumb_func_start sub_02024E24
sub_02024E24: ; 0x02024E24
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r5, r0, #0
	add r4, r5, #0
	add r4, #0x40
	ldr r0, [r4, #0x70]
	add r7, r1, #0
	mov r1, #0
	bl sub_020B6E80
	str r0, [sp, #0xc]
	ldr r0, [r4, #0x6c]
	bl sub_020B8F50
	add r6, r0, #0
	mov r1, #0x28
	add r0, r7, #0
	mul r1, r6
	bl sub_0201AA8C
	mov r1, #0x58
	str r0, [r4, #0x74]
	add r0, r7, #0
	mul r1, r6
	bl sub_0201AA8C
	str r0, [r4, #0x78]
	ldr r0, [r4, #4]
	add r3, r6, #0
	str r0, [sp]
	ldr r0, [r5, #0x40]
	str r0, [sp, #4]
	ldr r0, [r4, #0x6c]
	str r0, [sp, #8]
	add r0, r4, #0
	ldr r1, [r4, #0x74]
	ldr r2, [r4, #0x78]
	add r0, #8
	bl sub_020B91D8
	add r4, #8
	ldr r1, [sp, #0xc]
	add r0, r4, #0
	bl sub_020B8E98
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_02024E24

	thumb_func_start sub_02024E84
sub_02024E84: ; 0x02024E84
	push {r4, lr}
	ldr r2, [r0, #4]
	cmp r2, #0
	beq _02024E92
	mov r4, #2
	lsl r4, r4, #8
	b _02024E9E
_02024E92:
	ldr r2, [r0]
	cmp r2, #4
	bne _02024E9C
	mov r4, #0
	b _02024E9E
_02024E9C:
	mov r4, #0x20
_02024E9E:
	cmp r4, #0
	beq _02024EAE
	bl sub_020B8078
	add r1, r4, #0
	bl sub_020F2BA4
	pop {r4, pc}
_02024EAE:
	mov r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end sub_02024E84

	thumb_func_start sub_02024EB4
sub_02024EB4: ; 0x02024EB4
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	add r4, r1, #0
	add r3, r4, #0
	add r5, r0, #0
	ldmia r3!, {r0, r1}
	add r2, sp, #0
	stmia r2!, {r0, r1}
	ldr r0, [r3]
	add r1, r4, #0
	str r0, [r2]
	mov r0, #0x45
	lsl r0, r0, #2
	add r2, r4, #0
	ldr r0, [r5, r0]
	add r1, #0xb4
	add r2, #0xd8
	bl sub_020BAB4C
	mov r0, #0x45
	lsl r0, r0, #2
	ldr r0, [r5, r0]
	bl sub_020BA034
	bl sub_020BA560
	add r1, r4, #0
	mov r0, #0x45
	add r1, #0x26
	lsl r0, r0, #2
	ldrb r1, [r1]
	ldr r0, [r5, r0]
	bl sub_020BBEC4
	add r0, r4, #0
	add r0, #0x26
	ldrb r0, [r0]
	cmp r0, #0
	bne _02024F1C
	add r0, r4, #0
	add r0, #0x27
	ldrb r2, [r0]
	mov r0, #0x45
	lsl r0, r0, #2
	mov r1, #1
	ldr r0, [r5, r0]
	mov r3, #2
	and r1, r2
	and r2, r3
	bl sub_020BBF84
	b _02024F2A
_02024F1C:
	mov r0, #0x45
	lsl r0, r0, #2
	mov r1, #0
	ldr r0, [r5, r0]
	add r2, r1, #0
	bl sub_020BBF84
_02024F2A:
	ldr r0, [sp]
	ldr r1, [sp, #4]
	ldr r2, [sp, #8]
	bl sub_020BA7D4
	add r0, r4, #0
	add r0, #0x26
	ldrb r0, [r0]
	cmp r0, #0
	beq _02024F78
	ldr r0, [r4, #0xc]
	ldr r1, [r4, #0x10]
	ldr r2, [r4, #0x14]
	bl sub_020BA7D4
	ldr r0, [r4, #0x18]
	ldr r1, [r4, #0x1c]
	ldr r2, [r4, #0x20]
	bl sub_020BA8D0
	ldrh r0, [r4, #0x24]
	ldr r2, _0202500C ; =0x021094DC
	asr r0, r0, #4
	lsl r1, r0, #1
	lsl r0, r1, #1
	add r1, r1, #1
	lsl r1, r1, #1
	ldrsh r0, [r2, r0]
	ldrsh r1, [r2, r1]
	bl sub_020BAA24
	ldr r0, [r4, #0xc]
	ldr r1, [r4, #0x10]
	ldr r2, [r4, #0x14]
	neg r0, r0
	neg r1, r1
	neg r2, r2
	bl sub_020BA7D4
_02024F78:
	add r0, r4, #0
	add r0, #0x28
	ldrb r3, [r0]
	mov r0, #0x45
	lsl r0, r0, #2
	ldr r2, [r5, r0]
	add r1, r2, #0
	add r1, #0x84
	ldr r1, [r1]
	add r2, #0x84
	orr r1, r3
	str r1, [r2]
	add r1, r4, #0
	add r1, #0x28
	ldrb r1, [r1]
	mvn r6, r1
	ldr r1, [r5, r0]
	add r2, r1, #0
	add r2, #0x84
	ldr r3, [r2]
	mvn r2, r6
	and r2, r3
	add r1, #0x84
	str r2, [r1]
	add r1, r4, #0
	add r1, #0x29
	ldrb r2, [r1]
	ldr r1, [r5, r0]
	add r1, #0x8a
	strh r2, [r1]
	add r1, r4, #0
	add r1, #0x2a
	ldrb r2, [r1]
	ldr r1, [r5, r0]
	add r1, #0x94
	strh r2, [r1]
	ldr r1, [r5, r0]
	ldr r2, [r4, #0x2c]
	add r1, #0x90
	str r2, [r1]
	ldr r1, [r5, r0]
	ldr r2, [r4, #0x30]
	add r1, #0x8c
	str r2, [r1]
	add r1, r4, #0
	add r1, #0xf2
	ldr r0, [r5, r0]
	ldrb r1, [r1]
	add r0, #0x88
	strh r1, [r0]
	add r0, r4, #0
	add r0, #0xec
	ldr r0, [r0]
	cmp r0, #1
	beq _02024FEA
	cmp r0, #3
	bne _02024FF6
_02024FEA:
	add r4, #0x40
	add r4, #8
	add r0, r4, #0
	bl sub_020BA148
	b _02025000
_02024FF6:
	add r4, #0x40
	add r4, #8
	add r0, r4, #0
	bl sub_020BA484
_02025000:
	bl sub_020BA784
	bl sub_020BA0DC
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
_0202500C: .word 0x021094DC
	thumb_func_end sub_02024EB4

	thumb_func_start sub_02025010
sub_02025010: ; 0x02025010
	bx lr
	.align 2, 0
	thumb_func_end sub_02025010

	thumb_func_start sub_02025014
sub_02025014: ; 0x02025014
	ldr r3, _0202501C ; =sub_020249B0
	ldr r1, [r0, #0x38]
	bx r3
	nop
_0202501C: .word sub_020249B0
	thumb_func_end sub_02025014

	thumb_func_start sub_02025020
sub_02025020: ; 0x02025020
	bx lr
	.align 2, 0
	thumb_func_end sub_02025020

	thumb_func_start sub_02025024
sub_02025024: ; 0x02025024
	push {r4, r5, r6, r7}
	mov r2, #0x11
	lsl r2, r2, #4
	add r4, r0, #0
	ldr r5, [r0, r2]
	add r4, #0x10
	cmp r5, r4
	bne _02025048
	str r1, [r0, r2]
	sub r3, r2, #4
	str r1, [r0, r3]
	add r0, r1, #0
	add r0, #0xfc
	str r4, [r0]
	sub r2, #0x10
	str r4, [r1, r2]
	pop {r4, r5, r6, r7}
	bx lr
_02025048:
	add r3, r1, #0
	add r3, #0xf4
	ldrh r6, [r3]
	sub r3, r2, #4
	ldr r3, [r0, r3]
	add r7, r3, #0
	add r7, #0xf4
	ldrh r7, [r7]
	cmp r7, r6
	bhi _0202507A
	add r5, r1, #0
	add r5, #0xfc
	str r3, [r5]
	sub r3, r2, #4
	ldr r5, [r0, r3]
	add r3, r2, #0
	sub r3, #0x10
	str r1, [r5, r3]
	add r3, r2, #0
	sub r3, #0x10
	str r4, [r1, r3]
	sub r2, r2, #4
	str r1, [r0, r2]
	pop {r4, r5, r6, r7}
	bx lr
_0202507A:
	cmp r5, r4
	beq _020250B6
	add r0, r2, #0
	sub r0, #0x10
_02025082:
	add r2, r5, #0
	add r2, #0xf4
	ldrh r2, [r2]
	cmp r2, r6
	bls _020250B0
	add r0, r5, #0
	add r0, #0xfc
	mov r2, #1
	ldr r0, [r0]
	lsl r2, r2, #8
	str r1, [r0, r2]
	add r0, r5, #0
	add r0, #0xfc
	ldr r3, [r0]
	add r0, r1, #0
	add r0, #0xfc
	str r3, [r0]
	add r0, r5, #0
	add r0, #0xfc
	str r1, [r0]
	str r5, [r1, r2]
	pop {r4, r5, r6, r7}
	bx lr
_020250B0:
	ldr r5, [r5, r0]
	cmp r5, r4
	bne _02025082
_020250B6:
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end sub_02025024

	thumb_func_start sub_020250BC
sub_020250BC: ; 0x020250BC
	mov r2, #1
	add r1, r0, #0
	lsl r2, r2, #8
	add r1, #0xfc
	ldr r3, [r0, r2]
	ldr r1, [r1]
	str r3, [r1, r2]
	add r1, r0, #0
	add r1, #0xfc
	ldr r0, [r0, r2]
	ldr r1, [r1]
	add r0, #0xfc
	str r1, [r0]
	bx lr
	thumb_func_end sub_020250BC

	thumb_func_start sub_020250D8
sub_020250D8: ; 0x020250D8
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r0, [r5, #4]
	mov r7, #0
	cmp r0, #0
	ble _02025108
	add r4, r7, #0
	add r6, r7, #0
_020250E8:
	ldr r0, [r5]
	add r0, r0, r4
	bl sub_020245FC
	ldr r0, [r5]
	add r7, r7, #1
	add r1, r0, r4
	ldr r0, [r5, #8]
	str r1, [r0, r6]
	mov r0, #0x41
	lsl r0, r0, #2
	add r4, r4, r0
	ldr r0, [r5, #4]
	add r6, r6, #4
	cmp r7, r0
	blt _020250E8
_02025108:
	mov r0, #0
	str r0, [r5, #0xc]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end sub_020250D8

	thumb_func_start sub_02025110
sub_02025110: ; 0x02025110
	ldr r3, [r0, #0xc]
	ldr r1, [r0, #4]
	cmp r3, r1
	blt _0202511C
	mov r0, #0
	bx lr
_0202511C:
	ldr r2, [r0, #8]
	lsl r1, r3, #2
	ldr r2, [r2, r1]
	add r1, r3, #1
	str r1, [r0, #0xc]
	add r0, r2, #0
	bx lr
	.align 2, 0
	thumb_func_end sub_02025110

	thumb_func_start sub_0202512C
sub_0202512C: ; 0x0202512C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	add r4, r1, #0
	cmp r0, #0
	bgt _0202513C
	mov r0, #0
	pop {r3, r4, r5, pc}
_0202513C:
	add r0, r4, #0
	bl sub_020245FC
	ldr r0, [r5, #0xc]
	sub r0, r0, #1
	str r0, [r5, #0xc]
	ldr r1, [r5, #8]
	lsl r0, r0, #2
	str r4, [r1, r0]
	mov r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end sub_0202512C

	thumb_func_start sub_02025154
sub_02025154: ; 0x02025154
	push {r4, r5, r6, r7}
	ldrb r3, [r0]
	mov r4, #0
	cmp r3, #0xff
	beq _02025196
_0202515E:
	ldrb r7, [r0, #2]
	ldrb r3, [r0, #3]
	ldrb r5, [r0]
	sub r6, r1, r7
	sub r3, r3, r7
	cmp r6, r3
	bhs _02025170
	mov r6, #1
	b _02025172
_02025170:
	mov r6, #0
_02025172:
	ldrb r7, [r0, #1]
	sub r3, r2, r5
	sub r5, r7, r5
	cmp r3, r5
	bhs _02025180
	mov r3, #1
	b _02025182
_02025180:
	mov r3, #0
_02025182:
	tst r3, r6
	beq _0202518C
	add r0, r4, #0
	pop {r4, r5, r6, r7}
	bx lr
_0202518C:
	add r0, r0, #4
	ldrb r3, [r0]
	add r4, r4, #1
	cmp r3, #0xff
	bne _0202515E
_02025196:
	mov r0, #0
	mvn r0, r0
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end sub_02025154

	thumb_func_start sub_020251A0
sub_020251A0: ; 0x020251A0
	push {r3, r4}
	ldrb r3, [r0, #1]
	sub r4, r3, r1
	ldrb r1, [r0, #2]
	sub r3, r1, r2
	ldrb r2, [r0, #3]
	add r1, r4, #0
	add r0, r3, #0
	mul r1, r4
	mul r0, r3
	add r1, r1, r0
	add r0, r2, #0
	mul r0, r2
	cmp r1, r0
	bhs _020251C4
	mov r0, #1
	pop {r3, r4}
	bx lr
_020251C4:
	mov r0, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end sub_020251A0

	thumb_func_start sub_020251CC
sub_020251CC: ; 0x020251CC
	push {r4, r5}
	ldrb r5, [r0, #2]
	ldrb r3, [r0]
	sub r4, r1, r5
	ldrb r1, [r0, #3]
	sub r1, r1, r5
	cmp r4, r1
	bhs _020251E0
	mov r4, #1
	b _020251E2
_020251E0:
	mov r4, #0
_020251E2:
	ldrb r0, [r0, #1]
	sub r1, r2, r3
	sub r0, r0, r3
	cmp r1, r0
	bhs _020251F0
	mov r0, #1
	b _020251F2
_020251F0:
	mov r0, #0
_020251F2:
	tst r0, r4
	beq _020251FC
	mov r0, #1
	pop {r4, r5}
	bx lr
_020251FC:
	mov r0, #0
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end sub_020251CC

	thumb_func_start sub_02025204
sub_02025204: ; 0x02025204
	push {r3, lr}
	ldr r2, _02025220 ; =0x021D114C
	ldrh r1, [r2, #0x26]
	cmp r1, #0
	beq _02025218
	ldrh r1, [r2, #0x20]
	ldrh r2, [r2, #0x22]
	bl sub_02025154
	pop {r3, pc}
_02025218:
	mov r0, #0
	mvn r0, r0
	pop {r3, pc}
	nop
_02025220: .word 0x021D114C
	thumb_func_end sub_02025204

	thumb_func_start sub_02025224
sub_02025224: ; 0x02025224
	push {r3, lr}
	ldr r2, _02025240 ; =0x021D114C
	ldrh r1, [r2, #0x24]
	cmp r1, #0
	beq _02025238
	ldrh r1, [r2, #0x20]
	ldrh r2, [r2, #0x22]
	bl sub_02025154
	pop {r3, pc}
_02025238:
	mov r0, #0
	mvn r0, r0
	pop {r3, pc}
	nop
_02025240: .word 0x021D114C
	thumb_func_end sub_02025224

	thumb_func_start sub_02025244
sub_02025244: ; 0x02025244
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _02025298 ; =0x021D114C
	add r5, r0, #0
	ldrh r0, [r7, #0x26]
	cmp r0, #0
	beq _02025290
	ldrb r0, [r5]
	mov r6, #0
	cmp r0, #0xff
	beq _02025290
	add r4, r5, #0
_0202525A:
	ldrb r0, [r5]
	cmp r0, #0xfe
	bne _02025272
	ldrh r1, [r7, #0x20]
	ldrh r2, [r7, #0x22]
	add r0, r4, #0
	bl sub_020251A0
	cmp r0, #0
	beq _02025284
	add r0, r6, #0
	pop {r3, r4, r5, r6, r7, pc}
_02025272:
	ldrh r1, [r7, #0x20]
	ldrh r2, [r7, #0x22]
	add r0, r4, #0
	bl sub_020251CC
	cmp r0, #0
	beq _02025284
	add r0, r6, #0
	pop {r3, r4, r5, r6, r7, pc}
_02025284:
	add r5, r5, #4
	ldrb r0, [r5]
	add r4, r4, #4
	add r6, r6, #1
	cmp r0, #0xff
	bne _0202525A
_02025290:
	mov r0, #0
	mvn r0, r0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02025298: .word 0x021D114C
	thumb_func_end sub_02025244

	thumb_func_start sub_0202529C
sub_0202529C: ; 0x0202529C
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _020252F0 ; =0x021D114C
	add r5, r0, #0
	ldrh r0, [r7, #0x24]
	cmp r0, #0
	beq _020252E8
	ldrb r0, [r5]
	mov r6, #0
	cmp r0, #0xff
	beq _020252E8
	add r4, r5, #0
_020252B2:
	ldrb r0, [r5]
	cmp r0, #0xfe
	bne _020252CA
	ldrh r1, [r7, #0x20]
	ldrh r2, [r7, #0x22]
	add r0, r4, #0
	bl sub_020251A0
	cmp r0, #0
	beq _020252DC
	add r0, r6, #0
	pop {r3, r4, r5, r6, r7, pc}
_020252CA:
	ldrh r1, [r7, #0x20]
	ldrh r2, [r7, #0x22]
	add r0, r4, #0
	bl sub_020251CC
	cmp r0, #0
	beq _020252DC
	add r0, r6, #0
	pop {r3, r4, r5, r6, r7, pc}
_020252DC:
	add r5, r5, #4
	ldrb r0, [r5]
	add r4, r4, #4
	add r6, r6, #1
	cmp r0, #0xff
	bne _020252B2
_020252E8:
	mov r0, #0
	mvn r0, r0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020252F0: .word 0x021D114C
	thumb_func_end sub_0202529C

	thumb_func_start sub_020252F4
sub_020252F4: ; 0x020252F4
	push {r3, lr}
	ldr r2, _0202531C ; =0x021D114C
	ldrh r1, [r2, #0x26]
	cmp r1, #0
	beq _02025316
	ldrb r1, [r0]
	cmp r1, #0xfe
	ldrh r1, [r2, #0x20]
	bne _0202530E
	ldrh r2, [r2, #0x22]
	bl sub_020251A0
	pop {r3, pc}
_0202530E:
	ldrh r2, [r2, #0x22]
	bl sub_020251CC
	pop {r3, pc}
_02025316:
	mov r0, #0
	pop {r3, pc}
	nop
_0202531C: .word 0x021D114C
	thumb_func_end sub_020252F4

	thumb_func_start sub_02025320
sub_02025320: ; 0x02025320
	push {r3, lr}
	ldr r2, _02025348 ; =0x021D114C
	ldrh r1, [r2, #0x24]
	cmp r1, #0
	beq _02025342
	ldrb r1, [r0]
	cmp r1, #0xfe
	ldrh r1, [r2, #0x20]
	bne _0202533A
	ldrh r2, [r2, #0x22]
	bl sub_020251A0
	pop {r3, pc}
_0202533A:
	ldrh r2, [r2, #0x22]
	bl sub_020251CC
	pop {r3, pc}
_02025342:
	mov r0, #0
	pop {r3, pc}
	nop
_02025348: .word 0x021D114C
	thumb_func_end sub_02025320

	thumb_func_start sub_0202534C
sub_0202534C: ; 0x0202534C
	ldr r0, _02025354 ; =0x021D114C
	ldrh r0, [r0, #0x26]
	bx lr
	nop
_02025354: .word 0x021D114C
	thumb_func_end sub_0202534C

	thumb_func_start sub_02025358
sub_02025358: ; 0x02025358
	ldr r0, _02025360 ; =0x021D114C
	ldrh r0, [r0, #0x24]
	bx lr
	nop
_02025360: .word 0x021D114C
	thumb_func_end sub_02025358

	thumb_func_start sub_02025364
sub_02025364: ; 0x02025364
	ldr r2, _0202537C ; =0x021D114C
	ldrh r3, [r2, #0x26]
	cmp r3, #0
	beq _02025378
	ldrh r3, [r2, #0x20]
	str r3, [r0]
	ldrh r0, [r2, #0x22]
	str r0, [r1]
	mov r0, #1
	bx lr
_02025378:
	mov r0, #0
	bx lr
	.align 2, 0
_0202537C: .word 0x021D114C
	thumb_func_end sub_02025364

	thumb_func_start sub_02025380
sub_02025380: ; 0x02025380
	ldr r2, _02025398 ; =0x021D114C
	ldrh r3, [r2, #0x24]
	cmp r3, #0
	beq _02025394
	ldrh r3, [r2, #0x20]
	str r3, [r0]
	ldrh r0, [r2, #0x22]
	str r0, [r1]
	mov r0, #1
	bx lr
_02025394:
	mov r0, #0
	bx lr
	.align 2, 0
_02025398: .word 0x021D114C
	thumb_func_end sub_02025380

	thumb_func_start sub_0202539C
sub_0202539C: ; 0x0202539C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	mov r0, #0
	str r0, [sp]
	ldrb r0, [r5]
	add r6, r1, #0
	add r7, r2, #0
	cmp r0, #0xff
	beq _020253EA
	add r4, r5, #0
_020253B0:
	ldrb r0, [r5]
	cmp r0, #0xfe
	bne _020253C8
	add r0, r4, #0
	add r1, r6, #0
	add r2, r7, #0
	bl sub_020251A0
	cmp r0, #0
	beq _020253DA
	ldr r0, [sp]
	pop {r3, r4, r5, r6, r7, pc}
_020253C8:
	add r0, r4, #0
	add r1, r6, #0
	add r2, r7, #0
	bl sub_020251CC
	cmp r0, #0
	beq _020253DA
	ldr r0, [sp]
	pop {r3, r4, r5, r6, r7, pc}
_020253DA:
	ldr r0, [sp]
	add r5, r5, #4
	add r0, r0, #1
	str r0, [sp]
	ldrb r0, [r5]
	add r4, r4, #4
	cmp r0, #0xff
	bne _020253B0
_020253EA:
	mov r0, #0
	mvn r0, r0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end sub_0202539C

	thumb_func_start sub_020253F0
sub_020253F0: ; 0x020253F0
	push {r3, lr}
	ldrb r3, [r0]
	cmp r3, #0xfe
	bne _020253FE
	bl sub_020251A0
	pop {r3, pc}
_020253FE:
	bl sub_020251CC
	pop {r3, pc}
	thumb_func_end sub_020253F0

	thumb_func_start sub_02025404
sub_02025404: ; 0x02025404
	push {r3, lr}
	ldr r0, _0202542C ; =0x021D2210
	mov r2, #0
	str r2, [r0, #4]
	str r2, [r0, #8]
	ldr r1, _02025430 ; =0x0400010E
	str r2, [r0]
	strh r2, [r1]
	sub r0, r1, #2
	strh r2, [r0]
	mov r0, #0xc1
	strh r0, [r1]
	ldr r1, _02025434 ; =sub_02025438
	mov r0, #0x40
	bl sub_020D1004
	mov r0, #0x40
	bl sub_020D11D4
	pop {r3, pc}
	.align 2, 0
_0202542C: .word 0x021D2210
_02025430: .word 0x0400010E
_02025434: .word sub_02025438
	thumb_func_end sub_02025404

	thumb_func_start sub_02025438
sub_02025438: ; 0x02025438
	ldr r0, _02025470 ; =0x021D2210
	mov r3, #0
	ldr r1, [r0, #4]
	ldr r2, [r0, #8]
	add r1, r1, #1
	adc r2, r3
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r1, [r0]
	cmp r1, #0
	beq _0202545C
	ldr r2, _02025474 ; =0x0400010E
	strh r3, [r2]
	sub r1, r2, #2
	strh r3, [r1]
	mov r1, #0xc1
	strh r1, [r2]
	str r3, [r0]
_0202545C:
	ldr r3, _02025478 ; =OSi_IntrTable
	ldr r1, _0202547C ; =0x00003FF8
	mov r0, #0x40
	ldr r2, [r3, r1]
	orr r2, r0
	str r2, [r3, r1]
	ldr r3, _02025480 ; =sub_020D1004
	ldr r1, _02025484 ; =sub_02025438
	bx r3
	nop
_02025470: .word 0x021D2210
_02025474: .word 0x0400010E
_02025478: .word OSi_IntrTable
_0202547C: .word 0x00003FF8
_02025480: .word sub_020D1004
_02025484: .word sub_02025438
	thumb_func_end sub_02025438

	thumb_func_start sub_02025488
sub_02025488: ; 0x02025488
	push {r4, r5, lr}
	sub sp, #0xc
	bl sub_020D3A38
	ldr r1, _020254EC ; =0x0400010C
	add r3, sp, #0
	ldrh r1, [r1]
	ldr r2, _020254F0 ; =0x0000FFFF
	strh r1, [r3]
	ldr r1, _020254F4 ; =0x021D2210
	ldr r5, [r1, #4]
	ldr r4, [r1, #8]
	mov r1, #0
	mvn r1, r1
	and r1, r5
	str r1, [sp, #4]
	and r2, r4
	ldr r1, _020254F8 ; =0x04000214
	str r2, [sp, #8]
	ldr r2, [r1]
	mov r1, #0x40
	tst r2, r1
	beq _020254CC
	ldrh r2, [r3]
	lsl r1, r1, #9
	tst r1, r2
	bne _020254CC
	ldr r2, [sp, #4]
	mov r1, #0
	ldr r3, [sp, #8]
	add r2, r2, #1
	adc r3, r1
	str r2, [sp, #4]
	str r3, [sp, #8]
_020254CC:
	bl sub_020D3A4C
	ldr r2, [sp, #4]
	ldr r1, [sp, #8]
	lsr r0, r2, #0x10
	lsl r1, r1, #0x10
	orr r1, r0
	add r0, sp, #0
	lsl r3, r2, #0x10
	ldrh r2, [r0]
	asr r0, r2, #0x1f
	orr r1, r0
	add r0, r3, #0
	orr r0, r2
	add sp, #0xc
	pop {r4, r5, pc}
	.align 2, 0
_020254EC: .word 0x0400010C
_020254F0: .word 0x0000FFFF
_020254F4: .word 0x021D2210
_020254F8: .word 0x04000214
	thumb_func_end sub_02025488

	thumb_func_start sub_020254FC
sub_020254FC: ; 0x020254FC
	ldr r3, _02025500 ; =sub_02025488
	bx r3
	.align 2, 0
_02025500: .word sub_02025488
	thumb_func_end sub_020254FC

	thumb_func_start sub_02025504
sub_02025504: ; 0x02025504
	push {r3, lr}
	lsr r2, r0, #0x1a
	lsl r1, r1, #6
	orr r1, r2
	ldr r2, _02025518 ; =0x01FF6210
	lsl r0, r0, #6
	mov r3, #0
	bl sub_020F2900
	pop {r3, pc}
	.align 2, 0
_02025518: .word 0x01FF6210
	thumb_func_end sub_02025504
